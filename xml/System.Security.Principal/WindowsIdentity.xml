<Type Name="WindowsIdentity" FullName="System.Security.Principal.WindowsIdentity">
  <TypeSignature Language="C#" Value="public class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsIdentity extends System.Security.Claims.ClaimsIdentity implements class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsIdentity&#xA;Inherits ClaimsIdentity&#xA;Implements IDeserializationCallback, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsIdentity : System::Security::Claims::ClaimsIdentity, IDisposable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsIdentity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="106b6-101">Représente un utilisateur Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-101">Represents a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-102">Appelez le <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> méthode pour créer un <xref:System.Security.Principal.WindowsIdentity> objet qui représente l’utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-102">Call the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to create a <xref:System.Security.Principal.WindowsIdentity> object that represents the current user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="106b6-103">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="106b6-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="106b6-104">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="106b6-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="106b6-105">Pour supprimer le type directement, vous devez appeler sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="106b6-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="106b6-106">Pour la supprimer indirectement, utiliser une construction de langage telles que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="106b6-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="106b6-107">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="106b6-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-108">L’exemple suivant illustre l’utilisation des membres de <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-108">The following example shows the use of members of <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  <span data-ttu-id="106b6-109">Pour obtenir un exemple illustrant l’obtention d’une fenêtre de jeton de compte via un appel à Win32 non managée `LogonUser` fonction et utilisation de ce jeton pour emprunter l’identité d’un autre utilisateur, consultez la <xref:System.Security.Principal.WindowsImpersonationContext> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-109">For an example showing how to obtain a Windows account token through a call to the unmanaged Win32 `LogonUser` function, and use that token to impersonate another user, see the <xref:System.Security.Principal.WindowsImpersonationContext> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#1)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106b6-110">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-110">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="106b6-111">Jeton de compte pour l'utilisateur au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-111">The account token for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="106b6-112">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par le jeton de compte Windows spécifié.</span><span class="sxs-lookup"><span data-stu-id="106b6-112">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-113">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="106b6-113">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="106b6-114">Property</span><span class="sxs-lookup"><span data-stu-id="106b6-114">Property</span></span>|<span data-ttu-id="106b6-115">Valeur initiale</span><span class="sxs-lookup"><span data-stu-id="106b6-115">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A>|`Negotiate`|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
> [!NOTE]
>  <span data-ttu-id="106b6-116">Vous pouvez récupérer le jeton représenté par `userToken` par l’appel de code non managé, telles que l’API Win32 `LogonUser` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-116">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="106b6-117">Libérez toujours `userToken` en appelant l’API Win32 `CloseHandle` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-117">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="106b6-118">Pour plus d’informations sur l’appel de code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-118">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="106b6-119"><paramref name="userToken" /> est égal à 0.</span><span class="sxs-lookup"><span data-stu-id="106b6-119"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="106b6-120">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-120">-or-</span></span>  
  
 <span data-ttu-id="106b6-121"><paramref name="userToken" /> est dupliqué et non valide pour l'emprunt d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-121"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-122">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-122">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-123">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-123">-or-</span></span>  
  
 <span data-ttu-id="106b6-124">Une erreur Win32 s’est produite.</span><span class="sxs-lookup"><span data-stu-id="106b6-124">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-125">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-125">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-126">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (identity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WindowsIdentity(System::Security::Principal::WindowsIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="106b6-127">Objet à partir duquel la nouvelle instance de <see cref="T:System.Security.Principal.WindowsIdentity" /> doit être créée.</span><span class="sxs-lookup"><span data-stu-id="106b6-127">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></param>
        <summary><span data-ttu-id="106b6-128">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> à l'aide de l'objet <see cref="T:System.Security.Principal.WindowsIdentity" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="106b6-128">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="106b6-129">Nom d'utilisateur principal (UPN) au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-129">The UPN for the user on whose behalf the code is running.</span></span></param>
        <summary><span data-ttu-id="106b6-130">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par le nom d'utilisateur principal (UPN, User Principal Name) spécifié.</span><span class="sxs-lookup"><span data-stu-id="106b6-130">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-131">Un nom UPN est au format *nom d’utilisateur*@*domainname*.com, en d’autres termes, une adresse de messagerie.</span><span class="sxs-lookup"><span data-stu-id="106b6-131">A UPN has the format *username*@*domainname*.com, in other words, an email address.</span></span> <span data-ttu-id="106b6-132">Le nom UPN identifié dans `sUserPrincipalName` est utilisé pour récupérer un jeton pour cet utilisateur via l’API Win32 `LsaLogonUser` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-132">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="106b6-133">À son tour ce jeton est utilisé pour identifier l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-133">In turn that token is used to identify the user.</span></span> <span data-ttu-id="106b6-134">Une exception peut être retournée en raison de l’incapacité à se connecter à l’aide de l’UPN fourni.</span><span class="sxs-lookup"><span data-stu-id="106b6-134">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-135">Ce constructeur est destiné uniquement sur des ordinateurs joints à Windows Server 2003 ou versions ultérieures domaines.</span><span class="sxs-lookup"><span data-stu-id="106b6-135">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="106b6-136">Une exception est levée pour les types de domaine plus anciens.</span><span class="sxs-lookup"><span data-stu-id="106b6-136">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="106b6-137">Cette restriction est due au fait que ce constructeur utilise le [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), initialement introduite dans Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="106b6-137">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="106b6-138">Windows a retourné le code d’état Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="106b6-138">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="106b6-139">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="106b6-139">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-140">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-140">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-141">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-141">-or-</span></span>  
  
 <span data-ttu-id="106b6-142">L'ordinateur n'est pas joint à un domaine Windows 2003 ou ultérieur.</span><span class="sxs-lookup"><span data-stu-id="106b6-142">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="106b6-143">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-143">-or-</span></span>  
  
 <span data-ttu-id="106b6-144">L'ordinateur n'exécute pas Windows 2003 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="106b6-144">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="106b6-145">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-145">-or-</span></span>  
  
 <span data-ttu-id="106b6-146">L'utilisateur n'est pas un membre du domaine auquel l'ordinateur est attaché.</span><span class="sxs-lookup"><span data-stu-id="106b6-146">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-147">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-147">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-148">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="106b6-149">Jeton de compte pour l'utilisateur au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-149">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="106b6-150">(Utilisation à titre informatif uniquement.) Type d'authentification utilisé pour identifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-150">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="106b6-151">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par le jeton de compte Windows et le type d'authentification spécifiés.</span><span class="sxs-lookup"><span data-stu-id="106b6-151">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-152">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="106b6-152">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="106b6-153">Property</span><span class="sxs-lookup"><span data-stu-id="106b6-153">Property</span></span>|<span data-ttu-id="106b6-154">Valeur initiale</span><span class="sxs-lookup"><span data-stu-id="106b6-154">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsAccountType>|`Normal`|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="106b6-155">La valeur de la `type` paramètre est utilisé pour définir le <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> paramètre.</span><span class="sxs-lookup"><span data-stu-id="106b6-155">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="106b6-156">Si `type` est `null`, le système de sécurité affecte <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> à `Negotiate` sur Windows Vista et versions ultérieures du système d’exploitation Windows et à `Kerberos` dans les versions antérieures du système d’exploitation Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-156">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="106b6-157">Le système de sécurité n’utilise pas cette valeur ; Il est uniquement fourni à titre informatif.</span><span class="sxs-lookup"><span data-stu-id="106b6-157">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-158">Vous pouvez récupérer le jeton représenté par `userToken` par l’appel de code non managé, telles que l’API Win32 `LogonUser` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-158">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="106b6-159">Libérez toujours `userToken` en appelant l’API Win32 `CloseHandle` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-159">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="106b6-160">Pour plus d’informations sur l’appel de code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-160">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-161">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructeur pour créer une nouvelle instance de la <xref:System.Security.Principal.WindowsIdentity> classe pour l’utilisateur représenté par le jeton de compte Windows et le type d’authentification.</span><span class="sxs-lookup"><span data-stu-id="106b6-161">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the  <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token and the specified authentication type.</span></span> <span data-ttu-id="106b6-162">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-162">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#4)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#4)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="106b6-163"><paramref name="userToken" /> est égal à 0.</span><span class="sxs-lookup"><span data-stu-id="106b6-163"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="106b6-164">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-164">-or-</span></span>  
  
 <span data-ttu-id="106b6-165"><paramref name="userToken" /> est dupliqué et non valide pour l'emprunt d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-165"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-166">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-166">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-167">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-167">-or-</span></span>  
  
 <span data-ttu-id="106b6-168">Une erreur Win32 s’est produite.</span><span class="sxs-lookup"><span data-stu-id="106b6-168">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-169">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-169">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-170">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-170">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="106b6-171">Objet contenant les informations de compte de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-171">The object containing the account information for the user.</span></span></param>
        <param name="context"><span data-ttu-id="106b6-172">Objet qui indique les caractéristiques du flux.</span><span class="sxs-lookup"><span data-stu-id="106b6-172">An object that indicates the stream characteristics.</span></span></param>
        <summary><span data-ttu-id="106b6-173">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par des informations dans un flux <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-173">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="106b6-174">Appel de cette méthode avec des données non approuvées est un risque de sécurité.</span><span class="sxs-lookup"><span data-stu-id="106b6-174">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="106b6-175">Appelez cette méthode uniquement avec des données approuvées.</span><span class="sxs-lookup"><span data-stu-id="106b6-175">Call this method only with trusted data.</span></span> <span data-ttu-id="106b6-176">Pour plus d’informations, consultez [Validation des données](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="106b6-176">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="106b6-177">Aucun <see cref="T:System.Security.Principal.WindowsIdentity" /> ne peut être sérialisé entre les processus.</span><span class="sxs-lookup"><span data-stu-id="106b6-177">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-178">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-178">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-179">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-179">-or-</span></span>  
  
 <span data-ttu-id="106b6-180">Une erreur Win32 s’est produite.</span><span class="sxs-lookup"><span data-stu-id="106b6-180">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-181">pour la possibilité de manipuler l’objet principal.</span><span class="sxs-lookup"><span data-stu-id="106b6-181">for ability to manipulate the principal object.</span></span> <span data-ttu-id="106b6-182">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (string sUserPrincipalName, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sUserPrincipalName, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sUserPrincipalName As String, type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(System::String ^ sUserPrincipalName, System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sUserPrincipalName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sUserPrincipalName"><span data-ttu-id="106b6-183">Nom d'utilisateur principal (UPN) au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-183">The UPN for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="106b6-184">(Utilisation à titre informatif uniquement.) Type d'authentification utilisé pour identifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-184">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <summary><span data-ttu-id="106b6-185">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par le nom d'utilisateur principal (UPN) et le type d'authentification spécifiés.</span><span class="sxs-lookup"><span data-stu-id="106b6-185">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-186">La valeur de la `type` paramètre est utilisé pour définir le <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> paramètre.</span><span class="sxs-lookup"><span data-stu-id="106b6-186">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="106b6-187">Si `type` est `null`, le système de sécurité affecte <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> à `Negotiate` sur Windows Vista et versions ultérieures du système d’exploitation Windows et à `Kerberos` dans les versions antérieures du système d’exploitation Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-187">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="106b6-188">Le système de sécurité n’utilise pas cette valeur ; Il est uniquement fourni à titre informatif.</span><span class="sxs-lookup"><span data-stu-id="106b6-188">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="106b6-189">Le nom UPN identifié dans `sUserPrincipalName` est utilisé pour récupérer un jeton pour cet utilisateur via l’API Win32 `LsaLogonUser` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-189">The UPN identified in `sUserPrincipalName` is used to retrieve a token for that user through the Win32 API `LsaLogonUser` function.</span></span> <span data-ttu-id="106b6-190">À son tour ce jeton est utilisé pour identifier l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-190">In turn that token is used to identify the user.</span></span> <span data-ttu-id="106b6-191">Une exception peut être retournée en raison de l’incapacité à se connecter à l’aide de l’UPN fourni.</span><span class="sxs-lookup"><span data-stu-id="106b6-191">An exception might be returned due to the inability to log on using the supplied UPN.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-192">Ce constructeur est destiné uniquement sur des ordinateurs joints à Windows Server 2003 ou versions ultérieures domaines.</span><span class="sxs-lookup"><span data-stu-id="106b6-192">This constructor is intended for use only on computers joined to Windows Server 2003 or later domains.</span></span> <span data-ttu-id="106b6-193">Une exception est levée pour les types de domaine plus anciens.</span><span class="sxs-lookup"><span data-stu-id="106b6-193">An exception is thrown for earlier domain types.</span></span> <span data-ttu-id="106b6-194">Cette restriction est due au fait que ce constructeur utilise le [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), initialement introduite dans Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="106b6-194">This restriction is due to the fact that this constructor uses the [KERB_S4U_LOGON structure](http://go.microsoft.com/fwlink/?LinkId=143533), which was first introduced in Windows Server 2003.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="106b6-195">Windows a retourné le code d’état Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="106b6-195">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="106b6-196">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="106b6-196">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-197">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-197">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-198">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-198">-or-</span></span>  
  
 <span data-ttu-id="106b6-199">L'ordinateur n'est pas joint à un domaine Windows 2003 ou ultérieur.</span><span class="sxs-lookup"><span data-stu-id="106b6-199">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="106b6-200">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-200">-or-</span></span>  
  
 <span data-ttu-id="106b6-201">L'ordinateur n'exécute pas Windows 2003 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="106b6-201">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="106b6-202">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-202">-or-</span></span>  
  
 <span data-ttu-id="106b6-203">L'utilisateur n'est pas un membre du domaine auquel l'ordinateur est attaché.</span><span class="sxs-lookup"><span data-stu-id="106b6-203">The user is not a member of the domain the computer is attached to.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-204">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-204">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-205">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="106b6-206">Jeton de compte pour l'utilisateur au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-206">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="106b6-207">(Utilisation à titre informatif uniquement.) Type d'authentification utilisé pour identifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-207">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="106b6-208">Une des valeurs de l'énumération.</span><span class="sxs-lookup"><span data-stu-id="106b6-208">One of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="106b6-209">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par le jeton de compte Windows, le type d'authentification et le type de compte Windows spécifiés.</span><span class="sxs-lookup"><span data-stu-id="106b6-209">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-210">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="106b6-210">The following table shows initial property values for an instance of <xref:System.Security.Principal.WindowsIdentity>.</span></span>  
  
|<span data-ttu-id="106b6-211">Property</span><span class="sxs-lookup"><span data-stu-id="106b6-211">Property</span></span>|<span data-ttu-id="106b6-212">Valeur initiale</span><span class="sxs-lookup"><span data-stu-id="106b6-212">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Security.Principal.WindowsIdentity.IsAuthenticated%2A>|`false`|  
  
 <span data-ttu-id="106b6-213">La valeur de la `type` paramètre est utilisé pour définir le <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> paramètre.</span><span class="sxs-lookup"><span data-stu-id="106b6-213">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="106b6-214">Si `type` est `null`, le système de sécurité affecte <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> à `Negotiate` sur Windows Vista et versions ultérieures du système d’exploitation Windows et à `Kerberos` dans les versions antérieures du système d’exploitation Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-214">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="106b6-215">Le système de sécurité n’utilise pas cette valeur ; Il est uniquement fourni à titre informatif.</span><span class="sxs-lookup"><span data-stu-id="106b6-215">The security system does not use this value; it is for informational use only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-216">Vous pouvez récupérer le jeton représenté par `userToken` par l’appel de code non managé, telles que l’API Win32 `LogonUser` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-216">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="106b6-217">Libérez toujours `userToken` en appelant l’API Win32 `CloseHandle` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-217">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="106b6-218">Pour plus d’informations sur l’appel de code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-218">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-219">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructeur pour créer une nouvelle instance de la <xref:System.Security.Principal.WindowsIdentity> classe pour l’utilisateur représenté par le jeton de compte Windows, le type d’authentification et le type de compte Windows spécifié.</span><span class="sxs-lookup"><span data-stu-id="106b6-219">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</span></span> <span data-ttu-id="106b6-220">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-220">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#7)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#7)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="106b6-221"><paramref name="userToken" /> est égal à 0.</span><span class="sxs-lookup"><span data-stu-id="106b6-221"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="106b6-222">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-222">-or-</span></span>  
  
 <span data-ttu-id="106b6-223"><paramref name="userToken" /> est dupliqué et non valide pour l'emprunt d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-223"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-224">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-224">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-225">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-225">-or-</span></span>  
  
 <span data-ttu-id="106b6-226">Une erreur Win32 s’est produite.</span><span class="sxs-lookup"><span data-stu-id="106b6-226">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-227">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-227">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-228">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-228">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int userToken, string type, valuetype System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As IntPtr, type As String, acctType As WindowsAccountType, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsIdentity(IntPtr userToken, System::String ^ type, System::Security::Principal::WindowsAccountType acctType, bool isAuthenticated);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="acctType" Type="System.Security.Principal.WindowsAccountType" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="106b6-229">Jeton de compte pour l'utilisateur au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-229">The account token for the user on whose behalf the code is running.</span></span></param>
        <param name="type"><span data-ttu-id="106b6-230">(Utilisation à titre informatif uniquement.) Type d'authentification utilisé pour identifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-230">(Informational use only.) The type of authentication used to identify the user.</span></span></param>
        <param name="acctType"><span data-ttu-id="106b6-231">Une des valeurs de l'énumération.</span><span class="sxs-lookup"><span data-stu-id="106b6-231">One of the enumeration values.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="106b6-232"><see langword="true" /> pour indiquer que l'utilisateur est identifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-232"><see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="106b6-233">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur représenté par le jeton de compte Windows, le type d'authentification et le type de compte Windows et l'état d'authentification spécifiés.</span><span class="sxs-lookup"><span data-stu-id="106b6-233">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-234">La valeur de la `type` paramètre est utilisé pour définir le <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> paramètre.</span><span class="sxs-lookup"><span data-stu-id="106b6-234">The value of the `type` parameter is used to set the <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> parameter.</span></span> <span data-ttu-id="106b6-235">Si `type` est `null`, le système de sécurité affecte <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> à `Negotiate` sur Windows Vista et versions ultérieures du système d’exploitation Windows et à `Kerberos` dans les versions antérieures du système d’exploitation Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-235">If `type` is `null`, the security system sets <xref:System.Security.Principal.WindowsIdentity.AuthenticationType%2A> to `Negotiate` on Windows Vista and later versions of the Windows operating system, and to `Kerberos` on earlier versions of the Windows operating system.</span></span> <span data-ttu-id="106b6-236">Le système de sécurité n’utilise pas cette valeur ; Il est uniquement fourni à titre informatif.</span><span class="sxs-lookup"><span data-stu-id="106b6-236">The security system does not use this value; it is for informational use only.</span></span>  
  
 <span data-ttu-id="106b6-237">Vous pouvez récupérer le jeton représenté par `userToken` par l’appel de code non managé, telles que l’API Win32 `LogonUser` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-237">You can retrieve the token represented by `userToken` by calling unmanaged code such as the Win32 API `LogonUser` function.</span></span> <span data-ttu-id="106b6-238">Libérez toujours `userToken` en appelant l’API Win32 `CloseHandle` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-238">Always release `userToken` by calling the Win32 API `CloseHandle` function.</span></span> <span data-ttu-id="106b6-239">Pour plus d’informations sur l’appel de code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-239">For more information on calling unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-240">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructeur pour créer une nouvelle instance de la <xref:System.Security.Principal.WindowsIdentity> classe pour l’utilisateur représenté par le jeton de compte Windows, le type d’authentification, le type de compte Windows et le état d’authentification spécifiés.</span><span class="sxs-lookup"><span data-stu-id="106b6-240">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.%23ctor%2A> constructor to create a new instance of the <xref:System.Security.Principal.WindowsIdentity> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</span></span> <span data-ttu-id="106b6-241">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-241">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#17)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#17)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="106b6-242"><paramref name="userToken" /> est égal à 0.</span><span class="sxs-lookup"><span data-stu-id="106b6-242"><paramref name="userToken" /> is 0.</span></span>  
  
 <span data-ttu-id="106b6-243">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-243">-or-</span></span>  
  
 <span data-ttu-id="106b6-244"><paramref name="userToken" /> est dupliqué et non valide pour l'emprunt d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-244"><paramref name="userToken" /> is duplicated and invalid for impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-245">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-245">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-246">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-246">-or-</span></span>  
  
 <span data-ttu-id="106b6-247">Une erreur Win32 s’est produite.</span><span class="sxs-lookup"><span data-stu-id="106b6-247">A Win32 error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-248">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-248">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-249">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-249">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessToken As SafeAccessTokenHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ AccessToken { Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeAccessTokenHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-250">Obtient ce <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> pour cette instance de <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-250">Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</span></span></summary>
        <value><span data-ttu-id="106b6-251">Retourne <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-251">Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public override sealed string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-252">Obtient le type d'authentification utilisé pour identifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-252">Gets the type of authentication used to identify the user.</span></span></summary>
        <value><span data-ttu-id="106b6-253">Type d'authentification utilisé pour identifier l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-253">The type of authentication used to identify the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-254">Cette propriété est informatif ; Il n’est pas utilisé par le système de sécurité.</span><span class="sxs-lookup"><span data-stu-id="106b6-254">This property is informational; it is not used by the security system.</span></span> <span data-ttu-id="106b6-255">Sur Windows Vista et versions ultérieures du système d’exploitation Windows, la valeur par défaut de cette propriété est `Negotiate`, qui choisit le meilleur fournisseur de prise en charge de sécurité (SSP) en fonction de la stratégie de sécurité configurée par le client.</span><span class="sxs-lookup"><span data-stu-id="106b6-255">On Windows Vista and later versions of the Windows operating system, the default value for this property is `Negotiate`, which chooses the best security support provider (SSP) based on customer-configured security policy.</span></span> <span data-ttu-id="106b6-256">La valeur de propriété par défaut pour les versions antérieures du système d’exploitation Windows est `Kerberos`.</span><span class="sxs-lookup"><span data-stu-id="106b6-256">The default property value for earlier versions of the Windows operating system is `Kerberos`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="106b6-257">Windows a retourné le code d’état Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="106b6-257">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="106b6-258">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="106b6-258">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-259">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-259">The caller does not have the correct permissions.</span></span>  
  
 <span data-ttu-id="106b6-260">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-260">-or-</span></span>  
  
 <span data-ttu-id="106b6-261">L'ordinateur n'est pas joint à un domaine Windows 2003 ou ultérieur.</span><span class="sxs-lookup"><span data-stu-id="106b6-261">The computer is not attached to a Windows 2003 or later domain.</span></span>  
  
 <span data-ttu-id="106b6-262">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-262">-or-</span></span>  
  
 <span data-ttu-id="106b6-263">L'ordinateur n'exécute pas Windows 2003 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="106b6-263">The computer is not running Windows 2003 or later.</span></span>  
  
 <span data-ttu-id="106b6-264">- ou -</span><span class="sxs-lookup"><span data-stu-id="106b6-264">-or-</span></span>  
  
 <span data-ttu-id="106b6-265">L'utilisateur n'est pas un membre du domaine auquel l'ordinateur est attaché.</span><span class="sxs-lookup"><span data-stu-id="106b6-265">The user is not a member of the domain the computer is attached to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsIdentity/&lt;get_Claims&gt;d__95))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-266">Obtient toutes les revendications pour l'utilisateur représenté par cette identité Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-266">Gets all claims for the user represented by this Windows identity.</span></span></summary>
        <value><span data-ttu-id="106b6-267">Collection de revendications pour cet objet <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-267">A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="106b6-268">Crée un objet qui est une copie de l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="106b6-268">Creates a new  object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="106b6-269">Copie de l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="106b6-269">A copy of the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Principal.WindowsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-270">Identifie le nom de l'émetteur <see cref="T:System.Security.Claims.ClaimsIdentity" /> par défaut.</span><span class="sxs-lookup"><span data-stu-id="106b6-270">Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-271">Obtient les revendications qui ont la clé de propriété <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-271">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="106b6-272">Collection de revendications ayant la clé de propriété <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-272">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106b6-273">Libère les ressources utilisées par le <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-273">Releases the resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="106b6-274">Libère toutes les ressources utilisées par <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-274">Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-275">Appelez la méthode <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="106b6-275">Call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> when you are finished using the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="106b6-276">La méthode <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> rend le <xref:System.Security.Principal.WindowsIdentity> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="106b6-276">The <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method leaves the <xref:System.Security.Principal.WindowsIdentity> in an unusable state.</span></span> <span data-ttu-id="106b6-277">Après avoir appelé <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Security.Principal.WindowsIdentity> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.Principal.WindowsIdentity> occupée.</span><span class="sxs-lookup"><span data-stu-id="106b6-277">After calling <xref:System.Security.Principal.WindowsIdentity.Dispose%2A>, you must release all references to the <xref:System.Security.Principal.WindowsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Security.Principal.WindowsIdentity> was occupying.</span></span> <span data-ttu-id="106b6-278">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-278">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-279">Appelez toujours <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="106b6-279">Always call <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Security.Principal.WindowsIdentity>.</span></span> <span data-ttu-id="106b6-280">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.Principal.WindowsIdentity> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="106b6-280">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Principal.WindowsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="106b6-281"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="106b6-281"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="106b6-282">Libère les ressources non managées utilisées par <see cref="T:System.Security.Principal.WindowsIdentity" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="106b6-282">Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-283">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="106b6-283">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="106b6-284">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="106b6-284">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="106b6-285"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="106b6-285"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="106b6-286">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Security.Principal.WindowsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="106b6-286">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Principal.WindowsIdentity> references.</span></span> <span data-ttu-id="106b6-287">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="106b6-287">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="106b6-288"><see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="106b6-288"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="106b6-289">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-289">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="106b6-290">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-290">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="106b6-291">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-291">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAnonymous">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetAnonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetAnonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAnonymous () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetAnonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="106b6-292">Retourne un objet <see cref="T:System.Security.Principal.WindowsIdentity" /> que vous pouvez utiliser comme valeur de sentinelle dans votre code pour représenter un utilisateur anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-292">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user.</span></span> <span data-ttu-id="106b6-293">La valeur de propriété ne représente pas l'identité anonyme prédéfinie utilisée par le système d'exploitation Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-293">The property value does not represent the built-in anonymous identity used by the Windows operating system.</span></span></summary>
        <returns><span data-ttu-id="106b6-294">Objet qui représente un utilisateur anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-294">An object that represents an anonymous user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-295">Cette propriété retourne vide <xref:System.Security.Principal.WindowsIdentity> objet qui vous permet de traiter des opérations comme anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-295">This property returns an empty <xref:System.Security.Principal.WindowsIdentity> object that enables you to treat operations as anonymous.</span></span> <span data-ttu-id="106b6-296">La valeur de propriété ne correspond pas à un utilisateur Windows anonyme et ne peut pas être utilisée pour l’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-296">The property value does not correspond to a Windows anonymous user and cannot be used for impersonation.</span></span> <span data-ttu-id="106b6-297">En outre, notez que l’identité retournée par cette propriété n’est pas statique. chaque appel à <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> retourne une autre identité anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-297">Also, note that the identity returned by this property is not static; each call to <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> returns a different anonymous identity.</span></span>  
  
 <span data-ttu-id="106b6-298">Vous pouvez utiliser la <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propriété pour détecter la valeur de retour à partir de <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span><span class="sxs-lookup"><span data-stu-id="106b6-298">You can use the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect the return value from <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A>.</span></span> <span data-ttu-id="106b6-299">Toutefois, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> détecte l’identité anonyme Windows et l’identité anonyme retournée par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="106b6-299">However, <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> detects both the Windows anonymous identity and the anonymous identity returned by this method.</span></span> <span data-ttu-id="106b6-300">Pour utiliser l’identité de ce dernier, mettre en cache le <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> retourner la valeur au lieu d’utiliser le <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="106b6-300">To use the latter identity, cache the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> return value instead of relying on the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-301">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> méthode pour retourner un <xref:System.Security.Principal.WindowsIdentity> objet qui représente un utilisateur Windows anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-301">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents an anonymous Windows user.</span></span> <span data-ttu-id="106b6-302">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-302">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#15)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#15)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrent">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106b6-303">Retourne un objet <see cref="T:System.Security.Principal.WindowsIdentity" /> qui représente l'utilisateur Windows actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-303">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent () As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="106b6-304">Retourne un objet <see cref="T:System.Security.Principal.WindowsIdentity" /> qui représente l'utilisateur Windows actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-304">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</span></span></summary>
        <returns><span data-ttu-id="106b6-305">Objet qui représente l'utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-305">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="106b6-306">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> méthode pour retourner un <xref:System.Security.Principal.WindowsIdentity> objet qui représente l’utilisateur Windows actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-306">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.GetCurrent%2A> method to return a <xref:System.Security.Principal.WindowsIdentity> object that represents the current Windows user.</span></span> <span data-ttu-id="106b6-307">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-307">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#13)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#13)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-308">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-308">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-309">pour la possibilité de manipuler l’objet principal.</span><span class="sxs-lookup"><span data-stu-id="106b6-309">for ability to manipulate the principal object.</span></span> <span data-ttu-id="106b6-310">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-310">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(bool ifImpersonating) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (ifImpersonating As Boolean) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(bool ifImpersonating);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifImpersonating" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ifImpersonating">
          <span data-ttu-id="106b6-311"><see langword="true" /> pour retourner <see cref="T:System.Security.Principal.WindowsIdentity" /> uniquement si le thread emprunte actuellement une identité ; <see langword="false" /> pour retourner le <see cref="T:System.Security.Principal.WindowsIdentity" /> du thread s'il emprunte une identité ou le <see cref="T:System.Security.Principal.WindowsIdentity" /> du processus si le thread n'emprunte pas actuellement d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-311"><see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</span></span></param>
        <summary><span data-ttu-id="106b6-312">Retourne un objet <see cref="T:System.Security.Principal.WindowsIdentity" /> représentant l'identité Windows pour le thread ou le processus, selon la valeur du paramètre <paramref name="ifImpersonating" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-312">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="106b6-313">Objet qui représente un utilisateur Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-313">An object that represents a Windows user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-314">Si `ifImpersonating` est `true` et le thread n'est pas l’emprunt d’identité, retourné <xref:System.Security.Principal.WindowsIdentity> objet n’a aucune valeur.</span><span class="sxs-lookup"><span data-stu-id="106b6-314">If `ifImpersonating` is `true` and the thread is not impersonating, the returned <xref:System.Security.Principal.WindowsIdentity> object has no value.</span></span>  <span data-ttu-id="106b6-315">Si `ifImpersonating` est `false` et le thread emprunte une identité, le <xref:System.Security.Principal.WindowsIdentity> pour le thread est retourné.</span><span class="sxs-lookup"><span data-stu-id="106b6-315">If `ifImpersonating` is `false` and the thread is impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the thread is returned.</span></span>  <span data-ttu-id="106b6-316">Si `ifImpersonating` est `false` et le thread n’est pas l’emprunt d’identité, le <xref:System.Security.Principal.WindowsIdentity> pour le processus est retourné.</span><span class="sxs-lookup"><span data-stu-id="106b6-316">If `ifImpersonating` is `false` and the thread is not impersonating, the <xref:System.Security.Principal.WindowsIdentity> for the process is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-317">pour la possibilité de manipuler l’objet principal.</span><span class="sxs-lookup"><span data-stu-id="106b6-317">for ability to manipulate the principal object.</span></span> <span data-ttu-id="106b6-318">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsIdentity GetCurrent(valuetype System.Security.Principal.TokenAccessLevels desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrent (desiredAccess As TokenAccessLevels) As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsIdentity ^ GetCurrent(System::Security::Principal::TokenAccessLevels desiredAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" />
      </Parameters>
      <Docs>
        <param name="desiredAccess"><span data-ttu-id="106b6-319">Combinaison d'opérations de bits des valeurs d'énumération.</span><span class="sxs-lookup"><span data-stu-id="106b6-319">A bitwise combination of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="106b6-320">Retourne un objet <see cref="T:System.Security.Principal.WindowsIdentity" /> qui représente l'utilisateur Windows actuel, en utilisant le niveau d'accès du jeton souhaité spécifié.</span><span class="sxs-lookup"><span data-stu-id="106b6-320">Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</span></span></summary>
        <returns><span data-ttu-id="106b6-321">Objet qui représente l'utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-321">An object that represents the current user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-322">Le `desiredAccess` paramètre spécifie un masque d’accès qui identifie les types demandés d’accès au jeton d’accès.</span><span class="sxs-lookup"><span data-stu-id="106b6-322">The `desiredAccess` parameter specifies an access mask that identifies the requested types of access to the access token.</span></span> <span data-ttu-id="106b6-323">Ces types d’accès demandés sont comparés à la liste de contrôle d’accès discrétionnaire (DACL) pour déterminer quels types d’accès sont accordés ou refusées du jeton.</span><span class="sxs-lookup"><span data-stu-id="106b6-323">These requested access types are compared with the token's discretionary access control list (DACL) to determine which types of access are granted or denied.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-324">pour la possibilité de manipuler l’objet principal.</span><span class="sxs-lookup"><span data-stu-id="106b6-324">for ability to manipulate the principal object.</span></span> <span data-ttu-id="106b6-325">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-325">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReferenceCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IdentityReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IdentityReferenceCollection ^ Groups { System::Security::Principal::IdentityReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-326">Obtient les groupes auxquels l'utilisateur Windows actuel appartient.</span><span class="sxs-lookup"><span data-stu-id="106b6-326">Gets the groups the current Windows user belongs to.</span></span></summary>
        <value><span data-ttu-id="106b6-327">Objet qui représente les groupes auxquels l'utilisateur Windows actuel appartient.</span><span class="sxs-lookup"><span data-stu-id="106b6-327">An object representing the groups the current Windows user belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="106b6-328">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.Groups%2A> propriété pour afficher les références d’identité pour les groupes auxquels appartient l’utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-328">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Groups%2A> property to display the identity references for the groups the current user belongs to.</span></span>  <span data-ttu-id="106b6-329">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-329">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#20)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="106b6-330">Permet à du code d'emprunter l'identité d'un utilisateur Windows différent.</span><span class="sxs-lookup"><span data-stu-id="106b6-330">Allows code to impersonate a different Windows user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.WindowsImpersonationContext Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::WindowsImpersonationContext ^ Impersonate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="106b6-331">Emprunte l'identité de l'utilisateur représenté par l'objet <see cref="T:System.Security.Principal.WindowsIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-331">Impersonates the user represented by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <returns><span data-ttu-id="106b6-332">Objet qui représente l'utilisateur Windows avant l'emprunt d'identité ; vous pouvez l'utiliser pour rétablir le contexte de l'utilisateur d'origine.</span><span class="sxs-lookup"><span data-stu-id="106b6-332">An object that represents the Windows user prior to impersonation; this can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-333">Sur les plateformes Windows NT, l’utilisateur actuel doit disposer des droits suffisants pour permettre l’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-333">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-334">L’exemple suivant montre comment obtenir un jeton de compte Windows en appelant Win32 non managée `LogonUser` fonction et l’utilisation de ce jeton pour emprunter l’identité d’un autre utilisateur puis rétablir l’identité d’origine.</span><span class="sxs-lookup"><span data-stu-id="106b6-334">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-cpp[WindowsIdentity Impersonation#1](~/samples/snippets/cpp/VS_Snippets_CLR/WindowsIdentity Impersonation/CPP/source.cpp#1)]
 [!code-csharp[WindowsIdentity Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CLR/WindowsIdentity Impersonation/CS/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WindowsIdentity Impersonation/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="106b6-335">Une identité anonyme a tenté d'exécuter un emprunt d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-335">An anonymous identity attempted to perform an impersonation.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-336">Une erreur Win32 s’est produite.</span><span class="sxs-lookup"><span data-stu-id="106b6-336">A Win32 error occurred.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="106b6-337">Microsoft Windows 98 et les plates-formes Windows Millennium Edition (Windows Me) n’ayant pas de jetons utilisateur, l’emprunt d’identité ne peut avoir lieu sur ces plateformes.</span><span class="sxs-lookup"><span data-stu-id="106b6-337">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="106b6-338">Après avoir utilisé <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, il est important d’appeler le <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> méthode à la fin de l’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-338">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Principal.WindowsImpersonationContext Impersonate(native int userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr) As WindowsImpersonationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Principal::WindowsImpersonationContext ^ Impersonate(IntPtr userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsImpersonationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="106b6-339">Handle d'un jeton de compte Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-339">The handle of a Windows account token.</span></span> <span data-ttu-id="106b6-340">Ce jeton est généralement récupéré par l'intermédiaire d'un appel à du code non managé, tel qu'un appel à la fonction API Win32 <see langword="LogonUser" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-340">This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <see langword="LogonUser" /> function.</span></span></param>
        <summary><span data-ttu-id="106b6-341">Emprunte l'identité de l'utilisateur représenté par le jeton utilisateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="106b6-341">Impersonates the user represented by the specified user token.</span></span></summary>
        <returns><span data-ttu-id="106b6-342">Objet qui représente l'utilisateur Windows avant l'emprunt d'identité ; vous pouvez utiliser cet objet pour rétablir le contexte de l'utilisateur d'origine.</span><span class="sxs-lookup"><span data-stu-id="106b6-342">An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-343">Sur les plateformes Windows NT, l’utilisateur actuel doit disposer des droits suffisants pour permettre l’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-343">On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-344">Appel de la <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> méthode avec un `userToken` valeur de <xref:System.IntPtr.Zero> est équivalente à l’appel de Win32 `RevertToSelf` (fonction).</span><span class="sxs-lookup"><span data-stu-id="106b6-344">Calling the <xref:System.Security.Principal.WindowsIdentity.Impersonate%28System.IntPtr%29> method with a `userToken` value of <xref:System.IntPtr.Zero> is equivalent to calling the Win32 `RevertToSelf` function.</span></span> <span data-ttu-id="106b6-345">Si un autre utilisateur est actuellement empruntée, le contrôle revient à l’utilisateur d’origine.</span><span class="sxs-lookup"><span data-stu-id="106b6-345">If another user is currently being impersonated, control reverts to the original user.</span></span>  
  
 <span data-ttu-id="106b6-346">Pour plus d’informations sur les appels au code non managé, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="106b6-346">For more information about calls to unmanaged code, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-347">L’exemple suivant montre comment obtenir un jeton de compte Windows en appelant Win32 non managée `LogonUser` fonction et l’utilisation de ce jeton pour emprunter l’identité d’un autre utilisateur puis rétablir l’identité d’origine.</span><span class="sxs-lookup"><span data-stu-id="106b6-347">The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 `LogonUser` function, and how to use that token to impersonate another user and then revert to the original identity.</span></span>  
  
 [!code-csharp[WindowsIdentity Impersonation2#1](~/samples/snippets/csharp/VS_Snippets_CLR/windowsidentity impersonation2/cs/source.cs#1)]
 [!code-vb[WindowsIdentity Impersonation2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/windowsidentity impersonation2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="106b6-348">Windows a retourné le code d’état Windows NT STATUS_ACCESS_DENIED.</span><span class="sxs-lookup"><span data-stu-id="106b6-348">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="106b6-349">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="106b6-349">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="106b6-350">L’appelant n’a pas les autorisations requises.</span><span class="sxs-lookup"><span data-stu-id="106b6-350">The caller does not have the correct permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-351">pour la possibilité de manipuler l’objet principal et d’accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-351">for the ability to manipulate the principal object and access unmanaged code.</span></span> <span data-ttu-id="106b6-352">Énumérations associées : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> et <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="106b6-352">Associated enumerations: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="106b6-353">Microsoft Windows 98 et les plates-formes Windows Millennium Edition (Windows Me) n’ayant pas de jetons utilisateur, l’emprunt d’identité ne peut avoir lieu sur ces plateformes.</span><span class="sxs-lookup"><span data-stu-id="106b6-353">Because Microsoft Windows 98 and Windows Millennium Edition (Windows Me) platforms do not have user tokens, impersonation cannot take place on those platforms.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="106b6-354">Après avoir utilisé <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, il est important d’appeler le <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> méthode à la fin de l’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-354">After using <see cref="M:System.Security.Principal.WindowsIdentity.Impersonate(System.IntPtr)" />, it is important to call the <see cref="M:System.Security.Principal.WindowsImpersonationContext.Undo" /> method to end the impersonation.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-355">Obtient le niveau d'emprunt d'identité pour l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-355">Gets the impersonation level for the user.</span></span></summary>
        <value><span data-ttu-id="106b6-356">Une des valeurs d'énumération qui spécifie le niveau d'emprunt d'identité.</span><span class="sxs-lookup"><span data-stu-id="106b6-356">One of the enumeration values that specifies the impersonation level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-357">Décrit le niveau d'emprunt d'identité à utiliser pour se connecter à WMI.</span><span class="sxs-lookup"><span data-stu-id="106b6-357">Describes the impersonation level to be used to connect to WMI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-358">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> propriété pour afficher le niveau d’emprunt d’identité pour l’utilisateur actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-358">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.ImpersonationLevel%2A> property to display the impersonation level for the current user.</span></span> <span data-ttu-id="106b6-359">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-359">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#21)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public virtual bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-360">Obtient une valeur qui indique si le compte d'utilisateur est identifié en tant que compte anonyme par le système.</span><span class="sxs-lookup"><span data-stu-id="106b6-360">Gets a value that indicates whether the user account is identified as an anonymous account by the system.</span></span></summary>
        <value>
          <span data-ttu-id="106b6-361"><see langword="true" /> si le compte d'utilisateur est un compte anonyme ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-361"><see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-362">Le <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propriété détecte l’identité anonyme Windows et l’identité anonyme est retournée par la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="106b6-362">The <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property detects both the Windows anonymous identity and the anonymous identity that is returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method.</span></span>  
  
 <span data-ttu-id="106b6-363">Comptes anonymes sont généralement rencontrés uniquement dans les applications ASP.NET lors de l’accès anonyme est autorisé par Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="106b6-363">Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-364">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> propriété pour détecter si le compte d’utilisateur est identifié comme un compte anonyme par le système.</span><span class="sxs-lookup"><span data-stu-id="106b6-364">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> property to detect whether the user account is identified as an anonymous account by the system.</span></span> <span data-ttu-id="106b6-365">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-365">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#9)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#9)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-366">Obtient une valeur indiquant si l'utilisateur a été authentifié par Windows.</span><span class="sxs-lookup"><span data-stu-id="106b6-366">Gets a value indicating whether the user has been authenticated by Windows.</span></span></summary>
        <value>
          <span data-ttu-id="106b6-367"><see langword="true" /> si l'utilisateur a été identifié ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-367"><see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGuest">
      <MemberSignature Language="C#" Value="public virtual bool IsGuest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGuest" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsGuest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsGuest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGuest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-368">Obtient une valeur indiquant si le compte d'utilisateur est identifié en tant que compte <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> par le système.</span><span class="sxs-lookup"><span data-stu-id="106b6-368">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</span></span></summary>
        <value>
          <span data-ttu-id="106b6-369"><see langword="true" /> si le compte d'utilisateur est un compte <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-369"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="106b6-370">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> pour retourner une valeur indiquant si le compte d’utilisateur est identifié en tant que propriété un <xref:System.Security.Principal.WindowsAccountType.Guest> compte par le système.</span><span class="sxs-lookup"><span data-stu-id="106b6-370">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsGuest%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.Guest> account by the system.</span></span> <span data-ttu-id="106b6-371">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-371">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#12)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#12)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public virtual bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSystem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-372">Obtient une valeur indiquant si le compte d'utilisateur est identifié en tant que compte <see cref="F:System.Security.Principal.WindowsAccountType.System" /> par le système.</span><span class="sxs-lookup"><span data-stu-id="106b6-372">Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</span></span></summary>
        <value>
          <span data-ttu-id="106b6-373"><see langword="true" /> si le compte d'utilisateur est un compte <see cref="F:System.Security.Principal.WindowsAccountType.System" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-373"><see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="106b6-374">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> pour retourner une valeur indiquant si le compte d’utilisateur est identifié en tant que propriété un <xref:System.Security.Principal.WindowsAccountType.System> compte par le système.</span><span class="sxs-lookup"><span data-stu-id="106b6-374">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to return a value indicating whether the user account is identified as a <xref:System.Security.Principal.WindowsAccountType.System> account by the system.</span></span> <span data-ttu-id="106b6-375">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-375">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#11)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#11)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-376">Obtient le nom de connexion Windows de l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-376">Gets the user's Windows logon name.</span></span></summary>
        <value><span data-ttu-id="106b6-377">Nom de connexion Windows de l'utilisateur au nom duquel le code est en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-377">The Windows logon name of the user on whose behalf the code is being run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-378">Le nom d’ouverture de session est sous la forme domaine om_utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-378">The logon name is in the form DOMAIN\USERNAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-379">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.Name%2A> propriété à obtenir le nom d’utilisateur Windows d’ouverture de session.</span><span class="sxs-lookup"><span data-stu-id="106b6-379">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.Name%2A> property to get the user's Windows logon name.</span></span> <span data-ttu-id="106b6-380">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-380">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#8)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#8)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ Owner { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-381">Obtient l'identificateur de sécurité (SID) pour le propriétaire du jeton.</span><span class="sxs-lookup"><span data-stu-id="106b6-381">Gets the security identifier (SID) for the token owner.</span></span></summary>
        <value><span data-ttu-id="106b6-382">Objet pour le propriétaire du jeton.</span><span class="sxs-lookup"><span data-stu-id="106b6-382">An object for the token owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-383">Le SID identifie de façon unique un utilisateur ou groupe sur toutes les implémentations de Windows NT.</span><span class="sxs-lookup"><span data-stu-id="106b6-383">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  <span data-ttu-id="106b6-384">Le SID retourné identifie le propriétaire par défaut SID qui est appliqué aux objets nouvellement créés.</span><span class="sxs-lookup"><span data-stu-id="106b6-384">The returned SID identifies the default owner SID that will be applied to newly created objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-385">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.Owner%2A> propriété pour afficher l’identificateur de sécurité pour le propriétaire du jeton.</span><span class="sxs-lookup"><span data-stu-id="106b6-385">The following code example shows the use of the <xref:System.Security.Principal.WindowsIdentity.Owner%2A> property to display the security identifier for the token owner.</span></span>  <span data-ttu-id="106b6-386">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe</span><span class="sxs-lookup"><span data-stu-id="106b6-386">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#19)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated">
      <MemberSignature Language="C#" Value="public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunImpersonated(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Action ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="safeAccessTokenHandle"><span data-ttu-id="106b6-387">SafeAccessTokenHandle de l'identité Windows empruntée.</span><span class="sxs-lookup"><span data-stu-id="106b6-387">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="action"><span data-ttu-id="106b6-388">System.Action à exécuter.</span><span class="sxs-lookup"><span data-stu-id="106b6-388">The System.Action to run.</span></span></param>
        <summary><span data-ttu-id="106b6-389">Exécute l'action spécifiée en tant qu'identité Windows empruntée.</span><span class="sxs-lookup"><span data-stu-id="106b6-389">Runs the specified action as the impersonated Windows identity.</span></span> <span data-ttu-id="106b6-390">Au lieu d'utiliser un appel de méthode emprunté et d'exécuter votre fonction dans <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, vous pouvez utiliser <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> et fournir votre fonction directement en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="106b6-390">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="106b6-391">L’exemple suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity> classe pour emprunter l’identité d’un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-391">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="106b6-392">Cet exemple invite l’utilisateur à entrer un mot de passe sur l’écran de la console.</span><span class="sxs-lookup"><span data-stu-id="106b6-392">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="106b6-393">Le mot de passe sera visible à l’écran, étant donné que la fenêtre de console ne prend pas en charge d’entrée masquée en mode natif.</span><span class="sxs-lookup"><span data-stu-id="106b6-393">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunImpersonated&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T RunImpersonated&lt;T&gt;(class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T RunImpersonated(Microsoft::Win32::SafeHandles::SafeAccessTokenHandle ^ safeAccessTokenHandle, Func&lt;T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="106b6-394">Type d'objet utilisé et retourné par la fonction.</span><span class="sxs-lookup"><span data-stu-id="106b6-394">The type of object used by and returned by the function.</span></span></typeparam>
        <param name="safeAccessTokenHandle"><span data-ttu-id="106b6-395">SafeAccessTokenHandle de l'identité Windows empruntée.</span><span class="sxs-lookup"><span data-stu-id="106b6-395">The SafeAccessTokenHandle of the impersonated Windows identity.</span></span></param>
        <param name="func"><span data-ttu-id="106b6-396">System.Func à exécuter.</span><span class="sxs-lookup"><span data-stu-id="106b6-396">The System.Func to run.</span></span></param>
        <summary><span data-ttu-id="106b6-397">Exécute la fonction spécifiée en tant qu'identité Windows empruntée.</span><span class="sxs-lookup"><span data-stu-id="106b6-397">Runs the specified function as the impersonated Windows identity.</span></span> <span data-ttu-id="106b6-398">Au lieu d'utiliser un appel de méthode emprunté et d'exécuter votre fonction dans <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, vous pouvez utiliser <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> et fournir votre fonction directement en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="106b6-398">Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</span></span></summary>
        <returns><span data-ttu-id="106b6-399">Retourne le résultat de la fonction.</span><span class="sxs-lookup"><span data-stu-id="106b6-399">Returns the result of the function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="106b6-400">L’exemple suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity> classe pour emprunter l’identité d’un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-400">The following example demonstrates the use of the <xref:System.Security.Principal.WindowsIdentity> class to impersonate a user.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="106b6-401">Cet exemple invite l’utilisateur à entrer un mot de passe sur l’écran de la console.</span><span class="sxs-lookup"><span data-stu-id="106b6-401">This sample asks the user to enter a password on the console screen.</span></span> <span data-ttu-id="106b6-402">Le mot de passe sera visible à l’écran, étant donné que la fenêtre de console ne prend pas en charge d’entrée masquée en mode natif.</span><span class="sxs-lookup"><span data-stu-id="106b6-402">The password will be visible on the screen, because the console window does not support masked input natively.</span></span>  
  
```csharp  
// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   
// IMPORTANT NOTE:   
// This sample asks the user to enter a password on the console screen.   
// The password will be visible on the screen, because the console window   
// does not support masked input natively.  
  
using System;  
using System.Runtime.InteropServices;  
using System.Security;  
using System.Security.Principal;  
using Microsoft.Win32.SafeHandles;  
  
public class ImpersonationDemo  
{  
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]  
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  
        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  
  
    public static void Main()  
    {  
        // Get the user token for the specified user, domain, and password using the   
        // unmanaged LogonUser method.   
        // The local machine name can be used for the domain name to impersonate a user on this machine.  
        Console.Write("Enter the name of the domain on which to log on: ");  
        string domainName = Console.ReadLine();  
  
        Console.Write("Enter the login of a user on {0} that you wish to impersonate: ", domainName);  
        string userName = Console.ReadLine();  
  
        Console.Write("Enter the password for {0}: ", userName);  
  
        const int LOGON32_PROVIDER_DEFAULT = 0;  
        //This parameter causes LogonUser to create a primary token.   
        const int LOGON32_LOGON_INTERACTIVE = 2;  
  
        // Call LogonUser to obtain a handle to an access token.   
        SafeAccessTokenHandle safeAccessTokenHandle;  
        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  
            out safeAccessTokenHandle);  
  
        if (false == returnValue)  
        {  
            int ret = Marshal.GetLastWin32Error();  
            Console.WriteLine("LogonUser failed with error code : {0}", ret);  
            throw new System.ComponentModel.Win32Exception(ret);  
        }  
  
        Console.WriteLine("Did LogonUser Succeed? " + (returnValue ? "Yes" : "No"));  
        // Check the identity.  
        Console.WriteLine("Before impersonation: " + WindowsIdentity.GetCurrent().Name);  
  
        // Note: if you want to run as unimpersonated, pass  
        //       'SafeAccessTokenHandle.InvalidHandle' instead of variable 'safeAccessTokenHandle'  
        WindowsIdentity.RunImpersonated(  
            safeAccessTokenHandle,  
            // User action  
            () =>  
            {  
                // Check the identity.  
                Console.WriteLine("During impersonation: " + WindowsIdentity.GetCurrent().Name);  
            }  
            );  
  
        // Check the identity again.  
        Console.WriteLine("After impersonation: " + WindowsIdentity.GetCurrent().Name);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="106b6-403">Source de l’événement de désérialisation.</span><span class="sxs-lookup"><span data-stu-id="106b6-403">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="106b6-404">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et est rappelé par l'événement de désérialisation quand la désérialisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="106b6-404">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="106b6-405">Objet contenant les informations nécessaires pour sérialiser <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-405">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="106b6-406">Objet contenant la source et la destination du flux sérialisé associé à <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-406">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="106b6-407">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les informations de contexte logiques nécessaires à la recréation d'une instance de ce contexte d'exécution.</span><span class="sxs-lookup"><span data-stu-id="106b6-407">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-408">Cette méthode définit un <xref:System.Runtime.Serialization.SerializationInfo> avec la logique les informations de contexte d’appel.</span><span class="sxs-lookup"><span data-stu-id="106b6-408">This method sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="106b6-409">Pendant la désérialisation, l’objet de contexte d’exécution est reconstitué à partir de la <xref:System.Runtime.Serialization.SerializationInfo> transmis via le flux.</span><span class="sxs-lookup"><span data-stu-id="106b6-409">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="106b6-410">Pour plus d'informations, consultez <xref:System.Runtime.Serialization.SerializationInfo>.</span><span class="sxs-lookup"><span data-stu-id="106b6-410">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="106b6-411">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="106b6-411">requires full trust for the immediate caller.</span></span> <span data-ttu-id="106b6-412">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="106b6-412">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual IntPtr Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Token" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Token { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-413">Obtient le jeton de compte Windows pour l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-413">Gets the Windows account token for the user.</span></span></summary>
        <value><span data-ttu-id="106b6-414">Handle du jeton d'accès associé au thread d'exécution actuel.</span><span class="sxs-lookup"><span data-stu-id="106b6-414">The handle of the access token associated with the current execution thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-415">Ne diffusez pas explicitement le jeton de compte qui est retourné par la <xref:System.Security.Principal.WindowsIdentity.Token%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="106b6-415">Do not explicitly release the account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property.</span></span> <span data-ttu-id="106b6-416">Le jeton est libéré par le <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> (méthode), que vous pouvez appeler dans le code.</span><span class="sxs-lookup"><span data-stu-id="106b6-416">The token is released by the <xref:System.Security.Principal.WindowsIdentity.Dispose%2A> method, which you can call in code.</span></span> <span data-ttu-id="106b6-417"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> est également appelé automatiquement par le garbage collector.</span><span class="sxs-lookup"><span data-stu-id="106b6-417"><xref:System.Security.Principal.WindowsIdentity.Dispose%2A> is also automatically called by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-418">Le jeton de compte qui est retourné par la <xref:System.Security.Principal.WindowsIdentity.Token%2A> propriété est un doublon du jeton Windows qui est utilisé pour créer le <xref:System.Security.Principal.WindowsIdentity> de l’objet et est automatiquement libérée par le .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="106b6-418">The account token that is returned by the <xref:System.Security.Principal.WindowsIdentity.Token%2A> property is a duplicate of the Windows token that is used to create the <xref:System.Security.Principal.WindowsIdentity> object and is automatically released by the .NET Framework.</span></span> <span data-ttu-id="106b6-419">Cela est différent du jeton de compte (le `userToken` paramètre du constructeur), qui est utilisé pour créer le <xref:System.Security.Principal.WindowsIdentity> objet.</span><span class="sxs-lookup"><span data-stu-id="106b6-419">This is different from the account token (the `userToken` parameter for the constructor), which is used to create the <xref:System.Security.Principal.WindowsIdentity> object.</span></span> <span data-ttu-id="106b6-420">`userToken` est un jeton de compte Windows qui est créé par un appel à `LogonUser` et doit être fermé pour éviter une fuite de mémoire.</span><span class="sxs-lookup"><span data-stu-id="106b6-420">`userToken` is a Windows account token that is created by a call to `LogonUser` and must be closed to avoid a memory leak.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="106b6-421">Le code suivant illustre l’utilisation de la <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> propriété à obtenir le jeton de compte Windows pour l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-421">The following code shows the use of the <xref:System.Security.Principal.WindowsIdentity.IsSystem%2A> property to get the Windows account token for the user.</span></span> <span data-ttu-id="106b6-422">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.Principal.WindowsIdentity> classe.</span><span class="sxs-lookup"><span data-stu-id="106b6-422">This code example is part of a larger example provided for the <xref:System.Security.Principal.WindowsIdentity> class.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CPP/windowsidentitymembers.cpp#14)]
 [!code-csharp[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/CS/windowsidentitymembers.cs#14)]
 [!code-vb[System.Security.Principal.WindowsIdentity_AllMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsIdentity_AllMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="106b6-423">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="106b6-423">for the ability to access unmanaged code.</span></span> <span data-ttu-id="106b6-424">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-424">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier User" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As SecurityIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::SecurityIdentifier ^ User { System::Security::Principal::SecurityIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-425">Obtient l'identificateur de sécurité (SID) pour l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-425">Gets the security identifier (SID) for the user.</span></span></summary>
        <value><span data-ttu-id="106b6-426">Objet pour l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="106b6-426">An object for the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="106b6-427">Le SID identifie de façon unique un utilisateur ou groupe sur toutes les implémentations de Windows NT.</span><span class="sxs-lookup"><span data-stu-id="106b6-427">The SID uniquely identifies a user or group on all Windows NT implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="106b6-428">Le <xref:System.Security.Principal.WindowsIdentity> objet retourné par la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> méthode n’est pas identique à l’utilisateur Windows anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-428">The <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method is not the same as the Windows anonymous user.</span></span> <span data-ttu-id="106b6-429">Cette propriété obtient `null` pour un utilisateur anonyme représenté par le <xref:System.Security.Principal.WindowsIdentity> objet retourné par la <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> méthode ; elle n’obtient pas le SID représentant un utilisateur Windows anonyme.</span><span class="sxs-lookup"><span data-stu-id="106b6-429">This property gets `null` for an anonymous user represented by the <xref:System.Security.Principal.WindowsIdentity> object returned by the <xref:System.Security.Principal.WindowsIdentity.GetAnonymous%2A> method; it does not get the SID representing an anonymous Windows user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsIdentity.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="106b6-430">Obtient les revendications qui ont la clé de propriété <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-430">Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></summary>
        <value><span data-ttu-id="106b6-431">Collection de revendications ayant la clé de propriété <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" />.</span><span class="sxs-lookup"><span data-stu-id="106b6-431">A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>