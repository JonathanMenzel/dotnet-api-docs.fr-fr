<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a012bb7ed4c2f2cee322628799e0c6c20b3d8013" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36475104" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente l'adresse de l'expéditeur ou du destinataire d'un message électronique.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Le <xref:System.Net.Mail.MailAddress> classe est utilisée par le <xref:System.Net.Mail.SmtpClient> et <xref:System.Net.Mail.MailMessage> classes pour stocker les informations d’adresse pour les messages électroniques.  
  
Une adresse de messagerie est composée d’un <xref:System.Net.Mail.MailAddress.User%2A> nom, <xref:System.Net.Mail.MailAddress.Host%2A> nom et, éventuellement, un <xref:System.Net.Mail.MailAddress.DisplayName%2A>. Le <xref:System.Net.Mail.MailAddress.DisplayName%2A> peut contenir des caractères non ASCII si vous les encoder.  
  
La <xref:System.Net.Mail.MailAddress> classe prend en charge les formats d’adresse de messagerie suivants :  
  
-   Format d’adresse simple de `user@host`. Si un <xref:System.Net.Mail.MailAddress.DisplayName%2A> n’est pas défini, il s’agit du format d’adresse électronique généré.  
  
-   Un format de nom complet entre guillemets standard de `"display name" <user@host>`. Si un <xref:System.Net.Mail.MailAddress.DisplayName%2A> est défini, il s’agit du format généré.  
  
-   Les crochets pointus sont ajoutés autour du <xref:System.Net.Mail.MailAddress.User%2A> nom, <xref:System.Net.Mail.MailAddress.Host%2A> nom `"display name" user@host` si celles-ci ne sont pas inclus.  
  
-   Les guillemets sont ajoutés autour de le <xref:System.Net.Mail.MailAddress.DisplayName%2A> pour `display name <user@host>`, s’ils ne sont pas inclus.  
  
-   Les caractères Unicode sont prises en charge dans le <xref:System.Net.Mail.MailAddress.DisplayName%2A> propriété.  
  
-   A <xref:System.Net.Mail.MailAddress.User%2A> nom entre guillemets. Par exemple, `"user name"@host`.  
  
-   Points consécutifs et de fin dans les noms d’utilisateur. Par exemple, `user...name..@host`.  
  
-   Littéraux de domaine entre crochets. Par exemple, `<user@[my domain]>`.  
  
-   Commentaires. Par exemple, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. Commentaires sont supprimés avant la transmission.  
  
Une virgule est utilisée pour séparer les éléments dans une liste d’adresses de messagerie. Par conséquent, une virgule ne doit pas utilisée dans les noms complets sans guillemets dans une liste. Les adresses de messagerie suivantes seront alors autorisés :
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
L’adresse de messagerie suivante n’est pas autorisée :  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
Guillemets peuvent être incorporés dans une chaîne entre guillemets, mais ils doivent être échappés. Les adresses de messagerie suivantes seront alors autorisés :
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
L’adresse de messagerie suivante n’est pas autorisée :  
  
`"John "Jr" Doe" <user@host>`  
  
Lorsque le nom d’utilisateur est pas placé entre guillemets, tout le texte entre le début de la chaîne (ou une virgule) et l’adresse sont considérées comme partie de la <xref:System.Net.Mail.MailAddress.DisplayName%2A>, y compris les commentaires. Exemple :
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
Bien que la <xref:System.Net.Mail.MailAddress> classe accepte une adresse de messagerie comme serveurs de messagerie, d’autres ne peuvent pas accepter l’adresse de messagerie.  
  
La <xref:System.Net.Mail.MailAddress> classe ne prend pas en charge les formats d’adresse de messagerie suivants :  
  
- Mixte des noms complets avec et sans guillemets. Par exemple, `display "name" <user@host>`.
  
- Groupes, comme défini dans RFC 2822 Section 3.4 publiés par l’IETF.  
  
- Les formats de nom d’utilisateur obsolètes de `"user"."name"@host`, `user."name"@host` ou `"user".name@host`.
  
   
  
## Examples  
L’exemple de code suivant montre comment envoyer un message électronique à l’aide de la <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, et <xref:System.Net.Mail.MailMessage> classes.  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailAddress" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.String" /> qui contient une adresse e-mail.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailAddress" /> avec l'adresse spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `address` paramètre peut contenir un nom complet et l’adresse de messagerie associée si vous placez l’adresse figurant entre crochets. Exemple :  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 Un espace blanc est autorisé entre le nom complet et les crochets pointus.  
  
 Le tableau suivant présente les valeurs de propriété pour un <xref:System.Net.Mail.MailAddress> objet construit à l’aide de l’exemple d’adresse.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 L’exemple de code suivant utilise ce constructeur pour créer un <xref:System.Net.Mail.MailAddress> de l’objet pour le <xref:System.Net.Mail.MailMessage.Bcc%2A> destinataire d’un message électronique.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> a la valeur <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> n'est pas dans un format reconnu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.String" /> qui contient une adresse e-mail.</param>
        <param name="displayName">
          <see cref="T:System.String" /> qui contient le nom complet associé à <c>address</c>. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailAddress" /> avec l'adresse et le nom complet spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’espace blanc au début et fin dans le nom d’affichage est conservé.  
  
 Si `displayName` contient des caractères non-ASCII, le jeu de caractères iso-8859-1 est utilisé pour le `displayName` encodage. Codage des caractères non-ASCII est décrit dans la RFC 1522, disponible à [ https://www.ietf.org/ ](https://www.ietf.org/).  
  
 Si `address` contient un nom d’affichage, et `displayName` n’est pas `null` et n’est pas égal à <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` remplace la valeur spécifiée dans `address`.  
  
   
  
## Examples  
 L’exemple de code suivant utilise ce constructeur pour créer <xref:System.Net.Mail.MailAddress> instances pour l’expéditeur et le destinataire d’un message électronique.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> a la valeur <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> n'est pas dans un format reconnu.  -ou- <paramref name="address" /> contient des caractères non-ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.String" /> qui contient une adresse e-mail.</param>
        <param name="displayName">
          <see cref="T:System.String" /> qui contient le nom complet associé à <c>address</c>.</param>
        <param name="displayNameEncoding">
          <see cref="T:System.Text.Encoding" /> qui définit le jeu de caractères utilisé pour <c>displayName</c>.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailAddress" /> à l'aide de l'adresse, du nom complet et de l'encodage spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’espace blanc au début et fin dans le nom d’affichage est conservé.  
  
 Si `address` contient un nom d’affichage, et `displayName` n’est pas `null` et n’est pas égal à <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` remplace la valeur spécifiée dans `address`.  
  
 Le <xref:System.Net.Mail.MailAddress.%23ctor%2A> méthode ne vérifie pas si le `displayName` paramètre n’est valide. Cette méthode supprime les guillemets encadrant non affichés par le <xref:System.Net.Mail.MailAddress.DisplayName%2A> propriété. Guillemets seront ajoutés avant la transmission, sauf lorsque <xref:System.Text.Encoding.ASCII%2A> ou <xref:System.Text.Encoding.Unicode%2A> est spécifié dans le `displayNameEncoding` paramètre. L’encodage spécifié dans le `displayNameEncoding` paramètre est appliqué à la <xref:System.Net.Mail.MailAddress.DisplayName%2A> avant la transmission <xref:System.Text.Encoding.ASCII%2A> ou <xref:System.Text.Encoding.Unicode%2A> est spécifié dans le `displayNameEncoding` paramètre. <xref:System.Text.Encoding.UTF8%2A> est l’encodage par défaut si aucun n’est spécifié.  
  
 Pour plus d’informations sur les formats d’adresse de messagerie pris en charge, consultez <xref:System.Net.Mail.MailAddress>.  
  
   
  
## Examples  
 L’exemple de code suivant utilise ce constructeur pour créer <xref:System.Net.Mail.MailAddress> instances pour l’expéditeur d’un message électronique.  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> est <see langword="null" />.  -ou- <paramref name="displayName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> a la valeur <see cref="F:System.String.Empty" /> ("").  -ou-  <paramref name="displayName" /> est <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> n'est pas dans un format reconnu.  -ou- <paramref name="address" /> contient des caractères non-ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’adresse e-mail spécifiée quand cette instance a été créée.</summary>
        <value>
          <see cref="T:System.String" /> qui contient l’adresse e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur retournée par cette propriété n’inclut pas le <xref:System.Net.Mail.MailAddress.DisplayName%2A> plus d’informations.  
  
   
  
## Examples  
 L’exemple de code suivant affiche l’adresse de destinataire d’un message électronique.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom complet composé à partir du nom complet et des informations d'adresse spécifiés quand cette instance a été créée.</summary>
        <value>
          <see cref="T:System.String" /> qui contient le nom complet ; sinon, <see cref="F:System.String.Empty" /> ("") si aucune information de nom complet n'a été spécifiée quand cette instance a été créée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les noms complets qui contiennent des caractères non-ASCII sont retournés dans un format lisible. Utilisez le <xref:System.Net.Mail.MailAddress.ToString%2A> méthode pour obtenir la forme encodée de le <xref:System.Net.Mail.MailAddress.DisplayName%2A>.  
  
 Certains logiciels qui sont utilisés pour lire le courrier électronique affichent la <xref:System.Net.Mail.MailAddress.DisplayName%2A> la valeur de propriété à la place ou en plus de l’adresse de messagerie.  
  
   
  
## Examples  
 Le code suivant exemple affiche la <xref:System.Net.Mail.MailAddress.DisplayName%2A> du destinataire d’un message électronique.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>Compare deux adresses de messagerie.</summary>
        <returns>
          <see langword="true" /> si les deux adresses de messagerie sont identiques ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur de hachage pour une adresse de messagerie.</summary>
        <returns>Valeur de hachage entier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.MailAddress.GetHashCode%2A> méthode retourne un code de hachage de l’adresse de messagerie. Cette valeur peut être utilisée comme clé dans les tables de hachage.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la partie hôte de l'adresse spécifiée quand cette instance a été créée.</summary>
        <value>A <see cref="T:System.String" /> qui contient le nom de l’ordinateur hôte qui accepte les messages pour le <see cref="P:System.Net.Mail.MailAddress.User" /> propriété.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une adresse de messagerie classiques, la chaîne hôte inclut toutes les informations qui suivent la «`@`» signe. Par exemple, dans `"tsmith@contoso.com"`, l’hôte est `"contoso.com"`.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la destination d’un message électronique.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une représentation sous forme de chaîne de cette instance.</summary>
        <returns>
          <see cref="T:System.String" /> qui contient le contenu de cette <see cref="T:System.Net.Mail.MailAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne retournée par cette méthode n’est pas nécessairement identique à la chaîne spécifiée lors de la création de l’instance. Si le <xref:System.Net.Mail.MailAddress.DisplayName%2A> propriété n’est pas `null` et non égal à <xref:System.String.Empty?displayProperty=nameWithType> (« »), <xref:System.Net.Mail.MailAddress.ToString%2A> retourne une chaîne composée à l’aide de la syntaxe suivante :  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 Si <xref:System.Net.Mail.MailAddress.DisplayName%2A> est `null` ou égale à <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> retourne la valeur de la <xref:System.Net.Mail.MailAddress.Address%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la destination d’un message électronique.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les informations sur l'utilisateur à partir de l'adresse spécifiée quand cette instance a été créée.</summary>
        <value>
          <see cref="T:System.String" /> qui contient la partie nom d'utilisateur de <see cref="P:System.Net.Mail.MailAddress.Address" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans une adresse de messagerie classiques, la chaîne utilisateur inclut toutes les informations précédentes le «`@`» signe. Par exemple, dans `"tsmith@contoso.com"`, l’utilisateur est `"tsmith"`.  
  
   
  
## Examples  
 L’exemple de code suivant affiche la destination d’un message électronique.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>