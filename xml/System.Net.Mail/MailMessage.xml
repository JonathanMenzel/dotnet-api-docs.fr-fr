<Type Name="MailMessage" FullName="System.Net.Mail.MailMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ce98c8d4ede21d328ad3b849f12f2d42aa1cadd" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52197223" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailMessage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailMessage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class MailMessage&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailMessage : IDisposable" />
  <TypeSignature Language="F#" Value="type MailMessage = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente un e-mail qui peut être envoyé à l’aide de la classe <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instances de la <xref:System.Net.Mail.MailMessage> classe sont utilisés pour construire des messages électroniques qui sont transmis à un serveur SMTP pour remise à l’aide de la <xref:System.Net.Mail.SmtpClient> classe.  
  
 L’expéditeur, le destinataire, le sujet et le corps d’un message électronique peuvent être spécifiés comme paramètres lorsqu’un <xref:System.Net.Mail.MailMessage.%23ctor%2A> est utilisée pour initialiser un <xref:System.Net.Mail.MailMessage> objet. Ces paramètres peut également être définies et sont accessibles à l’aide des propriétés sur le <xref:System.Net.Mail.MailMessage> objet.  
  
 Les en-têtes de messages principale et les éléments du message peuvent être définies à l’aide des propriétés suivantes de la <xref:System.Net.Mail.MailMessage> classe.  
  
|En-tête du message électronique ou une partie|Property|  
|-------------------------|--------------|  
|Pièces jointes|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|Copie carbone invisible (Cci)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|Copie carbone (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Content-Type|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|Encodage pour les en-têtes personnalisés|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|Corps du message|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|Priorité|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|Destinataire|<xref:System.Net.Mail.MailMessage.To%2A>|  
|Reply-To|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|Expéditeur|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Objet|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
 Le <xref:System.Net.Mail.MailMessage> classe permet également à une application à accéder à la collection d’en-têtes du message à l’aide de la <xref:System.Net.Mail.MailMessage.Headers%2A> propriété. Bien que cette collection est en lecture seule (une nouvelle collection ne peut pas être définie,) des en-têtes personnalisés peuvent être ajoutés à ou supprimés de cette collection. Tous les en-têtes personnalisés ajoutés seront inclus lors la <xref:System.Net.Mail.MailMessage> instance est envoyée. Avant qu’un message est envoyé, uniquement les en-têtes ajoutés spécifiquement à cette collection dans le <xref:System.Net.Mail.MailMessage.Headers%2A> propriété sont inclus dans la collection. Après un le <xref:System.Net.Mail.MailMessage> instance est envoyée, le <xref:System.Net.Mail.MailMessage.Headers%2A> propriété inclura également les en-têtes qui sont définis à l’aide des propriétés associées de la <xref:System.Net.Mail.MailMessage> classe ou des paramètres passés lorsqu’un <xref:System.Net.Mail.MailMessage.%23ctor%2A> est utilisée pour initialiser un <xref:System.Net.Mail.MailMessage> objet.  
  
 Si certains en-têtes de messagerie sont incorrects, ils peuvent provoquer l’e-mail soit endommagé. Par conséquent, n’importe quel en-tête de messagerie dans la collection d’en-têtes qui peut être définie à l’aide d’une propriété sur le <xref:System.Net.Mail.MailMessage> classe doit uniquement être définie à l’aide de la <xref:System.Net.Mail.MailMessage> propriété de classe ou en tant que paramètre passé lorsqu’un <xref:System.Net.Mail.MailMessage.%23ctor%2A> Initialise un <xref:System.Net.Mail.MailMessage> objet. La liste suivante d’en-têtes de messagerie ne doit pas être ajoutée à l’aide de la <xref:System.Net.Mail.MailMessage.Headers%2A> propriété et toutes les valeurs définies pour ces en-têtes à l’aide de la <xref:System.Net.Mail.MailMessage.Headers%2A> propriété est ignorée ou remplacée lorsque le message est envoyé :  
  
-   Cci  
  
-   Cc  
  
-   Content-ID  
  
-   Emplacement du contenu  
  
-   Content-Transfer-Encoding  
  
-   Content-Type  
  
-   Date  
  
-   From  
  
-   Importance  
  
-   MIME-Version  
  
-   Priorité  
  
-   Reply-To  
  
-   Expéditeur  
  
-   À  
  
-   X-priorité  
  
 Si l’application ne spécifie pas un en-tête X-Sender à l’aide du <xref:System.Net.Mail.MailMessage.Headers%2A> propriété, la <xref:System.Net.Mail.MailMessage> classe créera un lorsque le message est envoyé.  
  
 Utilisez le <xref:System.Net.Mail.MailMessage.AlternateViews%2A> propriété pour spécifier des copies d’un message électronique dans différents formats. Par exemple, si vous envoyez un message au format HTML, vous souhaiterez également fournir une version en texte brut en cas de certains destinataires utilisent des lecteurs d’e-mail qui ne peut pas afficher de contenu HTML. Pour obtenir un exemple qui illustre la création d’un message avec d’autres affichages, voir <xref:System.Net.Mail.MailMessage.AlternateViews%2A>.  
  
 Utilisez le <xref:System.Net.Mail.MailMessage.Attachments%2A> propriété à ajouter des pièces jointes à un message électronique. Pour obtenir un exemple qui illustre la création d’un message avec une pièce jointe, consultez <xref:System.Net.Mail.MailMessage.Attachments%2A>.  
  
 Après avoir assemblé votre message électronique, vous pouvez l’envoyer à l’aide de la <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et envoyer un message électronique qui inclut une pièce jointe.  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailMessage" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une instance vide de la classe <see cref="T:System.Net.Mail.MailMessage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 À partir d’est défini à la valeur de l’élément de réseau pour mailSettings[&lt;smtp&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md), s’il existe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Mail.MailAddress from, class System.Net.Mail.MailAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As MailAddress, to As MailAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::Net::Mail::MailAddress ^ from, System::Net::Mail::MailAddress ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : System.Net.Mail.MailAddress * System.Net.Mail.MailAddress -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.Net.Mail.MailAddress" /> qui contient l’adresse de l’expéditeur de l’e-mail.</param>
        <param name="to">
          <see cref="T:System.Net.Mail.MailAddress" /> qui contient l’adresse du destinataire de l’e-mail.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailMessage" /> en utilisant les objets de classe <see cref="T:System.Net.Mail.MailAddress" /> spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.MailMessage.From%2A> propriété est initialisée à l’aide de `from` et <xref:System.Net.Mail.MailMessage.To%2A> propriété est initialisée à l’aide de `to`.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’appel de ce constructeur.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="to" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> ou <paramref name="to" /> est formé de manière incorrecte.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.String" /> qui contient l’adresse de l’expéditeur de l’e-mail.</param>
        <param name="to">
          <see cref="T:System.String" /> qui contient les adresses des destinataires de l’e-mail. Plusieurs adresses e-mail doivent être séparées avec une virgule (",").</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailMessage" /> en utilisant les objets de classe <see cref="T:System.String" /> spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.MailMessage.From%2A> propriété est initialisée à l’aide de `from` et <xref:System.Net.Mail.MailMessage.To%2A> propriété est initialisée à l’aide de `to`.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’appel de ce constructeur.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="to" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> a la valeur <see cref="F:System.String.Empty" /> ("").  
  
- ou - 
 <paramref name="to" /> a la valeur <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> ou <paramref name="to" /> est formé de manière incorrecte.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String, subject As String, body As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string * string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to, subject, body)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.String" /> qui contient l’adresse de l’expéditeur de l’e-mail.</param>
        <param name="to">
          <see cref="T:System.String" /> qui contient les adresses des destinataires de l’e-mail. Plusieurs adresses e-mail doivent être séparées avec une virgule (",").</param>
        <param name="subject">
          <see cref="T:System.String" /> qui contient le texte de l'objet.</param>
        <param name="body">
          <see cref="T:System.String" /> qui contient le corps du message.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.MailMessage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés du nouveau <xref:System.Net.Mail.MailMessage> objet sont initialisées comme suit :  
  
|Paramètre|Property|  
|---------------|--------------|  
|`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  
|`to`|<xref:System.Net.Mail.MailMessage.To%2A>|  
|`subject`|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
|`body`|<xref:System.Net.Mail.MailMessage.Body%2A>|  
  
 Par défaut, l’objet et le contenu sont supposées pour utiliser l’encodage par défaut en fonction des paramètres de l’ordinateur local. Utilisez le <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> et <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> propriétés pour spécifier des encodages différents.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’appel de ce constructeur.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="to" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> a la valeur <see cref="F:System.String.Empty" /> ("").  
  
- ou - 
 <paramref name="to" /> a la valeur <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> ou <paramref name="to" /> est formé de manière incorrecte.</exception>
      </Docs>
    </Member>
    <Member MemberName="AlternateViews">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AlternateViewCollection AlternateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AlternateViewCollection AlternateViews" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.AlternateViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternateViews As AlternateViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AlternateViewCollection ^ AlternateViews { System::Net::Mail::AlternateViewCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternateViews : System.Net.Mail.AlternateViewCollection" Usage="System.Net.Mail.MailMessage.AlternateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de pièces jointes utilisée pour stocker d'autres formes du corps de message.</summary>
        <value>
          <see cref="T:System.Net.Mail.AlternateViewCollection" /> accessible en écriture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Net.Mail.MailMessage.AlternateViews%2A> propriété pour spécifier des copies d’un message électronique dans différents formats. Par exemple, si vous envoyez un message au format HTML, vous souhaiterez également fournir une version en texte brut en cas de certains destinataires utilisent des lecteurs d’e-mail qui ne peut pas afficher de contenu HTML.  
  
 Pour ajouter une autre vue à un <xref:System.Net.Mail.MailMessage> d’objet, de créer un <xref:System.Net.Mail.Attachment> pour l’affichage, puis ajoutez-le à la collection retournée par <xref:System.Net.Mail.MailMessage.AlternateViews%2A>. Utiliser le <xref:System.Net.Mail.MailMessage.Body%2A> propriété pour spécifier la version de texte et utiliser le <xref:System.Net.Mail.MailMessage.AlternateViews%2A> collection pour spécifier des affichages avec d’autres types MIME. Utilisez le <xref:System.Net.Mime.MediaTypeNames> membres de classe pour spécifier le type MIME de l’autre affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et envoyer un message électronique avec un texte brut et un autre affichage HTML.  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="none" />
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AttachmentCollection Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AttachmentCollection Attachments" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As AttachmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AttachmentCollection ^ Attachments { System::Net::Mail::AttachmentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Net.Mail.AttachmentCollection" Usage="System.Net.Mail.MailMessage.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AttachmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de pièces jointes utilisée pour stocker les données jointes à cet e-mail.</summary>
        <value>
          <see cref="T:System.Net.Mail.AttachmentCollection" /> accessible en écriture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la collection retournée par la <xref:System.Net.Mail.MailMessage.Attachments%2A> propriété à ajouter une pièce jointe, tel qu’un fichier ou le contenu d’un <xref:System.IO.Stream>, à ce <xref:System.Net.Mail.MailMessage>.  
  
 Créer un <xref:System.Net.Mail.Attachment> qui contient ou fait référence aux données pour être attaché, puis ajoutez le <xref:System.Net.Mail.Attachment> à la collection retournée par <xref:System.Net.Mail.MailMessage.Attachments%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer et envoyer un message électronique avec une pièce jointe.  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Bcc">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection Bcc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection Bcc" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Bcc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bcc As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ Bcc { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bcc : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.Bcc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d’adresses qui contient les destinataires de copie carbone invisible (CCI) pour cet e-mail.</summary>
        <value>Objet <see cref="T:System.Net.Mail.MailAddressCollection" /> accessible en écriture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour ajouter un destinataire de Cci à un message électronique, créez un <xref:System.Net.Mail.MailAddress> pour le destinataire d’adresses, puis ajoutez cet objet à la collection retournée par la <xref:System.Net.Mail.MailMessage.Bcc%2A> propriété.  
  
 Lorsque les destinataires consultent un message électronique, le <xref:System.Net.Mail.MailMessage.Bcc%2A> adresses ne sont généralement pas affichés.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’ajout d’une adresse pour le <xref:System.Net.Mail.MailMessage.Bcc%2A> collection d’adresses.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Body" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Body { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : string with get, set" Usage="System.Net.Mail.MailMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le corps du message.</summary>
        <value>Valeur <see cref="T:System.String" /> qui contient le texte du corps.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mime.ContentType> de la <xref:System.Net.Mail.MailMessage.Body%2A> le contenu est « text/plain ». Spécifiez l’encodage utilisé pour le corps avec le <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> propriété.  
  
 Si le contenu du corps est disponible dans d’autres formats qui fournissent des options de présentation plus riches pour les destinataires, vous pouvez spécifier d’autres affichages pour le contenu du corps à l’aide de la <xref:System.Net.Mail.MailMessage.AlternateViews%2A> propriété. Par exemple, une application peut choisir d’envoyer le corps de texte brut et une version en HTML du corps du message. Lecteurs d’e-mail qui peuvent afficher une page HTML peuvent présenter la version HTML du corps au destinataire, tandis que les lecteurs qui ne peut pas afficher le code HTML affiche la version en texte brut du message au lieu de cela.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Net.Mail.MailMessage.Body%2A> propriété.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding BodyEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding BodyEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ BodyEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'encodage utilisé pour encoder le corps du message.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> appliqué au contenu du <see cref="P:System.Net.Mail.MailMessage.Body" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur spécifiée pour le <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> propriété définit le champ de jeu de caractères dans l’en-tête Content-Type. Le jeu de caractères par défaut est `"us-ascii"`.  
  
 Si vous définissez la <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> propriété <xref:System.Text.Encoding.UTF8%2A>, <xref:System.Text.Encoding.Unicode%2A>, ou <xref:System.Text.Encoding.UTF32%2A>, le Framework sélectionne un <xref:System.Net.Mime.TransferEncoding> de <xref:System.Net.Mime.TransferEncoding.Base64> pour ce <xref:System.Net.Mail.MailMessage>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’un message électronique qui utilise l’encodage UTF8.  
  
 [!code-cpp[NclMailAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BodyTransferEncoding">
      <MemberSignature Language="C#" Value="public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mime.TransferEncoding BodyTransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyTransferEncoding As TransferEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::TransferEncoding BodyTransferEncoding { System::Net::Mime::TransferEncoding get(); void set(System::Net::Mime::TransferEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.BodyTransferEncoding : System.Net.Mime.TransferEncoding with get, set" Usage="System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.TransferEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'encodage de transfert utilisé pour encoder le corps du message.</summary>
        <value>Retourne <see cref="T:System.Net.Mime.TransferEncoding" />.  
  
<see cref="T:System.Net.Mime.TransferEncoding" /> appliqué au contenu du <see cref="P:System.Net.Mail.MailMessage.Body" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection CC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection CC" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.CC" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CC As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ CC { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CC : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d’adresses qui contient les destinataires de copie carbone (CC) pour cet e-mail.</summary>
        <value>Objet <see cref="T:System.Net.Mail.MailAddressCollection" /> accessible en écriture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour ajouter un destinataire CC à un message électronique, créez un <xref:System.Net.Mail.MailAddress> pour le destinataire d’adresses, puis ajoutez cet objet à la collection retournée par la <xref:System.Net.Mail.MailMessage.CC%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’ajout d’une adresse pour le <xref:System.Net.Mail.MailMessage.CC%2A> collection d’adresses.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="DeliveryNotificationOptions">
      <MemberSignature Language="C#" Value="public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryNotificationOptions As DeliveryNotificationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::DeliveryNotificationOptions DeliveryNotificationOptions { System::Net::Mail::DeliveryNotificationOptions get(); void set(System::Net::Mail::DeliveryNotificationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryNotificationOptions : System.Net.Mail.DeliveryNotificationOptions with get, set" Usage="System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.DeliveryNotificationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les notifications de remise de cet e-mail.</summary>
        <value>Valeur <see cref="T:System.Net.Mail.DeliveryNotificationOptions" /> qui contient les notifications de remise de ce message.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libère les ressources utilisées par le <see cref="T:System.Net.Mail.MailMessage" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="mailMessage.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par <see cref="T:System.Net.Mail.MailMessage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez la méthode <xref:System.Net.Mail.MailMessage.Dispose%2A> après avoir utilisé <xref:System.Net.Mail.MailMessage>. La méthode <xref:System.Net.Mail.MailMessage.Dispose%2A> rend le <xref:System.Net.Mail.MailMessage> inutilisable. Après avoir appelé <xref:System.Net.Mail.MailMessage.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Net.Mail.MailMessage> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Mail.MailMessage> occupée. Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Net.Mail.MailMessage.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Net.Mail.MailMessage>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la suppression un <xref:System.Net.Mail.MailMessage>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="mailMessage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.Net.Mail.MailMessage" /> et libère éventuellement les ressources managées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode). `Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`. <xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.  
  
 Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Net.Mail.MailMessage> références. Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets. Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress From" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ From { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’adresse de l’expéditeur de cet e-mail.</summary>
        <value>
          <see cref="T:System.Net.Mail.MailAddress" /> qui contient les informations sur l'adresse de l'expéditeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’à partir d’adresse n’est pas validée ou liée à l’utilisateur actuellement connecté.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la définition d’une valeur pour le <xref:System.Net.Mail.MailMessage.From%2A> propriété.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.Mail.MailMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les en-têtes d’e-mails qui sont transmis avec cet e-mail.</summary>
        <value>Un <see cref="T:System.Collections.Specialized.NameValueCollection" /> qui contient les en-têtes de courrier électronique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.MailMessage.Headers%2A> propriété permet à une application à accéder à la collection d’en-têtes pour le message. Bien que cette collection est en lecture seule (une nouvelle collection ne peut pas être définie,) des en-têtes personnalisés peuvent être ajoutés à ou supprimés de cette collection. Tous les en-têtes personnalisés ajoutés seront inclus lors la <xref:System.Net.Mail.MailMessage> instance est envoyée. Avant qu’un message est envoyé, uniquement les en-têtes ajoutés spécifiquement à cette collection dans le <xref:System.Net.Mail.MailMessage.Headers%2A> propriété sont inclus dans la collection. Après le <xref:System.Net.Mail.MailMessage> instance est envoyée, le <xref:System.Net.Mail.MailMessage.Headers%2A> propriété inclura également les en-têtes qui sont définis à l’aide des propriétés associées de la <xref:System.Net.Mail.MailMessage> classe ou des paramètres passés lorsqu’un <xref:System.Net.Mail.MailMessage.%23ctor%2A> est utilisée pour initialiser un <xref:System.Net.Mail.MailMessage> objet.  
  
 Si certains en-têtes de messagerie sont incorrects, ils peuvent provoquer l’e-mail soit endommagé. Par conséquent, n’importe quel en-tête de messagerie dans la collection d’en-têtes qui peut être définie à l’aide d’une propriété sur le <xref:System.Net.Mail.MailMessage> classe doit uniquement être définie à l’aide de la <xref:System.Net.Mail.MailMessage> propriété de classe ou en tant que paramètre passé lorsqu’un <xref:System.Net.Mail.MailMessage.%23ctor%2A> Initialise un <xref:System.Net.Mail.MailMessage> objet. La liste suivante d’en-têtes de messagerie ne doit pas être ajoutée à l’aide de la <xref:System.Net.Mail.MailMessage.Headers%2A> propriété et toutes les valeurs définies pour ces en-têtes à l’aide de la <xref:System.Net.Mail.MailMessage.Headers%2A> propriété est ignorée ou remplacée lorsque le message est envoyé :  
  
-   Cci  
  
-   Cc  
  
-   Content-ID  
  
-   Emplacement du contenu  
  
-   Content-Transfer-Encoding  
  
-   Content-Type  
  
-   Date  
  
-   From  
  
-   Importance  
  
-   MIME-Version  
  
-   Priorité  
  
-   Reply-To  
  
-   Expéditeur  
  
-   À  
  
-   X-priorité  
  
 Si l’application ne spécifie pas un en-tête X-Sender à l’aide du <xref:System.Net.Mail.MailMessage.Headers%2A> propriété, la <xref:System.Net.Mail.MailMessage> classe créera un lorsque le message est envoyé.  
  
 L’expéditeur, le destinataire, le sujet et le corps d’un message électronique peuvent être spécifiés comme paramètres lorsqu’un <xref:System.Net.Mail.MailMessage.%23ctor%2A> est utilisée pour initialiser un <xref:System.Net.Mail.MailMessage> objet. Ces paramètres peut également être définies et sont accessibles à l’aide des propriétés sur le <xref:System.Net.Mail.MailMessage> objet.  
  
 Les en-têtes de messages principale et les éléments du message peuvent être définies à l’aide des propriétés suivantes de la <xref:System.Net.Mail.MailMessage> classe.  
  
|En-tête du message électronique ou une partie|Property|  
|-------------------------|--------------|  
|Pièces jointes|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|Copie carbone invisible (Cci)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|Copie carbone (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Content-Type|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|Encodage pour les en-têtes personnalisés|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|Corps du message|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|Priorité|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|Destinataire|<xref:System.Net.Mail.MailMessage.To%2A>|  
|Reply-To|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|Expéditeur|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Objet|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’affichage des en-têtes pour un message électronique.  
  
 [!code-cpp[NclMailSync#24](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#24)]
 [!code-csharp[NclMailSync#24](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeadersEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeadersEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeadersEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeadersEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeadersEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’encodage utilisé pour les en-têtes personnalisés définis par l’utilisateur de cet e-mail.</summary>
        <value>L’encodage utilisé pour les en-têtes personnalisés définis par l’utilisateur pour ce message électronique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Net.Mail.MailMessage.HeadersEncoding%2A> propriété par défaut <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>.  
  
 Les messages SMTP se composent d’en-têtes et parties du corps. Les normes IETF RFC pour SMTP restreindre l’en-tête et les noms de partie de corps en ASCII. Toutefois, les RFC IETF permet l’en-tête et corps aux valeurs contiennent des caractères Unicode. Dans n’importe quelle valeur particulière, si les caractères non ASCII existent, puis la valeur est encodée à l’aide d’une combinaison de caractères d’encodage (UTF-8 ou Shift-JIS, par exemple) suivie d’encodage octets (<xref:System.Net.Mime.TransferEncoding.Base64> ou <xref:System.Net.Mime.TransferEncoding.QuotedPrintable> par exemple). Le résultat est généralement que seuls les caractères ASCII sont dans le flux de transmission réseau.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBodyHtml As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBodyHtml { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBodyHtml : bool with get, set" Usage="System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le corps de l’e-mail est au format HTML.</summary>
        <value>
          <see langword="true" /> Si le corps du message est au format HTML ; autre <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MailPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailPriority Priority { System::Net::Mail::MailPriority get(); void set(System::Net::Mail::MailPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Net.Mail.MailPriority with get, set" Usage="System.Net.Mail.MailMessage.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la priorité de cet e-mail.</summary>
        <value>
          <see cref="T:System.Net.Mail.MailPriority" /> qui contient la priorité de ce message.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ ReplyTo { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use ReplyToList instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("ReplyTo is obsoleted for this type.  Please use ReplyToList instead which can accept multiple addresses. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'adresse ReplyTo pour le message électronique.</summary>
        <value>MailAddress qui indique la valeur du champ <see cref="P:System.Net.Mail.MailMessage.ReplyTo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utiliser le <xref:System.Net.Mail.MailMessage.ReplyTo%2A> propriété pour indiquer une adresse autre que le <xref:System.Net.Mail.MailMessage.From%2A> adresse à utiliser pour répondre à ce message.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToList">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection ReplyToList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection ReplyToList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyToList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplyToList As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ ReplyToList { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToList : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.ReplyToList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la liste des adresses auxquelles une réponse à l’e-mail doit être envoyée.</summary>
        <value>Liste des adresses auxquelles une réponse au message électronique doit être envoyée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utiliser le <xref:System.Net.Mail.MailMessage.ReplyToList%2A> propriété pour indiquer la liste des adresses autres que le <xref:System.Net.Mail.MailMessage.From%2A> adresse à utiliser pour répondre à ce message.  
  
 Le <xref:System.Net.Mail.MailMessage.ReplyToList%2A> propriété remplace la <xref:System.Net.Mail.MailMessage.ReplyTo%2A> propriété qui autorise uniquement une seule adresse de réponse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sender">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress Sender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress Sender" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Sender" />
      <MemberSignature Language="VB.NET" Value="Public Property Sender As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ Sender { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sender : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.Sender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’adresse de l’expéditeur de cet e-mail.</summary>
        <value>
          <see cref="T:System.Net.Mail.MailAddress" /> qui contient les informations sur l'adresse de l'expéditeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adresse de l’expéditeur n’est pas validé ou liée à l’utilisateur actuellement connecté.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="System.Net.Mail.MailMessage.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la ligne d’objet de cet e-mail.</summary>
        <value>
          <see cref="T:System.String" /> qui contient le contenu de l'objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spécifier l’encodage utilisé pour l’objet à l’aide de la <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Net.Mail.MailMessage.Subject%2A> propriété.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding SubjectEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding SubjectEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ SubjectEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SubjectEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’encodage utilisé pour le contenu de l’objet de cet e-mail.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> qui a été utilisé pour encoder la propriété <see cref="P:System.Net.Mail.MailMessage.Subject" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un agent de messagerie rencontre des difficultés avec un <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> de <xref:System.Text.Encoding.Unicode%2A>, utilisez <xref:System.Text.Encoding.UTF8%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> propriété.  
  
 [!code-cpp[NclMailASync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailASync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailASync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection To { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection To" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.To" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property To As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ To { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.To : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d’adresses qui contient les destinataires de cet e-mail.</summary>
        <value>Objet <see cref="T:System.Net.Mail.MailAddressCollection" /> accessible en écriture.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.MailMessage.To%2A> propriété est utilisée pour désigner les adresses sur la ligne à d’un message électronique. Pour ajouter un destinataire à un message électronique, créez un <xref:System.Net.Mail.MailAddress> pour le destinataire d’adresses, puis ajoutez cet objet à la collection retournée par cette propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Net.Mail.MailMessage.To%2A> propriété.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
  </Members>
</Type>