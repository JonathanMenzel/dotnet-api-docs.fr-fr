<Type Name="IMoniker" FullName="System.Runtime.InteropServices.ComTypes.IMoniker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf152b80dddcaaadc9b2ddfde880ac4db709dff1" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52228391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMoniker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMoniker" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComTypes.IMoniker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMoniker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMoniker" />
  <TypeSignature Language="F#" Value="type IMoniker = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("0000000f-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit la définition managée de l'interface <see langword="IMoniker" />, avec une fonctionnalité COM provenant de <see langword="IPersist" /> et <see langword="IPersistStream" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur la `IMoniker`, `IPersist`, et `IPersistStream` interfaces, consultez MSDN Library.  
  
 Le common language runtime lève une exception lorsqu’une méthode COM en code natif retourne un HRESULT. Pour plus d'informations, consultez [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindToObject">
      <MemberSignature Language="C#" Value="public void BindToObject (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, ref Guid riidResult, out object ppvResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToObject(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [in]valuetype System.Guid&amp; riidResult, [out] object&amp; ppvResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToObject (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riidResult As Guid, ByRef ppvResult As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToObject(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, Guid % riidResult, [Runtime::InteropServices::Out] System::Object ^ % ppvResult);" />
      <MemberSignature Language="F#" Value="abstract member BindToObject : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  *  -&gt; unit" Usage="iMoniker.BindToObject (pbc, pmkToLeft, riidResult, ppvResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="riidResult" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvResult" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence à l'interface <see langword="IBindCtx" /> sur l'objet de contexte de liaison utilisé dans cette opération de liaison.</param>
        <param name="pmkToLeft">Référence au moniker à gauche du moniker en cours, si le moniker fait partie d'un moniker composite.</param>
        <param name="riidResult">IID (ID d'interface) de l'interface que le client a l'intention d'utiliser pour communiquer avec l'objet que le moniker identifie.</param>
        <param name="ppvResult">Lorsque cette méthode retourne une valeur, contient une référence à l'interface demandée par <paramref name="riidResult" />. Ce paramètre est passé sans être initialisé.</param>
        <summary>Utilise le moniker pour établir une liaison à l'objet qu'il identifie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::BindToObject`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToStorage">
      <MemberSignature Language="C#" Value="public void BindToStorage (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToStorage(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [in]valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToStorage (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToStorage(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberSignature Language="F#" Value="abstract member BindToStorage : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  *  -&gt; unit" Usage="iMoniker.BindToStorage (pbc, pmkToLeft, riid, ppvObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence à l'interface <see langword="IBindCtx" /> sur l'objet de contexte de liaison utilisé dans cette opération de liaison.</param>
        <param name="pmkToLeft">Référence au moniker à gauche du moniker en cours, si le moniker fait partie d'un moniker composite.</param>
        <param name="riid">ID d'interface (IID, interface identifier) de l'interface de stockage demandée.</param>
        <param name="ppvObj">Lorsque cette méthode retourne une valeur, contient une référence à l'interface demandée par <paramref name="riid" />. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère un pointeur d'interface vers le stockage qui contient l'objet identifié par le moniker.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::BindToStorage`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonPrefixWith">
      <MemberSignature Language="C#" Value="public void CommonPrefixWith (System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommonPrefixWith(class System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommonPrefixWith (pmkOther As IMoniker, ByRef ppmkPrefix As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommonPrefixWith(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkPrefix);" />
      <MemberSignature Language="F#" Value="abstract member CommonPrefixWith : System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.CommonPrefixWith (pmkOther, ppmkPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppmkPrefix" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther">Référence à l'interface <see langword="IMoniker" /> sur un autre moniker à comparer avec le moniker en cours pour identifier un préfixe commun.</param>
        <param name="ppmkPrefix">Lorsque cette méthode retourne une valeur, contient le moniker qui est le préfixe commun du moniker actuel et de <paramref name="pmkOther" />. Ce paramètre est passé sans être initialisé.</param>
        <summary>Crée un nouveau moniker basé sur le préfixe commun que ce moniker partage avec un autre moniker.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::CommonPrefixWith`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeWith">
      <MemberSignature Language="C#" Value="public void ComposeWith (System.Runtime.InteropServices.ComTypes.IMoniker pmkRight, bool fOnlyIfNotGeneric, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkComposite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComposeWith(class System.Runtime.InteropServices.ComTypes.IMoniker pmkRight, bool fOnlyIfNotGeneric, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkComposite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComposeWith (pmkRight As IMoniker, fOnlyIfNotGeneric As Boolean, ByRef ppmkComposite As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComposeWith(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkRight, bool fOnlyIfNotGeneric, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkComposite);" />
      <MemberSignature Language="F#" Value="abstract member ComposeWith : System.Runtime.InteropServices.ComTypes.IMoniker * bool *  -&gt; unit" Usage="iMoniker.ComposeWith (pmkRight, fOnlyIfNotGeneric, ppmkComposite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkRight" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="fOnlyIfNotGeneric" Type="System.Boolean" />
        <Parameter Name="ppmkComposite" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkRight">Référence à l'interface <see langword="IMoniker" /> sur un moniker à ajouter à la fin du moniker actuel.</param>
        <param name="fOnlyIfNotGeneric">
          <see langword="true" /> pour indiquer que l'appelant exige une composition non générique. L'opération ne continue que si <paramref name="pmkRight" /> est une classe de moniker avec laquelle le moniker actuel peut se combiner d'une certaine manière, autrement qu'en constituant un composite générique. <see langword="false" /> pour indiquer que la méthode peut créer un composite générique si nécessaire.</param>
        <param name="ppmkComposite">Lorsque cette méthode retourne une valeur, contient une référence au moniker composite résultant. Ce paramètre est passé sans être initialisé.</param>
        <summary>Combine le moniker en cours à un autre moniker, créant un nouveau moniker composite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::ComposeWith`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enum">
      <MemberSignature Language="C#" Value="public void Enum (bool fForward, out System.Runtime.InteropServices.ComTypes.IEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enum(bool fForward, [out] class System.Runtime.InteropServices.ComTypes.IEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enum (fForward As Boolean, ByRef ppenumMoniker As IEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enum(bool fForward, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumMoniker ^ % ppenumMoniker);" />
      <MemberSignature Language="F#" Value="abstract member Enum : bool *  -&gt; unit" Usage="iMoniker.Enum (fForward, ppenumMoniker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fForward" Type="System.Boolean" />
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.ComTypes.IEnumMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fForward">
          <see langword="true" /> pour énumérer les monikers de gauche à droite. <see langword="false" /> pour énumérer de droite à gauche.</param>
        <param name="ppenumMoniker">Lorsque cette méthode retourne une valeur, contient une référence à l'objet énumérateur du moniker. Ce paramètre est passé sans être initialisé.</param>
        <summary>Fournit un pointeur à un énumérateur pouvant énumérer les composants d'un moniker composite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::Enum`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassID">
      <MemberSignature Language="C#" Value="public void GetClassID (out Guid pClassID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetClassID([out] valuetype System.Guid&amp; pClassID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetClassID (ByRef pClassID As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetClassID([Runtime::InteropServices::Out] Guid % pClassID);" />
      <MemberSignature Language="F#" Value="abstract member GetClassID :  -&gt; unit" Usage="iMoniker.GetClassID pClassID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pClassID" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pClassID">Lorsque cette méthode est retournée, contient le CLSID. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère le CLSID (identificateur de classe).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IPersist::GetClassID`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public void GetDisplayName (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, out string ppszDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDisplayName(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [out] string&amp; ppszDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDisplayName (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef ppszDisplayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDisplayName(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::String ^ % ppszDisplayName);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayName : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.GetDisplayName (pbc, pmkToLeft, ppszDisplayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppszDisplayName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence au contexte de liaison à utiliser dans cette opération.</param>
        <param name="pmkToLeft">Référence au moniker à gauche du moniker en cours, si le moniker fait partie d'un moniker composite.</param>
        <param name="ppszDisplayName">Lorsque cette méthode retourne une valeur, contient la chaîne du nom complet. Ce paramètre est passé sans être initialisé.</param>
        <summary>Obtient le nom complet, qui est une représentation lisible par l'utilisateur du moniker actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::GetDisplayName`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSizeMax">
      <MemberSignature Language="C#" Value="public void GetSizeMax (out long pcbSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSizeMax([out] int64&amp; pcbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSizeMax (ByRef pcbSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSizeMax([Runtime::InteropServices::Out] long % pcbSize);" />
      <MemberSignature Language="F#" Value="abstract member GetSizeMax :  -&gt; unit" Usage="iMoniker.GetSizeMax pcbSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcbSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcbSize">Lorsque cette méthode retourne une valeur, contient une valeur <see langword="long" /> indiquant la taille en octets du flux requis pour enregistrer cet objet. Ce paramètre est passé sans être initialisé.</param>
        <summary>Retourne la taille en octets du flux requis pour enregistrer l'objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IPersistStream::GetSizeMax`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, out System.Runtime.InteropServices.ComTypes.FILETIME pFileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [out] valuetype System.Runtime.InteropServices.ComTypes.FILETIME&amp; pFileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef pFileTime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FILETIME % pFileTime);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeOfLastChange : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.GetTimeOfLastChange (pbc, pmkToLeft, pFileTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pFileTime" Type="System.Runtime.InteropServices.ComTypes.FILETIME" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence au contexte de liaison à utiliser dans l'opération de liaison.</param>
        <param name="pmkToLeft">Référence au moniker à gauche du moniker en cours, si le moniker fait partie d'un moniker composite.</param>
        <param name="pFileTime">Lorsque cette méthode retourne une valeur, contient l'heure de la dernière modification. Ce paramètre est passé sans être initialisé.</param>
        <summary>Fournit un nombre représentant l'heure de la dernière modification de l'objet identifié par le moniker actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::GetTimeOfLastChange`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public void Hash (out int pdwHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Hash([out] int32&amp; pdwHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hash (ByRef pdwHash As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hash([Runtime::InteropServices::Out] int % pdwHash);" />
      <MemberSignature Language="F#" Value="abstract member Hash :  -&gt; unit" Usage="iMoniker.Hash pdwHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwHash" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwHash">Lorsque cette méthode retourne une valeur, contient la valeur de hachage de ce moniker. Ce paramètre est passé sans être initialisé.</param>
        <summary>Calcule un entier 32 bits utilisant l'état interne du moniker.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::Hash`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public void Inverse (out System.Runtime.InteropServices.ComTypes.IMoniker ppmk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inverse([out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inverse (ByRef ppmk As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inverse([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmk);" />
      <MemberSignature Language="F#" Value="abstract member Inverse :  -&gt; unit" Usage="iMoniker.Inverse ppmk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppmk" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppmk">Lorsque cette méthode retourne une valeur, contient un moniker qui est l'inverse du moniker actuel. Ce paramètre est passé sans être initialisé.</param>
        <summary>Fournit un moniker qui, lorsqu'il est composé à la droite du moniker actuel ou d'un moniker de structure similaire, produit une composition nulle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::Inverse`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public int IsDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDirty () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsDirty();" />
      <MemberSignature Language="F#" Value="abstract member IsDirty : unit -&gt; int" Usage="iMoniker.IsDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie si l'objet a subi des modifications depuis son dernier enregistrement.</summary>
        <returns>Valeur <see langword="S_OK" /><see langword="HRESULT" /> si l’objet a été modifié ; sinon, valeur <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IPersistStream::IsDirty`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public int IsEqual (System.Runtime.InteropServices.ComTypes.IMoniker pmkOtherMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsEqual(class System.Runtime.InteropServices.ComTypes.IMoniker pmkOtherMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEqual (pmkOtherMoniker As IMoniker) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsEqual(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkOtherMoniker);" />
      <MemberSignature Language="F#" Value="abstract member IsEqual : System.Runtime.InteropServices.ComTypes.IMoniker -&gt; int" Usage="iMoniker.IsEqual pmkOtherMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOtherMoniker" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkOtherMoniker">Référence au moniker à utiliser pour comparaison.</param>
        <summary>Compare le moniker actuel à un moniker spécifié et indique s'ils sont identiques.</summary>
        <returns>Valeur <see langword="S_OK" /><see langword="HRESULT" /> si les monikers sont identiques ; sinon, valeur <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::IsEqual`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public int IsRunning (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, System.Runtime.InteropServices.ComTypes.IMoniker pmkNewlyRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsRunning(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, class System.Runtime.InteropServices.ComTypes.IMoniker pmkNewlyRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRunning (pbc As IBindCtx, pmkToLeft As IMoniker, pmkNewlyRunning As IMoniker) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsRunning(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkNewlyRunning);" />
      <MemberSignature Language="F#" Value="abstract member IsRunning : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker * System.Runtime.InteropServices.ComTypes.IMoniker -&gt; int" Usage="iMoniker.IsRunning (pbc, pmkToLeft, pmkNewlyRunning)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pmkNewlyRunning" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence au contexte de liaison à utiliser dans l'opération de liaison.</param>
        <param name="pmkToLeft">Référence au moniker à gauche du moniker en cours, si ce dernier fait partie d'un composite.</param>
        <param name="pmkNewlyRunning">Référence au dernier moniker ajouté à la table ROT (Running Object Table).</param>
        <summary>Détermine si l'objet qui est identifié par le moniker en cours est actuellement chargé et en service.</summary>
        <returns>Valeur <see langword="S_OK" /><see langword="HRESULT" /> si le moniker est en service ; valeur <see langword="S_FALSE" /><see langword="HRESULT" /> si le moniker n’est pas en service ; ou valeur <see langword="E_UNEXPECTED" /><see langword="HRESULT" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::IsRunning`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemMoniker">
      <MemberSignature Language="C#" Value="public int IsSystemMoniker (out int pdwMksys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsSystemMoniker([out] int32&amp; pdwMksys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSystemMoniker (ByRef pdwMksys As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsSystemMoniker([Runtime::InteropServices::Out] int % pdwMksys);" />
      <MemberSignature Language="F#" Value="abstract member IsSystemMoniker :  -&gt; int" Usage="iMoniker.IsSystemMoniker pdwMksys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwMksys" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwMksys">Lorsque cette méthode retourne une valeur, contient un pointeur vers un entier faisant partie des valeurs de l'énumération <see langword="MKSYS" /> et faisant référence à l'une des classes de moniker COM. Ce paramètre est passé sans être initialisé.</param>
        <summary>Indique si ce moniker correspond à l'une des classes de moniker fournies par le système.</summary>
        <returns>Valeur <see langword="S_OK" /><see langword="HRESULT" /> si le moniker est un moniker système ; sinon, valeur <see langword="S_FALSE" /><see langword="HRESULT" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur les valeurs de la `MKSYS` énumération et des informations sur `IMoniker::IsSystemMoniker`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Runtime.InteropServices.ComTypes.IStream pStm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Runtime.InteropServices.ComTypes.IStream pStm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (pStm As IStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Runtime::InteropServices::ComTypes::IStream ^ pStm);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Runtime.InteropServices.ComTypes.IStream -&gt; unit" Usage="iMoniker.Load pStm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.ComTypes.IStream" />
      </Parameters>
      <Docs>
        <param name="pStm">Flux à partir duquel l'objet est chargé.</param>
        <summary>Initialise un objet à partir du flux ayant été précédemment enregistré.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IPersistStream::Load`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDisplayName">
      <MemberSignature Language="C#" Value="public void ParseDisplayName (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, string pszDisplayName, out int pchEaten, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseDisplayName(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, string pszDisplayName, [out] int32&amp; pchEaten, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ParseDisplayName (pbc As IBindCtx, pmkToLeft As IMoniker, pszDisplayName As String, ByRef pchEaten As Integer, ByRef ppmkOut As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ParseDisplayName(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, System::String ^ pszDisplayName, [Runtime::InteropServices::Out] int % pchEaten, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkOut);" />
      <MemberSignature Language="F#" Value="abstract member ParseDisplayName : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker * string *  *  -&gt; unit" Usage="iMoniker.ParseDisplayName (pbc, pmkToLeft, pszDisplayName, pchEaten, ppmkOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pszDisplayName" Type="System.String" />
        <Parameter Name="pchEaten" Type="System.Int32" RefType="out" />
        <Parameter Name="ppmkOut" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence au contexte de liaison à utiliser dans l'opération de liaison.</param>
        <param name="pmkToLeft">Référence au moniker qui a été construit à partir du nom complet jusqu'à ce point.</param>
        <param name="pszDisplayName">Référence à la chaîne contenant le reste du nom complet à analyser.</param>
        <param name="pchEaten">Lorsque cette méthode retourne une valeur, contient le nombre de caractères utilisés pendant l'analyse de <paramref name="pszDisplayName" />. Ce paramètre est passé sans être initialisé.</param>
        <param name="ppmkOut">Lorsque cette méthode retourne une valeur, contient une référence au moniker généré à partir de <paramref name="pszDisplayName" />. Ce paramètre est passé sans être initialisé.</param>
        <summary>Lit autant de caractères du nom complet spécifié que <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" /> peut interpréter et construit un moniker correspondant à la partie lue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::ParseDisplayName`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public void Reduce (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, int dwReduceHowFar, ref System.Runtime.InteropServices.ComTypes.IMoniker ppmkToLeft, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkReduced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reduce(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, int32 dwReduceHowFar, class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkToLeft, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkReduced) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reduce (pbc As IBindCtx, dwReduceHowFar As Integer, ByRef ppmkToLeft As IMoniker, ByRef ppmkReduced As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reduce(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, int dwReduceHowFar, System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkReduced);" />
      <MemberSignature Language="F#" Value="abstract member Reduce : System.Runtime.InteropServices.ComTypes.IBindCtx * int *  *  -&gt; unit" Usage="iMoniker.Reduce (pbc, dwReduceHowFar, ppmkToLeft, ppmkReduced)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="dwReduceHowFar" Type="System.Int32" />
        <Parameter Name="ppmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="ref" />
        <Parameter Name="ppmkReduced" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Référence à l'interface <see langword="IBindCtx" /> sur le contexte de liaison à utiliser dans cette opération de liaison.</param>
        <param name="dwReduceHowFar">Valeur spécifiant l'importance de la réduction du moniker actuel.</param>
        <param name="ppmkToLeft">Référence au moniker à gauche du moniker actuel.</param>
        <param name="ppmkReduced">Lorsque cette méthode retourne une valeur, contient une référence à la forme réduite de ce moniker, pouvant être <see langword="null" /> si une erreur se produit ou si le moniker actuel est réduit à une taille nulle. Ce paramètre est passé sans être initialisé.</param>
        <summary>Retourne un moniker réduit correspondant à un autre moniker qui se réfère au même objet que le moniker actuel, mais peut être lié avec une efficacité équivalente ou supérieure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::Reduce`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativePathTo">
      <MemberSignature Language="C#" Value="public void RelativePathTo (System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkRelPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativePathTo(class System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkRelPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RelativePathTo (pmkOther As IMoniker, ByRef ppmkRelPath As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RelativePathTo(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkRelPath);" />
      <MemberSignature Language="F#" Value="abstract member RelativePathTo : System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.RelativePathTo (pmkOther, ppmkRelPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppmkRelPath" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther">Référence au moniker vers lequel un chemin relatif doit être pris.</param>
        <param name="ppmkRelPath">Lorsque cette méthode retourne une valeur, contient une référence au moniker relatif. Ce paramètre est passé sans être initialisé.</param>
        <summary>Fournit un moniker qui, lorsqu'il est ajouté au moniker actuel (ou à un moniker de structure similaire), produit le moniker spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IMoniker::RelativePath`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Runtime.InteropServices.ComTypes.IStream pStm, bool fClearDirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Runtime.InteropServices.ComTypes.IStream pStm, bool fClearDirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (pStm As IStream, fClearDirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Runtime::InteropServices::ComTypes::IStream ^ pStm, bool fClearDirty);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Runtime.InteropServices.ComTypes.IStream * bool -&gt; unit" Usage="iMoniker.Save (pStm, fClearDirty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.ComTypes.IStream" />
        <Parameter Name="fClearDirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pStm">Flux dans lequel l'objet est enregistré.</param>
        <param name="fClearDirty">
          <see langword="true" /> pour désactiver l'indicateur modifié à la fin de l'enregistrement ; sinon, <see langword="false" /></param>
        <summary>Enregistre un objet dans le flux spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur `IPersistStream::Save`, consultez MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>