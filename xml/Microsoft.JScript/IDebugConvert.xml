<Type Name="IDebugConvert" FullName="Microsoft.JScript.IDebugConvert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffd47738ab2e6c1bce4be9ab01243cada83d34f6" />
    <Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51690246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDebugConvert" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugConvert" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugConvert" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugConvert" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugConvert" />
  <TypeSignature Language="F#" Value="type IDebugConvert = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AA51516D-C0F2-49fe-9D38-61D20456904C")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b5fc2-101">Définit un ensemble de méthodes utilitaires qui convertissent les données d'un type dans un autre type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5fc2-101">Defines a set of utility methods that convert data from one type to another.</span>
      </span>
      <span data-ttu-id="b5fc2-102">Inclut des méthodes qui convertissent les valeurs en objets <see cref="T:System.String" /> afin que le débogueur puisse les afficher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5fc2-102">Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.DebugConvert" />
    <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
  </Docs>
  <Members>
    <Member MemberName="BooleanToString">
      <MemberSignature Language="C#" Value="public string BooleanToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BooleanToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BooleanToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BooleanToString(bool value);" />
      <MemberSignature Language="F#" Value="abstract member BooleanToString : bool -&gt; string" Usage="iDebugConvert.BooleanToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-103">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-103">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-104">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Boolean" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-104">When implemented in a class, converts the specified <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-105">Chaîne littérale « true » ou « false ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-105">The literal string "true" or the literal string "false".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="ByteToString">
      <MemberSignature Language="C#" Value="public string ByteToString (byte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ByteToString(unsigned int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ByteToString (value As Byte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ByteToString(System::Byte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member ByteToString : byte * int -&gt; string" Usage="iDebugConvert.ByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-106">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-106">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-107">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-107">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-108">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-108">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-109">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Byte" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-109">When implemented in a class, converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-110">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-110">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToDateString">
      <MemberSignature Language="C#" Value="public string DoubleToDateString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToDateString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToDateString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DoubleToDateString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToDateString : double -&gt; string" Usage="iDebugConvert.DoubleToDateString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-111">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-111">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-112">En cas d'implémentation dans une classe, crée une représentation sous forme de chaîne du <see cref="T:System.Double" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-112">When implemented in a class, creates a string representation of the specified <see cref="T:System.Double" />.</span>
          </span>
          <span data-ttu-id="b5fc2-113">La représentation sous forme de chaîne contient le jour de la semaine, le mois, la date, l'heure, le fuseau horaire et l'année.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-113">The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-114">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-114">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToString">
      <MemberSignature Language="C#" Value="public string DoubleToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DoubleToString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToString : double -&gt; string" Usage="iDebugConvert.DoubleToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-115">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-115">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-116">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Double" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-116">When implemented in a class, converts the specified <see cref="T:System.Double" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-117">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-117">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.JScript.Vsa.IJSVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.JScript.Vsa.IJSVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IJSVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorMessageForHR(int hr, Microsoft::JScript::Vsa::IJSVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.JScript.Vsa.IJSVsaEngine -&gt; string" Usage="iDebugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.IJSVsaEngine" />
      </Parameters>
      <Docs>
        <param name="hr">
          <span data-ttu-id="b5fc2-118">Code d'erreur HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-118">The HRESULT error code.</span>
          </span>
        </param>
        <param name="engine">
          <span data-ttu-id="b5fc2-119">Référence au moteur de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-119">A reference to the scripting engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-120">En cas d'implémentation dans une classe, obtient un message d'erreur créé à partir du <see cref="P:System.Exception.HResult" /> spécifié et le <see cref="T:System.Globalization.CultureInfo" /> du <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-120">When implemented in a class, gets an error message that is created from the specified <see cref="P:System.Exception.HResult" /> and the <see cref="T:System.Globalization.CultureInfo" /> of the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-121">Chaîne localisée qui contient des informations sur l'erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-121">A localized string that contains information about the error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.Vsa.IVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.Vsa.IVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorMessageForHR(int hr, Microsoft::Vsa::IVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.Vsa.IVsaEngine -&gt; string" Usage="iDebugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" />
        <Parameter Name="engine" Type="Microsoft.Vsa.IVsaEngine" />
      </Parameters>
      <Docs>
        <param name="hr">To be added.</param>
        <param name="engine">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedCharObject">
      <MemberSignature Language="C#" Value="public object GetManagedCharObject (ushort i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedCharObject(unsigned int16 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedCharObject (i As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedCharObject(System::UInt16 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedCharObject : uint16 -&gt; obj" Usage="iDebugConvert.GetManagedCharObject i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b5fc2-122">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-122">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-123">En cas d'implémentation dans une classe, crée un objet managé qui a la valeur <see cref="T:System.Char" /> primitive spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-123">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-124">
            <paramref name="i" /> converti en <see cref="T:System.Char" />, puis en <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-124">
              <paramref name="i" /> converted to a <see cref="T:System.Char" /> and then an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedInt64Object (long i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedInt64Object(int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedInt64Object (i As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedInt64Object(long i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInt64Object : int64 -&gt; obj" Usage="iDebugConvert.GetManagedInt64Object i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b5fc2-125">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-125">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-126">En cas d'implémentation dans une classe, crée un objet managé qui a la valeur <see cref="T:System.Int64" /> primitive spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-126">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Int64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-127">
            <paramref name="i" /> converti en <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-127">
              <paramref name="i" /> converted to an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedObject">
      <MemberSignature Language="C#" Value="public object GetManagedObject (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedObject(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedObject (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedObject(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedObject : obj -&gt; obj" Usage="iDebugConvert.GetManagedObject value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-128">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-128">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-129">En cas d'implémentation dans une classe, crée un objet managé qui a la valeur primitive spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-129">When implemented in a class, creates a managed object that has the specified primitive value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-130">
            <paramref name="value" /> converti en un <see cref="T:System.Object" /> managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-130">
              <paramref name="value" /> converted to a managed <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedUInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedUInt64Object (ulong i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedUInt64Object(unsigned int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedUInt64Object (i As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedUInt64Object(System::UInt64 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUInt64Object : uint64 -&gt; obj" Usage="iDebugConvert.GetManagedUInt64Object i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="b5fc2-131">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-131">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-132">En cas d'implémentation dans une classe, crée un objet managé qui a la valeur <see cref="T:System.UInt64" /> primitive spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-132">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.UInt64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-133">
            <paramref name="i" /> converti en <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-133">
              <paramref name="i" /> converted to an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int16ToString">
      <MemberSignature Language="C#" Value="public string Int16ToString (short value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int16ToString(int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int16ToString (value As Short, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int16ToString(short value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int16ToString : int16 * int -&gt; string" Usage="iDebugConvert.Int16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-134">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-134">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-135">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-135">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-136">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-136">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-137">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Int16" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-137">When implemented in a class, converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-138">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-138">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int32ToString">
      <MemberSignature Language="C#" Value="public string Int32ToString (int value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int32ToString(int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int32ToString (value As Integer, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int32ToString(int value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int32ToString : int * int -&gt; string" Usage="iDebugConvert.Int32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-139">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-139">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-140">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-140">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-141">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-141">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-142">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Int32" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-142">When implemented in a class, converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-143">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-143">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int64ToString">
      <MemberSignature Language="C#" Value="public string Int64ToString (long value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int64ToString(int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int64ToString (value As Long, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int64ToString(long value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int64ToString : int64 * int -&gt; string" Usage="iDebugConvert.Int64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-144">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-144">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-145">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-145">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-146">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-146">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-147">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Int64" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-147">When implemented in a class, converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-148">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-148">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="RegexpToString">
      <MemberSignature Language="C#" Value="public string RegexpToString (string source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegexpToString(string source, bool ignoreCase, bool global, bool multiline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegexpToString (source As String, ignoreCase As Boolean, global As Boolean, multiline As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ RegexpToString(System::String ^ source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="F#" Value="abstract member RegexpToString : string * bool * bool * bool -&gt; string" Usage="iDebugConvert.RegexpToString (source, ignoreCase, global, multiline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="global" Type="System.Boolean" />
        <Parameter Name="multiline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="b5fc2-149">Modèle d’expression régulière à mettre en correspondance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-149">The regular expression pattern to match.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="b5fc2-150">
            <see langword="true" /> pour utiliser une mise en correspondance qui ne respecte pas la casse ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-150">
              <see langword="true" /> to use case-insensitive matching; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="global">
          <span data-ttu-id="b5fc2-151">
            <see langword="true" /> pour utiliser une correspondance globale ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-151">
              <see langword="true" /> to use a global match; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="multiline">
          <span data-ttu-id="b5fc2-152">
            <see langword="true" /> pour utiliser une correspondance multiligne ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-152">
              <see langword="true" /> to use a multiline match; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-153">En cas d'implémentation dans une classe, convertit les informations spécifiées sur l'expression régulière en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-153">When implemented in a class, converts the specified regular expression information to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-154">Représentation sous forme de chaîne des informations sur l'expression régulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-154">The string representation of the regular expression information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="SByteToString">
      <MemberSignature Language="C#" Value="public string SByteToString (sbyte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SByteToString(int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SByteToString (value As SByte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SByteToString(System::SByte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member SByteToString : sbyte * int -&gt; string" Usage="iDebugConvert.SByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-155">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-155">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-156">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-156">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-157">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-157">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-158">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.SByte" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-158">When implemented in a class, converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-159">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-159">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="SingleToString">
      <MemberSignature Language="C#" Value="public string SingleToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SingleToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SingleToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SingleToString(float value);" />
      <MemberSignature Language="F#" Value="abstract member SingleToString : single -&gt; string" Usage="iDebugConvert.SingleToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-160">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-160">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-161">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.Single" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-161">When implemented in a class, converts the specified <see cref="T:System.Single" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-162">Représentation sous forme de chaîne de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-162">The string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="StringToPrintable">
      <MemberSignature Language="C#" Value="public string StringToPrintable (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StringToPrintable(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StringToPrintable (source As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ StringToPrintable(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StringToPrintable : string -&gt; string" Usage="iDebugConvert.StringToPrintable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="b5fc2-163">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-163">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-164">En cas d'implémentation dans une classe, convertit le <see cref="T:System.String" /> spécifié en un <see cref="T:System.String" /> qui contient des caractères d'échappement pour les caractères non imprimables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-164">When implemented in a class, converts the specified <see cref="T:System.String" /> to a <see cref="T:System.String" /> that contains escape characters for non-printable characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-165">Représentation sous forme de chaîne de <paramref name="source" /> qui contient des caractères d'échappement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-165">The string representation of <paramref name="source" /> that contains escape characters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="ToPrimitive">
      <MemberSignature Language="C#" Value="public object ToPrimitive (object value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ToPrimitive(object value, valuetype System.TypeCode typeCode, bool truncationPermitted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ToPrimitive(System::Object ^ value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="F#" Value="abstract member ToPrimitive : obj * TypeCode * bool -&gt; obj" Usage="iDebugConvert.ToPrimitive (value, typeCode, truncationPermitted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="truncationPermitted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-166">Valeur à convertir dans un nouveau type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-166">The value to convert to a new type.</span>
          </span>
        </param>
        <param name="typeCode">
          <span data-ttu-id="b5fc2-167">Type dans lequel convertir <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-167">The type to convert <paramref name="value" /> to.</span>
          </span>
        </param>
        <param name="truncationPermitted">
          <span data-ttu-id="b5fc2-168">
            <see langword="true" /> pour autoriser la perte de données ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-168">
              <see langword="true" /> to allow data loss; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-169">En cas d'implémentation dans une classe, convertit la valeur spécifiée dans le <see cref="T:System.TypeCode" /> spécifié, en autorisant éventuellement la perte de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-169">When implemented in a class, converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-170">
            <paramref name="value" /> converti en type <paramref name="typeCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-170">
              <paramref name="value" /> converted to the <paramref name="typeCode" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt16ToString">
      <MemberSignature Language="C#" Value="public string UInt16ToString (ushort value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt16ToString(unsigned int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt16ToString (value As UShort, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt16ToString(System::UInt16 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt16ToString : uint16 * int -&gt; string" Usage="iDebugConvert.UInt16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-171">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-171">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-172">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-172">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-173">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-173">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-174">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.UInt16" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-174">When implemented in a class, converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-175">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-175">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt32ToString">
      <MemberSignature Language="C#" Value="public string UInt32ToString (uint value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt32ToString(unsigned int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt32ToString (value As UInteger, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt32ToString(System::UInt32 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt32ToString : uint32 * int -&gt; string" Usage="iDebugConvert.UInt32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-176">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-176">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-177">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-177">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-178">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-178">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-179">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.UInt32" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-179">When implemented in a class, converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-180">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-180">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt64ToString">
      <MemberSignature Language="C#" Value="public string UInt64ToString (ulong value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt64ToString(unsigned int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt64ToString (value As ULong, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt64ToString(System::UInt64 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt64ToString : uint64 * int -&gt; string" Usage="iDebugConvert.UInt64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5fc2-181">Valeur à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-181">The value to convert.</span>
          </span>
        </param>
        <param name="radix">
          <span data-ttu-id="b5fc2-182">Base de la valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-182">The base of the return value.</span>
          </span>
          <span data-ttu-id="b5fc2-183">La base doit être 2, 8, 10 ou 16.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-183">The base must be 2, 8, 10, or 16.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5fc2-184">En cas d'implémentation dans une classe, convertit la valeur <see cref="T:System.UInt64" /> spécifiée en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-184">When implemented in a class, converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5fc2-185">Représentation sous forme de chaîne de <paramref name="value" /> en base <paramref name="radix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5fc2-185">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
  </Members>
</Type>