<Type Name="GlobalScope" FullName="Microsoft.JScript.GlobalScope">
  <TypeSignature Language="C#" Value="public class GlobalScope : Microsoft.JScript.ActivationObject, System.Reflection.IReflect, System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlobalScope extends Microsoft.JScript.ActivationObject implements class System.Reflection.IReflect, class System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.GlobalScope" />
  <TypeSignature Language="VB.NET" Value="Public Class GlobalScope&#xA;Inherits ActivationObject&#xA;Implements IExpando, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlobalScope : Microsoft::JScript::ActivationObject, System::Reflection::IReflect, System::Runtime::InteropServices::Expando::IExpando" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ActivationObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.Expando.IExpando</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f611-101">Représente la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-101">Represents the global scope.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.IActivationObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlobalScope (Microsoft.JScript.GlobalScope parent, Microsoft.JScript.Vsa.VsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.JScript.GlobalScope parent, class Microsoft.JScript.Vsa.VsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.#ctor(Microsoft.JScript.GlobalScope,Microsoft.JScript.Vsa.VsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As GlobalScope, engine As VsaEngine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlobalScope(Microsoft::JScript::GlobalScope ^ parent, Microsoft::JScript::Vsa::VsaEngine ^ engine);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Microsoft.JScript.GlobalScope" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="9f611-102">Référence à l'objet parent.</span><span class="sxs-lookup"><span data-stu-id="9f611-102">A reference to the parent object.</span></span></param>
        <param name="engine"><span data-ttu-id="9f611-103">Référence au moteur de script.</span><span class="sxs-lookup"><span data-stu-id="9f611-103">A reference to the scripting engine.</span></span></param>
        <summary><span data-ttu-id="9f611-104">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.JScript.GlobalScope" />.</span><span class="sxs-lookup"><span data-stu-id="9f611-104">Initializes a new instance of the <see cref="T:Microsoft.JScript.GlobalScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="AddField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo AddField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo AddField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.AddField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ AddField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9f611-105">Nom du champ à ajouter.</span><span class="sxs-lookup"><span data-stu-id="9f611-105">The name of the field to add.</span></span></param>
        <summary><span data-ttu-id="9f611-106">Ajoute le champ spécifié à la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-106">Adds the specified field to the global scope.</span></span></summary>
        <returns><span data-ttu-id="9f611-107">Nouveau champ, s'il est ajouté avec succès.</span><span class="sxs-lookup"><span data-stu-id="9f611-107">The new field, if it is successfully added.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public override object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetDefaultThisObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f611-108">Obtient la portée par défaut actuelle, qui correspond à l'objet contenu d'une portée de l'instruction <see langword="with" /> ou à la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-108">Gets the current default scope, which is either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="9f611-109">Cet objet.</span><span class="sxs-lookup"><span data-stu-id="9f611-109">This object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9f611-110">Nom du champ à rechercher.</span><span class="sxs-lookup"><span data-stu-id="9f611-110">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="9f611-111">Niveau lexical à rechercher.</span><span class="sxs-lookup"><span data-stu-id="9f611-111">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="9f611-112">Obtient un champ qui porte le nom spécifié en parcourant la hiérarchie de portée.</span><span class="sxs-lookup"><span data-stu-id="9f611-112">Gets a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="9f611-113">Cette méthode effectue la recherche uniquement dans la portée qui est spécifiée au niveau lexical.</span><span class="sxs-lookup"><span data-stu-id="9f611-113">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="9f611-114">Champ qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="9f611-114">A field that has the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9f611-115">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="9f611-115">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="9f611-116">Obtient un tableau des objets <see cref="T:System.Reflection.FieldInfo" /> qui correspondent à tous les champs de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-116">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the global scope.</span></span></summary>
        <returns><span data-ttu-id="9f611-117">Tableau d'objets qui contient tous les champs de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-117">An array of objects that contains all fields of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public override Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f611-118">Obtient la portée globale en retournant une référence à cet objet.</span><span class="sxs-lookup"><span data-stu-id="9f611-118">Gets the global scope by returning a reference to this object.</span></span></summary>
        <returns><span data-ttu-id="9f611-119">Cet objet.</span><span class="sxs-lookup"><span data-stu-id="9f611-119">This object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9f611-120">Nom du champ.</span><span class="sxs-lookup"><span data-stu-id="9f611-120">The name of the field.</span></span></param>
        <summary><span data-ttu-id="9f611-121">Obtient la déclaration locale d'un champ qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="9f611-121">Gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="9f611-122">Cela est utilisé au moment de la compilation pour la vérification des erreurs.</span><span class="sxs-lookup"><span data-stu-id="9f611-122">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="9f611-123">Déclaration locale du champ.</span><span class="sxs-lookup"><span data-stu-id="9f611-123">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9f611-124">Nom du membre à rechercher.</span><span class="sxs-lookup"><span data-stu-id="9f611-124">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="9f611-125">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="9f611-125">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="9f611-126">Obtient un tableau des objets <see cref="T:System.Reflection.MemberInfo" /> qui correspondent à tous les membres qui correspondent à un nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="9f611-126">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="9f611-127">Tableau des objets qui correspondent à l'argument <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="9f611-127">An array of objects that match the <paramref name="name" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9f611-128">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="9f611-128">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="9f611-129">Obtient un tableau des objets <see cref="T:System.Reflection.MemberInfo" /> qui correspondent à tous les membres de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-129">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the global scope.</span></span></summary>
        <returns><span data-ttu-id="9f611-130">Tableau d'objets qui contient tous les membres de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-130">An array of objects that contains all members of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9f611-131">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="9f611-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="9f611-132">Obtient un tableau des objets <see cref="T:System.Reflection.MethodInfo" /> qui correspondent à toutes les méthodes de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-132">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the global scope.</span></span></summary>
        <returns><span data-ttu-id="9f611-133">Tableau d'objets qui contient toutes les méthodes de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-133">An array of objects that contains all methods of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="9f611-134">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="9f611-134">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="9f611-135">Obtient un tableau des objets <see cref="T:System.Reflection.PropertyInfo" /> qui correspondent à toutes les propriétés de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-135">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the global scope.</span></span></summary>
        <returns><span data-ttu-id="9f611-136">Tableau d'objets qui contient toutes les propriétés de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-136">An array of objects that contains all properties of the global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IExpando.AddMethod (string name, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Function AddMethod (name As String, method As Delegate) As MethodInfo Implements IExpando.AddMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddMethod(System::String ^ name, Delegate ^ method) = System::Runtime::InteropServices::Expando::IExpando::AddMethod;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9f611-137">Nom de la méthode à ajouter.</span><span class="sxs-lookup"><span data-stu-id="9f611-137">The name of the method to add.</span></span></param>
        <param name="method"><span data-ttu-id="9f611-138">Délégué de la méthode.</span><span class="sxs-lookup"><span data-stu-id="9f611-138">The delegate to the method.</span></span></param>
        <summary><span data-ttu-id="9f611-139">Ajoute la méthode spécifiée à la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-139">Adds the specified method to the global scope.</span></span> <span data-ttu-id="9f611-140">Cette méthode n'est pas implémentée dans JScript.</span><span class="sxs-lookup"><span data-stu-id="9f611-140">This method is not implemented in JScript.</span></span></summary>
        <returns><span data-ttu-id="9f611-141">Valeur null dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="9f611-141">null in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IExpando.AddProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddProperty (name As String) As PropertyInfo Implements IExpando.AddProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddProperty(System::String ^ name) = System::Runtime::InteropServices::Expando::IExpando::AddProperty;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9f611-142">Nom de la propriété à ajouter.</span><span class="sxs-lookup"><span data-stu-id="9f611-142">The name of the property to add.</span></span></param>
        <summary><span data-ttu-id="9f611-143">Ajoute la propriété spécifiée à la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-143">Adds the specified property to the global scope.</span></span> <span data-ttu-id="9f611-144">Cette méthode n'est pas implémentée dans JScript.</span><span class="sxs-lookup"><span data-stu-id="9f611-144">This method is not implemented in JScript.</span></span></summary>
        <returns><span data-ttu-id="9f611-145">Valeur null dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="9f611-145">null in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.RemoveMember">
      <MemberSignature Language="C#" Value="void IExpando.RemoveMember (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveMember (m As MemberInfo) Implements IExpando.RemoveMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(System::Reflection::MemberInfo ^ m) = System::Runtime::InteropServices::Expando::IExpando::RemoveMember;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="9f611-146">Nom du membre à supprimer.</span><span class="sxs-lookup"><span data-stu-id="9f611-146">The name of the member to remove.</span></span></param>
        <summary><span data-ttu-id="9f611-147">Supprime le membre spécifié de la portée globale.</span><span class="sxs-lookup"><span data-stu-id="9f611-147">Removes the specified member from the global scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
  </Members>
</Type>