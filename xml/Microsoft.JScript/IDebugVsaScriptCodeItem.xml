<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc35a2bcccfdc73e32fef9ba38b81d4cf64ac29e" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53448044" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc257-101">Définit des méthodes qui évaluent des expressions et analysent des chaînes.</span><span class="sxs-lookup"><span data-stu-id="dc257-101">Defines methods that evaluate expressions and parse strings.</span></span> <span data-ttu-id="dc257-102">Cette interface est généralement implémentée par un objet qui représente un bloc de code et appelée par un débogueur.</span><span class="sxs-lookup"><span data-stu-id="dc257-102">This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</span></span> <span data-ttu-id="dc257-103">Cette interface fournit des fonctionnalités supplémentaires requises par un hôte IActiveScript.</span><span class="sxs-lookup"><span data-stu-id="dc257-103">This interface provides extra functionality that is needed by an IActiveScript host.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc257-104">En cas d'implémentation dans une classe, évalue le bloc, l'expression ou l'instruction représenté par l'élément de code et retourne la valeur.</span><span class="sxs-lookup"><span data-stu-id="dc257-104">When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</span></span> <span data-ttu-id="dc257-105">Cette méthode est généralement appelée par un débogueur qui doit évaluer une expression (dans une fenêtre Espion, par exemple).</span><span class="sxs-lookup"><span data-stu-id="dc257-105">It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</span></span> <span data-ttu-id="dc257-106">Pour les expressions, la valeur est le résultat de l'expression.</span><span class="sxs-lookup"><span data-stu-id="dc257-106">For expressions, the value is the result of the expression.</span></span> <span data-ttu-id="dc257-107">Pour les blocs et les instructions, l'expression résultante est la dernière expression calculée par le bloc ou l'instruction.</span><span class="sxs-lookup"><span data-stu-id="dc257-107">For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</span></span></summary>
        <returns><span data-ttu-id="dc257-108">Valeur qui représente l’évaluation de l’instruction, de l’expression ou du bloc.</span><span class="sxs-lookup"><span data-stu-id="dc257-108">A value that represents the evaluation of the statement, expression, or block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc257-109">Notez que le <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> méthode est fonctionnellement identique à la <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc257-109">Note that the <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> method is functionally identical to the <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> method.</span></span> <span data-ttu-id="dc257-110">Seuls les attributs de marshaling diffèrent.</span><span class="sxs-lookup"><span data-stu-id="dc257-110">Only the marshaling attributes differ.</span></span> <span data-ttu-id="dc257-111">Cette version de l’interface permet à un débogueur non managé d’obtenir la valeur de retour comme un `IUnknown` pointeur au lieu d’un `VARIANT`.</span><span class="sxs-lookup"><span data-stu-id="dc257-111">This version of the interface allows an unmanaged debugger to obtain the return value as an `IUnknown` pointer rather than a `VARIANT`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="dc257-112">Une chaîne de point d'arrêt nommée de forme correcte qui donne une fonction, une liste d'arguments facultative et l'offset IL facultatif.</span><span class="sxs-lookup"><span data-stu-id="dc257-112">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</span></span></param>
        <param name="functionName"><span data-ttu-id="dc257-113">Paramètre out qui retourne le nom de la fonction analysée dans la chaîne d'entrée, ou la chaîne vide si la chaîne d'entrée n'est pas bien formée.</span><span class="sxs-lookup"><span data-stu-id="dc257-113">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</span></span></param>
        <param name="nargs"><span data-ttu-id="dc257-114">Paramètre out qui retourne le nombre d'arguments dans la liste d'arguments facultative.</span><span class="sxs-lookup"><span data-stu-id="dc257-114">Out parameter returning the number of arguments in the optional argument list.</span></span> <span data-ttu-id="dc257-115">Retourne zéro s'il n'y a aucune liste d'argument ou si la chaîne n'est pas bien formée.</span><span class="sxs-lookup"><span data-stu-id="dc257-115">Returns zero if there is no arguments list or if the string is not well formed.</span></span></param>
        <param name="arguments"><span data-ttu-id="dc257-116">Paramètre out qui retourne une liste séparée par espace des noms des types de tous les arguments dans la liste des arguments, ou une chaîne vide si la liste des arguments est manquante ou la chaîne d'entrée n'a pas bien été formée.</span><span class="sxs-lookup"><span data-stu-id="dc257-116">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</span></span></param>
        <param name="returnType"><span data-ttu-id="dc257-117">Paramètre out qui retourne une chaîne qui contient le type de retour de la fonction nommée dans l'entrée, ou la chaîne vide si le type de retour est manquant ou la chaîne d'entrée n'a pas bien été formée.</span><span class="sxs-lookup"><span data-stu-id="dc257-117">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</span></span></param>
        <param name="offset"><span data-ttu-id="dc257-118">Entier long non signé qui donne l'offset IL depuis la chaîne d'entrée, ou zéro s'il n'y a aucun offset IL ou la chaîne n'a pas bien été formée.</span><span class="sxs-lookup"><span data-stu-id="dc257-118">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</span></span></param>
        <summary><span data-ttu-id="dc257-119">En cas d'implémentation dans une classe, analyse des chaînes et retourne les informations analysées.</span><span class="sxs-lookup"><span data-stu-id="dc257-119">When implemented in a class, parses strings and returns the parsed-out information.</span></span> <span data-ttu-id="dc257-120">Cette méthode est généralement appelée par un débogueur qui doit analyser des informations sur un point d'arrêt représenté comme <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="dc257-120">This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <see langword="string" />.</span></span> <span data-ttu-id="dc257-121">Le débogueur peut avoir un point d’arrêt entré par l’utilisateur au format *nomfonction-arguments-offsetIL*.</span><span class="sxs-lookup"><span data-stu-id="dc257-121">The debugger might have a breakpoint typed in by the user in the form *functionname-arguments-ILoffset*.</span></span> <span data-ttu-id="dc257-122">Une chaîne de point d’arrêt nommée peut avoir un format complexe, par exemple, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span><span class="sxs-lookup"><span data-stu-id="dc257-122">A named breakpoint string can have a complex format, for example, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span></span> <span data-ttu-id="dc257-123">La liste de paramètres est facultative, tout comme l’offset IL.</span><span class="sxs-lookup"><span data-stu-id="dc257-123">The parameter list is optional, as is the IL offset.</span></span></summary>
        <returns><span data-ttu-id="dc257-124"><see langword="true" /> si le point d’arrêt nommé est analysé correctement ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc257-124"><see langword="true" /> if the named breakpoint is successfully parsed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>