<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDebugVsaScriptCodeItem.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59cadb871fc370eb4669678a05ac449e2e9ec0c89.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cadb871fc370eb4669678a05ac449e2e9ec0c89</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
          <source>Defines methods that evaluate expressions and parse strings.</source>
          <target state="translated">Définit des méthodes qui évaluent des expressions et analysent des chaînes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
          <source>This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</source>
          <target state="translated">Cette interface est généralement implémentée par un objet qui représente un bloc de code et appelée par un débogueur.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:Microsoft.JScript.IDebugVsaScriptCodeItem">
          <source>This interface provides extra functionality that is needed by an IActiveScript host.</source>
          <target state="translated">Cette interface fournit des fonctionnalités supplémentaires requises par un hôte IActiveScript.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</source>
          <target state="translated">En cas d'implémentation dans une classe, évalue le bloc, l'expression ou l'instruction représenté par l'élément de code et retourne la valeur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</source>
          <target state="translated">Cette méthode est généralement appelée par un débogueur qui doit évaluer une expression (dans une fenêtre Espion, par exemple).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>For expressions, the value is the result of the expression.</source>
          <target state="translated">Pour les expressions, la valeur est le résultat de l'expression.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</source>
          <target state="translated">Pour les blocs et les instructions, l'expression résultante est la dernière expression calculée par le bloc ou l'instruction.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>Returns a value that represents the evaluation of the statement, expression, or block.</source>
          <target state="translated">Retourne une valeur qui représente l'évaluation de l'instruction, de l'expression ou du bloc.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>Note that the <ph id="ph1">&lt;xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A&gt;</ph> method is functionally identical to the <ph id="ph2">&lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;</ph> method.</source>
          <target state="translated">Notez que la <ph id="ph1">&lt;xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A&gt;</ph> méthode est fonctionnellement identique à la <ph id="ph2">&lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>Only the marshaling attributes differ.</source>
          <target state="translated">Seuls les attributs de marshaling diffèrent.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate">
          <source>This version of the interface allows an unmanaged debugger to obtain the return value as an <ph id="ph1">`IUnknown`</ph> pointer rather than a <ph id="ph2">`VARIANT`</ph>.</source>
          <target state="translated">Cette version de l’interface permet à un débogueur non managé obtenir la valeur de retour comme un <ph id="ph1">`IUnknown`</ph> pointeur plutôt qu’un <ph id="ph2">`VARIANT`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</source>
          <target state="translated">Une chaîne de point d'arrêt nommée de forme correcte qui donne une fonction, une liste d'arguments facultative et l'offset IL facultatif.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</source>
          <target state="translated">Paramètre out qui retourne le nom de la fonction analysée dans la chaîne d'entrée, ou la chaîne vide si la chaîne d'entrée n'est pas bien formée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning the number of arguments in the optional argument list.</source>
          <target state="translated">Paramètre out qui retourne le nombre d'arguments dans la liste d'arguments facultative.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Returns zero if there is no arguments list or if the string is not well formed.</source>
          <target state="translated">Retourne zéro s'il n'y a aucune liste d'argument ou si la chaîne n'est pas bien formée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</source>
          <target state="translated">Paramètre out qui retourne une liste séparée par espace des noms des types de tous les arguments dans la liste des arguments, ou une chaîne vide si la liste des arguments est manquante ou la chaîne d'entrée n'a pas bien été formée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</source>
          <target state="translated">Paramètre out qui retourne une chaîne qui contient le type de retour de la fonction nommée dans l'entrée, ou la chaîne vide si le type de retour est manquant ou la chaîne d'entrée n'a pas bien été formée.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</source>
          <target state="translated">Entier long non signé qui donne l'offset IL depuis la chaîne d'entrée, ou zéro s'il n'y a aucun offset IL ou la chaîne n'a pas bien été formée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>When implemented in a class, parses strings and returns the parsed-out information.</source>
          <target state="translated">En cas d'implémentation dans une classe, analyse des chaînes et retourne les informations analysées.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <ph id="ph1">&lt;see langword="string" /&gt;</ph>.</source>
          <target state="translated">Cette méthode est généralement appelée par un débogueur qui doit analyser des informations sur un point d'arrêt représenté comme <ph id="ph1">&lt;see langword="string" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>The debugger might have a breakpoint typed in by the user in the form <bpt id="p1">*</bpt>functionname-arguments-ILoffset<ept id="p1">*</ept>.</source>
          <target state="translated">Le débogueur peut avoir un point d’arrêt entré par l’utilisateur au format <bpt id="p1">*</bpt>nomfonction-arguments-offsetIL<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>A named breakpoint string can have a complex format, for example, <bpt id="p1">&lt;c&gt;</bpt>F.B(C.D[], int, arg : double ) : C.Abc + 123.<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated">Une chaîne de point d’arrêt nommée peut avoir un format complexe, par exemple, <bpt id="p1">&lt;c&gt;</bpt>F.B(C.D[], int, arg : double ) : C.Abc + 123<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>The parameter list is optional, as is the IL offset.</source>
          <target state="translated">La liste de paramètres est facultative, tout comme l’offset IL.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the named breakpoint is successfully parsed, <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point d'arrêt nommé est analysé correctement, <ph id="ph2">&lt;see langword="false" /&gt;</ph> sinon.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>