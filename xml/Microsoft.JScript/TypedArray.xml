<Type Name="TypedArray" FullName="Microsoft.JScript.TypedArray">
  <TypeSignature Language="C#" Value="public sealed class TypedArray : System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypedArray extends System.Object implements class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypedArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypedArray&#xA;Implements IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypedArray sealed : System::Reflection::IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b2cc5-101">Représente une référence réflexible à la classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-101">Represents a reflectable reference to the <see cref="T:System.Array" /> class.</span></span> <span data-ttu-id="b2cc5-102">Cette classe stocke le type d'élément d'un tableau typé, mais ne stocke pas de données.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-102">This class stores the element type of a typed array, but this class does not store data.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Reflection.IReflect" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypedArray (System.Reflection.IReflect elementType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.IReflect elementType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.#ctor(System.Reflection.IReflect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementType As IReflect, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypedArray(System::Reflection::IReflect ^ elementType, int rank);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementType" Type="System.Reflection.IReflect" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="b2cc5-103">Type d'élément d'un tableau typé.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-103">The element type of a typed array.</span></span></param>
        <param name="rank"><span data-ttu-id="b2cc5-104">Rang (nombre de dimensions) du tableau.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-104">The rank (number of dimensions) of the array.</span></span></param>
        <summary><span data-ttu-id="b2cc5-105">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.JScript.TypedArray" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-105">Initializes a new instance of the <see cref="T:Microsoft.JScript.TypedArray" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b2cc5-106">Tableau typé à comparer avec le tableau typé actuel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-106">The typed array to compare with the current typed array.</span></span></param>
        <summary><span data-ttu-id="b2cc5-107">Détermine si le tableau typé spécifié a le même type d'élément et le même rang que le tableau typé actuel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-107">Determines whether the specified typed array has the same element type and rank as the current typed array.</span></span></summary>
        <returns>
          <span data-ttu-id="b2cc5-108"><see langword="true" /> si <paramref name="obj" /> a le même type d'élément et le même rang que le tableau typé actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-108"><see langword="true" /> if <paramref name="obj" /> has the same element type and rank as the current typed array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-109">Nom du champ à obtenir.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-109">The name of the field to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-110">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-110">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-111">Obtient un champ du type de classe <see cref="T:System.Array" /> qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-111">Gets a field of the <see cref="T:System.Array" /> class type that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-112">Champ qui porte le nom spécifié, si cette recherche aboutit ; sinon, null.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-112">A field that has the specified name, if one is found; otherwise, null.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-113">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-113">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-114">Obtient un tableau des objets <see cref="T:System.Reflection.FieldInfo" /> qui correspondent à tous les champs du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-114">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the <see cref="T:System.Array" /> class type.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-115">Tableau d'objets qui contient tous les champs du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-115">An array of objects that contains all fields of the <see cref="T:System.Array" /> class type.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2cc5-116">Sert de fonction de hachage pour le type d'élément du tableau typé.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-116">Serves as a hash function for the element type of the typed array.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-117">Code de hachage pour l'objet actuel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-117">A hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-118">Nom du membre à rechercher.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-118">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-119">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-119">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-120">Obtient un tableau des objets <see cref="T:System.Reflection.MemberInfo" /> qui correspondent à tous les membres du type de classe <see cref="T:System.Array" /> correspondant à un nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-120">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the <see cref="T:System.Array" /> class type that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-121">Tableau des objets qui correspondent à l'argument <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-121">An array of objects that match the <paramref name="name" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-122">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-122">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-123">Obtient un tableau des objets <see cref="T:System.Reflection.MemberInfo" /> qui correspondent à tous les membres du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-123">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the <see cref="T:System.Array" /> class type.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-124">Tableau d'objets qui contient tous les membres du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-124">An array of objects that contains all members of the <see cref="T:System.Array" /> class type.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2cc5-125">Obtient une méthode du type de classe <see cref="T:System.Array" /> qui porte un nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-125">Gets a method of the <see cref="T:System.Array" /> class type that has a specified name.</span></span></summary>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-126">Nom de la méthode à obtenir.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-126">The name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-127">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-127">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-128">Obtient une méthode du type de classe <see cref="T:System.Array" /> qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-128">Gets a method of the <see cref="T:System.Array" /> class type that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-129">Méthode qui porte le nom spécifié, si cette recherche aboutit ; sinon, null.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-129">A method that has the specified name, if one is found; otherwise, null.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-130">Nom de la méthode à obtenir.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-130">The name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-131">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <param name="binder"><span data-ttu-id="b2cc5-132">Objet qui effectue une conversion de type d'argument réel en type d'argument formel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-132">An object that performs type conversion from actual argument type to formal argument type.</span></span></param>
        <param name="types"><span data-ttu-id="b2cc5-133">Types de paramètres utilisés pour rechercher une méthode correspondante.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-133">The parameter types that are used to locate a matching method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="b2cc5-134">Tableau de modificateurs de paramètres permettant des liaisons avec des signatures de paramètres dans lesquelles les types ont été modifiés.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-134">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="b2cc5-135">Obtient une méthode du type de classe <see cref="T:System.Array" /> qui porte le nom spécifié à l'aide des critères de sélection indiqués.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-135">Gets a method of the <see cref="T:System.Array" /> class type that has the specified name by using the specified selection criteria.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-136">Méthode qui porte le nom spécifié, si cette recherche aboutit ; sinon, null.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-136">A method that has the specified name, if one is found; otherwise, null.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-137">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-137">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-138">Obtient un tableau des objets <see cref="T:System.Reflection.MethodInfo" /> qui correspondent à toutes les méthodes du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-138">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the <see cref="T:System.Array" /> class type.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-139">Tableau d'objets qui contient toutes les méthodes du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-139">An array of objects that contains all methods of the <see cref="T:System.Array" /> class type.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-140">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-140">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-141">Obtient un tableau des objets <see cref="T:System.Reflection.PropertyInfo" /> qui correspondent à toutes les propriétés du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-141">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the <see cref="T:System.Array" /> class type.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-142">Tableau d'objets qui contient toutes les propriétés du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-142">An array of objects that contains all properties of the <see cref="T:System.Array" /> class type.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2cc5-143">Obtient une propriété du type de classe <see cref="T:System.Array" /> qui porte un nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-143">Gets a property of the <see cref="T:System.Array" /> class type that has a specified name.</span></span></summary>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-144">Nom de la propriété à obtenir.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-144">The name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-145">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-145">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="b2cc5-146">Obtient une propriété du type de classe <see cref="T:System.Array" /> qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-146">Gets a property of the <see cref="T:System.Array" /> class type that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-147">Propriété qui porte le nom spécifié, si la recherche aboutit ; sinon, null.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-147">A property that has the specified name, if one is found; otherwise, null.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-148">Nom de la propriété à obtenir.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-148">The name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="b2cc5-149">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-149">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <param name="binder"><span data-ttu-id="b2cc5-150">Objet qui effectue une conversion de type d'argument réel en type d'argument formel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-150">An object that performs type conversion from actual argument type to formal argument type.</span></span></param>
        <param name="returnType"><span data-ttu-id="b2cc5-151">Type de la valeur de retour que la propriété doit avoir.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-151">The type of the return value that the property must have.</span></span></param>
        <param name="types"><span data-ttu-id="b2cc5-152">Types d'index de la propriété recherchée.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-152">The index types of the property being searched for.</span></span> <span data-ttu-id="b2cc5-153">Utilisé pour les propriétés d'index, telles que l'indexeur d'une classe.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-153">Used for index properties, such as the indexer for a class.</span></span></param>
        <param name="modifiers"><span data-ttu-id="b2cc5-154">Tableau de modificateurs de paramètres permettant des liaisons avec des signatures de paramètres dans lesquelles les types ont été modifiés.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-154">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="b2cc5-155">Obtient une propriété du type de classe <see cref="T:System.Array" /> qui porte le nom spécifié à l'aide des critères de sélection indiqués.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-155">Gets a property of the <see cref="T:System.Array" /> class type that has the specified name by using the specified selection criteria.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-156">Propriété qui porte le nom spécifié, si la recherche aboutit ; sinon, null.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-156">A property that has the specified name, if one is found; otherwise, null.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags flags, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo locale, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags flags, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo locale, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags flags, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ locale, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="locale" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2cc5-157">Nom du membre à appeler.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-157">The name of the member to invoke.</span></span></param>
        <param name="flags"><span data-ttu-id="b2cc5-158">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-158">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <param name="binder"><span data-ttu-id="b2cc5-159">Objet qui effectue une conversion de type d'argument réel en type d'argument formel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-159">An object that performs type conversion from actual argument type to formal argument type.</span></span></param>
        <param name="target"><span data-ttu-id="b2cc5-160">Objet sur lequel appeler le membre.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-160">The object on which to invoke the member.</span></span> <span data-ttu-id="b2cc5-161">Il doit s'agir de l'objet de script actuel.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-161">This must be the current script object.</span></span></param>
        <param name="args"><span data-ttu-id="b2cc5-162">Tableau d'objets qui contient le nombre, l'ordre et le type des paramètres du membre à appeler.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-162">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="b2cc5-163">En l'absence de paramètres, ce tableau est vide.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-163">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="b2cc5-164">Tableau qui a la même longueur que le paramètre <c>args</c>.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-164">An array that has the same length as the <c>args</c> parameter.</span></span> <span data-ttu-id="b2cc5-165">Il représente les attributs d'argument du membre appelé dans les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-165">It represents the invoked member's argument attributes in the metadata.</span></span></param>
        <param name="locale"><span data-ttu-id="b2cc5-166">Fournit des informations sur une culture ou des paramètres régionaux spécifiques.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-166">Provides information about a specific culture or locale.</span></span> <span data-ttu-id="b2cc5-167">Sert à mettre correctement en forme les nombres, les dates et les chaînes.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-167">Used to format numbers, dates, and strings correctly.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="b2cc5-168">Tableau de paramètres.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-168">An array of parameters.</span></span></param>
        <summary><span data-ttu-id="b2cc5-169">Appelle le membre spécifié du type d'élément ou du type de classe <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-169">Invokes the specified member of the element type or the <see cref="T:System.Array" /> class type.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-170">Valeur de retour de l'appel au membre.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-170">The return value of the call to the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2cc5-171">Cette méthode peut utiliser la liaison tardive pour appeler le membre sur le type d’élément du tableau.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-171">This method can use late binding to invoke the member on the element type of the array.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypedArray.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2cc5-172">Retourne une chaîne qui contient le type d'élément du tableau typé et les informations relatives au rang.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-172">Returns a string that contains the element type of the typed array and the rank information.</span></span></summary>
        <returns><span data-ttu-id="b2cc5-173">Chaîne qui contient le type d'élément du tableau typé et les informations relatives au rang.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-173">A string that contains the element type of the typed array and the rank information.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.TypedArray.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2cc5-174">Obtient le type de l'objet <see cref="T:Microsoft.JScript.TypedArray" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-174">Gets the type of the <see cref="T:Microsoft.JScript.TypedArray" /> object.</span></span></summary>
        <value><span data-ttu-id="b2cc5-175">Type de l'objet <see cref="T:Microsoft.JScript.TypedArray" />.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-175">The type of the <see cref="T:Microsoft.JScript.TypedArray" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2cc5-176">Cette propriété obtient le type de la <xref:Microsoft.JScript.TypedArray> de l’objet lui-même, pas le type d’élément du tableau typé.</span><span class="sxs-lookup"><span data-stu-id="b2cc5-176">This property gets the type of the <xref:Microsoft.JScript.TypedArray> object itself, not the element type of the typed array.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>