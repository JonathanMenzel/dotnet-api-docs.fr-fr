<Type Name="ActivationObject" FullName="Microsoft.JScript.ActivationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="821fa6dbe96de0e21f42b7dd151fa3e0e522fe1f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55396401" /></Metadata><TypeSignature Language="C#" Value="public abstract class ActivationObject : Microsoft.JScript.ScriptObject, Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ActivationObject extends Microsoft.JScript.ScriptObject implements class Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.ActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ActivationObject&#xA;Inherits ScriptObject&#xA;Implements IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationObject abstract : Microsoft::JScript::ScriptObject, Microsoft::JScript::IActivationObject" />
  <TypeSignature Language="F#" Value="type ActivationObject = class&#xA;    inherit ScriptObject&#xA;    interface IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IActivationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="93f4c-101">Représente un objet qui participe à une hiérarchie de portée.</span><span class="sxs-lookup"><span data-stu-id="93f4c-101">Represents an object that is taking part in a scope hierarchy.</span></span> <span data-ttu-id="93f4c-102">Cette classe contient des méthodes permettant de résoudre la portée et d'obtenir des informations de membre.</span><span class="sxs-lookup"><span data-stu-id="93f4c-102">This class contains methods for resolving scope and for getting member information.</span></span> <span data-ttu-id="93f4c-103">Elle appartient à la catégorie de compilation et d'état du runtime.</span><span class="sxs-lookup"><span data-stu-id="93f4c-103">It belongs to the compilation and run-time state category.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
    <altmember cref="T:System.Reflection.MemberInfo" />
    <altmember cref="T:System.Reflection.IReflect" />
  </Docs>
  <Members>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.JScript.JSVariableField CreateField (string name, System.Reflection.FieldAttributes attributeFlags, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.JScript.JSVariableField CreateField(string name, valuetype System.Reflection.FieldAttributes attributeFlags, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateField (name As String, attributeFlags As FieldAttributes, value As Object) As JSVariableField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::JScript::JSVariableField ^ CreateField(System::String ^ name, System::Reflection::FieldAttributes attributeFlags, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : string * System.Reflection.FieldAttributes * obj -&gt; Microsoft.JScript.JSVariableField&#xA;override this.CreateField : string * System.Reflection.FieldAttributes * obj -&gt; Microsoft.JScript.JSVariableField" Usage="activationObject.CreateField (name, attributeFlags, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.JSVariableField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributeFlags" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93f4c-104">Nom du champ.</span><span class="sxs-lookup"><span data-stu-id="93f4c-104">The name of the field.</span></span></param>
        <param name="attributeFlags"><span data-ttu-id="93f4c-105">Combinaison d'opérations de bits des valeurs d'énumération qui décrivent les attributs d'un champ.</span><span class="sxs-lookup"><span data-stu-id="93f4c-105">A bitwise combination of the enumeration values that describe the attributes of a field.</span></span> <span data-ttu-id="93f4c-106"><see cref="F:System.Reflection.FieldAttributes.Static" /> est ajouté automatiquement.</span><span class="sxs-lookup"><span data-stu-id="93f4c-106"><see cref="F:System.Reflection.FieldAttributes.Static" /> is added automatically.</span></span></param>
        <param name="value"><span data-ttu-id="93f4c-107">Valeur du champ.</span><span class="sxs-lookup"><span data-stu-id="93f4c-107">The value of the field.</span></span></param>
        <summary><span data-ttu-id="93f4c-108">Crée une variable globale à l'aide du nom, de la valeur et des attributs spécifiés.</span><span class="sxs-lookup"><span data-stu-id="93f4c-108">Creates a new global variable, using the specified name, value, and attributes.</span></span></summary>
        <returns><span data-ttu-id="93f4c-109">Variable globale qui comporte le nom, la valeur et les attributs spécifiés.</span><span class="sxs-lookup"><span data-stu-id="93f4c-109">A global variable that has the specified name, value, and attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="field_table">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList field_table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.ArrayList field_table" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ActivationObject.field_table" />
      <MemberSignature Language="VB.NET" Value="Protected field_table As ArrayList " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::ArrayList ^ field_table;" />
      <MemberSignature Language="F#" Value="val mutable field_table : System.Collections.ArrayList" Usage="Microsoft.JScript.ActivationObject.field_table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93f4c-110">Stocke un tableau des variables qui sont dans la portée.</span><span class="sxs-lookup"><span data-stu-id="93f4c-110">Stores an array of variables that are in scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public virtual object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj&#xA;override this.GetDefaultThisObject : unit -&gt; obj" Usage="activationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetDefaultThisObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93f4c-111">Obtient la portée par défaut actuelle, qui correspond à l'objet contenu d'une portée de l'instruction <see langword="with" /> ou à la portée globale.</span><span class="sxs-lookup"><span data-stu-id="93f4c-111">Gets the current default scope, which is either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="93f4c-112">Portée par défaut actuelle.</span><span class="sxs-lookup"><span data-stu-id="93f4c-112">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="activationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93f4c-113">Nom du champ à rechercher.</span><span class="sxs-lookup"><span data-stu-id="93f4c-113">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="93f4c-114">Niveau lexical à rechercher.</span><span class="sxs-lookup"><span data-stu-id="93f4c-114">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="93f4c-115">Retourne un champ qui porte le nom spécifié en parcourant la hiérarchie de portée.</span><span class="sxs-lookup"><span data-stu-id="93f4c-115">Returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="93f4c-116">Cette méthode effectue la recherche uniquement dans la portée qui est spécifiée au niveau lexical.</span><span class="sxs-lookup"><span data-stu-id="93f4c-116">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="93f4c-117">Objet <see cref="T:System.Reflection.FieldInfo" /> qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="93f4c-117">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93f4c-118">Cette méthode s’applique aux champs qui ne peuvent pas être résolues au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="93f4c-118">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="93f4c-119">Cela se produit lorsqu’un `eval` expression fait référence à un champ dans la portée externe.</span><span class="sxs-lookup"><span data-stu-id="93f4c-119">This occurs when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="93f4c-120">Étant donné que le `eval` expression peut déclarer un champ local qui porte le même nom en tant que champ dans la portée externe, le champ ne peut pas être à liaison anticipée pour le champ de la portée externe.</span><span class="sxs-lookup"><span data-stu-id="93f4c-120">Because the `eval` expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public virtual Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope&#xA;override this.GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="activationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetGlobalScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93f4c-121">Obtient la portée globale en parcourant la hiérarchie de portée jusqu'à ce qu'une portée qui inclut des variables statiques soit trouvée, par exemple, une portée de module.</span><span class="sxs-lookup"><span data-stu-id="93f4c-121">Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="93f4c-122">Portée globale.</span><span class="sxs-lookup"><span data-stu-id="93f4c-122">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo&#xA;override this.GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="activationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93f4c-123">Nom du champ.</span><span class="sxs-lookup"><span data-stu-id="93f4c-123">The name of the field.</span></span></param>
        <summary><span data-ttu-id="93f4c-124">Obtient la déclaration locale d'un champ qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="93f4c-124">Gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="93f4c-125">Cela est utilisé au moment de la compilation pour la vérification des erreurs.</span><span class="sxs-lookup"><span data-stu-id="93f4c-125">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="93f4c-126">Déclaration locale du champ.</span><span class="sxs-lookup"><span data-stu-id="93f4c-126">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="activationObject.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93f4c-127">Nom du membre à rechercher.</span><span class="sxs-lookup"><span data-stu-id="93f4c-127">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="93f4c-128">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="93f4c-128">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="93f4c-129">Récupère un tableau des objets <see cref="T:System.Reflection.MemberInfo" /> qui correspondent à tous les membres qui correspondent à un nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="93f4c-129">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="93f4c-130">Tableau des objets qui correspondent à l'argument <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="93f4c-130">An array of objects that match the <paramref name="name" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="activationObject.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="93f4c-131">Combinaison d'opérations de bits des valeurs d'énumération qui spécifie la manière dont la recherche de membres est exécutée par réflexion.</span><span class="sxs-lookup"><span data-stu-id="93f4c-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="93f4c-132">Récupère un tableau d'objets <see cref="T:System.Reflection.MemberInfo" /> qui correspond à tous les membres de l'objet actuel.</span><span class="sxs-lookup"><span data-stu-id="93f4c-132">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that corresponds to all members of the current object.</span></span></summary>
        <returns><span data-ttu-id="93f4c-133">Tableau d'objets qui contient tous les membres de l'objet actuel.</span><span class="sxs-lookup"><span data-stu-id="93f4c-133">An array of objects that contains all members of the current object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj&#xA;override this.GetMemberValue : string * int -&gt; obj" Usage="activationObject.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="93f4c-134">Nom du membre à rechercher.</span><span class="sxs-lookup"><span data-stu-id="93f4c-134">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="93f4c-135">Niveau lexical à rechercher.</span><span class="sxs-lookup"><span data-stu-id="93f4c-135">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="93f4c-136">Obtient la valeur du membre spécifié en parcourant la hiérarchie de portée.</span><span class="sxs-lookup"><span data-stu-id="93f4c-136">Gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="93f4c-137">Cette méthode effectue la recherche uniquement dans la portée qui est spécifiée au niveau lexical.</span><span class="sxs-lookup"><span data-stu-id="93f4c-137">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="93f4c-138">Valeur du membre <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="93f4c-138">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93f4c-139">Cette méthode s’applique aux membres qui ne peuvent pas être résolues au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="93f4c-139">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="93f4c-140">Cela se produit lorsqu’un `eval` expression fait référence à un membre dans la portée externe.</span><span class="sxs-lookup"><span data-stu-id="93f4c-140">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="93f4c-141">Étant donné que le `eval` expression peut déclarer un membre local qui a le même nom qu’un membre dans la portée externe, le membre ne peut pas être à liaison anticipée au membre de l’étendue externe.</span><span class="sxs-lookup"><span data-stu-id="93f4c-141">Because the `eval` expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>