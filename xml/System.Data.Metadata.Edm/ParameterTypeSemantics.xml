<Type Name="ParameterTypeSemantics" FullName="System.Data.Metadata.Edm.ParameterTypeSemantics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fee5cb635f4825192636ae91c9dbca504121066f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37679187" /></Metadata><TypeSignature Language="C#" Value="public enum ParameterTypeSemantics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterTypeSemantics extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ParameterTypeSemantics" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParameterTypeSemantics" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParameterTypeSemantics" />
  <TypeSignature Language="F#" Value="type ParameterTypeSemantics = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Spécifie la sémantique de type qui est utilisée pour résoudre les surcharges de fonction. <span data-ttu-id="44ad7-102">Chaque fournisseur de magasin doit utiliser ces indicateurs d'énumération dans le fichier de manifeste du fournisseur pour toute définition de fonction.</span><span class="sxs-lookup"><span data-stu-id="44ad7-102">Each store provider must use these enumeration flags in the provider manifest file for every function definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44ad7-103">Le <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> classe spécifie la sémantique de type pour la promotion, la conversion implicite et la conversion explicite pour les types primitifs du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="44ad7-103">The <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class specifies type semantics for promotability, implicit conversion, and explicit conversion for the provider primitive types.</span></span> [!INCLUDE[vstecado](~/includes/vstecado-md.md)] <span data-ttu-id="44ad7-104">lit ces informations dans le fichier de manifeste du fournisseur de stockage dans le <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> classe.</span><span class="sxs-lookup"><span data-stu-id="44ad7-104">reads this information from the storage provider manifest file into the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class.</span></span> <span data-ttu-id="44ad7-105">[!INCLUDE[vstecado](~/includes/vstecado-md.md)] utilise ensuite la classe <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> pour déterminer les définitions de fonctions appropriées basées sur les types de paramètres.</span><span class="sxs-lookup"><span data-stu-id="44ad7-105">Then, [!INCLUDE[vstecado](~/includes/vstecado-md.md)] uses the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class to determine the appropriate function definitions based on the parameter types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowImplicitConversion">
      <MemberSignature Language="C#" Value="AllowImplicitConversion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitConversion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitConversion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitConversion" />
      <MemberSignature Language="F#" Value="AllowImplicitConversion = 0" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="44ad7-106">Indicateur spécifiant la conversion implicite entre les types d’arguments donnés et les types d’arguments formels.</span><span class="sxs-lookup"><span data-stu-id="44ad7-106">A flag indicating the implicit conversion between the given and the formal argument types.</span></span> <span data-ttu-id="44ad7-107">Il s'agit du type de conversion par défaut.</span><span class="sxs-lookup"><span data-stu-id="44ad7-107">This is the default conversion type.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AllowImplicitPromotion">
      <MemberSignature Language="C#" Value="AllowImplicitPromotion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitPromotion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitPromotion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitPromotion" />
      <MemberSignature Language="F#" Value="AllowImplicitPromotion = 1" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="44ad7-108">Indicateur spécifiant la promotion de type entre les types d’arguments donnés et les types d’arguments formels.</span><span class="sxs-lookup"><span data-stu-id="44ad7-108">A flag indicating the type promotion between the given and the formal argument types.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExactMatchOnly">
      <MemberSignature Language="C#" Value="ExactMatchOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics ExactMatchOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberSignature Language="VB.NET" Value="ExactMatchOnly" />
      <MemberSignature Language="C++ CLI" Value="ExactMatchOnly" />
      <MemberSignature Language="F#" Value="ExactMatchOnly = 2" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="44ad7-109">Indicateur spécifiant l'utilisation d'une équivalence stricte uniquement.</span><span class="sxs-lookup"><span data-stu-id="44ad7-109">A flag indicating the usage of strict equivalence only.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>