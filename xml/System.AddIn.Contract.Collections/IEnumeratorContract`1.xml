<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="025fffc8a5d8a9b5ee8ef5c1dc4593d1d8a2cd62" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36648248" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">
      <span data-ttu-id="d47d4-101">Type des objets à énumérer.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d47d4-101">The type of objects to enumerate.</span>
      </span>
      <span data-ttu-id="d47d4-102">
        <c>C</c> doit implémenter la <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d47d4-102">
          <c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d47d4-103">Énumère les éléments d'une collection générique d'objets <see cref="T:System.AddIn.Contract.IContract" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d47d4-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d47d4-104">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="d47d4-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d47d4-105">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="d47d4-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d47d4-106">À cette position, la valeur de retour de <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="d47d4-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="d47d4-107">Par conséquent, vous devez appeler <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant d’appeler <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="d47d4-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="d47d4-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> retourne le même objet jusqu'à ce que <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="d47d4-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="d47d4-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> définit la valeur de retour de <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> à l’élément suivant.</span><span class="sxs-lookup"><span data-stu-id="d47d4-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d47d4-110">Si <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="d47d4-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d47d4-111">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="d47d4-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d47d4-112">Si le dernier appel à <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> retourné `false`, la valeur de retour de <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="d47d4-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="d47d4-113">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="d47d4-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d47d4-114">Si des modifications sont apportées à la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est définitivement invalidé et son comportement n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="d47d4-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d47d4-115">Retourne le <see cref="T:System.AddIn.Contract.IContract" /> dans la collection à la position actuelle de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d47d4-116">
            <see cref="T:System.AddIn.Contract.IContract" /> dans la collection à la position actuelle de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d47d4-117">La valeur de retour de <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> n’est pas définie si l’une des conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="d47d4-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="d47d4-118">L’énumérateur est positionné avant le premier élément dans la collection, immédiatement après la création de l’énumérateur ou après <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="d47d4-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="d47d4-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> doit être appelée pour avancer l’énumérateur jusqu’au premier élément de la collection avant d’appeler <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="d47d4-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="d47d4-120">Le dernier appel à <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> retourné `false`, qui indique la fin de la collection.</span><span class="sxs-lookup"><span data-stu-id="d47d4-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="d47d4-121">En raison de modifications effectuées dans la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est invalidé.</span><span class="sxs-lookup"><span data-stu-id="d47d4-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="d47d4-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> retourne le même objet jusqu'à ce que <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="d47d4-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="d47d4-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> définit la valeur de retour de <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> à l’élément suivant.</span><span class="sxs-lookup"><span data-stu-id="d47d4-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d47d4-124">Avance l’énumérateur à l’élément suivant de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-124">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d47d4-125">
            <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-125">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d47d4-126">Après avoir créé un énumérateur ou après le <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> est appelée, un énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="d47d4-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="d47d4-127">Le premier appel à la <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> méthode déplace l’énumérateur au premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="d47d4-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="d47d4-128">Si <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="d47d4-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d47d4-129">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> également retourner `false` jusqu'à ce que <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="d47d4-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="d47d4-130">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="d47d4-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d47d4-131">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d47d4-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d47d4-132">La collection a été modifiée après la création de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-132">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d47d4-133">Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d47d4-134">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="d47d4-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d47d4-135">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d47d4-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d47d4-136">La collection a été modifiée après la création de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d47d4-136">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>