<Type Name="CSharpCodeProvider" FullName="Microsoft.CSharp.CSharpCodeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef8e7a8ccfe956802959ba6dcaec97163c9119b3" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49154519" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CSharpCodeProvider : System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpCodeProvider extends System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CSharp.CSharpCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpCodeProvider&#xA;Inherits CodeDomProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CSharpCodeProvider : System::CodeDom::Compiler::CodeDomProvider" />
  <TypeSignature Language="F#" Value="type CSharpCodeProvider = class&#xA;    inherit CodeDomProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.Compiler.CodeDomProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Donne accès aux instances du générateur de code et du compilateur de code C#.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe fournit des méthodes qui peuvent être utilisées pour récupérer des instances de C# <xref:System.CodeDom.Compiler.ICodeGenerator> et <xref:System.CodeDom.Compiler.ICodeCompiler> implémentations.  
  
> [!NOTE]
>  Cette classe contient une demande de liaison et une demande d’héritage au niveau de la classe qui s’applique à tous les membres. Un <xref:System.Security.SecurityException> est levée lorsque l’appelant immédiat ou la classe dérivée n’a pas d’autorisations de confiance totale.  
  
   
  
## Examples  
 L’exemple suivant utilise le langage c# ou fournisseur de code Visual Basic pour compiler un fichier source. L’exemple vérifie l’extension de fichier d’entrée et utilise le correspondantes <xref:Microsoft.CSharp.CSharpCodeProvider> ou <xref:Microsoft.VisualBasic.VBCodeProvider> pour la compilation. Le fichier d’entrée est compilé dans un fichier exécutable et les erreurs de compilation sont affichées dans la console.  
  
 [!code-csharp[CodeDom_CodeProviders#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CodeProviders/CS/source.cs#1)]
 [!code-vb[CodeDom_CodeProviders#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CodeProviders/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">pour la confiance totale pour les héritiers. Cette classe ne peut pas être héritée par du code partiellement fiable.</permission>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
    <altmember cref="N:System.CodeDom" />
    <altmember cref="N:System.CodeDom.Compiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.CSharpCodeProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.CSharpCodeProvider" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Cette classe ne peut pas être utilisée par du code partiellement fiable.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">pour la confiance totale pour les héritiers. Cette classe ne peut pas être héritée par du code partiellement fiable.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCodeProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerOptions As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpCodeProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.CSharp.CSharpCodeProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.CSharp.CSharpCodeProvider" Usage="new Microsoft.CSharp.CSharpCodeProvider providerOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="providerOptions">Objet <see cref="T:System.Collections.Generic.IDictionary`2" /> qui contient les options de fournisseur du fichier de configuration.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> en utilisant les options de fournisseur spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de `providerOptions` est obtenue à partir de l’élément dans le fichier de configuration. Vous pouvez identifier la version de la <xref:Microsoft.CSharp.CSharpCodeProvider> vous souhaitez utiliser en spécifiant le `<providerOption>` élément, en fournissant « CompilerVersion » comme nom d’option et en fournissant le numéro de version (par exemple, « v3.5 ») comme valeur d’option.  Vous devez faire précéder le numéro de version avec un minuscule « v ».  
  
   
  
## Examples  
 L’exemple de fichier de configuration suivant montre comment spécifier la version 3.5 du fournisseur de code c# doit être utilisée.  
  
```xml  
<configuration>  
  <system.codedom>  
    <compilers>  
      <!-- zero or more compiler elements -->  
      <compiler  
        language="c#;cs;csharp"  
        extension=".cs"  
        type="Microsoft.CSharp.CSharpCodeProvider, System,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b77a5c561934e089"  
        compilerOptions="/optimize"  
        warningLevel="1" >  
          <providerOption  
            name="CompilerVersion"  
            value="v3.5" />  
      </compiler>  
    </compilers>  
  </system.codedom>  
</configuration>  
```  
  
 L’exemple suivant montre comment spécifier la version du compilateur lorsque vous créez une nouvelle instance de la <xref:Microsoft.CSharp.CSharpCodeProvider> classe.  
  
 [!code-csharp[CSProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/csprovider.provideroptions/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerOptions" /> a la valeur <see langword="null" />.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">pour la confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/index.md">Schéma des fichiers de configuration pour le .NET Framework</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/compilers-element.md">&lt;compilateurs&gt; élément</related>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md">Spécification des noms de types qualifiés complets</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/provideroption-element.md">&lt;providerOption&gt; élément</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="override this.CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="cSharpCodeProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1">
          <AttributeName>System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une instance du compilateur de code C#.</summary>
        <returns>Instance de l'implémentation C# de <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="override this.CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="cSharpCodeProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use CodeDomProvider class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1">
          <AttributeName>System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une instance du générateur de code C#.</summary>
        <returns>Instance de l'implémentation C# de <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.CSharp.CSharpCodeProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’extension de nom de fichier à utiliser pendant la création de fichiers de code source.</summary>
        <value>Extension de nom de fichier à utiliser pour les fichiers de code source générés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette extension de nom de fichier est généralement l’extension utilisée par les fichiers de code source du langage.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="cSharpCodeProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <see cref="T:System.CodeDom.CodeTypeMember" /> pour lequel du code doit être généré.</param>
        <param name="writer">
          <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
        <param name="options">
          <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> à utiliser pendant la génération du code.</param>
        <summary>Génère du code pour le membre de classe spécifié en utilisant les options spécifiées du TextWriter et du générateur de code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les membres sont générés différemment selon leur contexte. Par exemple, une méthode dans une interface ou un champ dans une énumération est généré différemment d’une méthode ou un champ sur une classe.  Cette implémentation génère du code pour un membre dans le contexte de classe.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A> méthode pour créer un fragment de code à utiliser dans un graphique CodeDOM. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> méthode de la <xref:System.CodeDom.Compiler.CodeDomProvider> classe.  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="cSharpCodeProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type d'objet pour lequel un convertisseur de type doit être récupéré.</param>
        <summary>Obtient un <see cref="T:System.ComponentModel.TypeConverter" /> pour le type d'objet spécifié.</summary>
        <returns>
          <see cref="T:System.ComponentModel.TypeConverter" /> pour le type spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une classe dérivée peut substituer cette méthode pour fournir des types spécifiques de convertisseurs de type pour les types de données spécifiques.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>