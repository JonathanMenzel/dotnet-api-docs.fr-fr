<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb09bce7495e8ab23bc69a79f590f4f45e7b8152" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="19d72-101">Type des objets en cours d'énumération.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19d72-101">The type of objects being enumerated.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="19d72-102">Énumère les éléments dans une collection <see cref="T:System.AddIn.Contract.IListContract`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19d72-102">Enumerates the elements in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d72-103">Les énumérateurs peuvent être utilisés pour lire les données dans la collection, mais ils ne peut pas être utilisés pour modifier la collection.</span><span class="sxs-lookup"><span data-stu-id="19d72-103">Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.</span></span>  
  
 <span data-ttu-id="19d72-104">Au départ, l’énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="19d72-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="19d72-105">À cette position, la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="19d72-105">At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="19d72-106">Par conséquent, vous devez appeler <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> pour avancer l’énumérateur jusqu’au premier élément de la collection avant d’appeler <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="19d72-106">Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="19d72-107"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> retourne le même objet jusqu'à ce que <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="19d72-107"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="19d72-108"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> définit la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> à l’élément suivant.</span><span class="sxs-lookup"><span data-stu-id="19d72-108"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="19d72-109">Si <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="19d72-109">If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="19d72-110">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> également retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="19d72-110">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="19d72-111">Si le dernier appel à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourné `false`, la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="19d72-111">If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="19d72-112">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="19d72-112">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="19d72-113">Si des modifications sont apportées à la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est définitivement invalidé et son comportement n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="19d72-113">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19d72-114">Retourne les objets dans la collection à la position actuelle de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-114">Returns the object in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d72-115">
            <see cref="T:System.AddIn.Contract.IContract" /> dans la collection à la position actuelle de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-115">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d72-116">La valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> n’est pas définie si l’une des conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="19d72-116">The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="19d72-117">L’énumérateur est positionné avant le premier élément dans la collection, immédiatement après la création de l’énumérateur ou après <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="19d72-117">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="19d72-118"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> doit être appelée pour avancer l’énumérateur jusqu’au premier élément de la collection avant d’appeler <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="19d72-118"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="19d72-119">Le dernier appel à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourné `false`, qui indique la fin de la collection.</span><span class="sxs-lookup"><span data-stu-id="19d72-119">The last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="19d72-120">En raison de modifications effectuées dans la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est invalidé.</span><span class="sxs-lookup"><span data-stu-id="19d72-120">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="19d72-121"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> retourne le même objet jusqu'à ce que <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> soit appelé.</span><span class="sxs-lookup"><span data-stu-id="19d72-121"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="19d72-122"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> définit la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> à l’élément suivant.</span><span class="sxs-lookup"><span data-stu-id="19d72-122"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19d72-123">Avance l’énumérateur à l’élément suivant de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-123">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d72-124">
            <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-124">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d72-125">Après avoir créé un énumérateur ou après le <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> est appelée, un énumérateur est positionné avant le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="19d72-125">After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="19d72-126">Le premier appel à la <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> méthode déplace l’énumérateur au premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="19d72-126">The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="19d72-127">Si <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> dépasse la fin de la collection, l’énumérateur est placée après le dernier élément dans la collection et <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="19d72-127">If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="19d72-128">Lorsque l’énumérateur est à cette position, les appels suivants à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> également retourner `false` jusqu'à ce que <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="19d72-128">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="19d72-129">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="19d72-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="19d72-130">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="19d72-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19d72-131">La collection a été modifiée après la création de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-131">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19d72-132">Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-132">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d72-133">Un énumérateur est valide tant que la collection demeure inchangée.</span><span class="sxs-lookup"><span data-stu-id="19d72-133">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="19d72-134">Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="19d72-134">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19d72-135">La collection a été modifiée après la création de l'énumérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d72-135">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>