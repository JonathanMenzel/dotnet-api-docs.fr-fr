<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03a75f2a7180daea04a3cd94c66ec02688f2b013" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37705707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'T&gt; = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Type des objets en cours d'énumération.</typeparam>
    <summary>Énumère les éléments dans une collection <see cref="T:System.AddIn.Contract.IListContract`1" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les énumérateurs peuvent être utilisés pour lire les données dans la collection, mais ils ne peuvent pas être utilisés pour modifier la collection.  
  
 Au départ, l’énumérateur est positionné avant le premier élément de la collection. À cette position, la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> n’est pas défini. Par conséquent, vous devez appeler <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> pour avancer l’énumérateur vers le premier élément de la collection avant d’appeler <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  
  
 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> retourne le même objet jusqu'à ce que <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> soit appelé. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> définit la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> jusqu'à l’élément suivant.  
  
 Si <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourne `false`. Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> également retourner `false`. Si le dernier appel à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourné `false`, la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> n’est pas défini.  
  
 Un énumérateur est valide tant que la collection demeure inchangée. Si des modifications sont apportées à la collection, telles que l’ajout, la modification ou la suppression d’éléments, l’énumérateur est définitivement invalidé et son comportement n’est pas défini.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'T" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les objets dans la collection à la position actuelle de l'énumérateur.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.IContract" /> dans la collection à la position actuelle de l'énumérateur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> n’est pas définie si l’une des conditions suivantes :  
  
-   L’énumérateur est positionné avant le premier élément dans la collection, immédiatement après la création de l’énumérateur ou après <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> est appelée. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> doit être appelée pour avancer l’énumérateur vers le premier élément de la collection avant d’appeler <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  
  
-   Le dernier appel à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourné `false`, ce qui indique la fin de la collection.  
  
-   L’énumérateur est invalidé en raison de modifications apportées dans la collection, telles que l’ajout, la modification ou la suppression d’éléments.  
  
 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> retourne le même objet jusqu'à ce que <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> soit appelé. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> définit la valeur de retour de <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> jusqu'à l’élément suivant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avance l’énumérateur à l’élément suivant de la collection.</summary>
        <returns>
          <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Après avoir créé un énumérateur ou après le <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> est appelée, un énumérateur est positionné avant le premier élément de la collection. Le premier appel à la <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> méthode déplace l’énumérateur vers le premier élément de la collection.  
  
 Si <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passe à la fin de la collection, l’énumérateur est positionnée après le dernier élément dans la collection et <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> retourne `false`. Lorsque l’énumérateur se trouve à cette position, les appels suivants à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> également retourner `false` jusqu'à ce que <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> est appelée.  
  
 Un énumérateur est valide tant que la collection demeure inchangée. Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> lève une <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La collection a été modifiée après la création de l'énumérateur.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un énumérateur est valide tant que la collection demeure inchangée. Si des modifications sont apportées à la collection, telles que l’ajout, modification, ou la suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> ou <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> lève une <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La collection a été modifiée après la création de l'énumérateur.</exception>
      </Docs>
    </Member>
  </Members>
</Type>