<Type Name="InterfaceQueuingAttribute" FullName="System.EnterpriseServices.InterfaceQueuingAttribute">
  <TypeSignature Language="C#" Value="public sealed class InterfaceQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InterfaceQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InterfaceQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InterfaceQueuingAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="72a8a-101">Active la prise en charge de la mise en file d'attente pour l'interface marquée.</span><span class="sxs-lookup"><span data-stu-id="72a8a-101">Enables queuing support for the marked interface.</span></span> <span data-ttu-id="72a8a-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="72a8a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a8a-103">Les appels sur cette interface seront en file d’attente à l’aide de Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="72a8a-103">Calls on this interface will be queued using Message Queuing.</span></span>  
  
 <span data-ttu-id="72a8a-104">Pour marquer une interface comme étant en attente, appliquez cet attribut à l’interface à l’aide de la syntaxe suivante : `[InterfaceQueuing]`.</span><span class="sxs-lookup"><span data-stu-id="72a8a-104">To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`.</span></span>  
  
 <span data-ttu-id="72a8a-105">Les méthodes membres d’une interface en file d’attente doivent remplir les conditions pour les appels de méthode en file d’attente, telles qu’avoir non `out` ou `ref` paramètres.</span><span class="sxs-lookup"><span data-stu-id="72a8a-105">The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters.</span></span>  
  
 <span data-ttu-id="72a8a-106">Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="72a8a-106">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a8a-107">L’exemple de code suivant montre comment utiliser le `InterfaceQueuingAttribute` attribut.</span><span class="sxs-lookup"><span data-stu-id="72a8a-107">The following code example shows how to use the `InterfaceQueuingAttribute` attribute.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#2)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#2)]  
  
 <span data-ttu-id="72a8a-108">L’exemple de code suivant montre comment marquer une application COM + comme étant en attente au moment de la compilation à l’aide de la `ApplicationQueuing` d’attribut et permettre à l’écouteur COM + en définissant le `QueueListenerEnabled` sur true</span><span class="sxs-lookup"><span data-stu-id="72a8a-108">The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#1)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#1)]  
  
 <span data-ttu-id="72a8a-109">L’exemple de code suivant montre comment utiliser `BindToMoniker` pour exécuter le moniker en file d’attente, pour obtenir une instance de l’enregistreur, appeler la méthode qui sera enregistrée et force la libération de l’objet enregistreur, d’envoyer le message à la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="72a8a-109">The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponentclientclass.cpp#0)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponentclientclass.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72a8a-110">Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, activant la prise en charge de la mise en file d'attente.</span><span class="sxs-lookup"><span data-stu-id="72a8a-110">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, enabling queuing support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72a8a-111">Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, assignant aux propriétés <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> et <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> leurs valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="72a8a-111">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class setting the <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> and <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a8a-112">Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="72a8a-112">The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
|<span data-ttu-id="72a8a-113">Property</span><span class="sxs-lookup"><span data-stu-id="72a8a-113">Property</span></span>|<span data-ttu-id="72a8a-114">Value</span><span class="sxs-lookup"><span data-stu-id="72a8a-114">Value</span></span>|  
|--------------|-----------|  
|<span data-ttu-id="72a8a-115">Activé</span><span class="sxs-lookup"><span data-stu-id="72a8a-115">Enabled</span></span>|`true`|  
|<span data-ttu-id="72a8a-116">Interface</span><span class="sxs-lookup"><span data-stu-id="72a8a-116">Interface</span></span>|`null`|  
  
   
  
## Examples  
 <span data-ttu-id="72a8a-117">L’exemple de code suivant crée un nouveau <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="72a8a-117">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute(bool enabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <span data-ttu-id="72a8a-118"><see langword="true" /> pour activer la prise en charge de la mise en file d'attente ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="72a8a-118"><see langword="true" /> to enable queuing support; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="72a8a-119">Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, désactivant de manière optionnelle la prise en charge de la mise en file d'attente.</span><span class="sxs-lookup"><span data-stu-id="72a8a-119">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, optionally disabling queuing support.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72a8a-120">L’exemple de code suivant crée un nouveau <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="72a8a-120">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a8a-121">Obtient ou définit une valeur indiquant si la prise en charge de la mise en file d'attente est activée.</span><span class="sxs-lookup"><span data-stu-id="72a8a-121">Gets or sets a value indicating whether queuing support is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="72a8a-122"><see langword="true" /> si la prise en charge de la mise en file d'attente est activée ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="72a8a-122"><see langword="true" /> if queuing support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="72a8a-123">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="72a8a-123">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a8a-124">Cette propriété correspond à la `Queuing-Enabled` propriété dans COM +.</span><span class="sxs-lookup"><span data-stu-id="72a8a-124">This property corresponds to the `Queuing-Enabled` property in COM+.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public string Interface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Interface" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberSignature Language="VB.NET" Value="Public Property Interface As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Interface { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a8a-125">Obtient ou définit le nom de l'interface sur laquelle la mise en file d'attente est activée.</span><span class="sxs-lookup"><span data-stu-id="72a8a-125">Gets or sets the name of the interface on which queuing is enabled.</span></span></summary>
        <value><span data-ttu-id="72a8a-126">Nom de l'interface sur laquelle la mise en file d'attente est activée.</span><span class="sxs-lookup"><span data-stu-id="72a8a-126">The name of the interface on which queuing is enabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>