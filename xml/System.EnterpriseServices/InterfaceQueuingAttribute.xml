<Type Name="InterfaceQueuingAttribute" FullName="System.EnterpriseServices.InterfaceQueuingAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72ac0ee39dc59f3fde202807762b0e41412aed42" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48750845" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InterfaceQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InterfaceQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InterfaceQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InterfaceQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InterfaceQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Active la prise en charge de la mise en file d'attente pour l'interface marquée. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les appels sur cette interface seront en file d’attente à l’aide de Message Queuing.  
  
 Pour marquer une interface comme étant en attente, appliquez cet attribut à l’interface à l’aide de la syntaxe suivante : `[InterfaceQueuing]`.  
  
 Les méthodes de membre d’une interface en file d’attente doivent satisfaire la configuration requise pour les appels de méthode en file d’attente, par exemple non `out` ou `ref` paramètres.  
  
 Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le `InterfaceQueuingAttribute` attribut.  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#2)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#2)]  
  
 L’exemple de code suivant montre comment marquer une application COM + comme en attente au moment de la compilation à l’aide de la `ApplicationQueuing` d’attribut et permettre à l’écouteur COM + en définissant le `QueueListenerEnabled` sur true  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#1)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#1)]  
  
 L’exemple de code suivant montre comment utiliser `BindToMoniker` pour exécuter le moniker en file d’attente, pour obtenir une instance de l’enregistreur, appelez la méthode qui sera enregistrée et force la libération de l’objet enregistreur, pour envoyer le message à la file d’attente.  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponentclientclass.cpp#0)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponentclientclass.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, activant la prise en charge de la mise en file d'attente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, assignant aux propriétés <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> et <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> leurs valeurs par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  
  
|Property|Value|  
|--------------|-----------|  
|Activé|`true`|  
|Interface|`null`|  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute(bool enabled);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.InterfaceQueuingAttribute : bool -&gt; System.EnterpriseServices.InterfaceQueuingAttribute" Usage="new System.EnterpriseServices.InterfaceQueuingAttribute enabled" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <see langword="true" /> pour activer la prise en charge de la mise en file d'attente ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, désactivant de manière optionnelle la prise en charge de la mise en file d'attente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la prise en charge de la mise en file d'attente est activée.</summary>
        <value>
          <see langword="true" /> si la prise en charge de la mise en file d'attente est activée ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété correspond à la `Queuing-Enabled` propriété dans COM +.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public string Interface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Interface" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberSignature Language="VB.NET" Value="Public Property Interface As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Interface { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Interface : string with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'interface sur laquelle la mise en file d'attente est activée.</summary>
        <value>Nom de l'interface sur laquelle la mise en file d'attente est activée.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>