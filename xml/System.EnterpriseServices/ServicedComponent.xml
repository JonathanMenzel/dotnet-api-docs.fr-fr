<Type Name="ServicedComponent" FullName="System.EnterpriseServices.ServicedComponent">
  <TypeSignature Language="C#" Value="public abstract class ServicedComponent : ContextBoundObject, IDisposable, System.EnterpriseServices.IRemoteDispatch, System.EnterpriseServices.IServicedComponentInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable ServicedComponent extends System.ContextBoundObject implements class System.EnterpriseServices.IRemoteDispatch, class System.EnterpriseServices.IServicedComponentInfo, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServicedComponent&#xA;Inherits ContextBoundObject&#xA;Implements IDisposable, IRemoteDispatch, IServicedComponentInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicedComponent abstract : ContextBoundObject, IDisposable, System::EnterpriseServices::IRemoteDispatch, System::EnterpriseServices::IServicedComponentInfo" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ContextBoundObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IRemoteDispatch</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IServicedComponentInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="07df3-101">Représente la classe de base de toutes les classes utilisant les services COM+.</span><span class="sxs-lookup"><span data-stu-id="07df3-101">Represents the base class of all classes using COM+ services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-102">Sous certaines conditions, une classe dérivée de <xref:System.EnterpriseServices.ServicedComponent> que s’exécute dans une application COM + peut cesser de répondre.</span><span class="sxs-lookup"><span data-stu-id="07df3-102">Under certain conditions, a class that is derived from <xref:System.EnterpriseServices.ServicedComponent> that runs in a COM+ application may stop responding.</span></span> <span data-ttu-id="07df3-103">Ce problème est causé par un blocage de l’activité.</span><span class="sxs-lookup"><span data-stu-id="07df3-103">This problem is caused by an Activity deadlock.</span></span> <span data-ttu-id="07df3-104">Activités peuvent se bloquer sur les applications multithread, en raison d’un nettoyage asynchrone de références de composant.</span><span class="sxs-lookup"><span data-stu-id="07df3-104">Activities can deadlock on multithreaded applications because of an asynchronous cleanup of component references.</span></span> <span data-ttu-id="07df3-105">Pour contourner ce problème, appelez le <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> méthode lorsque vous terminez de travailler avec des objets dérivés de <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="07df3-105">To work around this problem, call the <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> method when you complete work with objects derived from <xref:System.EnterpriseServices.ServicedComponent>.</span></span> <span data-ttu-id="07df3-106">Pour plus d’informations, consultez [ http://support.microsoft.com/default.aspx?scid=kb; en-us ; 327443](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443).</span><span class="sxs-lookup"><span data-stu-id="07df3-106">For more information, see [http://support.microsoft.com/default.aspx?scid=kb;en-us;327443](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07df3-107">Le code client doit appeler `Dispose` sur les composants pour garantir le bon fonctionnement de service.</span><span class="sxs-lookup"><span data-stu-id="07df3-107">Client code must call `Dispose` on serviced components to ensure proper operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07df3-108">L’exemple de code suivant montre comment exposer une classe en tant que composant COM configuré.</span><span class="sxs-lookup"><span data-stu-id="07df3-108">The following code example demonstrates how to expose a class as a configured COM component.</span></span>  
  
 [!code-cpp[EnterpriseServices_Basic#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Basic/CPP/calculator.cpp#1)]
 [!code-csharp[EnterpriseServices_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Basic/CS/calculator.cs#1)]  
  
 <span data-ttu-id="07df3-109">Pour déployer cette classe en tant que composant COM configuré, vous devez générer une clé forte, compilez la classe en tant que bibliothèque et enregistrer la bibliothèque.</span><span class="sxs-lookup"><span data-stu-id="07df3-109">To deploy this class as a configured COM component, you must generate a strong key, compile the class as a library, and register the library.</span></span> <span data-ttu-id="07df3-110">Ces trois étapes sont accomplies par les trois commandes suivantes.</span><span class="sxs-lookup"><span data-stu-id="07df3-110">These three steps are accomplished by the following three commands.</span></span>  
  
```  
sn -k Calculator.snk  
csc /t:library Calculator.cs  
regsvcs Calculator.dll  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicedComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServicedComponent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07df3-111">Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-111">Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-112">Ce constructeur est appelé par les constructeurs de classes dérivées pour initialiser un état dans ce type.</span><span class="sxs-lookup"><span data-stu-id="07df3-112">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected internal virtual void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07df3-113">Appelée par l'infrastructure lorsque l'objet est créé ou alloué à partir d'un pool.</span><span class="sxs-lookup"><span data-stu-id="07df3-113">Called by the infrastructure when the object is created or allocated from a pool.</span></span> <span data-ttu-id="07df3-114">Substituez cette méthode pour ajouter aux objets du code d'initialisation personnalisé.</span><span class="sxs-lookup"><span data-stu-id="07df3-114">Override this method to add custom initialization code to objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07df3-115">L’exemple de code suivant illustre l’utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="07df3-115">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBePooled">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanBePooled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanBePooled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.CanBePooled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanBePooled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanBePooled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07df3-116">Cette méthode est appelée par l'infrastructure avant que l'objet ne soit replacé dans le pool.</span><span class="sxs-lookup"><span data-stu-id="07df3-116">This method is called by the infrastructure before the object is put back into the pool.</span></span> <span data-ttu-id="07df3-117">Substituez cette méthode pour voter si l'objet doit être replacé dans le pool.</span><span class="sxs-lookup"><span data-stu-id="07df3-117">Override this method to vote on whether the object is put back into the pool.</span></span></summary>
        <returns>
          <span data-ttu-id="07df3-118"><see langword="true" /> si le composant traité peut être placé dans le pool ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-118"><see langword="true" /> if the serviced component can be pooled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07df3-119">L’exemple de code suivant illustre l’utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="07df3-119">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#5)]
 [!code-csharp[EnterpriseServices_Pooling#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#5)]
 [!code-vb[EnterpriseServices_Pooling#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="protected internal virtual void Construct (string s);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Construct(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Construct (s As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Construct(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="07df3-120">Chaîne du constructeur.</span><span class="sxs-lookup"><span data-stu-id="07df3-120">The construction string.</span></span></param>
        <summary><span data-ttu-id="07df3-121">Appelée par l'infrastructure juste après l'appel au constructeur, passant la chaîne du constructeur.</span><span class="sxs-lookup"><span data-stu-id="07df3-121">Called by the infrastructure just after the constructor is called, passing in the constructor string.</span></span> <span data-ttu-id="07df3-122">Substituez cette méthode pour utiliser la valeur de chaîne du constructeur.</span><span class="sxs-lookup"><span data-stu-id="07df3-122">Override this method to make use of the construction string value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected internal virtual void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Deactivate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07df3-123">Appelée par l'infrastructure lorsque l'objet est sur le point d'être désactivé.</span><span class="sxs-lookup"><span data-stu-id="07df3-123">Called by the infrastructure when the object is about to be deactivated.</span></span> <span data-ttu-id="07df3-124">Substituez cette méthode pour ajouter aux objets du code de finalisation personnalisé lorsque le code compilé juste-à-temps (JIT) ou la mise en pool d'objets sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="07df3-124">Override this method to add custom finalization code to objects when just-in-time (JIT) compiled code or object pooling is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07df3-125">L’exemple de code suivant illustre l’utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="07df3-125">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#4)]
 [!code-csharp[EnterpriseServices_Pooling#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#4)]
 [!code-vb[EnterpriseServices_Pooling#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07df3-126">Libère les ressources utilisées par le <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-126">Releases the resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07df3-127">Libère toutes les ressources utilisées par <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-127">Releases all resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-128">Finalise l’objet et supprime le contexte COM + associé.</span><span class="sxs-lookup"><span data-stu-id="07df3-128">Finalizes the object and removes the associated COM+ context.</span></span>  
  
 <span data-ttu-id="07df3-129">Il est recommandé de libérer explicitement les objets COM + et les ressources externes avant que le garbage collector libère l’objet.</span><span class="sxs-lookup"><span data-stu-id="07df3-129">It is recommended to explicitly release COM+ objects and external resources before the garbage collector frees the object.</span></span> <span data-ttu-id="07df3-130">Si la ressource externe est rare ou coûteuse, améliorer les performances possible en libérer explicitement les ressources COM + lorsqu’ils ne sont plus nécessaires.</span><span class="sxs-lookup"><span data-stu-id="07df3-130">If the external resource is scarce or expensive, better performance can be achieved by explicitly releasing COM+ resources when they are no longer needed.</span></span> <span data-ttu-id="07df3-131">Un contrôle explicite est fourni par le <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="07df3-131">Explicit control is provided by the <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="07df3-132">Appel de <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> autorise les ressources utilisées par le <xref:System.EnterpriseServices.ServicedComponent> à être réaffectés à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="07df3-132">Calling <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> allows the resources used by the <xref:System.EnterpriseServices.ServicedComponent> to be reallocated for other purposes.</span></span> <span data-ttu-id="07df3-133">Pour plus d’informations sur <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="07df3-133">For more information about <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="07df3-134">Remplacer la <see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /> méthode pour personnaliser la logique de suppression pour cette classe.</span><span class="sxs-lookup"><span data-stu-id="07df3-134">Override the <see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /> method to customize the dispose logic for this class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="07df3-135"><see langword="true" /> pour libérer à la fois les ressources managées et non managées ; sinon <see langword="false" /> pour libérer uniquement les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="07df3-135"><see langword="true" /> to release both managed and unmanaged resources; otherwise, <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="07df3-136">Libère les ressources non managées utilisées par <see cref="T:System.EnterpriseServices.ServicedComponent" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="07df3-136">Releases the unmanaged resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-137">Cette méthode est appelée par le public `Dispose` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="07df3-137">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="07df3-138">`Dispose` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="07df3-138">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="07df3-139"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="07df3-139"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="07df3-140">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="07df3-140">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.EnterpriseServices.ServicedComponent> references.</span></span> <span data-ttu-id="07df3-141">Cette méthode appelle la méthode `Dispose` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="07df3-141">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="07df3-142"><see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="07df3-142"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="07df3-143">Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-143">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="07df3-144">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="07df3-144">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="07df3-145">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="07df3-145">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DisposeObject">
      <MemberSignature Language="C#" Value="public static void DisposeObject (System.EnterpriseServices.ServicedComponent sc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisposeObject(class System.EnterpriseServices.ServicedComponent sc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisposeObject (sc As ServicedComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisposeObject(System::EnterpriseServices::ServicedComponent ^ sc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.EnterpriseServices.ServicedComponent" />
      </Parameters>
      <Docs>
        <param name="sc"><span data-ttu-id="07df3-146">Objet à supprimer.</span><span class="sxs-lookup"><span data-stu-id="07df3-146">The object to dispose.</span></span></param>
        <summary><span data-ttu-id="07df3-147">Finalise l'objet et supprime la référence COM+ associée.</span><span class="sxs-lookup"><span data-stu-id="07df3-147">Finalizes the object and removes the associated COM+ reference.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-148">Il est préférable d’utiliser le `Dispose` modèle de conception plutôt que <xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="07df3-148">It is preferable to use the `Dispose` design pattern rather than <xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone">
      <MemberSignature Language="C#" Value="string IRemoteDispatch.RemoteDispatchAutoDone (string s);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function RemoteDispatchAutoDone (s As String) As String Implements IRemoteDispatch.RemoteDispatchAutoDone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System::String ^ s) = System::EnterpriseServices::IRemoteDispatch::RemoteDispatchAutoDone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.EnterpriseServices.AutoComplete(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary><span data-ttu-id="07df3-149">Garantit que, dans le contexte COM+, le bit <see langword="done" /> de l'objet de classe <see cref="T:System.EnterpriseServices.ServicedComponent" /> a la valeur <see langword="true" /> après un appel de méthode distant.</span><span class="sxs-lookup"><span data-stu-id="07df3-149">Ensures that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's <see langword="done" /> bit is set to <see langword="true" /> after a remote method invocation.</span></span></summary>
        <returns><span data-ttu-id="07df3-150">Chaîne convertie à partir d'un objet de réponse qui implémente l'interface <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-150">A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-151">Le <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A> (méthode) n’appartient pas à l’interface publiée de la <xref:System.EnterpriseServices.ServicedComponent> classe et ne doit pas être implémentée ailleurs.</span><span class="sxs-lookup"><span data-stu-id="07df3-151">The <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone">
      <MemberSignature Language="C#" Value="string IRemoteDispatch.RemoteDispatchNotAutoDone (string s);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function RemoteDispatchNotAutoDone (s As String) As String Implements IRemoteDispatch.RemoteDispatchNotAutoDone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System::String ^ s) = System::EnterpriseServices::IRemoteDispatch::RemoteDispatchNotAutoDone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.EnterpriseServices.AutoComplete(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="07df3-152">Chaîne à convertir en objet de demande qui implémente l'interface <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-152">A string to be converted into a request object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span></span></param>
        <summary><span data-ttu-id="07df3-153">Ne garantit pas que, dans le contexte COM+, le bit <see langword="done" /> de l'objet de classe <see cref="T:System.EnterpriseServices.ServicedComponent" /> a la valeur <see langword="true" /> après un appel de méthode distant.</span><span class="sxs-lookup"><span data-stu-id="07df3-153">Does not ensure that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's <see langword="done" /> bit is set to <see langword="true" /> after a remote method invocation.</span></span></summary>
        <returns><span data-ttu-id="07df3-154">Chaîne convertie à partir d'un objet de réponse qui implémente l'interface <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-154">A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-155">Le <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A> (méthode) n’appartient pas à l’interface publiée de la <xref:System.EnterpriseServices.ServicedComponent> classe et ne doit pas être implémentée ailleurs.</span><span class="sxs-lookup"><span data-stu-id="07df3-155">The <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo">
      <MemberSignature Language="C#" Value="void IServicedComponentInfo.GetComponentInfo (ref int infoMask, out string[] infoArray);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(int32&amp; infoMask, [out] string[]&amp; infoArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetComponentInfo (ByRef infoMask As Integer, ByRef infoArray As String()) Implements IServicedComponentInfo.GetComponentInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(int % infoMask, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % infoArray) = System::EnterpriseServices::IServicedComponentInfo::GetComponentInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoMask" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="infoArray" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="infoMask"><span data-ttu-id="07df3-156">Masque de bits où 0x00000001 est une clé pour l'ID de processus du composant pris en charge, 0x00000002 est une clé pour l'ID de domaine d'application et 0x00000004 est une clé pour l'URI distant du composant pris en charge.</span><span class="sxs-lookup"><span data-stu-id="07df3-156">A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</span></span></param>
        <param name="infoArray"><span data-ttu-id="07df3-157">Tableau de chaînes qui peut contenir un ou la totalité des éléments suivants, dans l'ordre : l'ID de processus du composant pris en charge, l'ID de domaine d'application et l'URI distant du composant pris en charge.</span><span class="sxs-lookup"><span data-stu-id="07df3-157">A string array that may contain any or all of the following, in order: the serviced component's process ID, the application domain ID, and the serviced component's remote URI.</span></span></param>
        <summary><span data-ttu-id="07df3-158">Obtient certaines informations relatives à l'instance de classe <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="07df3-158">Obtains certain information about the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07df3-159">Le <xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A> (méthode) n’appartient pas à l’interface publiée de la <xref:System.EnterpriseServices.ServicedComponent> classe et ne doit pas être implémentée ailleurs.</span><span class="sxs-lookup"><span data-stu-id="07df3-159">The <xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>