<Type Name="RegistrationHelper" FullName="System.EnterpriseServices.RegistrationHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc2c66414ce15c4074602b44f093969e6f93ca23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistrationHelper : MarshalByRefObject, System.EnterpriseServices.IRegistrationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrationHelper extends System.MarshalByRefObject implements class System.EnterpriseServices.IRegistrationHelper" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.RegistrationHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrationHelper&#xA;Inherits MarshalByRefObject&#xA;Implements IRegistrationHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationHelper sealed : MarshalByRefObject, System::EnterpriseServices::IRegistrationHelper" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IRegistrationHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("89a86e7b-c229-4008-9baa-2f5c8411d7e0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Installe et configure des assemblys dans le catalogue COM+. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.RegistrationHelper> est utilisé par l’outil .NET Services Installation (Regsvcs.exe) et les étapes de l’inscription automatique qui sont effectuées à la première activation d’un <xref:System.EnterpriseServices.ServicedComponent>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.EnterpriseServices.RegistrationHelper" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fournit les composants runtime disponibles au catalogue COM+.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string assembly, string&amp; application, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, ByRef tlb As String, installFlags As InstallationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="tlb" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">Nom de ficher de l’assembly à installer.</param>
        <param name="application">Nom de l’application COM+ dans laquelle l’assembly doit être installé. Ce paramètre peut être <see langword="null" />. Si le paramètre est <see langword="null" /> et que l’assembly contient un <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, l’attribut est utilisé. Sinon, le nom de l’application est généré à partir du nom de l’assembly, puis il est retourné.</param>
        <param name="tlb">Nom du fichier de sortie Type Library Exporter (Tlbexp.exe) ou bien chaîne égale à <see langword="null" /> si l’application d’assistance d’inscription doit générer le nom. Le nom actuellement utilisé est placé dans le paramètre à la fin de l’appel.</param>
        <param name="installFlags">Combinaison d'opérations de bits des valeurs <see cref="T:System.EnterpriseServices.InstallationFlags" />.</param>
        <summary>Installe l’assembly nommé dans une application COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> effectue les étapes suivantes : inscription, génération d’une bibliothèque de types, l’inscription de la bibliothèque de types, installation de la bibliothèque de types sous l’application spécifiée et la configuration des composants contenus dans la bibliothèque de types.  
  
 Cette méthode requiert que l’appelant d’avoir des privilèges d’administrateur sur l’ordinateur local.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser la `InstalAssembly` méthode pour installer un assembly nommé dans une application COM +.  
  
 [!code-cpp[EnterpriseServices Registration#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices Registration/CPP/deployservicedcomponent.cpp#1)]
 [!code-csharp[EnterpriseServices Registration#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices Registration/CS/deployservicedcomponent.cs#1)]
 [!code-vb[EnterpriseServices Registration#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices Registration/VB/deployservicedcomponent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">L’assembly d’entrée ne possède pas de nom fort.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour pouvoir accéder au code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Pour pouvoir accéder au Registre. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, string partition, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssembly(string assembly, string&amp; application, string partition, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, partition As String, ByRef tlb As String, installFlags As InstallationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ partition, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="tlb" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">Nom de ficher de l’assembly à installer.</param>
        <param name="application">Nom de l’application COM+ dans laquelle l’assembly doit être installé. Ce paramètre peut être <see langword="null" />. Si le paramètre est <see langword="null" /> et que l’assembly contient un <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, l’attribut est utilisé. Sinon, le nom de l’application est généré à partir du nom de l’assembly, puis il est retourné.</param>
        <param name="partition">Nom de la partition. Ce paramètre peut être <see langword="null" />.</param>
        <param name="tlb">Nom du fichier de sortie Type Library Exporter (Tlbexp.exe) ou bien chaîne égale à <see langword="null" /> si l’application d’assistance d’inscription doit générer le nom. Le nom actuellement utilisé est placé dans le paramètre à la fin de l’appel.</param>
        <param name="installFlags">Combinaison d'opérations de bits des valeurs <see cref="T:System.EnterpriseServices.InstallationFlags" />.</param>
        <summary>Installe l’assembly nommé dans une application COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> effectue les étapes suivantes : inscription, génération d’une bibliothèque de types, l’inscription de la bibliothèque de types, installation de la bibliothèque de types sous l’application spécifiée et la configuration des composants contenus dans la bibliothèque de types.  
  
 Cette méthode requiert que l’appelant d’avoir des privilèges d’administrateur sur l’ordinateur local.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">L’assembly d’entrée ne possède pas de nom fort.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour pouvoir accéder au code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Pour pouvoir accéder au Registre. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void InstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="regConfig">
          <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identifiant l’assembly à installer.</param>
        <summary>Installe l’assembly nommé dans une application COM+.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode requiert que l’appelant d’avoir des privilèges d’administrateur sur l’ordinateur local.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser la `InstalAssemblyFromConfig` méthode pour installer un assembly nommé dans une application COM +.  
  
 [!code-cpp[EnterpriseServices Registration#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices Registration/CPP/deployservicedcomponent.cpp#2)]
 [!code-csharp[EnterpriseServices Registration#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices Registration/CS/deployservicedcomponent.cs#2)]
 [!code-vb[EnterpriseServices Registration#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices Registration/VB/deployservicedcomponent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UninstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Désinstalle un assembly précédemment inscrit avec <see cref="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallAssembly(string assembly, string application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UninstallAssembly(System::String ^ assembly, System::String ^ application);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRegistrationHelper.UninstallAssembly(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">Nom de fichier de l’assembly à désinstaller.</param>
        <param name="application">Si ce nom n’est pas <see langword="null" />, il s’agit du nom de l’application qui contient les composants dans l’assembly.</param>
        <summary>Désinstalle l’assembly de l’application donnée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">L’assembly d’entrée ne possède pas de nom fort.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour pouvoir accéder au code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application, string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssembly(string assembly, string application, string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String, partition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssembly(System::String ^ assembly, System::String ^ application, System::String ^ partition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">Nom de fichier de l’assembly à désinstaller.</param>
        <param name="application">Si ce nom n’est pas <see langword="null" />, il s’agit du nom de l’application qui contient les composants dans l’assembly.</param>
        <param name="partition">Nom de la partition. Ce paramètre peut être <see langword="null" />.</param>
        <summary>Désinstalle l’assembly de l’application donnée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">L’assembly d’entrée ne possède pas de nom fort.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour pouvoir accéder au code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UninstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void UninstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="regConfig">
          <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identifiant l’assembly à désinstaller.</param>
        <summary>Désinstalle l’assembly de l’application donnée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>