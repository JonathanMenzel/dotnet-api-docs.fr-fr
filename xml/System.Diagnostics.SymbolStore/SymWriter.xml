<Type Name="SymWriter" FullName="System.Diagnostics.SymbolStore.SymWriter">
  <TypeSignature Language="C#" Value="public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymWriter extends System.Diagnostics.SymbolStore.SymWriterBase implements class System.Diagnostics.SymbolStore.ISymbolWriter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class SymWriter&#xA;Inherits SymWriterBase&#xA;Implements IDisposable, ISymbolWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymWriter : System::Diagnostics::SymbolStore::SymWriterBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolWriter" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymWriterBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolWriter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c261-101">Représente un writer de symbole pour le code managé.</span><span class="sxs-lookup"><span data-stu-id="5c261-101">Represents a symbol writer for managed code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-102">La <xref:System.Diagnostics.SymbolStore.SymWriter> classe fournit des méthodes qui définissent des documents, les points de séquence, les portées lexicales et variables.</span><span class="sxs-lookup"><span data-stu-id="5c261-102">The <xref:System.Diagnostics.SymbolStore.SymWriter> class provides methods that define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c261-103">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5c261-104">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="5c261-104">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter(bool noUnderlyingWriter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter">
          <span data-ttu-id="5c261-105"><see langword="true" /> si un writer de symbole sous-jacent sera fourni en appelant la méthode <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> ; <see langword="false" /> s'il faut plutôt créer un writer de symbole sous-jacent par défaut.</span><span class="sxs-lookup"><span data-stu-id="5c261-105"><see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span></span></param>
        <summary><span data-ttu-id="5c261-106">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />, en spécifiant s'il faut créer un writer de symbole sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="5c261-106">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class, specifying whether to create an underlying symbol writer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c261-107">Ferme le <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> et valide les symboles dans le magasin de symboles.</span><span class="sxs-lookup"><span data-stu-id="5c261-107">Closes the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> and commits the symbols to the symbol store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-108">Après cet appel, le <xref:System.Diagnostics.SymbolStore.SymWriter> devient non valide pour les autres mises à jour.</span><span class="sxs-lookup"><span data-stu-id="5c261-108">After this call, the <xref:System.Diagnostics.SymbolStore.SymWriter> becomes invalid for further updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseMethod">
      <MemberSignature Language="C#" Value="public virtual void CloseMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c261-109">Ferme la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-109">Closes the current method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-110">Après la fermeture d’une méthode, vous ne pouvez pas définir un symbole à partir de la méthode.</span><span class="sxs-lookup"><span data-stu-id="5c261-110">After a method is closed, you cannot define a symbol from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseNamespace">
      <MemberSignature Language="C#" Value="public virtual void CloseNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseNamespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c261-111">Ferme l'espace de noms le plus récent.</span><span class="sxs-lookup"><span data-stu-id="5c261-111">Closes the most recent namespace.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseScope">
      <MemberSignature Language="C#" Value="public virtual void CloseScope (int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseScope(int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseScope (endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseScope(int endOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endOffset"><span data-ttu-id="5c261-112">Offset IL suivant immédiatement la dernière instruction de la portée.</span><span class="sxs-lookup"><span data-stu-id="5c261-112">The IL offset just past the last instruction in the scope.</span></span></param>
        <summary><span data-ttu-id="5c261-113">Ferme la portée lexicale actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-113">Closes the current lexical scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-114">Après la fermeture d’une étendue, vous ne pouvez pas définir une variable à partir de la méthode.</span><span class="sxs-lookup"><span data-stu-id="5c261-114">After a scope is closed, you cannot define a variable from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="5c261-115">URL identifiant le document.</span><span class="sxs-lookup"><span data-stu-id="5c261-115">The URL that identifies the document.</span></span></param>
        <param name="language"><span data-ttu-id="5c261-116">Langage du document.</span><span class="sxs-lookup"><span data-stu-id="5c261-116">The document language.</span></span> <span data-ttu-id="5c261-117">Ce paramètre peut être <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-117">This parameter can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="5c261-118">Identité du fournisseur pour le langage du document.</span><span class="sxs-lookup"><span data-stu-id="5c261-118">The identity of the vendor for the document language.</span></span> <span data-ttu-id="5c261-119">Ce paramètre peut être <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-119">This parameter can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="documentType"><span data-ttu-id="5c261-120">Type du document.</span><span class="sxs-lookup"><span data-stu-id="5c261-120">The type of the document.</span></span> <span data-ttu-id="5c261-121">Ce paramètre peut être <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-121">This parameter can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <summary><span data-ttu-id="5c261-122">Définit un document source.</span><span class="sxs-lookup"><span data-stu-id="5c261-122">Defines a source document.</span></span></summary>
        <returns><span data-ttu-id="5c261-123">Objet <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> qui représente le document.</span><span class="sxs-lookup"><span data-stu-id="5c261-123">The <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> object that represents the document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineField(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineField (parent As SymbolToken, name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineField(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="5c261-124">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-124">This parameter is not used.</span></span></param>
        <param name="name"><span data-ttu-id="5c261-125">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-125">This parameter is not used.</span></span></param>
        <param name="attributes"><span data-ttu-id="5c261-126">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-126">This parameter is not used.</span></span></param>
        <param name="signature"><span data-ttu-id="5c261-127">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-127">This parameter is not used.</span></span></param>
        <param name="addrKind"><span data-ttu-id="5c261-128">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-128">This parameter is not used.</span></span></param>
        <param name="addr1"><span data-ttu-id="5c261-129">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-129">This parameter is not used.</span></span></param>
        <param name="addr2"><span data-ttu-id="5c261-130">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-130">This parameter is not used.</span></span></param>
        <param name="addr3"><span data-ttu-id="5c261-131">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-131">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="5c261-132">Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-132">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c261-133">Dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-133">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineGlobalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineGlobalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineGlobalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5c261-134">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-134">This parameter is not used.</span></span></param>
        <param name="attributes"><span data-ttu-id="5c261-135">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-135">This parameter is not used.</span></span></param>
        <param name="signature"><span data-ttu-id="5c261-136">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-136">This parameter is not used.</span></span></param>
        <param name="addrKind"><span data-ttu-id="5c261-137">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-137">This parameter is not used.</span></span></param>
        <param name="addr1"><span data-ttu-id="5c261-138">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-138">This parameter is not used.</span></span></param>
        <param name="addr2"><span data-ttu-id="5c261-139">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-139">This parameter is not used.</span></span></param>
        <param name="addr3"><span data-ttu-id="5c261-140">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-140">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="5c261-141">Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-141">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c261-142">Dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-142">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineLocalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineLocalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineLocalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineLocalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5c261-143">Nom de la variable locale.</span><span class="sxs-lookup"><span data-stu-id="5c261-143">The local variable name.</span></span></param>
        <param name="attributes"><span data-ttu-id="5c261-144">Attributs de la variable locale spécifiés à l'aide de l'énumérateur <see cref="T:System.Reflection.FieldAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-144">The local variable attributes specified using the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span></span></param>
        <param name="signature"><span data-ttu-id="5c261-145">Signature de la variable locale.</span><span class="sxs-lookup"><span data-stu-id="5c261-145">The local variable signature.</span></span></param>
        <param name="addrKind"><span data-ttu-id="5c261-146">Types d’adresses pour <c>addr1</c>, <c>addr2</c> et <c>addr3</c> à l’aide de <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-146">The address types for <c>addr1</c>, <c>addr2</c>, and <c>addr3</c> using <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span></span></param>
        <param name="addr1"><span data-ttu-id="5c261-147">Première adresse de la spécification de variable locale.</span><span class="sxs-lookup"><span data-stu-id="5c261-147">The first address for the local variable specification.</span></span></param>
        <param name="addr2"><span data-ttu-id="5c261-148">Deuxième adresse de la spécification de variable locale.</span><span class="sxs-lookup"><span data-stu-id="5c261-148">The second address for the local variable specification.</span></span></param>
        <param name="addr3"><span data-ttu-id="5c261-149">Troisième adresse de la spécification de variable locale.</span><span class="sxs-lookup"><span data-stu-id="5c261-149">The third address for the local variable specification.</span></span></param>
        <param name="startOffset"><span data-ttu-id="5c261-150">Offset de début de la variable.</span><span class="sxs-lookup"><span data-stu-id="5c261-150">The start offset for the variable.</span></span> <span data-ttu-id="5c261-151">Si la valeur est zéro, ce paramètre est ignoré et la variable est définie dans l'ensemble de la portée.</span><span class="sxs-lookup"><span data-stu-id="5c261-151">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="5c261-152">Si la valeur est différente de zéro, il est compris entre les offsets de la portée actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-152">If nonzero, it falls within the offsets of the current scope.</span></span></param>
        <param name="endOffset"><span data-ttu-id="5c261-153">Offset de fin de la variable.</span><span class="sxs-lookup"><span data-stu-id="5c261-153">The end offset for the variable.</span></span> <span data-ttu-id="5c261-154">Si la valeur est zéro, ce paramètre est ignoré et la variable est définie dans l'ensemble de la portée.</span><span class="sxs-lookup"><span data-stu-id="5c261-154">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="5c261-155">Si la valeur est différente de zéro, il est compris entre les offsets de la portée actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-155">If nonzero, it falls within the offsets of the current scope.</span></span></param>
        <summary><span data-ttu-id="5c261-156">Définit une variable unique dans la portée lexicale actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-156">Defines a single variable in the current lexical scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-157">Le `startOffset` et `endOffset` paramètres sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="5c261-157">The `startOffset` and `endOffset` parameters are optional.</span></span> <span data-ttu-id="5c261-158">Si sa valeur est zéro, ils sont ignorés et la variable est définie dans la portée entière.</span><span class="sxs-lookup"><span data-stu-id="5c261-158">If their value is zero, they are ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="5c261-159">Si sa valeur est différente de zéro, ils se situent entre les offsets de la portée actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-159">If their value is nonzero, they fall within the offsets of the current scope.</span></span>  
  
 <span data-ttu-id="5c261-160">Vous pouvez appeler <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> plusieurs fois pour une variable du même nom apparaît plusieurs fois dans différentes plages d’offsets une étendue.</span><span class="sxs-lookup"><span data-stu-id="5c261-160">You can call <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</span></span> <span data-ttu-id="5c261-161">(Dans ce cas, les offsets de début et de fin ne doivent pas se chevaucher.)</span><span class="sxs-lookup"><span data-stu-id="5c261-161">(In this case, start and end offsets must not overlap.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineParameter(string name, valuetype System.Reflection.ParameterAttributes attributes, int32 sequence, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineParameter (name As String, attributes As ParameterAttributes, sequence As Integer, addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineParameter(System::String ^ name, System::Reflection::ParameterAttributes attributes, int sequence, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5c261-162">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-162">This parameter is not used.</span></span></param>
        <param name="attributes"><span data-ttu-id="5c261-163">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-163">This parameter is not used.</span></span></param>
        <param name="sequence"><span data-ttu-id="5c261-164">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-164">This parameter is not used.</span></span></param>
        <param name="addrKind"><span data-ttu-id="5c261-165">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-165">This parameter is not used.</span></span></param>
        <param name="addr1"><span data-ttu-id="5c261-166">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-166">This parameter is not used.</span></span></param>
        <param name="addr2"><span data-ttu-id="5c261-167">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-167">This parameter is not used.</span></span></param>
        <param name="addr3"><span data-ttu-id="5c261-168">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-168">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="5c261-169">Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-169">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c261-170">Dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-170">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineSequencePoints(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int32[] offsets, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineSequencePoints (document As ISymbolDocumentWriter, offsets As Integer(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineSequencePoints(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ document, cli::array &lt;int&gt; ^ offsets, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="5c261-171">Objet de document pour lequel sont définis les points de séquence.</span><span class="sxs-lookup"><span data-stu-id="5c261-171">The document object for which the sequence points are being defined.</span></span></param>
        <param name="offsets"><span data-ttu-id="5c261-172">Offset IL des points de séquence mesuré à partir du début de la méthode.</span><span class="sxs-lookup"><span data-stu-id="5c261-172">The IL offset of the sequence points measured from the beginning of the method.</span></span></param>
        <param name="lines"><span data-ttu-id="5c261-173">Numéros de lignes de début des points de séquence.</span><span class="sxs-lookup"><span data-stu-id="5c261-173">The starting line numbers of the sequence points.</span></span></param>
        <param name="columns"><span data-ttu-id="5c261-174">Numéros de colonnes de début des points de séquence.</span><span class="sxs-lookup"><span data-stu-id="5c261-174">The starting column numbers of the sequence points.</span></span></param>
        <param name="endLines"><span data-ttu-id="5c261-175">Numéros de lignes de fin des points de séquence.</span><span class="sxs-lookup"><span data-stu-id="5c261-175">The ending line numbers of the sequence points.</span></span></param>
        <param name="endColumns"><span data-ttu-id="5c261-176">Numéros de colonnes de fin des points de séquence.</span><span class="sxs-lookup"><span data-stu-id="5c261-176">The ending column numbers of the sequence points.</span></span></param>
        <summary><span data-ttu-id="5c261-177">Définit un groupe de points de séquence dans la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-177">Defines a group of sequence points within the current method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-178">Points de séquence sont utilisés pour le mappage entre les emplacements des fichiers sources et les offsets IL.</span><span class="sxs-lookup"><span data-stu-id="5c261-178">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="5c261-179">Chaque point de séquence se compose d’un langage intermédiaire offset et la source de fichier région, spécifiée par les numéros de début et de fin de ligne/colonne relatif à un <xref:System.Diagnostics.SymbolStore.ISymbolDocument> objet.</span><span class="sxs-lookup"><span data-stu-id="5c261-179">Each sequence point consists of an IL offset and source file region, specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="5c261-180">Chaque élément à un index spécifique de chaque tableau correspond à un point de séquence spécifique.</span><span class="sxs-lookup"><span data-stu-id="5c261-180">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="5c261-181">Chaque ligne et chaque colonne définissent le début d’une instruction dans une méthode.</span><span class="sxs-lookup"><span data-stu-id="5c261-181">Each line and each column defines the start of a statement within a method.</span></span> <span data-ttu-id="5c261-182">Les tableaux doivent être triés dans l’ordre croissant des offsets.</span><span class="sxs-lookup"><span data-stu-id="5c261-182">The arrays should be sorted in the increasing order of offsets.</span></span> <span data-ttu-id="5c261-183">L’offset est toujours le décalage à partir du début de la méthode, en octets.</span><span class="sxs-lookup"><span data-stu-id="5c261-183">The offset is always the offset from the start of the method, in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c261-184">Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-184">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="5c261-185"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="5c261-185"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5c261-186">Appelé par les méthodes <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> et <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> pour libérer les ressources managées et non managées utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.SymbolStore.SymWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-186">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-187">Cette méthode est appelée uniquement par le public <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> et <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> méthodes ; n’appelez pas cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="5c261-187">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymWriter ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c261-188">Libère les ressources non managées et exécute d'autres opérations de nettoyage avant la récupération du <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="5c261-188">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-189">Cette méthode substitue <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5c261-189">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="5c261-190">Code d’application ne doit pas appeler cette méthode ; d’un objet `Finalize` méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="5c261-190">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWriter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.GetWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::Private::ISymUnmanagedWriter* GetWriter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(native int emitter, string filename, bool fFullBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (emitter As IntPtr, filename As String, fFullBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(IntPtr emitter, System::String ^ filename, bool fFullBuild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitter" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fFullBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitter"><span data-ttu-id="5c261-191">Interface d'émetteur de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="5c261-191">The metadata emitter interface.</span></span></param>
        <param name="filename"><span data-ttu-id="5c261-192">Nom de fichier pour lequel sont écrits les symboles de débogage.</span><span class="sxs-lookup"><span data-stu-id="5c261-192">The file name for which the debugging symbols are written.</span></span> <span data-ttu-id="5c261-193">Certains writers requièrent un nom de fichier, tandis que d'autres ne l'exigent pas.</span><span class="sxs-lookup"><span data-stu-id="5c261-193">Some writers require a file name, while others do not.</span></span> <span data-ttu-id="5c261-194">Si vous spécifiez un nom de fichier pour un writer qui n'utilise pas les noms de fichiers, ce paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="5c261-194">If a file name is specified for a writer that does not use file names, this parameter is ignored.</span></span></param>
        <param name="fFullBuild">
          <span data-ttu-id="5c261-195"><see langword="true" /> indique qu'il s'agit d'une régénération complète ; <see langword="false" /> indique qu'il s'agit d'une compilation incrémentielle.</span><span class="sxs-lookup"><span data-stu-id="5c261-195"><see langword="true" /> indicates that this is a full rebuild; <see langword="false" /> indicates an incremental compilation.</span></span></param>
        <summary><span data-ttu-id="5c261-196">Définit l'interface d'émetteur de métadonnées à associer à ce writer.</span><span class="sxs-lookup"><span data-stu-id="5c261-196">Sets the metadata emitter interface to associate with this writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-197"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> définit également le nom de fichier de sortie où sont écrits les symboles de débogage.</span><span class="sxs-lookup"><span data-stu-id="5c261-197"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> also sets the output file name where the debugging symbols are written.</span></span> <span data-ttu-id="5c261-198">Cette méthode peut être appelée qu’une seule fois et doit être appelée avant toute autre méthode de writer est appelées.</span><span class="sxs-lookup"><span data-stu-id="5c261-198">This method can be called only once and must be called before any other writer methods are called.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5c261-199">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="5c261-199">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InitWriter">
      <MemberSignature Language="C#" Value="public void InitWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitWriter(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitWriter (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitWriter(bool noUnderlyingWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter">
          <span data-ttu-id="5c261-200"><see langword="true" /> si un writer de symbole sous-jacent sera fourni en appelant la méthode <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> ; <see langword="false" /> s'il faut plutôt créer un writer de symbole sous-jacent par défaut.</span><span class="sxs-lookup"><span data-stu-id="5c261-200"><see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span></span></param>
        <summary><span data-ttu-id="5c261-201">Initialise le writer de symbole.</span><span class="sxs-lookup"><span data-stu-id="5c261-201">Initializes the symbol writer.</span></span> <span data-ttu-id="5c261-202">Cette méthode ne doit pas être appelée directement ; elle est appelée par le constructeur.</span><span class="sxs-lookup"><span data-stu-id="5c261-202">This method should not be called directly; it is called by the constructor.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5c261-203">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="5c261-203">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OpenMethod">
      <MemberSignature Language="C#" Value="public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenMethod (method As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="5c261-204">Jeton de métadonnées de la méthode à ouvrir.</span><span class="sxs-lookup"><span data-stu-id="5c261-204">The metadata token for the method to be opened.</span></span></param>
        <summary><span data-ttu-id="5c261-205">Ouvre une méthode dans laquelle placer des informations de symboles.</span><span class="sxs-lookup"><span data-stu-id="5c261-205">Opens a method in which to place symbol information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-206">La méthode spécifiée devient la méthode actuelle pour les appels à définir des points de séquence, les paramètres et les portées lexicales.</span><span class="sxs-lookup"><span data-stu-id="5c261-206">The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</span></span> <span data-ttu-id="5c261-207">Il existe une portée lexicale implicite autour de la totalité de la méthode.</span><span class="sxs-lookup"><span data-stu-id="5c261-207">There is an implicit lexical scope around the entire method.</span></span> <span data-ttu-id="5c261-208">Rouvrir une méthode qui a été précédemment fermée efface tous les symboles précédemment définis pour la méthode.</span><span class="sxs-lookup"><span data-stu-id="5c261-208">Reopening a method that has been previously closed erases any previously defined symbols for the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNamespace">
      <MemberSignature Language="C#" Value="public virtual void OpenNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenNamespace (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenNamespace(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5c261-209">Nom du nouvel espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5c261-209">The name of the new namespace.</span></span></param>
        <summary><span data-ttu-id="5c261-210">Ouvre un nouvel espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5c261-210">Opens a new namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-211">Appelez cette méthode avant de définir des méthodes ou des variables qui existent dans un espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5c261-211">Call this method before defining methods or variables that exist within a namespace.</span></span> <span data-ttu-id="5c261-212">Espaces de noms peuvent être imbriquées.</span><span class="sxs-lookup"><span data-stu-id="5c261-212">Namespaces can be nested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenScope">
      <MemberSignature Language="C#" Value="public virtual int OpenScope (int startOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 OpenScope(int32 startOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenScope (startOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int OpenScope(int startOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startOffset"><span data-ttu-id="5c261-213">Offset IL, en octets, du début de la méthode à la première instruction dans la portée lexicale.</span><span class="sxs-lookup"><span data-stu-id="5c261-213">The IL offset in bytes from the beginning of the method to the first instruction in the lexical scope.</span></span></param>
        <summary><span data-ttu-id="5c261-214">Ouvre une nouvelle portée lexicale dans la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-214">Opens a new lexical scope in the current method.</span></span></summary>
        <returns><span data-ttu-id="5c261-215">Identificateur de portée opaque pouvant être utilisé avec <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> pour définir ultérieurement les offsets de début et de fin d'une portée.</span><span class="sxs-lookup"><span data-stu-id="5c261-215">An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time.</span></span> <span data-ttu-id="5c261-216">Dans ce cas, les offsets passés à <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> et <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="5c261-216">In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> are ignored.</span></span> <span data-ttu-id="5c261-217">Un identificateur de portée est valide uniquement dans la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-217">A scope identifier is valid only in the current method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-218">Cette portée devient la nouvelle portée actuelle et est placée sur une pile d’étendues.</span><span class="sxs-lookup"><span data-stu-id="5c261-218">This scope becomes the new current scope and is pushed onto a stack of scopes.</span></span> <span data-ttu-id="5c261-219">Les portées doivent former une hiérarchie.</span><span class="sxs-lookup"><span data-stu-id="5c261-219">Scopes must form a hierarchy.</span></span> <span data-ttu-id="5c261-220">Frères ne sont pas autorisées à chevaucher.</span><span class="sxs-lookup"><span data-stu-id="5c261-220">Siblings are not allowed to overlap.</span></span>  
  
 <span data-ttu-id="5c261-221">Les identificateurs de portée sont valides uniquement dans la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="5c261-221">Scope identifiers are only valid in the current method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethodSourceRange">
      <MemberSignature Language="C#" Value="public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMethodSourceRange(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int32 startLine, int32 startColumn, class System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMethodSourceRange (startDoc As ISymbolDocumentWriter, startLine As Integer, startColumn As Integer, endDoc As ISymbolDocumentWriter, endLine As Integer, endColumn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMethodSourceRange(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ startDoc, int startLine, int startColumn, System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ endDoc, int endLine, int endColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDoc"><span data-ttu-id="5c261-222">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-222">This parameter is not used.</span></span></param>
        <param name="startLine"><span data-ttu-id="5c261-223">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-223">This parameter is not used.</span></span></param>
        <param name="startColumn"><span data-ttu-id="5c261-224">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-224">This parameter is not used.</span></span></param>
        <param name="endDoc"><span data-ttu-id="5c261-225">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-225">This parameter is not used.</span></span></param>
        <param name="endLine"><span data-ttu-id="5c261-226">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-226">This parameter is not used.</span></span></param>
        <param name="endColumn"><span data-ttu-id="5c261-227">Ce paramètre n'est pas utilisé.</span><span class="sxs-lookup"><span data-stu-id="5c261-227">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="5c261-228">Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-228">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5c261-229">Dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="5c261-229">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopeRange">
      <MemberSignature Language="C#" Value="public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScopeRange(int32 scopeID, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScopeRange (scopeID As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScopeRange(int scopeID, int startOffset, int endOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeID" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeID"><span data-ttu-id="5c261-230">Identificateur de la portée lexicale retourné par la méthode <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="5c261-230">The identifier of the lexical scope returned by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> method.</span></span></param>
        <param name="startOffset"><span data-ttu-id="5c261-231">Offset IL du début de la portée lexicale.</span><span class="sxs-lookup"><span data-stu-id="5c261-231">The IL offset of the beginning of the lexical scope.</span></span></param>
        <param name="endOffset"><span data-ttu-id="5c261-232">Offset IL de la fin de la portée lexicale.</span><span class="sxs-lookup"><span data-stu-id="5c261-232">The IL offset of the end of the lexical scope.</span></span></param>
        <summary><span data-ttu-id="5c261-233">Définit la plage d'offsets pour la portée lexicale spécifiée.</span><span class="sxs-lookup"><span data-stu-id="5c261-233">Defines the offset range for the specified lexical scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSymAttribute (parent As SymbolToken, name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="5c261-234">Jeton de métadonnées pour lequel est défini l'attribut.</span><span class="sxs-lookup"><span data-stu-id="5c261-234">The metadata token for which the attribute is being defined.</span></span></param>
        <param name="name"><span data-ttu-id="5c261-235">Nom de l'attribut.</span><span class="sxs-lookup"><span data-stu-id="5c261-235">The attribute name.</span></span></param>
        <param name="data"><span data-ttu-id="5c261-236">Valeur de l'attribut.</span><span class="sxs-lookup"><span data-stu-id="5c261-236">The attribute value.</span></span></param>
        <summary><span data-ttu-id="5c261-237">Définit un attribut lorsque son nom et sa valeur sont fournis.</span><span class="sxs-lookup"><span data-stu-id="5c261-237">Defines an attribute when given the attribute name and the attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-238">Le <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> méthode n’est associé aux informations symboliques et n’est pas un attribut personnalisé de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="5c261-238">The <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> method is only associated with symbolic information and is not a metadata custom attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUnderlyingWriter">
      <MemberSignature Language="C#" Value="public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUnderlyingWriter(native int underlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUnderlyingWriter (underlyingWriter As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUnderlyingWriter(IntPtr underlyingWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="underlyingWriter" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="underlyingWriter"><span data-ttu-id="5c261-239">Pointeur de type <see cref="T:System.IntPtr" /> vers du code qui est le writer sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="5c261-239">An <see cref="T:System.IntPtr" /> type pointer to code that is the underlying writer.</span></span></param>
        <summary><span data-ttu-id="5c261-240">Définit l’interface sous-jacente [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (API non managée correspondante) utilisée par un <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> managé pour émettre des symboles.</span><span class="sxs-lookup"><span data-stu-id="5c261-240">Sets the underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) that a managed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> uses to emit symbols.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-241">Sous-jacent [ISymUnmanagedWriter (Interface)](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (l’API non managée correspondante) interface représente un writer de symbole pour le code managé.</span><span class="sxs-lookup"><span data-stu-id="5c261-241">The underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) interface represents a symbol writer for managed code.</span></span> <span data-ttu-id="5c261-242">L’interface fournit des méthodes pour définir des documents, les points de séquence, les portées lexicales et variables.</span><span class="sxs-lookup"><span data-stu-id="5c261-242">The interface provides methods to define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="5c261-243">Pour pouvoir accéder au code non managé.</span><span class="sxs-lookup"><span data-stu-id="5c261-243">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserEntryPoint(valuetype System.Diagnostics.SymbolStore.SymbolToken entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUserEntryPoint (entryMethod As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserEntryPoint(System::Diagnostics::SymbolStore::SymbolToken entryMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="entryMethod"><span data-ttu-id="5c261-244">Jeton de métadonnées pour la méthode correspondant au point d'entrée utilisateur.</span><span class="sxs-lookup"><span data-stu-id="5c261-244">The metadata token for the method that is the user entry point.</span></span></param>
        <summary><span data-ttu-id="5c261-245">Identifie la méthode définie par l'utilisateur comme point d'entrée du module actuel.</span><span class="sxs-lookup"><span data-stu-id="5c261-245">Identifies the user-defined method as the entry point for the current module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-246">Il s’agit normalement la méthode principale.</span><span class="sxs-lookup"><span data-stu-id="5c261-246">This is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingNamespace">
      <MemberSignature Language="C#" Value="public virtual void UsingNamespace (string fullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UsingNamespace(string fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UsingNamespace (fullName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UsingNamespace(System::String ^ fullName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullName"><span data-ttu-id="5c261-247">Nom complet de l'espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5c261-247">The fully qualified name of the namespace.</span></span></param>
        <summary><span data-ttu-id="5c261-248">Spécifie que le nom d'espace de noms complet donné est utilisé dans la portée lexicale ouverte.</span><span class="sxs-lookup"><span data-stu-id="5c261-248">Specifies that the given, fully qualified namespace name is used within the open lexical scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c261-249">Fermeture de la portée actuelle empêche cette étendue de l’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="5c261-249">Closing the current scope prevents this scope from using the namespace.</span></span> <span data-ttu-id="5c261-250">L’espace de noms continue à être utilisée dans toutes les portées qui héritent de la portée ouverte en cours.</span><span class="sxs-lookup"><span data-stu-id="5c261-250">The namespace remains in use in all scopes that inherit from the current open scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>