<Type Name="SymBinder" FullName="System.Diagnostics.SymbolStore.SymBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4968d66cc658965bd0e51f43752ae43454a327f1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymBinder : System.Diagnostics.SymbolStore.SymBinderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolBinder, System.Diagnostics.SymbolStore.ISymbolBinder1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymBinder extends System.Diagnostics.SymbolStore.SymBinderBase implements class System.Diagnostics.SymbolStore.ISymbolBinder, class System.Diagnostics.SymbolStore.ISymbolBinder1, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymBinder" />
  <TypeSignature Language="VB.NET" Value="Public Class SymBinder&#xA;Inherits SymBinderBase&#xA;Implements IDisposable, ISymbolBinder, ISymbolBinder1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymBinder : System::Diagnostics::SymbolStore::SymBinderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolBinder, System::Diagnostics::SymbolStore::ISymbolBinder1" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymBinderBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolBinder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolBinder1</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8b0f-101">Représente un binder de symboles pour le code managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8b0f-101">Represents a symbol binder for managed code.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8b0f-102">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-102">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e8b0f-103">Pour pouvoir accéder au code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-103">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="e8b0f-104">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-104">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8b0f-105">Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-105">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8b0f-106">Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-106">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="e8b0f-107">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-107">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8b0f-108">Appelé par les méthodes <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" /> et <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" /> pour libérer les ressources managées et non managées utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-108">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8b0f-109">Cette méthode est appelée uniquement par le public <xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A> et <xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A> méthodes ; n’appelez pas cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="e8b0f-109">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymBinder ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8b0f-110">Libère les ressources détenues par l’instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-110">Releases the resources held by the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8b0f-111">Cette méthode se substitue à <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8b0f-111">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="e8b0f-112">Code d’application ne doit pas appeler cette méthode ; d’un objet `Finalize` méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e8b0f-112">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReader">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8b0f-113">Obtient l'interface du lecteur de symboles pour le fichier actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-113">Gets the interface of the symbol reader for the current file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (int importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(int32 importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReader (importer As Integer, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(int importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SymBinder.GetReader(IntPtr, String). ISymbolBinder1.GetReader takes the importer interface pointer as an IntPtr instead of an Int32, and thus works on both 32-bit and 64-bit architectures. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.Int32" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer">
          <span data-ttu-id="e8b0f-114">Entier 32 bits qui pointe vers l'interface d'importation de métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-114">A 32-bit integer that points to the metadata import interface.</span>
          </span>
        </param>
        <param name="filename">
          <span data-ttu-id="e8b0f-115">Nom du fichier pour lequel l'interface de lecteur est requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-115">The name of the file for which the reader interface is required.</span>
          </span>
        </param>
        <param name="searchPath">
          <span data-ttu-id="e8b0f-116">Chemin de recherche utilisé pour localiser le fichier de symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-116">The search path used to locate the symbol file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8b0f-117">Obtient l’interface du lecteur de symboles pour le fichier actif à l’aide du pointeur d’entier 32 bits spécifié vers une interface de métadonnées, du nom de fichier spécifié et du chemin de recherche spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-117">Gets the interface of the symbol reader for the current file, using the specified 32-bit integer pointer to a metadata interface, the specified file name, and the specified search path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8b0f-118">Interface qui lit les symboles de débogage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-118">The interface that reads the debugging symbols.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8b0f-119">Lorsqu’un pointeur vers une interface de métadonnées, un nom de fichier et un chemin de recherche, le <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> méthode retourne la <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface qui lit les symboles de débogage associés au module.</span><span class="sxs-lookup"><span data-stu-id="e8b0f-119">When given a pointer to a metadata interface, a file name, and a search path, the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8b0f-120">À l’aide d’un entier 32 bits en tant que pointeur n’est pas recommandée.</span><span class="sxs-lookup"><span data-stu-id="e8b0f-120">Using a 32-bit integer as a pointer is not recommended.</span></span> <span data-ttu-id="e8b0f-121">Utilisez le <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> à la place de surcharge.</span><span class="sxs-lookup"><span data-stu-id="e8b0f-121">Use the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e8b0f-122">Pour pouvoir accéder au code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-122">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="e8b0f-123">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-123">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="e8b0f-124">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (IntPtr importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(native int importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReader (importer As IntPtr, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(IntPtr importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer">
          <span data-ttu-id="e8b0f-125">Structure pointant vers l'interface d'importation de métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-125">A structure that points to the metadata import interface.</span>
          </span>
        </param>
        <param name="filename">
          <span data-ttu-id="e8b0f-126">Nom du fichier pour lequel l'interface de lecteur est requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-126">The name of the file for which the reader interface is required.</span>
          </span>
        </param>
        <param name="searchPath">
          <span data-ttu-id="e8b0f-127">Chemin de recherche utilisé pour localiser le fichier de symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-127">The search path used to locate the symbol file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8b0f-128">Obtient l’interface du lecteur de symboles pour le fichier actif à l’aide du pointeur spécifié vers une interface de métadonnées, du nom de fichier spécifié et du chemin de recherche spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-128">Gets the interface of the symbol reader for the current file, using the specified pointer to a metadata interface, the specified file name, and the specified search path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8b0f-129">Interface qui lit les symboles de débogage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-129">The interface that reads the debugging symbols.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8b0f-130">Lorsqu’un pointeur vers une interface de métadonnées, un nom de fichier et un chemin de recherche, le <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> méthode retourne la <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface qui lit les symboles de débogage associés au module.</span><span class="sxs-lookup"><span data-stu-id="e8b0f-130">When given a pointer to a metadata interface, a file name, and a search path, the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e8b0f-131">Pour pouvoir accéder au code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-131">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="e8b0f-132">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="e8b0f-133">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e8b0f-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>