<Type Name="ISymbolWriter" FullName="System.Diagnostics.SymbolStore.ISymbolWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae24176834c2470129ae4b3c987690395fc2e7c6" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48757579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISymbolWriter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISymbolWriter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.ISymbolWriter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISymbolWriter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISymbolWriter" />
  <TypeSignature Language="F#" Value="type ISymbolWriter = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2b03b-101">Représente un writer de symboles pour le code managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b03b-101">Represents a symbol writer for managed code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-102">Le <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface fournit des méthodes qui définissent des documents, les points de séquence, les portées lexicales et variables.</span><span class="sxs-lookup"><span data-stu-id="2b03b-102">The <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface provides methods that define documents, sequence points, lexical scopes, and variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b03b-103">Cette interface est l’équivalent managé de la `ISymUnmanagedWriter` interface, qui est une des interfaces de magasin de symboles non managées qui offre une alternative pour lire et écrire des informations symboliques de débogage.</span><span class="sxs-lookup"><span data-stu-id="2b03b-103">This interface is the managed counterpart of the `ISymUnmanagedWriter` interface, which is one of the unmanaged symbol store interfaces that provides an alternative way to read and write debug symbol information.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Reflection.Emit.ModuleBuilder.GetSymWriter" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iSymbolWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b03b-104">Ferme <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> et valide les symboles dans le magasin de symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-104">Closes <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> and commits the symbols to the symbol store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-105">Après cet appel, <xref:System.Diagnostics.SymbolStore.ISymbolWriter> devient non valide pour les nouvelles mises à jour.</span><span class="sxs-lookup"><span data-stu-id="2b03b-105">After this call, <xref:System.Diagnostics.SymbolStore.ISymbolWriter> becomes invalid for further updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseMethod">
      <MemberSignature Language="C#" Value="public void CloseMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseMethod();" />
      <MemberSignature Language="F#" Value="abstract member CloseMethod : unit -&gt; unit" Usage="iSymbolWriter.CloseMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b03b-106">Ferme la méthode en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-106">Closes the current method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-107">Lorsqu’une méthode est fermée, vous ne peut pas définir un symbole de qu’il contient.</span><span class="sxs-lookup"><span data-stu-id="2b03b-107">After a method is closed, you cannot define a symbol from within it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseNamespace">
      <MemberSignature Language="C#" Value="public void CloseNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseNamespace();" />
      <MemberSignature Language="F#" Value="abstract member CloseNamespace : unit -&gt; unit" Usage="iSymbolWriter.CloseNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b03b-108">Ferme l'espace de noms le plus récent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-108">Closes the most recent namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseScope">
      <MemberSignature Language="C#" Value="public void CloseScope (int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseScope(int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseScope (endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseScope(int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member CloseScope : int -&gt; unit" Usage="iSymbolWriter.CloseScope endOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endOffset">
          <span data-ttu-id="2b03b-109">Points figurant au-delà de la dernière instruction dans la portée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-109">The points past the last instruction in the scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-110">Ferme la portée lexicale en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-110">Closes the current lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-111">Après la fermeture d’une étendue vous ne pouvez pas définir une variable à partir d’elle.</span><span class="sxs-lookup"><span data-stu-id="2b03b-111">After a scope is closed, you cannot define a variable from within it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="iSymbolWriter.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="2b03b-112">URL identifiant le document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-112">The URL that identifies the document.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="2b03b-113">Langage du document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-113">The document language.</span>
          </span>
          <span data-ttu-id="2b03b-114">Ce paramètre peut être <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-114">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="2b03b-115">Identité du fournisseur pour le langage du document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-115">The identity of the vendor for the document language.</span>
          </span>
          <span data-ttu-id="2b03b-116">Ce paramètre peut être <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-116">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="2b03b-117">Type du document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-117">The type of the document.</span>
          </span>
          <span data-ttu-id="2b03b-118">Ce paramètre peut être <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-118">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-119">Définit un document source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-119">Defines a source document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b03b-120">Objet qui représente le document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-120">The object that represents the document.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineField(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineField (parent As SymbolToken, name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineField(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="iSymbolWriter.DefineField (parent, name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="2b03b-121">Type de métadonnées ou jeton de méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-121">The metadata type or method token.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2b03b-122">Nom du champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-122">The field name.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="2b03b-123">Combinaison d'opérations de bits des attributs d'un champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-123">A bitwise combination of the field attributes.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="2b03b-124">Signature du champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-124">The field signature.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="2b03b-125">Types d’adresses pour <c>addr1</c> et <c>addr2</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-125">The address types for <c>addr1</c> and <c>addr2</c>.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="2b03b-126">Première adresse de la spécification de champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-126">The first address for the field specification.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="2b03b-127">Seconde adresse de la spécification de champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-127">The second address for the field specification.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="2b03b-128">Troisième adresse de la spécification de champ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-128">The third address for the field specification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-129">Définit un champ dans un type ou un champ global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-129">Defines a field in a type or a global field.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-130">Le <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A> méthode définit une variable unique qui n’est pas dans une méthode à l’aide des champs spécifiés dans les classes, les champs de bits et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="2b03b-130">The <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A> method defines a single variable that is not within a method by using specified fields in classes, bit fields, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalVariable">
      <MemberSignature Language="C#" Value="public void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineGlobalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineGlobalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineGlobalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="iSymbolWriter.DefineGlobalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2b03b-131">Nom de la variable globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-131">The global variable name.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="2b03b-132">Combinaison d'opérations de bits des attributs de variable globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-132">A bitwise combination of the global variable attributes.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="2b03b-133">Signature de la variable globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-133">The global variable signature.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="2b03b-134">Types d’adresses pour <c>addr1</c>, <c>addr2</c> et <c>addr3</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-134">The address types for <c>addr1</c>, <c>addr2</c>, and <c>addr3</c>.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="2b03b-135">Première adresse de la spécification de variable globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-135">The first address for the global variable specification.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="2b03b-136">Seconde adresse de la spécification de variable globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-136">The second address for the global variable specification.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="2b03b-137">Troisième adresse de la spécification de variable globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-137">The third address for the global variable specification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-138">Définit une variable globale unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-138">Defines a single global variable.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineLocalVariable">
      <MemberSignature Language="C#" Value="public void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineLocalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineLocalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineLocalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit" Usage="iSymbolWriter.DefineLocalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2b03b-139">Nom de la variable locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-139">The local variable name.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="2b03b-140">Combinaison d'opérations de bits des attributs de variable locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-140">A bitwise combination of the local variable attributes.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="2b03b-141">Signature de la variable locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-141">The local variable signature.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="2b03b-142">Types d’adresses pour <c>addr1</c>, <c>addr2</c> et <c>addr3</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-142">The address types for <c>addr1</c>, <c>addr2</c>, and <c>addr3</c>.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="2b03b-143">Première adresse de la spécification de variable locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-143">The first address for the local variable specification.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="2b03b-144">Seconde adresse de la spécification de variable locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-144">The second address for the local variable specification.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="2b03b-145">Troisième adresse de la spécification de variable locale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-145">The third address for the local variable specification.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="2b03b-146">Offset de début de la variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-146">The start offset for the variable.</span>
          </span>
          <span data-ttu-id="2b03b-147">Si la valeur de ce paramètre est de zéro, il est ignoré et la variable est définie dans l'ensemble de la portée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-147">If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</span>
          </span>
          <span data-ttu-id="2b03b-148">Si la valeur de ce paramètre est différente de zéro, la variable est comprise entre les offsets de la portée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-148">If the parameter is nonzero, the variable falls within the offsets of the current scope.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="2b03b-149">Offset de fin de la variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-149">The end offset for the variable.</span>
          </span>
          <span data-ttu-id="2b03b-150">Si la valeur de ce paramètre est de zéro, il est ignoré et la variable est définie dans l'ensemble de la portée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-150">If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</span>
          </span>
          <span data-ttu-id="2b03b-151">Si la valeur de ce paramètre est différente de zéro, la variable est comprise entre les offsets de la portée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-151">If the parameter is nonzero, the variable falls within the offsets of the current scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-152">Définit une variable unique dans la portée lexicale actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-152">Defines a single variable in the current lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-153">Le `startOffset` et `endOffset` paramètres sont facultatifs.</span><span class="sxs-lookup"><span data-stu-id="2b03b-153">The `startOffset` and `endOffset` parameters are optional.</span></span> <span data-ttu-id="2b03b-154">Si leur valeur est zéro, ils sont ignorés et la variable est définie dans l’ensemble de la portée.</span><span class="sxs-lookup"><span data-stu-id="2b03b-154">If their value is zero, they are ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="2b03b-155">Si leur valeur est différente de zéro, la variable est comprise entre les offsets de la portée actuelle.</span><span class="sxs-lookup"><span data-stu-id="2b03b-155">If their value is nonzero, the variable falls within the offsets of the current scope.</span></span>  
  
 <span data-ttu-id="2b03b-156">Vous pouvez appeler <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A> plusieurs fois pour une variable du même nom apparaît plusieurs fois dans différentes plages d’offsets une étendue.</span><span class="sxs-lookup"><span data-stu-id="2b03b-156">You can call <xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</span></span> <span data-ttu-id="2b03b-157">(Dans ce cas, les décalages de début et de fin ne doivent pas se chevaucher.)</span><span class="sxs-lookup"><span data-stu-id="2b03b-157">(In this case, start and end offsets must not overlap.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineParameter(string name, valuetype System.Reflection.ParameterAttributes attributes, int32 sequence, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineParameter (name As String, attributes As ParameterAttributes, sequence As Integer, addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineParameter(System::String ^ name, System::Reflection::ParameterAttributes attributes, int sequence, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="iSymbolWriter.DefineParameter (name, attributes, sequence, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2b03b-158">Nom du paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-158">The parameter name.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="2b03b-159">Combinaison d'opérations de bits des attributs de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-159">A bitwise combination of the parameter attributes.</span>
          </span>
        </param>
        <param name="sequence">
          <span data-ttu-id="2b03b-160">Signature du paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-160">The parameter signature.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="2b03b-161">Types d’adresses pour <c>addr1</c>, <c>addr2</c> et <c>addr3</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-161">The address types for <c>addr1</c>, <c>addr2</c>, and <c>addr3</c>.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="2b03b-162">Première adresse de la spécification de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-162">The first address for the parameter specification.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="2b03b-163">Seconde adresse de la spécification de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-163">The second address for the parameter specification.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="2b03b-164">Troisième adresse de la spécification de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-164">The third address for the parameter specification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-165">Définit un paramètre unique dans la méthode en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-165">Defines a single parameter in the current method.</span>
          </span>
          <span data-ttu-id="2b03b-166">Le type de chaque paramètre est obtenu à partir de sa position dans la signature de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-166">The type of each parameter is taken from its position within the signature of the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-167">Si les paramètres sont définis dans les métadonnées pour une méthode donnée, vous n’êtes pas obligé de les définir à nouveau avec les appels à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="2b03b-167">If parameters are defined in the metadata for a given method, you do not have to define them again with calls to this method.</span></span> <span data-ttu-id="2b03b-168">Les lecteurs de symbole doivent vérifier ces paramètres dans les métadonnées standard et ensuite utiliser le magasin de symboles.</span><span class="sxs-lookup"><span data-stu-id="2b03b-168">Symbol readers need to check for these in the normal metadata first, and then use the symbol store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineSequencePoints">
      <MemberSignature Language="C#" Value="public void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineSequencePoints(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int32[] offsets, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineSequencePoints (document As ISymbolDocumentWriter, offsets As Integer(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineSequencePoints(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ document, cli::array &lt;int&gt; ^ offsets, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberSignature Language="F#" Value="abstract member DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit" Usage="iSymbolWriter.DefineSequencePoints (document, offsets, lines, columns, endLines, endColumns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="2b03b-169">Objet document pour lequel sont définis les points de séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-169">The document object for which the sequence points are being defined.</span>
          </span>
        </param>
        <param name="offsets">
          <span data-ttu-id="2b03b-170">Offsets de points de séquence, mesurés à partir du début des méthodes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-170">The sequence point offsets measured from the beginning of methods.</span>
          </span>
        </param>
        <param name="lines">
          <span data-ttu-id="2b03b-171">Lignes du document pour les points de séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-171">The document lines for the sequence points.</span>
          </span>
        </param>
        <param name="columns">
          <span data-ttu-id="2b03b-172">Positions du document pour les points de séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-172">The document positions for the sequence points.</span>
          </span>
        </param>
        <param name="endLines">
          <span data-ttu-id="2b03b-173">Lignes de fin du document pour les points de séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-173">The document end lines for the sequence points.</span>
          </span>
        </param>
        <param name="endColumns">
          <span data-ttu-id="2b03b-174">Positions de fin du document pour les points de séquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-174">The document end positions for the sequence points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-175">Définit un groupe de points de séquence dans la méthode en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-175">Defines a group of sequence points within the current method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-176">Chaque ligne et chaque colonne définissent le début d’une instruction dans une méthode.</span><span class="sxs-lookup"><span data-stu-id="2b03b-176">Each line and each column defines the start of a statement within a method.</span></span> <span data-ttu-id="2b03b-177">Les tableaux doivent être triés dans l’ordre croissant des offsets.</span><span class="sxs-lookup"><span data-stu-id="2b03b-177">The arrays should be sorted in increasing order of offsets.</span></span> <span data-ttu-id="2b03b-178">Le décalage est toujours le décalage à partir du début de la méthode, en octets.</span><span class="sxs-lookup"><span data-stu-id="2b03b-178">The offset is always the offset from the start of the method, in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (IntPtr emitter, string filename, bool fFullBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(native int emitter, string filename, bool fFullBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (emitter As IntPtr, filename As String, fFullBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(IntPtr emitter, System::String ^ filename, bool fFullBuild);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : nativeint * string * bool -&gt; unit" Usage="iSymbolWriter.Initialize (emitter, filename, fFullBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitter" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fFullBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitter">
          <span data-ttu-id="2b03b-179">Interface d'émetteur de métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-179">The metadata emitter interface.</span>
          </span>
        </param>
        <param name="filename">
          <span data-ttu-id="2b03b-180">Nom de fichier pour lequel sont écrits les symboles de débogage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-180">The file name for which the debugging symbols are written.</span>
          </span>
          <span data-ttu-id="2b03b-181">Certains writers requièrent un nom de fichier et d'autres non.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-181">Some writers require a file name, and others do not.</span>
          </span>
          <span data-ttu-id="2b03b-182">Si vous spécifiez un nom de fichier pour un writer qui n'utilise pas les noms de fichiers, ce paramètre est ignoré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-182">If a file name is specified for a writer that does not use file names, this parameter is ignored.</span>
          </span>
        </param>
        <param name="fFullBuild">
          <span data-ttu-id="2b03b-183">
            <see langword="true" /> indique qu'il s'agit d'une régénération complète ; <see langword="false" /> indique qu'il s'agit d'une compilation incrémentielle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-183">
              <see langword="true" /> indicates that this is a full rebuild; <see langword="false" /> indicates that this is an incremental compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-184">Définit l'interface d'émetteur de métadonnées à associer à un writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-184">Sets the metadata emitter interface to associate with a writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-185"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> définit également le nom de fichier de sortie dans lequel les symboles de débogage sont écrits.</span><span class="sxs-lookup"><span data-stu-id="2b03b-185"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> also sets the output file name where the debugging symbols are written.</span></span> <span data-ttu-id="2b03b-186">Cette méthode peut être appelée qu’une seule fois et doit être appelée avant toute autre méthode de writer.</span><span class="sxs-lookup"><span data-stu-id="2b03b-186">This method can be called only once and must be called before any other writer methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenMethod">
      <MemberSignature Language="C#" Value="public void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenMethod (method As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="iSymbolWriter.OpenMethod method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="2b03b-187">Jeton de métadonnées de la méthode à ouvrir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-187">The metadata token for the method to be opened.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-188">Ouvre une méthode pour y placer des informations de symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-188">Opens a method to place symbol information into.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-189">La méthode spécifiée devient la méthode actuelle pour les appels à définir des points de séquence, les paramètres et les portées lexicales.</span><span class="sxs-lookup"><span data-stu-id="2b03b-189">The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</span></span> <span data-ttu-id="2b03b-190">Il existe une portée lexicale implicite autour de la méthode entière.</span><span class="sxs-lookup"><span data-stu-id="2b03b-190">There is an implicit lexical scope around the entire method.</span></span> <span data-ttu-id="2b03b-191">La réouverture d’une méthode qui a été fermée précédemment supprime tous les symboles précédemment définis pour la méthode.</span><span class="sxs-lookup"><span data-stu-id="2b03b-191">Reopening a method that has been previously closed erases any previously defined symbols for the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNamespace">
      <MemberSignature Language="C#" Value="public void OpenNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenNamespace (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OpenNamespace : string -&gt; unit" Usage="iSymbolWriter.OpenNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2b03b-192">Nom du nouvel espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-192">The name of the new namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-193">Ouvre un nouvel espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-193">Opens a new namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-194">Appelez cette méthode avant de définir des méthodes ou des variables qui existent au sein d’un espace de noms.</span><span class="sxs-lookup"><span data-stu-id="2b03b-194">Call this method before defining methods or variables that exist within a namespace.</span></span> <span data-ttu-id="2b03b-195">Espaces de noms peuvent être imbriquées.</span><span class="sxs-lookup"><span data-stu-id="2b03b-195">Namespaces can be nested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenScope">
      <MemberSignature Language="C#" Value="public int OpenScope (int startOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 OpenScope(int32 startOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenScope (startOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int OpenScope(int startOffset);" />
      <MemberSignature Language="F#" Value="abstract member OpenScope : int -&gt; int" Usage="iSymbolWriter.OpenScope startOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startOffset">
          <span data-ttu-id="2b03b-196">Offset, en octets, du début de la méthode à la première instruction dans la portée lexicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-196">The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-197">Ouvre une nouvelle portée lexicale dans la méthode en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-197">Opens a new lexical scope in the current method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b03b-198">Identificateur de portée opaque pouvant être utilisé avec <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> pour définir les offsets de début et de fin d'une portée ultérieurement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-198">An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time.</span>
          </span>
          <span data-ttu-id="2b03b-199">Dans ce cas, les offsets passés à <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> et <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /> sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-199">In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /> are ignored.</span>
          </span>
          <span data-ttu-id="2b03b-200">Un identificateur de portée est valide dans la méthode en cours uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-200">A scope identifier is valid only in the current method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-201">Cette portée devient la nouvelle portée actuelle et est envoyée à une pile d’étendues.</span><span class="sxs-lookup"><span data-stu-id="2b03b-201">This scope becomes the new current scope and is pushed onto a stack of scopes.</span></span> <span data-ttu-id="2b03b-202">Les portées doivent former une hiérarchie.</span><span class="sxs-lookup"><span data-stu-id="2b03b-202">Scopes must form a hierarchy.</span></span> <span data-ttu-id="2b03b-203">Frères ne sont pas autorisées à chevaucher.</span><span class="sxs-lookup"><span data-stu-id="2b03b-203">Siblings are not allowed to overlap.</span></span>  
  
 <span data-ttu-id="2b03b-204">Les identificateurs de portée sont valides uniquement dans la méthode actuelle.</span><span class="sxs-lookup"><span data-stu-id="2b03b-204">Scope identifiers are valid only in the current method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethodSourceRange">
      <MemberSignature Language="C#" Value="public void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMethodSourceRange(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int32 startLine, int32 startColumn, class System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMethodSourceRange (startDoc As ISymbolDocumentWriter, startLine As Integer, startColumn As Integer, endDoc As ISymbolDocumentWriter, endLine As Integer, endColumn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMethodSourceRange(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ startDoc, int startLine, int startColumn, System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="F#" Value="abstract member SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit" Usage="iSymbolWriter.SetMethodSourceRange (startDoc, startLine, startColumn, endDoc, endLine, endColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDoc">
          <span data-ttu-id="2b03b-205">Document qui contient la position de départ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-205">The document that contains the starting position.</span>
          </span>
        </param>
        <param name="startLine">
          <span data-ttu-id="2b03b-206">Numéro de ligne de départ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-206">The starting line number.</span>
          </span>
        </param>
        <param name="startColumn">
          <span data-ttu-id="2b03b-207">Colonne de départ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-207">The starting column.</span>
          </span>
        </param>
        <param name="endDoc">
          <span data-ttu-id="2b03b-208">Document qui contient la position de fin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-208">The document that contains the ending position.</span>
          </span>
        </param>
        <param name="endLine">
          <span data-ttu-id="2b03b-209">Numéro de ligne de fin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-209">The ending line number.</span>
          </span>
        </param>
        <param name="endColumn">
          <span data-ttu-id="2b03b-210">Numéro de colonne de fin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-210">The ending column number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-211">Spécifie les véritables début et fin d'une méthode dans un fichier source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-211">Specifies the true start and end of a method within a source file.</span>
          </span>
          <span data-ttu-id="2b03b-212">Utilisez <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> pour spécifier l'étendue d'une méthode, indépendamment des points de séquence existant dans la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-212">Use <see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /> to specify the extent of a method, independent of the sequence points that exist within the method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScopeRange">
      <MemberSignature Language="C#" Value="public void SetScopeRange (int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScopeRange(int32 scopeID, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScopeRange (scopeID As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopeRange(int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member SetScopeRange : int * int * int -&gt; unit" Usage="iSymbolWriter.SetScopeRange (scopeID, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeID" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeID">
          <span data-ttu-id="2b03b-213">Identificateur de la portée lexicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-213">The identifier of the lexical scope.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="2b03b-214">Offset d'octets du début de la portée lexicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-214">The byte offset of the beginning of the lexical scope.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="2b03b-215">Offset d'octets de la fin de la portée lexicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-215">The byte offset of the end of the lexical scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-216">Définit la plage d'offsets pour la portée lexicale spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-216">Defines the offset range for the specified lexical scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSymAttribute">
      <MemberSignature Language="C#" Value="public void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymAttribute (parent As SymbolToken, name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit" Usage="iSymbolWriter.SetSymAttribute (parent, name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="2b03b-217">Jeton de données pour lequel est défini l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-217">The metadata token for which the attribute is being defined.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2b03b-218">Nom de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-218">The attribute name.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="2b03b-219">Valeur de l'attribut</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-219">The attribute value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-220">Définit un attribut lorsque son nom et sa valeur sont fournis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-220">Defines an attribute when given the attribute name and the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-221">Le <xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A> méthode n’est associé aux informations symboliques et n’est pas un attribut personnalisé de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="2b03b-221">The <xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A> method is only associated with symbolic information and is not a metadata custom attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUnderlyingWriter">
      <MemberSignature Language="C#" Value="public void SetUnderlyingWriter (IntPtr underlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUnderlyingWriter(native int underlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUnderlyingWriter (underlyingWriter As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUnderlyingWriter(IntPtr underlyingWriter);" />
      <MemberSignature Language="F#" Value="abstract member SetUnderlyingWriter : nativeint -&gt; unit" Usage="iSymbolWriter.SetUnderlyingWriter underlyingWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="underlyingWriter" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="underlyingWriter">
          <span data-ttu-id="2b03b-222">Pointeur vers du code qui représente le writer sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-222">A pointer to code that represents the underlying writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-223">Définit le <see langword="ISymUnmanagedWriter" /> sous-jacent (l'interface non managée correspondante) utilisé par un <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> managé pour émettre des symboles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-223">Sets the underlying <see langword="ISymUnmanagedWriter" /> (the corresponding unmanaged interface) that a managed <see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /> uses to emit symbols.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-224">Sous-jacent `ISymUnmanagedWriter` (l’interface non managée correspondante) représente un writer de symbole pour le code managé.</span><span class="sxs-lookup"><span data-stu-id="2b03b-224">The underlying `ISymUnmanagedWriter` (the corresponding unmanaged interface) represents a symbol writer for managed code.</span></span> <span data-ttu-id="2b03b-225">L’interface fournit des méthodes permettant de définir des documents, les points de séquence, les portées lexicales et variables.</span><span class="sxs-lookup"><span data-stu-id="2b03b-225">The interface provides methods for defining documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserEntryPoint(valuetype System.Diagnostics.SymbolStore.SymbolToken entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserEntryPoint (entryMethod As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserEntryPoint(System::Diagnostics::SymbolStore::SymbolToken entryMethod);" />
      <MemberSignature Language="F#" Value="abstract member SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="iSymbolWriter.SetUserEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="2b03b-226">Jeton de métadonnées pour la méthode correspondant au point d'entrée utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-226">The metadata token for the method that is the user entry point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-227">Identifie la méthode définie par l'utilisateur comme point d'entrée du module en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-227">Identifies the user-defined method as the entry point for the current module.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-228">Il s’agit normalement votre méthode principale, plutôt que les stubs générés par le compilateur avant la méthode principale.</span><span class="sxs-lookup"><span data-stu-id="2b03b-228">This is normally your main method, rather than compiler-generated stubs before the main method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingNamespace">
      <MemberSignature Language="C#" Value="public void UsingNamespace (string fullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UsingNamespace(string fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UsingNamespace (fullName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UsingNamespace(System::String ^ fullName);" />
      <MemberSignature Language="F#" Value="abstract member UsingNamespace : string -&gt; unit" Usage="iSymbolWriter.UsingNamespace fullName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullName">
          <span data-ttu-id="2b03b-229">Nom complet de l'espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-229">The fully qualified name of the namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b03b-230">Spécifie que le nom d'espace de noms complet donné est utilisé dans la portée lexicale ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b03b-230">Specifies that the given, fully qualified namespace name is used within the open lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b03b-231">Fermeture de la portée actuelle empêche cette étendue à partir de l’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="2b03b-231">Closing the current scope prevents this scope from using the namespace.</span></span> <span data-ttu-id="2b03b-232">L’espace de noms reste en cours d’utilisation dans toutes les portées qui héritent de la portée ouverte en cours.</span><span class="sxs-lookup"><span data-stu-id="2b03b-232">The namespace remains in use in all scopes that inherit from the current open scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>