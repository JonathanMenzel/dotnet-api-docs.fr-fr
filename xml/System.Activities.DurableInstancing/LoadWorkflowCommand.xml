<Type Name="LoadWorkflowCommand" FullName="System.Activities.DurableInstancing.LoadWorkflowCommand">
  <TypeSignature Language="C#" Value="public sealed class LoadWorkflowCommand : System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LoadWorkflowCommand extends System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.LoadWorkflowCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LoadWorkflowCommand&#xA;Inherits InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoadWorkflowCommand sealed : System::Runtime::DurableInstancing::InstancePersistenceCommand" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceCommand</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1e939-101">Commande de persistance qui charge une instance de flux de travail selon les informations d'état de l'instance dans le magasin de persistance.</span><span class="sxs-lookup"><span data-stu-id="1e939-101">A persistence command that loads a workflow instance based on state information of the instance in the persistence store.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoadWorkflowCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.LoadWorkflowCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoadWorkflowCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e939-102">Initialise une instance de la classe <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="1e939-102">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptUninitializedInstance">
      <MemberSignature Language="C#" Value="public bool AcceptUninitializedInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptUninitializedInstance" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.LoadWorkflowCommand.AcceptUninitializedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptUninitializedInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptUninitializedInstance { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e939-103">Obtient une valeur qui indique s'il faut autoriser le chargement d'une instance non initialisée.</span><span class="sxs-lookup"><span data-stu-id="1e939-103">Gets a value that indicates whether to allow loading an uninitialized instance.</span></span></summary>
        <value>
          <span data-ttu-id="1e939-104"><see langword="true" /> si le chargement d'une instance non initialisée est autorisé ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e939-104"><see langword="true" /> if loading an uninitialized instance is allowed; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal override bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.LoadWorkflowCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal override bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.LoadWorkflowCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal override void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.LoadWorkflowCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>