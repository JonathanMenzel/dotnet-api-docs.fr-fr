<Type Name="HasRunnableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
  <TypeSignature Language="C#" Value="public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasRunnableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasRunnableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasRunnableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasRunnableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasRunnableWorkflowEvent ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasRunnableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d2336-101">Représente un événement que le magasin d'instances de flux de travail SQL déclenche pour notifier les hôtes de flux de travail de l'existence d'instances exécutables dans la base de données de persistance.</span><span class="sxs-lookup"><span data-stu-id="d2336-101">Represents an event that the SQL Workflow Instance Store raises to notify workflow hosts about the existence of runnable instances in the persistence database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2336-102">Une instance est *exécutable*, si elle n’est pas dans l’état suspendu ou l’état terminé et satisfait les conditions suivantes :</span><span class="sxs-lookup"><span data-stu-id="d2336-102">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="d2336-103">L'instance est déverrouillée et a un minuteur en attente qui a expiré.</span><span class="sxs-lookup"><span data-stu-id="d2336-103">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="d2336-104">L’instance est déverrouillée et son état est **en cours d’exécution**.</span><span class="sxs-lookup"><span data-stu-id="d2336-104">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="d2336-105">L'instance possède un verrou non valide.</span><span class="sxs-lookup"><span data-stu-id="d2336-105">The instance has an invalid lock on it.</span></span>  
  
 <span data-ttu-id="d2336-106">Un magasin d'instances doit périodiquement rechercher les instances exécutables qui appartiennent à un hôte de flux de travail utilisant le magasin.</span><span class="sxs-lookup"><span data-stu-id="d2336-106">An instance store should periodically search for runnable instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="d2336-107">Il doit déclencher l'événement <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> lorsqu'il recherche une instance exécutable dans le magasin de persistance qui correspond à son type d'hôte de flux de travail.</span><span class="sxs-lookup"><span data-stu-id="d2336-107">It should raise the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the persistence store that matches its workflow host type.</span></span> <span data-ttu-id="d2336-108">Si le magasin d'instances ne trouve pas une instance exécutable dans le magasin de persistance, il doit continuer à surveiller le magasin de persistance en cas de présence d'instances exécutables.</span><span class="sxs-lookup"><span data-stu-id="d2336-108">If the instance store does not find a runnable instance in the persistence store, it should continue to monitor the persistence store for any runnable instances.</span></span>  
  
 <span data-ttu-id="d2336-109">Après avoir déclenché l'événement HasRunnableWorkflowEvent, le magasin d'instances doit cesser de surveiller le magasin de persistance pour les instances exécutables jusqu'à ce qu'il reçoive et exécute l'objet <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span><span class="sxs-lookup"><span data-stu-id="d2336-109">After raising the HasRunnableWorkflowEvent, the instance store should stop monitoring the persistence store for runnable instances until it receives and executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span></span> <span data-ttu-id="d2336-110">L'analyse continue uniquement si l'exécution de TryLoadRunnableWorkflowCommand ne retourne pas d'instances exécutables.</span><span class="sxs-lookup"><span data-stu-id="d2336-110">The monitoring continues only if the TryLoadRunnableWorkflowCommand execution does not return any runnable instances.</span></span>  
  
 <span data-ttu-id="d2336-111">Lorsqu'un hôte de flux de travail reçoit l'événement HasRunnableWorkflowEvent, il exécute la commande <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> sur le magasin d'instances pour charger l'instance en mémoire.</span><span class="sxs-lookup"><span data-stu-id="d2336-111">When a workflow host receives the HasRunnableWorkflowEvent, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasRunnableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasRunnableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2336-112">Initialise une instance de la classe <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />.</span><span class="sxs-lookup"><span data-stu-id="d2336-112">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>