<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea360e85ebfc5e60951e9ca94053f3de29a9871a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="b38be-101">Type de clés de la collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b38be-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="b38be-102">Type d’éléments de la collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b38be-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b38be-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b38be-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-104">Le <xref:System.Collections.ObjectModel.KeyedCollection%602> classe fournit les deux o (1) une récupération indexée et une récupération proche d’o (1) à clé.</span><span class="sxs-lookup"><span data-stu-id="b38be-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="b38be-105">Il est un type abstrait, ou plus précisément un ensemble infini de types abstraits, car chacun de ses types génériques construits est une classe de base abstraite.</span><span class="sxs-lookup"><span data-stu-id="b38be-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="b38be-106">Pour utiliser <xref:System.Collections.ObjectModel.KeyedCollection%602>, dérivez votre type de collection du type construit approprié.</span><span class="sxs-lookup"><span data-stu-id="b38be-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="b38be-107">Le <xref:System.Collections.ObjectModel.KeyedCollection%602> classe est un hybride entre une collection basée sur le <xref:System.Collections.Generic.IList%601> interface générique et une collection basée sur le <xref:System.Collections.Generic.IDictionary%602> interface générique.</span><span class="sxs-lookup"><span data-stu-id="b38be-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="b38be-108">Comme les collections basées sur le <xref:System.Collections.Generic.IList%601> interface générique, <xref:System.Collections.ObjectModel.KeyedCollection%602> est une liste indexée d’éléments.</span><span class="sxs-lookup"><span data-stu-id="b38be-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="b38be-109">Comme les collections basées sur le <xref:System.Collections.Generic.IDictionary%602> interface générique, <xref:System.Collections.ObjectModel.KeyedCollection%602> a une clé associée à chaque élément.</span><span class="sxs-lookup"><span data-stu-id="b38be-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="b38be-110">Contrairement aux dictionnaires, un élément de <xref:System.Collections.ObjectModel.KeyedCollection%602> n’est pas une paire clé/valeur ; au lieu de cela, l’élément tout entier est la valeur et la clé est incorporée au sein de la valeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="b38be-111">Par exemple, un élément d’une collection dérivée de `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` en Visual Basic) peut être « John Doe Jr. »</span><span class="sxs-lookup"><span data-stu-id="b38be-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="b38be-112">où la valeur est « John Doe Jr. »</span><span class="sxs-lookup"><span data-stu-id="b38be-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="b38be-113">et la clé est « Doe » ; ou une collection d’enregistrements d’employés contenant des clés de type entier peut être dérivée de `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="b38be-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="b38be-114">Le résumé <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> méthode extrait la clé de l’élément.</span><span class="sxs-lookup"><span data-stu-id="b38be-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="b38be-115">Par défaut, le <xref:System.Collections.ObjectModel.KeyedCollection%602> contient un dictionnaire de recherche que vous pouvez obtenir avec le <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="b38be-116">Lorsqu’un élément est ajouté à la <xref:System.Collections.ObjectModel.KeyedCollection%602>, clé de l’élément est extrait qu’une seule fois et enregistrée dans le dictionnaire de recherche pour accélérer les recherches.</span><span class="sxs-lookup"><span data-stu-id="b38be-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="b38be-117">Ce comportement est substitué en spécifiant un seuil de création de dictionnaire lorsque vous créez le <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-118">Le dictionnaire de recherche est créé la première fois que le nombre d’éléments dépasse ce seuil.</span><span class="sxs-lookup"><span data-stu-id="b38be-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="b38be-119">Si vous spécifiez -1 comme seuil, le dictionnaire de recherche n’est jamais créé.</span><span class="sxs-lookup"><span data-stu-id="b38be-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-120">Lorsque le dictionnaire de recherche interne est utilisé, il contient des références à tous les éléments dans la collection si `TItem` est un type référence, ou copie de tous les éléments dans la collection si `TItem` est un type valeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="b38be-121">Par conséquent, à l’aide du dictionnaire de recherche peut ne pas convenir si `TItem` est un type valeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="b38be-122">Vous pouvez accéder à un élément par son index ou clé à l’aide de la <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="b38be-123">Vous pouvez ajouter des éléments sans une clé, mais ces éléments sont accessibles par la suite uniquement par index.</span><span class="sxs-lookup"><span data-stu-id="b38be-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-124">Cette section contient deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="b38be-124">This section contains two code examples.</span></span> <span data-ttu-id="b38be-125">Le premier exemple montre le code minimal requis pour dériver de <xref:System.Collections.ObjectModel.KeyedCollection%602>et illustre de nombreuses méthodes héritées.</span><span class="sxs-lookup"><span data-stu-id="b38be-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="b38be-126">Le deuxième exemple montre comment substituer les méthodes protégées de <xref:System.Collections.ObjectModel.KeyedCollection%602> pour fournir un comportement personnalisé.</span><span class="sxs-lookup"><span data-stu-id="b38be-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="b38be-127">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="b38be-127">**Example 1**</span></span>  
  
 <span data-ttu-id="b38be-128">Cet exemple de code montre le code minimal nécessaire de dériver une classe de collection à partir de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et en fournissant un constructeur public qui délègue à un constructeur de classe de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="b38be-129">L’exemple de code montre également la plupart des propriétés et méthodes héritées de <xref:System.Collections.ObjectModel.KeyedCollection%602> et <xref:System.Collections.ObjectModel.Collection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="b38be-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="b38be-130">Le `SimpleOrder` classe est une liste très simple qui contient `OrderItem` objets, chacun d’eux représente un élément de ligne dans l’ordre.</span><span class="sxs-lookup"><span data-stu-id="b38be-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="b38be-131">La clé de `OrderItem` est immuable, un facteur important pour les classes qui dérivent de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-132">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="b38be-133">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="b38be-133">**Example 2**</span></span>  
  
 <span data-ttu-id="b38be-134">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes, pour fournir un comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, et <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthodes et pour définition de la valeur par défaut <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété (l’indexeur en c#).</span><span class="sxs-lookup"><span data-stu-id="b38be-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="b38be-135">Le comportement personnalisé fourni dans cet exemple est un événement de notification nommé `Changed`, qui est déclenché à la fin de chacune des méthodes substituées.</span><span class="sxs-lookup"><span data-stu-id="b38be-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="b38be-136">L’exemple de code crée la `SimpleOrder` classe qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602> et représente un bon de commande simple.</span><span class="sxs-lookup"><span data-stu-id="b38be-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="b38be-137">Le formulaire de commande contient `OrderItem` objets représentant les éléments triés.</span><span class="sxs-lookup"><span data-stu-id="b38be-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="b38be-138">L’exemple de code crée également un `SimpleOrderChangedEventArgs` classe permettant de contenir les informations d’événement et une énumération pour identifier le type de modification.</span><span class="sxs-lookup"><span data-stu-id="b38be-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="b38be-139">L’exemple de code illustre le comportement personnalisé en appelant les propriétés et méthodes de la classe dérivée, dans le `Main` méthode de la `Demo` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="b38be-140">Cet exemple de code utilise des objets avec des clés immuables.</span><span class="sxs-lookup"><span data-stu-id="b38be-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="b38be-141">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b38be-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b38be-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-144">Un <xref:System.Collections.ObjectModel.KeyedCollection%602> créées avec ce constructeur utilise le comparateur d’égalité générique par défaut pour le type de la clé, obtenu à partir de <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b38be-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b38be-145">Pour spécifier un comparateur d’égalité générique différents, utilisez le <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructeur ou la <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="b38be-146">Par défaut, le <xref:System.Collections.ObjectModel.KeyedCollection%602> contient un dictionnaire de recherche qui est créé lorsque le premier élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="b38be-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="b38be-147">Lorsqu’un élément est ajouté à la <xref:System.Collections.ObjectModel.KeyedCollection%602>, clé de l’élément est extrait qu’une seule fois et enregistrée dans le dictionnaire de recherche pour accélérer les recherches.</span><span class="sxs-lookup"><span data-stu-id="b38be-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="b38be-148">Ce comportement peut être remplacé en utilisant le <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructeur et en spécifiant un seuil de création de dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-149">Étant donné que le <xref:System.Collections.ObjectModel.KeyedCollection%602> classe est abstraite (`MustInherit` en Visual Basic), vous devez dériver à partir de celui-ci pour pouvoir le pour utiliser.</span><span class="sxs-lookup"><span data-stu-id="b38be-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="b38be-150">Dans le constructeur pour votre type dérivé, appelez la <xref:System.Collections.ObjectModel.KeyedCollection%602> constructeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="b38be-151">Il n’est pas nécessaire d’exposer des fonctionnalités telles que le comparateur d’égalité ou le seuil de création de dictionnaire dans vos constructeurs.</span><span class="sxs-lookup"><span data-stu-id="b38be-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="b38be-152">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="b38be-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-153">Cet exemple de code montre le code minimal nécessaire de dériver une classe de collection à partir de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et en fournissant un constructeur public qui délègue à un constructeur de classe de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="b38be-154">L’exemple de code montre également la plupart des propriétés et méthodes héritées de <xref:System.Collections.ObjectModel.KeyedCollection%602> et <xref:System.Collections.ObjectModel.Collection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="b38be-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="b38be-155">Le `SimpleOrder` classe est une liste très simple qui contient `OrderItem` objets, chacun d’eux représente un élément de ligne dans l’ordre.</span><span class="sxs-lookup"><span data-stu-id="b38be-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="b38be-156">La clé de `OrderItem` est immuable, un facteur important pour les classes qui dérivent de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-157">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="b38be-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-160">Par défaut, le <xref:System.Collections.ObjectModel.KeyedCollection%602> contient un dictionnaire de recherche qui est créé lorsque le premier élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="b38be-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="b38be-161">Lorsqu’un élément est ajouté à la <xref:System.Collections.ObjectModel.KeyedCollection%602>, clé de l’élément est extrait qu’une seule fois et enregistrée dans le dictionnaire de recherche pour accélérer les recherches.</span><span class="sxs-lookup"><span data-stu-id="b38be-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="b38be-162">Ce comportement peut être remplacé en utilisant le <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructeur et en spécifiant un seuil de création de dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-163">Étant donné que le <xref:System.Collections.ObjectModel.KeyedCollection%602> classe est abstraite (`MustInherit` en Visual Basic), vous devez dériver à partir de celui-ci pour pouvoir le pour utiliser.</span><span class="sxs-lookup"><span data-stu-id="b38be-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="b38be-164">Dans le constructeur pour votre type dérivé, appelez la <xref:System.Collections.ObjectModel.KeyedCollection%602> constructeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="b38be-165">Il n’est pas nécessaire d’exposer des fonctionnalités telles que le comparateur d’égalité ou le seuil de création de dictionnaire dans vos constructeurs.</span><span class="sxs-lookup"><span data-stu-id="b38be-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="b38be-166">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="b38be-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="b38be-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="b38be-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-170">Par défaut, le <xref:System.Collections.ObjectModel.KeyedCollection%602> contient un dictionnaire de recherche qui est créé lorsque le premier élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="b38be-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="b38be-171">Lorsqu’un élément est ajouté à la <xref:System.Collections.ObjectModel.KeyedCollection%602>, clé de l’élément est extrait qu’une seule fois et enregistrée dans le dictionnaire de recherche pour accélérer les recherches.</span><span class="sxs-lookup"><span data-stu-id="b38be-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="b38be-172">Ce constructeur vous permet de substituer ce comportement.</span><span class="sxs-lookup"><span data-stu-id="b38be-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="b38be-173">Spécifiez 0 pour créer le dictionnaire lorsque le premier élément est ajouté, 1 pour créer le dictionnaire lorsque le deuxième élément est ajouté et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="b38be-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="b38be-174">Si vous spécifiez -1 comme seuil, le dictionnaire de recherche n’est jamais créé.</span><span class="sxs-lookup"><span data-stu-id="b38be-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="b38be-175">Pour les très petites collections améliorer la vitesse de récupération fournie par le dictionnaire de recherche ne peut pas être intéressant de la mémoire supplémentaire requise par le dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="b38be-176">Définir un seuil vous permet de décider quand bon compromis.</span><span class="sxs-lookup"><span data-stu-id="b38be-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-177">Étant donné que le <xref:System.Collections.ObjectModel.KeyedCollection%602> classe est abstraite (`MustInherit` en Visual Basic), vous devez dériver à partir de celui-ci pour pouvoir le pour utiliser.</span><span class="sxs-lookup"><span data-stu-id="b38be-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="b38be-178">Dans le constructeur pour votre type dérivé, appelez la <xref:System.Collections.ObjectModel.KeyedCollection%602> constructeur.</span><span class="sxs-lookup"><span data-stu-id="b38be-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="b38be-179">Il n’est pas nécessaire d’exposer des fonctionnalités telles que le comparateur d’égalité ou le seuil de création de dictionnaire dans vos constructeurs.</span><span class="sxs-lookup"><span data-stu-id="b38be-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="b38be-180">Ce constructeur est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="b38be-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-181">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes, pour fournir un comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, et <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthodes et pour définition de la valeur par défaut <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété (l’indexeur en c#).</span><span class="sxs-lookup"><span data-stu-id="b38be-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="b38be-182">Le comportement personnalisé fourni dans cet exemple est un événement de notification nommé `Changed`, qui est déclenché à la fin de chacune des méthodes substituées.</span><span class="sxs-lookup"><span data-stu-id="b38be-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="b38be-183">L’exemple de code utilise le <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructeur avec un seuil de 0, afin que le dictionnaire interne est créé la première fois un objet est ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="b38be-184">L’exemple de code crée la `SimpleOrder` classe qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602> et représente un bon de commande simple.</span><span class="sxs-lookup"><span data-stu-id="b38be-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="b38be-185">Le formulaire de commande contient `OrderItem` objets représentant les éléments triés.</span><span class="sxs-lookup"><span data-stu-id="b38be-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="b38be-186">L’exemple de code crée également un `SimpleOrderChangedEventArgs` classe permettant de contenir les informations d’événement et une énumération pour identifier le type de modification.</span><span class="sxs-lookup"><span data-stu-id="b38be-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="b38be-187">L’exemple de code illustre le comportement personnalisé en appelant les propriétés et méthodes de la classe dérivée, dans le `Main` méthode de la `Demo` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="b38be-188">Cet exemple de code utilise des objets avec des clés immuables.</span><span class="sxs-lookup"><span data-stu-id="b38be-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="b38be-189">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b38be-190">
            <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b38be-191">The element to change the key of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="b38be-192">The new key for <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-194">Cette méthode ne modifie pas la clé incorporée dans `item`; il remplace simplement la clé enregistrée dans le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="b38be-195">Par conséquent, si `newKey` est différent de la clé qui est incorporée dans `item`, vous ne pouvez pas accéder à `item` à l’aide de la clé retournée par <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="b38be-196">Cette méthode ne fait rien si le <xref:System.Collections.ObjectModel.KeyedCollection%602> n’a pas un dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="b38be-197">Chaque clé dans un <xref:System.Collections.ObjectModel.KeyedCollection%602> doit être unique.</span><span class="sxs-lookup"><span data-stu-id="b38be-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="b38be-198">Une clé ne peut pas être `null`.</span><span class="sxs-lookup"><span data-stu-id="b38be-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="b38be-199">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="b38be-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="b38be-200">Notes de publication pour les implémenteurs</span><span class="sxs-lookup"><span data-stu-id="b38be-200">Notes for Implementers</span></span>  
 <span data-ttu-id="b38be-201">Avant de modifier la clé incorporée dans un élément, vous devez appeler cette méthode pour mettre à jour la clé dans le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="b38be-202">Si le seuil de création de dictionnaire est – 1, l’appel de cette méthode n’est pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="b38be-203">N’exposez pas le <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode comme une méthode publique d’une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="b38be-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="b38be-204">Utilisation incorrecte de cette méthode place le dictionnaire de recherche désynchronisés avec des clés de l’élément.</span><span class="sxs-lookup"><span data-stu-id="b38be-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="b38be-205">Par exemple, si la clé à `null` et l’affectation à une autre valeur ajoute plusieurs clés d’un élément au dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="b38be-206">Exposer cette méthode en interne pour autoriser des clés d’élément mutables : lorsque la clé d’un élément change, cette méthode est utilisée pour modifier la clé dans le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-207">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode pour prendre en charge des clés mutables et comment remplacer l’élément protégé <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes pour maintenir l’intégrité des clés et la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="b38be-208">L’exemple de code crée la `MutableKeys` collection qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602>et le `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="b38be-209">Le `MutableKey` classe a un définissable `Key` propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="b38be-210">Lorsqu’une nouvelle clé est assignée à la propriété, l’accesseur Set de propriété appelle le `internal` (`Friend` en Visual Basic) `ChangeKey` méthode de la collection pour tester si la nouvelle clé serait en conflit avec une clé existante.</span><span class="sxs-lookup"><span data-stu-id="b38be-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="b38be-211">Dans ce cas, une exception est levée et la valeur de propriété n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="b38be-212">Afin de maintenir la connexion entre un `MutableKey` objet et le `MutableKeys` collection et pour empêcher un objet à partir de laquelle elle est insérée deux collections, la `MutableKey` classe a un `internal` (`Friend` en Visual Basic) `Collection`champ.</span><span class="sxs-lookup"><span data-stu-id="b38be-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="b38be-213">Ce champ est géré par les méthodes protégées qui fournissent un comportement personnalisé pour ajouter et supprimer des éléments de la collection, telles que le <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="b38be-214">Le champ est défini lorsque l’élément est ajouté à une collection et effacé lorsque l’élément est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b38be-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b38be-215">
            <paramref name="item" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b38be-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b38be-217">
            <paramref name="item" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-217">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="b38be-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b38be-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-220">S’il existe un dictionnaire de recherche, cette méthode efface mais ne le supprime pas.</span><span class="sxs-lookup"><span data-stu-id="b38be-220">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="b38be-221">Si le nombre d’éléments a dépassé le seuil de création de dictionnaire et le <xref:System.Collections.ObjectModel.KeyedCollection%602> est à l’aide d’un dictionnaire de recherche, il continuera à utiliser un dictionnaire de recherche, même si le nombre d’éléments est à nouveau sous le seuil.</span><span class="sxs-lookup"><span data-stu-id="b38be-221">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="b38be-222">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-222">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="b38be-223">Notes de publication pour les implémenteurs</span><span class="sxs-lookup"><span data-stu-id="b38be-223">Notes for Implementers</span></span>  
 <span data-ttu-id="b38be-224">Substituez cette méthode pour fournir le comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthode, héritée de la <xref:System.Collections.ObjectModel.Collection%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="b38be-224">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="b38be-225">Appeler l’implémentation de classe de base de cette méthode pour effacer la collection sous-jacente et effacer le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-225">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-226">Cette section contient deux exemples de code qui montrent la substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> méthode pour fournir un comportement personnalisé pour effacer tous les objets de la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-226">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="b38be-227">Le premier exemple ajoute un événement de notification personnalisé et le second prend en charge une collection d’objets avec des clés mutables.</span><span class="sxs-lookup"><span data-stu-id="b38be-227">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="b38be-228">Exemple 1</span><span class="sxs-lookup"><span data-stu-id="b38be-228">Example 1</span></span>  
  
 <span data-ttu-id="b38be-229">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes, pour fournir un comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, et <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthodes et pour définition de la valeur par défaut <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété (l’indexeur en c#).</span><span class="sxs-lookup"><span data-stu-id="b38be-229">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="b38be-230">Le comportement personnalisé fourni dans cet exemple est un événement de notification nommé `Changed`, qui est déclenché à la fin de chacune des méthodes substituées.</span><span class="sxs-lookup"><span data-stu-id="b38be-230">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="b38be-231">L’exemple de code crée la `SimpleOrder` classe qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602> et représente un bon de commande simple.</span><span class="sxs-lookup"><span data-stu-id="b38be-231">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="b38be-232">Le formulaire de commande contient `OrderItem` objets représentant les éléments triés.</span><span class="sxs-lookup"><span data-stu-id="b38be-232">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="b38be-233">L’exemple de code crée également un `SimpleOrderChangedEventArgs` classe permettant de contenir les informations d’événement et une énumération pour identifier le type de modification.</span><span class="sxs-lookup"><span data-stu-id="b38be-233">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="b38be-234">L’exemple de code illustre le comportement personnalisé en appelant les propriétés et méthodes de la classe dérivée, dans le `Main` méthode de la `Demo` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-234">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="b38be-235">Cet exemple de code utilise des objets avec des clés immuables.</span><span class="sxs-lookup"><span data-stu-id="b38be-235">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="b38be-236">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-236">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="b38be-237">Exemple 2</span><span class="sxs-lookup"><span data-stu-id="b38be-237">Example 2</span></span>  
  
 <span data-ttu-id="b38be-238">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode pour prendre en charge des clés mutables et comment remplacer l’élément protégé <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes pour maintenir l’intégrité des clés et la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-238">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="b38be-239">L’exemple de code crée la `MutableKeys` collection qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602>et le `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-239">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="b38be-240">Le `MutableKey` classe a un définissable `Key` propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-240">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="b38be-241">Lorsqu’une nouvelle clé est assignée à la propriété, l’accesseur Set de propriété appelle le `internal` (`Friend` en Visual Basic) `ChangeKey` méthode de la collection pour tester si la nouvelle clé serait en conflit avec une clé existante.</span><span class="sxs-lookup"><span data-stu-id="b38be-241">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="b38be-242">Dans ce cas, une exception est levée et la valeur de propriété n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-242">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="b38be-243">Afin de maintenir la connexion entre un `MutableKey` objet et le `MutableKeys` collection et pour empêcher un objet à partir de laquelle elle est insérée deux collections, la `MutableKey` classe a un `internal` (`Friend` en Visual Basic) `Collection`champ.</span><span class="sxs-lookup"><span data-stu-id="b38be-243">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="b38be-244">Ce champ est géré par les méthodes protégées qui fournissent un comportement personnalisé pour ajouter et supprimer des éléments de la collection, telles que le <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-244">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="b38be-245">Le champ est défini lorsque l’élément est ajouté à une collection et effacé lorsque l’élément est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b38be-245">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b38be-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b38be-247">L’implémentation de la <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interface générique qui est utilisé pour déterminer l’égalité des clés dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-247">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-248">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="b38be-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="b38be-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-250">Determines whether the collection contains an element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-250">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38be-251">
            <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-251">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-252">Si le <xref:System.Collections.ObjectModel.KeyedCollection%602> a un dictionnaire de recherche, `key` est utilisé pour rechercher le dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-252">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="b38be-253">S’il n’existe aucun dictionnaire de recherche, la clé de chaque élément est extraite à l’aide de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et comparée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-253">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="b38be-254">Cette méthode est une opération o (1) si le <xref:System.Collections.ObjectModel.KeyedCollection%602> a un dictionnaire de recherche ; sinon c’est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-254">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-255">Cet exemple de code montre le code minimal nécessaire de dériver une classe de collection à partir de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et en fournissant un constructeur public qui délègue à un constructeur de classe de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-255">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="b38be-256">L’exemple de code montre également la plupart des propriétés et méthodes héritées de <xref:System.Collections.ObjectModel.KeyedCollection%602> et <xref:System.Collections.ObjectModel.Collection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="b38be-256">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="b38be-257">Le `SimpleOrder` classe est une liste très simple qui contient `OrderItem` objets, chacun d’eux représente un élément de ligne dans l’ordre.</span><span class="sxs-lookup"><span data-stu-id="b38be-257">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="b38be-258">La clé de `OrderItem` est immuable, un facteur important pour les classes qui dérivent de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-258">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-259">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-259">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b38be-260">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-260">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b38be-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b38be-262">Le dictionnaire de recherche de la <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, s’il existe ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-262">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-263">Par défaut, le <xref:System.Collections.ObjectModel.KeyedCollection%602> contient un dictionnaire de recherche qui est créé lorsque le premier élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="b38be-263">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="b38be-264">Lorsqu’un élément est ajouté à la <xref:System.Collections.ObjectModel.KeyedCollection%602>, clé de l’élément est extrait qu’une seule fois et enregistrée dans le dictionnaire de recherche pour accélérer les recherches.</span><span class="sxs-lookup"><span data-stu-id="b38be-264">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="b38be-265">Ce comportement peut être remplacé en utilisant le <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructeur et en spécifiant un seuil de création de dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-265">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="b38be-266">La récupération de la valeur de cette propriété est une opération O(1).</span><span class="sxs-lookup"><span data-stu-id="b38be-266">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-267">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode pour prendre en charge des clés mutables et comment remplacer l’élément protégé <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes pour maintenir l’intégrité des clés et la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-267">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="b38be-268">L’exemple de code crée la `MutableKeys` collection qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602>et le `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-268">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="b38be-269">Le `MutableKey` classe a un définissable `Key` propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-269">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="b38be-270">Lorsqu’une nouvelle clé est assignée à la propriété, l’accesseur Set de propriété appelle le `internal` (`Friend` en Visual Basic) `ChangeKey` méthode de la collection pour tester si la nouvelle clé serait en conflit avec une clé existante.</span><span class="sxs-lookup"><span data-stu-id="b38be-270">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="b38be-271">Dans ce cas, une exception est levée et la valeur de propriété n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-271">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="b38be-272">Afin de maintenir la connexion entre un `MutableKey` objet et le `MutableKeys` collection et pour empêcher un objet à partir de laquelle elle est insérée deux collections, la `MutableKey` classe a un `internal` (`Friend` en Visual Basic) `Collection`champ.</span><span class="sxs-lookup"><span data-stu-id="b38be-272">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="b38be-273">Ce champ est géré par les méthodes protégées qui fournissent un comportement personnalisé pour ajouter et supprimer des éléments de la collection, telles que le <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-273">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="b38be-274">Le champ est défini lorsque l’élément est ajouté à une collection et effacé lorsque l’élément est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b38be-274">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b38be-275">The element from which to extract the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-275">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-276">When implemented in a derived class, extracts the key from the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-276">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38be-277">The key for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-277">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-278">Si la clé dans le dictionnaire de recherche est différente de la clé qui est incorporée dans `item`, vous ne pouvez pas accéder à `item` à l’aide de la clé retournée par <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-278">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="b38be-279">Vous pouvez implémenter cette méthode pour retourner `null` pour une collection qui contient des éléments sans clés, auquel cas les éléments sont accessibles uniquement par leur index.</span><span class="sxs-lookup"><span data-stu-id="b38be-279">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="b38be-280">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="b38be-280">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="b38be-281">Notes de publication pour les implémenteurs</span><span class="sxs-lookup"><span data-stu-id="b38be-281">Notes for Implementers</span></span>  
 <span data-ttu-id="b38be-282">Vous devez substituer cette méthode pour fournir un moyen pour extraire des éléments dans le dictionnaire des clés du dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-282">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="b38be-283">Cette méthode est appelée en interne.</span><span class="sxs-lookup"><span data-stu-id="b38be-283">This method is called internally.</span></span> <span data-ttu-id="b38be-284">Il n’est pas nécessaire pour qu’elle soit publique.</span><span class="sxs-lookup"><span data-stu-id="b38be-284">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-285">Cet exemple de code montre le code minimal nécessaire de dériver une classe de collection à partir de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et en fournissant un constructeur public qui délègue à un constructeur de classe de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-285">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="b38be-286">L’exemple de code montre également la plupart des propriétés et méthodes héritées de <xref:System.Collections.ObjectModel.KeyedCollection%602> et <xref:System.Collections.ObjectModel.Collection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="b38be-286">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="b38be-287">Le `SimpleOrder` classe est une liste très simple qui contient `OrderItem` objets, chacun d’eux représente un élément de ligne dans l’ordre.</span><span class="sxs-lookup"><span data-stu-id="b38be-287">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="b38be-288">La clé de `OrderItem` est immuable, un facteur important pour les classes qui dérivent de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-288">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-289">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-289">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b38be-290">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-290">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="b38be-291">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-291">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-293">Si `index` est égal à <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` est ajouté à la fin de la <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-293">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="b38be-294">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-294">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="b38be-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> est appelée par le <xref:System.Collections.ObjectModel.Collection%601.Add%2A> et <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b38be-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="b38be-296">Notes de publication pour les implémenteurs</span><span class="sxs-lookup"><span data-stu-id="b38be-296">Notes for Implementers</span></span>  
 <span data-ttu-id="b38be-297">Substituez cette méthode pour fournir le comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A> et <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> méthodes, héritées de la <xref:System.Collections.ObjectModel.Collection%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="b38be-297">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="b38be-298">Appeler l’implémentation de classe de base de cette méthode pour insérer l’élément dans la collection sous-jacente et mettre à jour le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-298">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-299">Cette section contient deux exemples de code qui montrent la substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> méthode pour fournir un comportement personnalisé pour ajouter ou insérer des objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-299">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="b38be-300">Le premier exemple ajoute un événement de notification personnalisé et le second prend en charge une collection d’objets avec des clés mutables.</span><span class="sxs-lookup"><span data-stu-id="b38be-300">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="b38be-301">Exemple 1</span><span class="sxs-lookup"><span data-stu-id="b38be-301">Example 1</span></span>  
  
 <span data-ttu-id="b38be-302">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes, pour fournir un comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, et <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthodes et pour définition de la valeur par défaut <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété (l’indexeur en c#).</span><span class="sxs-lookup"><span data-stu-id="b38be-302">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="b38be-303">Le comportement personnalisé fourni dans cet exemple est un événement de notification nommé `Changed`, qui est déclenché à la fin de chacune des méthodes substituées.</span><span class="sxs-lookup"><span data-stu-id="b38be-303">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="b38be-304">L’exemple de code crée la `SimpleOrder` classe qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602> et représente un bon de commande simple.</span><span class="sxs-lookup"><span data-stu-id="b38be-304">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="b38be-305">Le formulaire de commande contient `OrderItem` objets représentant les éléments triés.</span><span class="sxs-lookup"><span data-stu-id="b38be-305">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="b38be-306">L’exemple de code crée également un `SimpleOrderChangedEventArgs` classe permettant de contenir les informations d’événement et une énumération pour identifier le type de modification.</span><span class="sxs-lookup"><span data-stu-id="b38be-306">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="b38be-307">L’exemple de code illustre le comportement personnalisé en appelant les propriétés et méthodes de la classe dérivée, dans le `Main` méthode de la `Demo` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-307">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="b38be-308">Cet exemple de code utilise des objets avec des clés immuables.</span><span class="sxs-lookup"><span data-stu-id="b38be-308">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="b38be-309">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-309">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="b38be-310">Exemple 2</span><span class="sxs-lookup"><span data-stu-id="b38be-310">Example 2</span></span>  
  
 <span data-ttu-id="b38be-311">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode pour prendre en charge des clés mutables et comment remplacer l’élément protégé <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes pour maintenir l’intégrité des clés et la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-311">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="b38be-312">L’exemple de code crée la `MutableKeys` collection qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602>et le `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-312">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="b38be-313">Le `MutableKey` classe a un définissable `Key` propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-313">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="b38be-314">Lorsqu’une nouvelle clé est assignée à la propriété, l’accesseur Set de propriété appelle le `internal` (`Friend` en Visual Basic) `ChangeKey` méthode de la collection pour tester si la nouvelle clé serait en conflit avec une clé existante.</span><span class="sxs-lookup"><span data-stu-id="b38be-314">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="b38be-315">Dans ce cas, une exception est levée et la valeur de propriété n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-315">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="b38be-316">Afin de maintenir la connexion entre un `MutableKey` objet et le `MutableKeys` collection et pour empêcher un objet à partir de laquelle elle est insérée deux collections, la `MutableKey` classe a un `internal` (`Friend` en Visual Basic) `Collection`champ.</span><span class="sxs-lookup"><span data-stu-id="b38be-316">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="b38be-317">Ce champ est géré par les méthodes protégées qui fournissent un comportement personnalisé pour ajouter et supprimer des éléments de la collection, telles que le <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-317">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="b38be-318">Le champ est défini lorsque l’élément est ajouté à une collection et effacé lorsque l’élément est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b38be-318">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b38be-319">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-319">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="b38be-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="b38be-321">The key of the element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-321">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-322">Gets the element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-322">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b38be-323">Élément correspondant à la clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-323">The element with the specified key.</span>
          </span>
          <span data-ttu-id="b38be-324">Si un élément avec la clé spécifiée n'est pas trouvé, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-324">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-325">Cette propriété permet d’accéder à un élément spécifique dans la collection à l’aide de la syntaxe suivante : `myCollection[key]` (`myCollection(key)` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b38be-325">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-326">Cette propriété est différente de héritées <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriété qui obtient et définit des éléments par index numérique.</span><span class="sxs-lookup"><span data-stu-id="b38be-326">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="b38be-327">Toutefois, si `TKey` est de type <xref:System.Int32>, cette propriété masque la propriété héritée.</span><span class="sxs-lookup"><span data-stu-id="b38be-327">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="b38be-328">Dans ce cas, vous pouvez accéder à la propriété héritée en effectuant un cast du <xref:System.Collections.ObjectModel.KeyedCollection%602> à son type de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-328">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="b38be-329">Par exemple, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` en Visual Basic, `KeyedCollection<int, MyType^>` en C++) peut être casté en `Collection<MyType>` (`Collection(Of MyType)` en Visual Basic, `Collection<MyType^>` dans C++).</span><span class="sxs-lookup"><span data-stu-id="b38be-329">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="b38be-330">Si le <xref:System.Collections.ObjectModel.KeyedCollection%602> a un dictionnaire de recherche, `key` est utilisée pour récupérer l’élément à partir du dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="b38be-330">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="b38be-331">S’il n’existe aucun dictionnaire de recherche, la clé de chaque élément est extraite à l’aide de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et comparée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-331">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="b38be-332">Le langage c# utilise le mot clé pour définir les indexeurs au lieu d’implémenter le <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-332">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="b38be-333">Visual Basic implémente <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> comme propriété par défaut, ce qui fournit les mêmes fonctionnalités d'indexation.</span><span class="sxs-lookup"><span data-stu-id="b38be-333">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="b38be-334">Récupération de la valeur de cette propriété est une opération o (1) si le <xref:System.Collections.ObjectModel.KeyedCollection%602> a un dictionnaire de recherche ; sinon c’est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-334">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-335">Cet exemple de code montre le code minimal nécessaire de dériver une classe de collection à partir de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et en fournissant un constructeur public qui délègue à un constructeur de classe de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-335">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="b38be-336">L’exemple de code montre également la plupart des propriétés et méthodes héritées de <xref:System.Collections.ObjectModel.KeyedCollection%602> et <xref:System.Collections.ObjectModel.Collection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="b38be-336">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="b38be-337">L’exemple de code appelle à la fois le <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> propriété, qui est en lecture seule et la récupération par clé, et le <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriété, qui peut être définie et effectue une récupération par index.</span><span class="sxs-lookup"><span data-stu-id="b38be-337">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="b38be-338">Il montre comment accéder à la propriété de ce dernier lorsque les objets dans la collection dérivée ont des clés de type entier, se distinguent pas des entiers utilisés pour la récupération indexée.</span><span class="sxs-lookup"><span data-stu-id="b38be-338">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="b38be-339">Le `SimpleOrder` classe est une liste très simple qui contient `OrderItem` objets, chacun d’eux représente un élément de ligne dans l’ordre.</span><span class="sxs-lookup"><span data-stu-id="b38be-339">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="b38be-340">La clé de `OrderItem` est immuable, un facteur important pour les classes qui dérivent de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-340">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-341">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-341">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b38be-342">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-342">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="b38be-343">An element with the specified key does not exist in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-343">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="b38be-344">The key of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-344">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b38be-346">
            <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-346">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b38be-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-348">La clé de l’élément est également supprimée du dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-348">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="b38be-349">Si le nombre d’éléments a dépassé le seuil de création de dictionnaire et le <xref:System.Collections.ObjectModel.KeyedCollection%602> est à l’aide d’un dictionnaire de recherche, il continuera à utiliser un dictionnaire de recherche, même si le nombre d’éléments est à nouveau sous le seuil.</span><span class="sxs-lookup"><span data-stu-id="b38be-349">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-350">Pour personnaliser le comportement de cette méthode, substituez le <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-350">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="b38be-351">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-352">Cet exemple de code montre le code minimal nécessaire de dériver une classe de collection à partir de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (méthode) et en fournissant un constructeur public qui délègue à un constructeur de classe de base.</span><span class="sxs-lookup"><span data-stu-id="b38be-352">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="b38be-353">L’exemple de code montre également la plupart des propriétés et méthodes héritées de <xref:System.Collections.ObjectModel.KeyedCollection%602> et <xref:System.Collections.ObjectModel.Collection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="b38be-353">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="b38be-354">L’exemple montre <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> héritée de la méthode <xref:System.Collections.ObjectModel.KeyedCollection%602>, qui supprime l’élément ayant la clé spécifiée et également le <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> et <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> méthodes héritées de <xref:System.Collections.ObjectModel.Collection%601>, lequel supprimer respectivement par objet et par index.</span><span class="sxs-lookup"><span data-stu-id="b38be-354">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="b38be-355">Le `SimpleOrder` classe est une liste très simple qui contient `OrderItem` objets, chacun d’eux représente un élément de ligne dans l’ordre.</span><span class="sxs-lookup"><span data-stu-id="b38be-355">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="b38be-356">La clé de `OrderItem` est immuable, un facteur important pour les classes qui dérivent de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="b38be-356">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="b38be-357">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-357">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b38be-358">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-358">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b38be-359">The index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-359">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-361">La clé de l’élément est également supprimée du dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-361">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="b38be-362">Si le nombre d’éléments a dépassé le seuil de création de dictionnaire et le <xref:System.Collections.ObjectModel.KeyedCollection%602> est à l’aide d’un dictionnaire de recherche, il continuera à utiliser un dictionnaire de recherche, même si le nombre d’éléments est à nouveau sous le seuil.</span><span class="sxs-lookup"><span data-stu-id="b38be-362">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="b38be-363">Cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-363">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="b38be-364">Notes de publication pour les implémenteurs</span><span class="sxs-lookup"><span data-stu-id="b38be-364">Notes for Implementers</span></span>  
 <span data-ttu-id="b38be-365">Substituez cette méthode pour fournir le comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> et <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> méthodes, héritées de la <xref:System.Collections.ObjectModel.Collection%601> classe générique et le <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-365">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="b38be-366">Appelez l’implémentation de classe de base de cette méthode pour supprimer l’élément de la collection sous-jacente et mettre à jour le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-366">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-367">Cette section contient deux exemples de code qui montrent la substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> méthode pour fournir un comportement personnalisé pour la suppression d’objets dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-367">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="b38be-368">Le premier exemple ajoute un événement de notification personnalisé et le second prend en charge une collection d’objets avec des clés mutables.</span><span class="sxs-lookup"><span data-stu-id="b38be-368">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="b38be-369">Exemple 1</span><span class="sxs-lookup"><span data-stu-id="b38be-369">Example 1</span></span>  
  
 <span data-ttu-id="b38be-370">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes, pour fournir un comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, et <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthodes et pour définition de la valeur par défaut <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété (l’indexeur en c#).</span><span class="sxs-lookup"><span data-stu-id="b38be-370">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="b38be-371">Le comportement personnalisé fourni dans cet exemple est un événement de notification nommé `Changed`, qui est déclenché à la fin de chacune des méthodes substituées.</span><span class="sxs-lookup"><span data-stu-id="b38be-371">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="b38be-372">L’exemple de code crée la `SimpleOrder` classe qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602> et représente un bon de commande simple.</span><span class="sxs-lookup"><span data-stu-id="b38be-372">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="b38be-373">Le formulaire de commande contient `OrderItem` objets représentant les éléments triés.</span><span class="sxs-lookup"><span data-stu-id="b38be-373">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="b38be-374">L’exemple de code crée également un `SimpleOrderChangedEventArgs` classe permettant de contenir les informations d’événement et une énumération pour identifier le type de modification.</span><span class="sxs-lookup"><span data-stu-id="b38be-374">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="b38be-375">L’exemple de code illustre le comportement personnalisé en appelant les propriétés et méthodes de la classe dérivée, dans le `Main` méthode de la `Demo` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-375">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="b38be-376">Cet exemple de code utilise des objets avec des clés immuables.</span><span class="sxs-lookup"><span data-stu-id="b38be-376">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="b38be-377">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-377">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="b38be-378">Exemple 2</span><span class="sxs-lookup"><span data-stu-id="b38be-378">Example 2</span></span>  
  
 <span data-ttu-id="b38be-379">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode pour prendre en charge des clés mutables et comment remplacer l’élément protégé <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes pour maintenir l’intégrité des clés et la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-379">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="b38be-380">L’exemple de code crée la `MutableKeys` collection qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602>et le `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-380">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="b38be-381">Le `MutableKey` classe a un définissable `Key` propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-381">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="b38be-382">Lorsqu’une nouvelle clé est assignée à la propriété, l’accesseur Set de propriété appelle le `internal` (`Friend` en Visual Basic) `ChangeKey` méthode de la collection pour tester si la nouvelle clé serait en conflit avec une clé existante.</span><span class="sxs-lookup"><span data-stu-id="b38be-382">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="b38be-383">Dans ce cas, une exception est levée et la valeur de propriété n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-383">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="b38be-384">Afin de maintenir la connexion entre un `MutableKey` objet et le `MutableKeys` collection et pour empêcher un objet à partir de laquelle elle est insérée deux collections, la `MutableKey` classe a un `internal` (`Friend` en Visual Basic) `Collection`champ.</span><span class="sxs-lookup"><span data-stu-id="b38be-384">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="b38be-385">Ce champ est géré par les méthodes protégées qui fournissent un comportement personnalisé pour ajouter et supprimer des éléments de la collection, telles que le <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-385">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="b38be-386">Le champ est défini lorsque l’élément est ajouté à une collection et effacé lorsque l’élément est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b38be-386">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b38be-387">The zero-based index of the item to be replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-387">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="b38be-388">The new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-388">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b38be-389">Replaces the item at the specified index with the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b38be-389">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b38be-390">Le dictionnaire de recherche est mis à jour en conséquence.</span><span class="sxs-lookup"><span data-stu-id="b38be-390">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="b38be-391">Autrement dit, la clé de l’élément qui est remplacé est supprimée du dictionnaire de recherche, et la clé du nouvel élément est ajoutée.</span><span class="sxs-lookup"><span data-stu-id="b38be-391">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="b38be-392">Cette méthode est une opération o (1).</span><span class="sxs-lookup"><span data-stu-id="b38be-392">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="b38be-393">Notes de publication pour les implémenteurs</span><span class="sxs-lookup"><span data-stu-id="b38be-393">Notes for Implementers</span></span>  
 <span data-ttu-id="b38be-394">Substituez cette méthode pour fournir le comportement personnalisé pour le paramètre le <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété héritée de la <xref:System.Collections.ObjectModel.Collection%601> classe générique.</span><span class="sxs-lookup"><span data-stu-id="b38be-394">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b38be-395">Cette méthode n’affecte pas le comportement de la <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> propriété, qui est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b38be-395">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="b38be-396">Appelez l’implémentation de classe de base de cette méthode pour définir l’élément dans la collection sous-jacente et mettre à jour le dictionnaire de recherche.</span><span class="sxs-lookup"><span data-stu-id="b38be-396">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b38be-397">Cette section contient deux exemples de code qui montrent la substitution de la <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthode pour fournir le comportement personnalisé pour définir le <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-397">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b38be-398">Le premier exemple ajoute un événement de notification personnalisé et le second prend en charge une collection d’objets avec des clés mutables.</span><span class="sxs-lookup"><span data-stu-id="b38be-398">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="b38be-399">Exemple 1</span><span class="sxs-lookup"><span data-stu-id="b38be-399">Example 1</span></span>  
  
 <span data-ttu-id="b38be-400">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes, pour fournir un comportement personnalisé pour le <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, et <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> méthodes et pour définition de la valeur par défaut <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriété (l’indexeur en c#).</span><span class="sxs-lookup"><span data-stu-id="b38be-400">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="b38be-401">Le comportement personnalisé fourni dans cet exemple est un événement de notification nommé `Changed`, qui est déclenché à la fin de chacune des méthodes substituées.</span><span class="sxs-lookup"><span data-stu-id="b38be-401">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="b38be-402">L’exemple de code crée la `SimpleOrder` classe qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602> et représente un bon de commande simple.</span><span class="sxs-lookup"><span data-stu-id="b38be-402">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="b38be-403">Le formulaire de commande contient `OrderItem` objets représentant les éléments triés.</span><span class="sxs-lookup"><span data-stu-id="b38be-403">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="b38be-404">L’exemple de code crée également un `SimpleOrderChangedEventArgs` classe permettant de contenir les informations d’événement et une énumération pour identifier le type de modification.</span><span class="sxs-lookup"><span data-stu-id="b38be-404">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="b38be-405">L’exemple de code illustre le comportement personnalisé en appelant les propriétés et méthodes de la classe dérivée, dans le `Main` méthode de la `Demo` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-405">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="b38be-406">Cet exemple de code utilise des objets avec des clés immuables.</span><span class="sxs-lookup"><span data-stu-id="b38be-406">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="b38be-407">Pour obtenir un exemple de code qui utilise des clés mutables, consultez <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="b38be-407">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="b38be-408">Exemple 2</span><span class="sxs-lookup"><span data-stu-id="b38be-408">Example 2</span></span>  
  
 <span data-ttu-id="b38be-409">L’exemple de code suivant montre comment substituer la méthode protégée <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> méthode pour prendre en charge des clés mutables et comment remplacer l’élément protégé <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, et <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> méthodes pour maintenir l’intégrité des clés et la collection.</span><span class="sxs-lookup"><span data-stu-id="b38be-409">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="b38be-410">L’exemple de code crée la `MutableKeys` collection qui dérive de <xref:System.Collections.ObjectModel.KeyedCollection%602>et le `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="b38be-410">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="b38be-411">Le `MutableKey` classe a un définissable `Key` propriété.</span><span class="sxs-lookup"><span data-stu-id="b38be-411">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="b38be-412">Lorsqu’une nouvelle clé est assignée à la propriété, l’accesseur Set de propriété appelle le `internal` (`Friend` en Visual Basic) `ChangeKey` méthode de la collection pour tester si la nouvelle clé serait en conflit avec une clé existante.</span><span class="sxs-lookup"><span data-stu-id="b38be-412">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="b38be-413">Dans ce cas, une exception est levée et la valeur de propriété n’est pas modifiée.</span><span class="sxs-lookup"><span data-stu-id="b38be-413">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="b38be-414">Afin de maintenir la connexion entre un `MutableKey` objet et le `MutableKeys` collection et pour empêcher un objet à partir de laquelle elle est insérée deux collections, la `MutableKey` classe a un `internal` (`Friend` en Visual Basic) `Collection`champ.</span><span class="sxs-lookup"><span data-stu-id="b38be-414">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="b38be-415">Ce champ est géré par les méthodes protégées qui fournissent un comportement personnalisé pour ajouter et supprimer des éléments de la collection, telles que le <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b38be-415">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="b38be-416">Le champ est défini lorsque l’élément est ajouté à une collection et effacé lorsque l’élément est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b38be-416">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>