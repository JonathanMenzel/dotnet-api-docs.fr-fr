<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObservableCollection`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eaa22977009257753fbc64752753fc05cd2ab76d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa22977009257753fbc64752753fc05cd2ab76d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Type des éléments de la collection.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.</source>
          <target state="translated">Représente une collection de données dynamiques qui fournit des notifications quand des éléments sont ajoutés, supprimés ou que l’intégralité de la liste est actualisée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>In many cases the data that you work with is a collection of objects.</source>
          <target state="translated">Dans de nombreux cas, les données avec lesquelles vous travaillez sont une collection d’objets.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For example, a common scenario in data binding is to use an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> such as a <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> to display a collection of records.</source>
          <target state="translated">Par exemple, un scénario courant dans la liaison de données consiste à utiliser un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> comme un <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, ou <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> pour afficher une collection d’enregistrements.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You can enumerate over any collection that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez énumérer toute collection qui implémente le <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, to set up dynamic bindings so that insertions or deletions in the collection update the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automatically, the collection must implement the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated">Toutefois, pour définir des liaisons dynamiques afin que les insertions ou les suppressions dans la collection de mettre à jour le <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automatiquement, la collection doit implémenter le <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>This interface exposes the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event, an event that should be raised whenever the underlying collection changes.</source>
          <target state="translated">Cette interface expose le <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> événement, un événement doit être déclenché chaque fois que la collection sous-jacente est modifiée.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class, which is a built-in implementation of a data collection that implements the <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Fournit la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> (classe), qui est une implémentation intégrée d’une collection de données qui implémente le <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Before implementing your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> or one of the existing collection classes, such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, among many others.</source>
          <target state="translated">Avant d’implémenter votre propre collection, envisagez d’utiliser <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> ou un de la collection existante des classes, telles que <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, et <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, entre autres.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>If you have an advanced scenario and want to implement your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, which provides a non-generic collection of objects that can be individually accessed by index.</source>
          <target state="translated">Si vous avez un scénario avancé et que vous souhaitez implémenter votre propre collection, envisagez d’utiliser <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, qui fournit une collection non générique d’objets accessibles séparément par index.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Implementing <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> provides the best performance with the data binding engine.</source>
          <target state="translated">Mise en œuvre <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> offre des performances optimales avec le moteur de liaison de données.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>To fully support transferring data values from binding source objects to binding targets, each object in your collection that supports bindable properties must implement an appropriate property changed notification mechanism such as the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">Pour prendre en charge le transfert des valeurs de données à partir des objets de source de liaison à des cibles de liaison, chaque objet dans votre collection qui prend en charge les propriétés pouvant être liées doit implémenter un mécanisme de notification de modification de propriété approprié tel que le <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For more information, see "Binding to Collections" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez « Liaison à des Collections » dans <bpt id="p1">[</bpt>vue d’ensemble de la liaison de données<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Notes on XAML Usage</source>
          <target state="translated">Remarques sur l’utilisation de XAML</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> can be used as a XAML object element in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, in versions 3.0 and 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> peut être utilisé en tant qu’élément objet XAML dans <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, dans les versions 3.0 et 3.5.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, the usage has substantial limitations.</source>
          <target state="translated">Toutefois, l’utilisation de la présente des limitations importantes.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> must be the root element, because the  that must be used to specify the constrained type of the generic <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is only supported on the object element for the root element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> doit être l’élément racine, car le qui doit être utilisé pour spécifier le type de contraint de l’objet générique <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> est uniquement pris en charge sur l’élément d’objet pour l’élément racine.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must declare an  (which entails that the build action for this XAML file must be <ph id="ph1">`Page`</ph> or some other build action that compiles the XAML).</source>
          <target state="translated">Vous devez déclarer une (qui implique que l’action de génération pour ce fichier XAML doit être <ph id="ph1">`Page`</ph> ou une autre action de génération qui compile le code XAML).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is in a namespace and assembly that are not initially mapped to the default XML namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> est un espace de noms et un assembly qui ne sont pas mappés initialement à l’espace de noms XML par défaut.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must map a prefix for the namespace and assembly, and then use that prefix on the object element tag for <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</source>
          <target state="translated">Vous devez mapper un préfixe pour l’espace de noms et l’assembly et ensuite utiliser ce préfixe sur la balise d’élément objet pour <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>A more straightforward way to use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> capabilities from XAML in an application is to declare your own non-generic custom collection class that derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, and constrains it to a specific type.</source>
          <target state="translated">Un moyen plus simple d’utiliser <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> fonctions à partir de XAML dans une application consiste à déclarer votre propre classe de collection personnalisée non générique qui dérive de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, et le contraint à un type spécifique.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Then map the assembly that contains this class, and reference it as an object element in your XAML.</source>
          <target state="translated">Puis mappez l’assembly qui contient cette classe et référencer comme un élément objet dans votre code XAML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection from which the elements are copied.</source>
          <target state="translated">Collection à partir de laquelle les éléments sont copiés.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified collection.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> qui contient des éléments copiés depuis la collection spécifiée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the collection.</source>
          <target state="translated">Les éléments sont copiés dans le <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> dans le même ordre qu’ils sont lus par l’énumérateur de la collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ne peut pas avoir la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The list from which the elements are copied.</source>
          <target state="translated">Liste à partir de laquelle les éléments sont copiés.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified list.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> qui contient des éléments copiés à partir de la liste spécifiée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the list.</source>
          <target state="translated">Les éléments sont copiés dans le <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> dans le même ordre qu’ils sont lus par l’énumérateur de la liste.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The <ph id="ph1">&lt;paramref name="list" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="list" /&gt;</ph> ne peut pas avoir la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>Disallows reentrant attempts to change this collection.</source>
          <target state="translated">Rejette les tentatives réentrantes ayant pour but de modifier cette collection.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that can be used to dispose of the object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> qui peut être utilisé pour supprimer l’objet.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>The typical usage is to wrap an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> call within a <ph id="ph2">`using`</ph> scope, as in the following example:</source>
          <target state="translated">L’utilisation typique consiste à encapsuler un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> appeler dans un <ph id="ph2">`using`</ph> étendue, comme dans l’exemple suivant :</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Checks for reentrant attempts to change this collection.</source>
          <target state="translated">Vérifie les tentatives réentrantes ayant pour but de modifier cette collection.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>If there was a call to <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph> of which the <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> return value has not yet been disposed of.</source>
          <target state="translated">S’il y a eu un appel à <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph> dont la valeur de retour <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> n’a pas encore été supprimée.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Typically, this means when there are additional attempts to change this collection during a <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated">En règle générale, cela signifie qu’il y a des tentatives de modification de cette collection supplémentaires pendant un événement <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>However, it depends on when derived classes choose to call <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</source>
          <target state="translated">Toutefois, cela dépend du moment où les classes dérivées choisissent d’appeler <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>Removes all items from the collection.</source>
          <target state="translated">Supprime tous les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>The base class calls this method when the list is being cleared.</source>
          <target state="translated">La classe de base appelle cette méthode lorsque la liste est effacée.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Cette implémentation déclenche le <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Pour plus d’informations, consultez la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe de base.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
          <source>Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.</source>
          <target state="translated">Se produit quand un élément est ajouté, supprimé, modifié ou déplacé, ou quand la liste entière est actualisée.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Index de base zéro auquel <bpt id="p1">&lt;c&gt;</bpt>l’élément<ept id="p1">&lt;/c&gt;</ept> doit être inséré.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Objet à insérer.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>Inserts an item into the collection at the specified index.</source>
          <target state="translated">Insère un élément dans la collection au niveau de l’index spécifié.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The base class calls this method when an item is added to the collection.</source>
          <target state="translated">La classe de base appelle cette méthode lorsqu’un élément est ajouté à la collection.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Cette implémentation déclenche le <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Pour plus d’informations, consultez la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe de base.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">Index de base zéro spécifiant l’emplacement de l’élément à déplacer.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">Index de base zéro spécifiant le nouvel emplacement de l’élément.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">Déplace l’élément de l’index spécifié vers un nouvel emplacement dans la collection.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Subclasses can override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> method to provide custom behavior for this method.</source>
          <target state="translated">Les sous-classes peuvent substituer la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> méthode pour fournir un comportement personnalisé pour cette méthode.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">Index de base zéro spécifiant l’emplacement de l’élément à déplacer.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">Index de base zéro spécifiant le nouvel emplacement de l’élément.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">Déplace l’élément de l’index spécifié vers un nouvel emplacement dans la collection.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Cette implémentation déclenche le <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Subclasses can override this protected method to provide custom behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> method.</source>
          <target state="translated">Les sous-classes peuvent substituer cette méthode protégée pour fournir un comportement personnalisé pour le <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">Arguments de l’événement déclenché.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">Déclenche l’événement <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> avec les arguments fournis.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Properties and methods that modify this collection raise the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> event through this <ph id="ph2">`virtual`</ph> method.</source>
          <target state="translated">Propriétés et méthodes qui modifient cette collection déclenchent le <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> événements via ce <ph id="ph2">`virtual`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>When overriding this method, either call the base implementation or use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> method to handle reentrant collection changes, as in the following example:</source>
          <target state="translated">Lorsque vous substituez cette méthode, appelez l’implémentation de base ou utilisez le <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> change de méthode pour gérer la collection réentrantes, comme dans l’exemple suivant :</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">Arguments de l’événement déclenché.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">Déclenche l’événement <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> avec les arguments fournis.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">Se produit en cas de modification d'une valeur de propriété.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Index de base zéro de l'élément à supprimer.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>Removes the item at the specified index of the collection.</source>
          <target state="translated">Supprime l’élément à l’index spécifié de la collection.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The base class calls this method when an item is removed from the collection.</source>
          <target state="translated">La classe de base appelle cette méthode lorsqu’un élément est supprimé de la collection.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Cette implémentation déclenche le <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Pour plus d’informations, consultez la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe de base.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The zero-based index of the element to replace.</source>
          <target state="translated">Index de base zéro de l'élément à remplacer.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The new value for the element at the specified index.</source>
          <target state="translated">Nouvelle valeur de l'élément à l'index spécifié.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>Replaces the element at the specified index.</source>
          <target state="translated">Remplace l'élément à l'index spécifié.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The base class calls this method when an item is set in the collection.</source>
          <target state="translated">La classe de base appelle cette méthode lorsqu’un élément est défini dans la collection.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Cette implémentation déclenche le <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Pour plus d’informations, consultez la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe de base.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>