<Type Name="ImportDefinition" FullName="System.ComponentModel.Composition.Primitives.ImportDefinition">
  <TypeSignature Language="C#" Value="public class ImportDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportDefinition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportDefinition" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportDefinition" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4f465-101">Représente une importation requise par un objet <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-101">Represents an import that is required by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f465-102">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ImportDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ImportDefinition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f465-103">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f465-104">Les types dérivés qui appellent ce constructeur doivent substituer la <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint%2A> propriété et, éventuellement, le <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite%2A> et <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="4f465-104">Derived types that call this constructor must override the <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint%2A> property, and optionally, the <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite%2A> and <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportDefinition (System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; constraint, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; constraint, string contractName, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (constraint As Expression(Of Func(Of ExportDefinition, Boolean)), contractName As String, cardinality As ImportCardinality, isRecomposable As Boolean, isPrerequisite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportDefinition(System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ constraint, System::String ^ contractName, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constraint" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="4f465-105">Expression qui contient un objet <see cref="T:System.Func`2" /> qui définit les conditions que la classe <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> doit remplir pour satisfaire la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-105">An expression that contains a <see cref="T:System.Func`2" /> object that defines the conditions an <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> must match to satisfy the import definition.</span></span></param>
        <param name="contractName"><span data-ttu-id="4f465-106">Le nom du contrat.</span><span class="sxs-lookup"><span data-stu-id="4f465-106">The contract name.</span></span></param>
        <param name="cardinality"><span data-ttu-id="4f465-107">Une des valeurs d'énumération qui indique la cardinalité des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> requis par la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-107">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the import definition.</span></span></param>
        <param name="isRecomposable">
          <span data-ttu-id="4f465-108"><see langword="true" /> pour spécifier que la définition d'importation peut être satisfaite plusieurs fois pendant la durée de vie d'un objet <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-108"><see langword="true" /> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPrerequisite">
          <span data-ttu-id="4f465-109"><see langword="true" /> pour spécifier que la définition d'importation doit être satisfaite avant qu'un <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> puisse commencer à produire des objets exportés ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-109"><see langword="true" /> to specify that the import definition must be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> can start producing exported objects; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4f465-110">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> avec la contrainte, le nom de contrat et la cardinalité spécifiés, et indique si la définition de l'importation est recomposable ou est une condition préalable.</span><span class="sxs-lookup"><span data-stu-id="4f465-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> class with the specified constraint, contract name, and cardinality, and indicates whether the import definition is recomposable or a prerequisite.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4f465-111"><paramref name="constraint" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-111"><paramref name="constraint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4f465-112"><paramref name="cardinality" /> ne fait pas partie des valeurs de <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-112"><paramref name="cardinality" /> is not one of the values of <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportDefinition (System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; constraint, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; constraint, string contractName, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (constraint As Expression(Of Func(Of ExportDefinition, Boolean)), contractName As String, cardinality As ImportCardinality, isRecomposable As Boolean, isPrerequisite As Boolean, metadata As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportDefinition(System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ constraint, System::String ^ contractName, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constraint" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="4f465-113">Expression qui contient un objet <see cref="T:System.Func`2" /> qui définit les conditions que la classe <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> doit remplir pour satisfaire la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-113">An expression that contains a <see cref="T:System.Func`2" /> object that defines the conditions an <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> must match to satisfy the import definition.</span></span></param>
        <param name="contractName"><span data-ttu-id="4f465-114">Le nom du contrat.</span><span class="sxs-lookup"><span data-stu-id="4f465-114">The contract name.</span></span></param>
        <param name="cardinality"><span data-ttu-id="4f465-115">Une des valeurs d'énumération qui indique la cardinalité des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> requis par la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-115">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the import definition.</span></span></param>
        <param name="isRecomposable">
          <span data-ttu-id="4f465-116"><see langword="true" /> pour spécifier que la définition d'importation peut être satisfaite plusieurs fois pendant la durée de vie d'un objet <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-116"><see langword="true" /> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPrerequisite">
          <span data-ttu-id="4f465-117"><see langword="true" /> pour spécifier que la définition d'importation doit être satisfaite avant qu'un <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> puisse commencer à produire des objets exportés ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-117"><see langword="true" /> to specify that the import definition must be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> can start producing exported objects; otherwise, <see langword="false" />.</span></span></param>
        <param name="metadata"><span data-ttu-id="4f465-118">Métadonnées associées à l'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-118">The metadata associated with the import.</span></span></param>
        <summary><span data-ttu-id="4f465-119">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> avec la contrainte, le nom de contrat, la cardinalité et les métadonnées spécifiés, et indique si la définition de l'importation est recomposable ou est une condition préalable.</span><span class="sxs-lookup"><span data-stu-id="4f465-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> class with the specified constraint, contract name, cardinality, and metadata, and indicates whether the import definition is recomposable or a prerequisite.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cardinality">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Composition.Primitives.ImportCardinality Cardinality { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.Primitives.ImportCardinality Cardinality" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cardinality As ImportCardinality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Composition::Primitives::ImportCardinality Cardinality { System::ComponentModel::Composition::Primitives::ImportCardinality get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ImportCardinality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f465-120">Obtient la cardinalité des exportations requises par la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-120">Gets the cardinality of the exports required by the import definition.</span></span></summary>
        <value><span data-ttu-id="4f465-121">Une des valeurs d'énumération qui indique la cardinalité des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> requis par <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-121">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span> <span data-ttu-id="4f465-122">La valeur par défaut est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-122">The default is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraint">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; Constraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; Constraint" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Constraint As Expression(Of Func(Of ExportDefinition, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ Constraint { System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f465-123">tient une expression qui définit des conditions que l'importation doit satisfaire pour correspondre à la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-123">Gets an expression that defines conditions that the import must satisfy to match the import definition.</span></span></summary>
        <value><span data-ttu-id="4f465-124">Expression qui contient un objet <see cref="T:System.Func`2" /> qui définit les conditions qu'un <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> doit satisfaire pour correspondre à <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-124">An expression that contains a <see cref="T:System.Func`2" /> object that defines the conditions an <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> must satisfy to match the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f465-125">Les substitutions de cette propriété ne doivent jamais retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="4f465-125">Overrides of this property should never return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f465-126">La propriété n'a pas été substituée par une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="4f465-126">The property was not overridden by a derived class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public virtual string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f465-127">Obtient le nom du contrat.</span><span class="sxs-lookup"><span data-stu-id="4f465-127">Gets the name of the contract.</span></span></summary>
        <value><span data-ttu-id="4f465-128">Le nom du contrat.</span><span class="sxs-lookup"><span data-stu-id="4f465-128">The contract name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstraintSatisfiedBy">
      <MemberSignature Language="C#" Value="public virtual bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsConstraintSatisfiedBy(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsConstraintSatisfiedBy(System::ComponentModel::Composition::Primitives::ExportDefinition ^ exportDefinition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition"><span data-ttu-id="4f465-129">Définition d'exportation à tester.</span><span class="sxs-lookup"><span data-stu-id="4f465-129">The export definition to test.</span></span></param>
        <summary><span data-ttu-id="4f465-130">Obtient une valeur qui indique si l'exportation représentée par la définition spécifiée satisfait les contraintes de cette définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-130">Gets a value that indicates whether the export represented by the specified definition satisfies the constraints of this import definition.</span></span></summary>
        <returns>
          <span data-ttu-id="4f465-131"><see langword="true" /> si les contraintes sont satisfaites ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-131"><see langword="true" /> if the constraints are satisfied; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrerequisite">
      <MemberSignature Language="C#" Value="public virtual bool IsPrerequisite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrerequisite" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPrerequisite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPrerequisite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f465-132">Obtient une valeur qui indique si la définition d'importation doit être satisfaite avant qu'un composant puisse commencer à produire des objets exportés.</span><span class="sxs-lookup"><span data-stu-id="4f465-132">Gets a value that indicates whether the import definition must be satisfied before a part can start producing exported objects.</span></span></summary>
        <value>
          <span data-ttu-id="4f465-133"><see langword="true" /> si <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> doit être satisfait avant qu'un objet <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> puisse commencer à produire des objets exportés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-133"><see langword="true" /> if the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> must be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object can start producing exported objects; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4f465-134">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-134">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecomposable">
      <MemberSignature Language="C#" Value="public virtual bool IsRecomposable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecomposable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsRecomposable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsRecomposable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f465-135">Obtient une valeur qui indique si la définition d'importation peut être satisfaite plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="4f465-135">Gets a value that indicates whether the import definition can be satisfied multiple times.</span></span></summary>
        <value>
          <span data-ttu-id="4f465-136"><see langword="true" /> si <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> peut être satisfait plusieurs fois pendant la durée de vie d'un objet <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-136"><see langword="true" /> if the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4f465-137">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f465-137">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Metadata { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f465-138">Obtient les métadonnées associées à cette importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-138">Gets the metadata associated with this import.</span></span></summary>
        <value><span data-ttu-id="4f465-139">Collection qui contient les métadonnées associées à cette importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-139">A collection that contains the metadata associated with this import.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f465-140">Cette propriété ne doit jamais retourner null.</span><span class="sxs-lookup"><span data-stu-id="4f465-140">This property should never return null.</span></span> <span data-ttu-id="4f465-141">Importations sans métadonnées doivent retourner vide <xref:System.Collections.Generic.IDictionary%602> collection.</span><span class="sxs-lookup"><span data-stu-id="4f465-141">Imports with no metadata should return an empty <xref:System.Collections.Generic.IDictionary%602> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ImportDefinition.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f465-142">Retourne une représentation sous forme de chaîne de la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-142">Returns a string representation of the import definition.</span></span></summary>
        <returns><span data-ttu-id="4f465-143">Représentation sous forme de chaîne de la définition d'importation.</span><span class="sxs-lookup"><span data-stu-id="4f465-143">A string representation of the import definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>