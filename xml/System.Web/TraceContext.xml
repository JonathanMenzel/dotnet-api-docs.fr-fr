<Type Name="TraceContext" FullName="System.Web.TraceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49e552faa4d809c8ea6e2c3a93773f749884c97b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30609683" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TraceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Capture et présente les détails d'exécution relatifs à une demande Web. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette classe pour ajouter des messages à des catégories de trace spécifique. Par exemple, si vous créez une instance de la <xref:System.Web.UI.WebControls.Calendar> classe pour votre application, vous pouvez inclure le message de trace « Début du rendu » dans une procédure de rendu et « Déclenchement de l’événement OnChange » dans une procédure de gestionnaire d’événements.  
  
 Vous pouvez également utiliser la <xref:System.Web.TraceContext> classe pour obtenir un jeu d’enregistrements de trace à la fin de l’exécution de la demande de traitement personnalisé. Pour plus d’informations, consultez [vue d’ensemble du traçage ASP.NET](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 Pour activer le traçage, définissez la `Trace` d’attribut dans le [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive ou <xref:System.Web.TraceContext.IsEnabled%2A> propriété `true`. Lorsque le traçage est activé, en plus de l’affichage du contenu de trace fourni par l’utilisateur, la <xref:System.Web.UI.Page> classe inclut automatiquement les données de performances, information de structure d’arborescence du contrôle et contenu de gestion d’état pour chaque demande.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <altmember cref="T:System.Web.TraceContextRecord" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContext(System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> qui contient des informations sur la demande Web en cours.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.TraceContext" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le traçage est activé pour la demande Web en cours.</summary>
        <value>
          <see langword="true" /> si le traçage est activé, sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cet indicateur pour vérifier si votre page ou votre application doit générer des informations de traçage avant de les écrire quoi que ce soit dans le journal des traces.  
  
 La valeur de la <xref:System.Web.TraceContext.IsEnabled%2A> propriété dépend des paramètres définis dans la sous-section de le `system.web` section de configuration et la valeur de la `trace` attribut de la directive. L’option de traçage définie dans la directive de page est prioritaire sur l’option définie dans le fichier de configuration. Définition de la <xref:System.Web.TraceContext.IsEnabled%2A> valeur par programmation prévaut sur l’attribut de directive de page et le paramètre de configuration.  
  
> [!NOTE]
>  Si vous définissez la <xref:System.Web.TraceContext.IsEnabled%2A> propriété `true` pour une application entière, vous devez définir explicitement cette propriété sur `false` pour n’importe quelle page dans l’application pour laquelle vous ne souhaitez pas les informations de traçage affichées.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez déterminer si le traçage est activé pour une page. Le code effectue une itération au sein des lignes dans un jeu de données, l’écriture d’instructions de trace pour chaque ligne dans le jeu de données.  
  
 [!code-csharp[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/CS/source.cs#1)]
 [!code-vb[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceFinished">
      <MemberSignature Language="C#" Value="public event System.Web.TraceContextEventHandler TraceFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.TraceContextEventHandler TraceFinished" />
      <MemberSignature Language="DocId" Value="E:System.Web.TraceContext.TraceFinished" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TraceFinished As TraceContextEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::TraceContextEventHandler ^ TraceFinished;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContextEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Déclenché par l'objet <see cref="T:System.Web.TraceContext" /> pour exposer des messages de trace une fois que toutes les informations de demande ont été rassemblées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.TraceContext.TraceFinished> événement est déclenché pendant le `EndRequest` étape du traitement de la requête HTTP. Il est déclenché par un <xref:System.Web.TraceContext> une fois que toutes les informations de demande sont rassemblées, pour exposer la collection de l’objet <xref:System.Web.TraceContextRecord> messages enregistrés <xref:System.Web.TraceContextEventHandler> délégués.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez inscrire un <xref:System.Web.TraceContextEventHandler> pour gérer les <xref:System.Web.TraceContext.TraceFinished> événement. Dans cet exemple, le délégué itère dans les messages de trace et les écrit dans le flux de réponse ; Toutefois, vous pouvez écrire les mêmes informations pour une base de données ou un consommateur d’outil de profilage.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContextEventHandler" />
        <altmember cref="T:System.Web.TraceContextEventArgs" />
        <altmember cref="T:System.Web.TraceContextRecord" />
      </Docs>
    </Member>
    <Member MemberName="TraceMode">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.TraceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceMode As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceMode { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'ordre trié dans lequel les messages de trace doivent être générés sur un navigateur demandeur.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Web.TraceMode" />. La valeur par défaut est le paramètre spécifié par l'attribut <see langword="traceMode" /> dans la section <see langword="trace" /> d'un fichier de configuration dont la valeur par défaut est <see langword="SortByTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les messages de trace peuvent être triées dans l’ordre qu’ils ont été traités, ou par ordre alphabétique par catégorie définie par l’utilisateur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez trier alphabétiquement les instructions de traçage d’une page en fonction des catégories que vous avez assignés aux instructions.  
  
 [!code-aspx-csharp[Classic TraceContext.TraceMode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TraceContext.TraceMode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée ne fait pas partie des valeurs d'énumération <see cref="T:System.Web.TraceMode" />.</exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Warn">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit des informations de traçage dans le journal des traces. Contrairement à <see cref="M:System.Web.TraceContext.Write(System.String)" />, tous les avertissements s'affichent dans le journal en texte rouge.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message de trace à écrire dans le journal.</param>
        <summary>Écrit un message de trace dans le journal des traces. Tous les avertissements s'affichent dans le journal en texte rouge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois que le <xref:System.Web.TraceContext.Warn%2A> méthode est appelée, un <xref:System.Web.TraceContext> message de trace est ajoutée à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> collection, qui est accessible lorsque vous gérez des messages le <xref:System.Web.TraceContext.TraceFinished> événement. Le message est ajouté avec son <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `true` et son <xref:System.Web.TraceContextRecord.ErrorInfo%2A> propriété `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Catégorie de trace qui reçoit le message.</param>
        <param name="message">Message de trace à écrire dans le journal.</param>
        <summary>Écrit dans le journal des traces des informations de traçage incluant toutes les catégories définies par l'utilisateur et des messages de trace. Tous les avertissements s'affichent dans le journal en texte rouge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois que le <xref:System.Web.TraceContext.Warn%2A> méthode est appelée, un <xref:System.Web.TraceContext> message de trace est ajoutée à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> collection, qui est accessible lorsque vous gérez des messages le <xref:System.Web.TraceContext.TraceFinished> événement. Le message est ajouté avec son <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `true` et son <xref:System.Web.TraceContextRecord.ErrorInfo%2A> propriété `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Catégorie de trace qui reçoit le message.</param>
        <param name="message">Message de trace à écrire dans le journal.</param>
        <param name="errorInfo">
          <see cref="T:System.Exception" /> qui contient des informations sur l'erreur.</param>
        <summary>Écrit dans le journal des traces des informations de traçage incluant toutes les catégories définies par l'utilisateur, des messages de trace, ainsi que des informations relatives aux erreurs. Tous les avertissements s'affichent dans le journal en texte rouge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois que le <xref:System.Web.TraceContext.Warn%2A> méthode est appelée, un <xref:System.Web.TraceContext> message de trace est ajoutée à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> collection, qui est accessible lorsque vous gérez des messages le <xref:System.Web.TraceContext.TraceFinished> événement. Le message est ajouté avec sa <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `true`et le <xref:System.Web.TraceContextRecord.ErrorInfo%2A> est définie sur l’objet passé par le `errorInfo` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.TraceContext.Write%2A> méthode pour écrire un message de trace d’erreur dans le journal des traces. Dans cet exemple, plusieurs exceptions sont tracées en tant que les erreurs et avertissements. Lorsque la page lève un <xref:System.ArgumentException>, il écrit un message d’avertissement à l’aide du <xref:System.Web.TraceContext.Warn%2A> (méthode). Lorsque la page lève un <xref:System.InvalidOperationException>, il écrit un message d’erreur à l’aide du <xref:System.Web.TraceContext.Write%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit des informations de traçage dans le journal des traces.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message de trace à écrire dans le journal.</param>
        <summary>Écrit un message de trace dans le journal des traces.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois que le <xref:System.Web.TraceContext.Write%2A> méthode est appelée, un <xref:System.Web.TraceContext> message de trace est ajoutée à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> collection, qui est accessible lorsque vous gérez des messages le <xref:System.Web.TraceContext.TraceFinished> événement. Le message est ajouté avec son <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `false` et son <xref:System.Web.TraceContextRecord.ErrorInfo%2A> propriété `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Catégorie de trace qui reçoit le message.</param>
        <param name="message">Message de trace à écrire dans le journal.</param>
        <summary>Écrit dans le journal des traces des informations de traçage incluant un message et toutes les catégories définies par l'utilisateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois que le <xref:System.Web.TraceContext.Write%2A> méthode est appelée, un <xref:System.Web.TraceContext> message de trace est ajoutée à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> collection, qui est accessible lorsque vous gérez des messages le <xref:System.Web.TraceContext.TraceFinished> événement. Le message est ajouté avec son <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `false` et son <xref:System.Web.TraceContextRecord.ErrorInfo%2A> propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.TraceContext.Write%2A> méthode pour écrire un message de trace d’erreur dans le journal des traces. Dans cet exemple, le délégué itère dans les messages de trace et les écrit comme un tableau HTML ; Toutefois, vous pouvez écrire les mêmes informations pour une base de données ou un consommateur d’outil de profilage.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Catégorie de trace qui reçoit le message.</param>
        <param name="message">Message de trace à écrire dans le journal.</param>
        <param name="errorInfo">
          <see cref="T:System.Exception" /> qui contient des informations sur l'erreur.</param>
        <summary>Écrit dans le journal des traces des informations de traçage incluant toutes les catégories définies par l'utilisateur, des messages de trace, ainsi que des informations relatives aux erreurs.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque fois que le <xref:System.Web.TraceContext.Write%2A> méthode est appelée, un <xref:System.Web.TraceContext> message de trace est ajoutée à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> collection, qui est accessible lorsque vous gérez des messages le <xref:System.Web.TraceContext.TraceFinished> événement. Le message est ajouté avec sa <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `false`et le <xref:System.Web.TraceContextRecord.ErrorInfo%2A> est définie sur l’objet passé par le `errorInfo` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.TraceContext.Write%2A> méthode pour écrire un message de trace d’erreur dans le journal des traces. Dans cet exemple, plusieurs exceptions sont tracées en tant que les erreurs et avertissements. Lorsque la page lève un <xref:System.ArgumentException>, il écrit un message d’avertissement à l’aide du <xref:System.Web.TraceContext.Warn%2A> (méthode). Lorsque la page lève un <xref:System.InvalidOperationException>, il écrit un message d’erreur à l’aide du <xref:System.Web.TraceContext.Write%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>