<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplication.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5763b66da8b1dceadda77652804c5bae9caa303a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">763b66da8b1dceadda77652804c5bae9caa303a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</source>
          <target state="translated">Définit les méthodes, les propriétés et les événements communs à tous les objets d’application dans une application ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>This class is the base class for applications that are defined by the user in the Global.asax file.</source>
          <target state="translated">Cette classe est la classe de base pour les applications définies par l’utilisateur dans le fichier Global.asax.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.</source>
          <target state="translated">Instances de la <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> classe sont créées dans l’infrastructure ASP.NET et non directement par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>One instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.</source>
          <target state="translated">Une instance de la <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> classe est utilisée pour traiter un grand nombre de demandes dans sa durée de vie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>However, it can process only one request at a time.</source>
          <target state="translated">Toutefois, il peut traiter qu’une seule demande à la fois.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Thus, member variables can be used to store per-request data.</source>
          <target state="translated">Par conséquent, les variables de membre peuvent être utilisées pour stocker les données de chaque demande.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>An application raises events that can be handled by custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.</source>
          <target state="translated">Une application déclenche des événements qui peuvent être gérés par des modules personnalisés qui implémentent le <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> de l’interface ou de fichier par le code de gestionnaire d’événements qui est défini dans le fichier Global.asax.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.</source>
          <target state="translated">Les modules personnalisés qui implémentent la <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface peut être placée dans le dossier App_Code ou dans une DLL dans le dossier Bin.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</source>
          <target state="translated">Lorsque vous exécutez IIS 7.0 en mode intégré, des modules personnalisés dans le dossier App_Code ou le dossier Bin s’appliquent à toutes les demandes dans le pipeline de requête.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</source>
          <target state="translated">Code de gestionnaire d’événements dans le fichier Global.asax s’applique uniquement aux requêtes qui sont mappées à un gestionnaire ASP.NET.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The application events are raised in the following order:</source>
          <target state="translated">Les événements d’application sont déclenchés dans l’ordre suivant :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.</source>
          <target state="translated">Après le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> événement et avant la <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> événement, un gestionnaire d’événements (qui est une page qui correspond à l’URL de demande) est créé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.</source>
          <target state="translated">Lorsqu’un serveur exécute IIS 7.0 en mode intégré et au moins la version .NET Framework 3.0, le <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> événement est déclenché.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</source>
          <target state="translated">Lorsqu’un serveur exécute IIS 7.0 en mode classique ou une version antérieure d’IIS, cet événement ne peut pas être géré.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The event handler is executed.</source>
          <target state="translated">Le Gestionnaire d’événements est exécuté.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.</source>
          <target state="translated">Après le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> événement est déclenché, tout filtre de réponse existant filtre la sortie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">Cet événement est pris en charge en mode intégré d’IIS 7.0 et au moins .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">Cet événement est pris en charge le mode intégré d’IIS 7.0 et au moins .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following two examples demonstrate how to use the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class and its events.</source>
          <target state="translated">Les deux exemples suivants montrent comment utiliser la <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> classe et ses événements.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The first example demonstrates how to create a custom HTTP module and connect an event to it.</source>
          <target state="translated">Le premier exemple montre comment créer un module HTTP personnalisé et s’y connecter un événement.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The second example demonstrates how to modify the Web.config file.</source>
          <target state="translated">Le deuxième exemple montre comment modifier le fichier Web.config.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example demonstrates how to create a custom HTTP module and connect the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event to the HTTP module.</source>
          <target state="translated">L’exemple suivant montre comment créer un module HTTP personnalisé et connecter le <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> événements pour le module HTTP.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</source>
          <target state="translated">Les modules HTTP interceptent chaque demande de ressources d’application Web, ce qui vous permet de filtrer les demandes du client.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Any HTTP module that subscribes to an <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> event must implement the <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interface.</source>
          <target state="translated">Tout module HTTP qui s’abonne à un <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> événement doit implémenter la <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</source>
          <target state="translated">Avant d’effectuer un événement dans un module HTTP personnalisé, vous devez modifier les paramètres de configuration dans le fichier Web.config pour notifier le module HTTP ASP.NET.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example shows the appropriate configuration setting in the <ph id="ph1">`httpModules`</ph> section of the Web.config file.</source>
          <target state="translated">L’exemple suivant montre le paramètre de configuration appropriée dans la <ph id="ph1">`httpModules`</ph> section du fichier Web.config.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</source>
          <target state="translated">Le paramètre suivant s’applique en mode classique d’IIS 7.0 et versions antérieures d’IIS.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Integrated mode.</source>
          <target state="translated">Le paramètre suivant s’applique au mode intégré d’IIS 7.0.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</source>
          <target state="translated">Se produit lorsque ASP.NET acquiert l'état actuel (par exemple, l'état de session) associé à la requête actuelle.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> événement est déclenché une fois que le Gestionnaire d’événements a été créé.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For an example of handling the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, see the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> overview topic.</source>
          <target state="translated">Pour obtenir un exemple de la gestion de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> événements, consultez le <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> rubrique de présentation.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute le <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> collection.</source>
          <target state="translated">État associé à ajouter à la collection <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de l'événement.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> collection.</source>
          <target state="translated">État associé à ajouter à la collection <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute le gestionnaire d'événements <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute le gestionnaire d'événements <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute le gestionnaire d'événements <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> qui démarre le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> qui termine le traitement asynchrone de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">État associé à ajouter au <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asynchrone.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Ajoute l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> spécifié à la collection des gestionnaires d'événements <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asynchrones de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Application">
          <source>Gets the current state of an application.</source>
          <target state="translated">Obtient l'état actuel d'une application.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> for the current request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> pour la requête actuelle.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</source>
          <target state="translated">L’état actuel d’une application se compose d’un dictionnaire de clé/valeur des objets de l’application que vous pouvez utiliser pour stocker les objets .NET Framework et les valeurs scalaires associées à plusieurs requêtes Web à partir de plusieurs clients.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">Se produit lorsqu'un module de sécurité a établi l'identité de l'utilisateur.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> événement signale que le mécanisme d’authentification configuré a authentifié la requête actuelle.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.</source>
          <target state="translated">L’abonnement à la <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> événement garantit que la demande sera authentifiée avant de traiter le Gestionnaire de module ou un événement attaché.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Occurs when a security module has verified user authorization.</source>
          <target state="translated">Se produit lorsqu'un module de sécurité a vérifié les autorisations de l'utilisateur.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> événement signale que ASP.NET a autorisé la requête actuelle.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</source>
          <target state="translated">L’abonnement à la <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> événement garantit que la demande sera être authentifiée et autorisée avant de traiter le Gestionnaire de module ou un événement attaché.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">Se produit en tant que premier événement dans la chaîne d'exécution du pipeline HTTP lorsque ASP.NET répond à une requête.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> événement signale la création d’une nouvelle requête.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>This event is always raised and is always the first event to occur during the processing of a request.</source>
          <target state="translated">Cet événement est toujours déclenché et est toujours le premier événement à se produire pendant le traitement d’une demande.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.CompleteRequest">
          <source>Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">Fait que ASP.NET ignore tous les événements et le filtrage de la chaîne d'exécution du pipeline HTTP et exécute directement l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Context">
          <source>Gets HTTP-specific information about the current request.</source>
          <target state="translated">Obtient des informations HTTP sur la requête actuelle.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Context">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> pour la requête actuelle.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Dispose">
          <source>Disposes the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> instance.</source>
          <target state="translated">Supprime l'instance de <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> propriétés ne sont pas disponibles pour les utiliser lorsque le <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> méthode s’exécute.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> méthode sur chacun des inscrit <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> dans l’instance de l’application et déclenche le <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> in a derived class, make sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> méthode afin que les délégués inscrits reçoivent l’événement.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Disposed">
          <source>Occurs when the application is disposed.</source>
          <target state="translated">Se produit lorsque l'application est supprimée.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated">Lorsque vous créez un délégué <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph>, vous identifiez la méthode qui gère l'événement.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>To associate the event with your event handler, add an instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.</source>
          <target state="translated">Pour associer l’événement à votre gestionnaire d’événements, ajoutez une instance de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> délégué à l’événement.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.</source>
          <target state="translated">Le Gestionnaire d’événements est appelé chaque fois que l’événement se produit, sauf si vous supprimez le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> déléguer.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.EndRequest">
          <source>Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">Se produit en tant que dernier événement de la chaîne d'exécution du pipeline HTTP lorsque ASP.NET répond à une requête.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> l’événement est toujours déclenché lorsque la <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Error">
          <source>Occurs when an unhandled exception is thrown.</source>
          <target state="translated">Se produit lorsqu'une exception non gérée est levée.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The exception that raises the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.</source>
          <target state="translated">L’exception qui déclenche le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> événement est accessible par un appel à la <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.</source>
          <target state="translated">Si votre application génère la sortie d’erreur personnalisée, supprimez le message d’erreur par défaut généré par ASP.NET par un appel à la <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your Web application contains XML Web services, you cannot use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.</source>
          <target state="translated">Si votre application Web contienne des services Web XML, vous ne pouvez pas utiliser le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> événement pour la gestion globale des exceptions de ces services.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.</source>
          <target state="translated">Le gestionnaire HTTP pour les services Web XML consomme toute exception qui se produit dans un service Web XML et la convertit en erreur SOAP avant le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> qui est appelée.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</source>
          <target state="translated">Pour gérer les exceptions de service Web XML, générez une extension SOAP pour traiter les exceptions de service Web dans un gestionnaire d’exceptions global personnalisé.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Events">
          <source>Gets the list of event handler delegates that process all application events.</source>
          <target state="translated">Obtient la liste des délégués de gestionnaires d'événements qui traitent tous les événements de l'application.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that contains the names of the event handler delegates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> qui contient les noms des délégués de gestionnaires d'événements.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> qui fournit des références aux objets serveur intrinsèques qui sont utilisés pour traiter des requêtes HTTP.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>Gets the name of the default output-cache provider that is configured for a Web site.</source>
          <target state="translated">Obtient le nom du fournisseur de caches de sortie par défaut configuré pour un site Web.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The name of the default provider.</source>
          <target state="translated">Nom du fournisseur par défaut.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</source>
          <target state="translated">Vous pouvez substituer cette méthode et l’utiliser pour renvoyer le nom de n’importe quel fournisseur de cache de sortie qui est configuré pour un site Web.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</source>
          <target state="translated">ASP.NET récupère une référence au fournisseur nommé et l’utilise pour stocker les données du cache de sortie pour la demande en cours d’exécution.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</source>
          <target state="translated">Par défaut, dans ASP.NET, toutes les réponses HTTP, pages rendues et contrôles utilisent le cache de sortie en mémoire.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id="ph1">`defaultProvider`</ph>.</source>
          <target state="translated">Vous pouvez modifier le fournisseur de cache de sortie par défaut qui est utilisé pour une application Web en spécifiant un nom de fournisseur différentes pour <ph id="ph1">`defaultProvider`</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>In addition, you can select different output-cache providers for individual control and for individual requests.</source>
          <target state="translated">En outre, vous pouvez sélectionner des fournisseurs de cache de sortie différents pour chacun des contrôles et des requêtes individuelles.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id="ph1">`providerName`</ph> attribute in a page or control directive, as shown in the following example:</source>
          <target state="translated">Le moyen le plus simple de choisir un fournisseur de cache de sortie différent pour des contrôles utilisateur Web différents consiste à faire de façon déclarative à l’aide de la nouvelle <ph id="ph1">`providerName`</ph> d’attribut dans une directive de page ou un contrôle, comme indiqué dans l’exemple suivant :</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</source>
          <target state="translated">Pour spécifier un fournisseur de cache de sortie différent pour une requête HTTP, vous substituez cette méthode dans le fichier Global.asax pour spécifier le fournisseur à utiliser pour une requête spécifique.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Vue d’ensemble de la mise en cache ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The following example shows how to programmatically specify the cache provider named <ph id="ph1">`DiskCache`</ph> for any HTTP request that goes to the Advanced.aspx page.</source>
          <target state="translated">L’exemple suivant montre comment spécifier par programme le fournisseur de cache nommé <ph id="ph1">`DiskCache`</ph> pour une demande HTTP qui accède à la page Advanced.aspx.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou est une chaîne vide.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that contains information about the current Web request.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> comportant des informations sur la requête Web en cours.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The custom string that specifies which cached response is used to respond to the current request.</source>
          <target state="translated">Chaîne personnalisée qui spécifie la réponse mise en cache utilisée pour répondre à la requête actuelle.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>Provides an application-wide implementation of the <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> property.</source>
          <target state="translated">Fournit une implémentation à l'échelle de l'application de la propriété <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>If the value of the <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, the browser's <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si la valeur du paramètre <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> est <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph> du navigateur ; sinon <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>You can override <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.</source>
          <target state="translated">Vous pouvez substituer <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> pour ajouter une nouvelle méthode pour le calcul de valeurs variables personnalisées, sont basés sur la requête actuelle.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The implementation has to call the base class for custom values that it does not recognize.</source>
          <target state="translated">L’implémentation doit appeler la classe de base pour les valeurs personnalisées qu’il ne reconnaît pas.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comment : Cache des Versions d’une Page de l’utilisation de chaînes personnalisé<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Init">
          <source>Executes custom initialization code after all event handler modules have been added.</source>
          <target state="translated">Exécute un code d'initialisation personnalisé lorsque tous les modules du gestionnaire d'événements ont été ajoutés.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Init">
          <source>In a derived class, you can override the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.</source>
          <target state="translated">Dans une classe dérivée, vous pouvez remplacer le <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> méthode pour ajouter le code d’initialisation à usage unique personnalisé.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Occurs just before ASP.NET performs any logging for the current request.</source>
          <target state="translated">Se produit juste avant qu'ASP.NET exécute tout enregistrement pour la requête actuelle.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> événement est déclenché, même si une erreur se produit.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.</source>
          <target state="translated">Vous pouvez fournir un gestionnaire d’événements pour le <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> événement afin de fournir une journalisation personnalisée pour la demande.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The following example demonstrates how to provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event.</source>
          <target state="translated">L’exemple suivant montre comment fournir un gestionnaire d’événements pour le <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The event handler also handles several other events.</source>
          <target state="translated">Le Gestionnaire d’événements gère également plusieurs autres événements.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> properties are used to determine what code to run.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> propriétés sont utilisées pour déterminer quel code pour exécuter.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>Occurs when the handler is selected to respond to the request.</source>
          <target state="translated">Se produit lorsque le gestionnaire est sélectionné pour répondre à la requête.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> événement est utilisé par l’infrastructure ASP.NET pour déterminer le Gestionnaire de requête pour la requête actuelle.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Register HTTP Handlers<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comment : inscrire des gestionnaires HTTP<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Modules">
          <source>Gets the collection of modules for the current application.</source>
          <target state="translated">Obtient la collection de modules de l'application actuelle.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Modules">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> that contains the names of the modules for the application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> contenant les noms des modules de l'application.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>The callback method.</source>
          <target state="translated">Méthode de rappel.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>Specifies a callback to invoke when a request execution step is executed.</source>
          <target state="translated">Spécifie un rappel à effectuer quand une étape d’exécution de requête est exécutée.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</source>
          <target state="translated">Cette méthode fournit l’extensibilité pour le pipeline ASP.NET pour faciliter aux développeurs d’implémenter des fonctionnalités dans les scénarios de contexte ambiant et générer des bibliothèques qui intéressent les flux d’exécution ASP.NET (par exemple, le suivi, le profilage, diagnostics et transactions).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</source>
          <target state="translated">Se produit lorsque l'état de la requête (par exemple, l'état de session) associé à la requête actuelle a été obtenu.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> événement est déclenché après la <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> événement s’est produit.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</source>
          <target state="translated">Les fonctionnalités qui s’abonne à la <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> événement peut accéder aux données qui sont traitées par le <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">Se produit lorsqu'un module de sécurité a établi l'identité de l'utilisateur.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> événement est déclenché après la <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> événement s’est produit.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</source>
          <target state="translated">Les fonctionnalités qui s’abonne à la <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> événement peut accéder aux données qui sont traitées par le <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Occurs when the user for the current request has been authorized.</source>
          <target state="translated">Se produit lorsque l'utilisateur pour la requête actuelle a été autorisé.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> événement signale que ASP.NET a autorisé la requête actuelle.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.</source>
          <target state="translated">L’abonnement à la <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> événement garantit l’authentification et l’autorisation de la demande avant de traiter le Gestionnaire de module ou un événement attaché.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>Occurs when ASP.NET has completed processing all the event handlers for the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event.</source>
          <target state="translated">Se produit lorsque ASP.NET a complété le traitement de tous les gestionnaires d'événements pour l'événement <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> est introduit dans le .NET Framework version 3.5.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Versions et dépendances<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>Occurs when ASP.NET has mapped the current request to the appropriate event handler.</source>
          <target state="translated">Se produit lorsque ASP.NET a mappé la requête actuelle sur le gestionnaire d'événements approprié.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</source>
          <target state="translated">Se produit lorsque ASP.NET a terminé l'exécution de tous les gestionnaires d'événements de requête et lorsque les données d'état de requête ont été stockées.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</source>
          <target state="translated">Se produit lorsque le gestionnaire d'événements ASP.NET (par exemple, une page ou un service Web XML) termine son exécution.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</source>
          <target state="translated">Se produit lorsque ASP.NET ignore l'exécution du gestionnaire d'événements actuel et autorise un module de mise en cache à répondre à une requête depuis le cache.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</source>
          <target state="translated">Se produit lorsque ASP.NET a terminé la mise à jour des modules de mise en cache et le stockage des réponses utilisées pour répondre à des requêtes ultérieures depuis le cache.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> événement est déclenché après la <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> événement s’est produit.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> est déclenché, ASP.NET a terminé le traitement du code et le contenu du cache est finalisé.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</source>
          <target state="translated">Se produit juste avant que ASP.NET ne commence à exécuter un gestionnaire d'événements (par exemple, une page ou un service Web XML).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Occurs just before ASP.NET sends content to the client.</source>
          <target state="translated">Se produit juste avant que ASP.NET n'envoie du contenu au client.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> événement peut se produire plusieurs fois.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Do not use <ph id="ph1">`PreSendRequestContent`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">N’utilisez pas <ph id="ph1">`PreSendRequestContent`</ph> avec des modules managés qui implémentent <ph id="ph2">`IHttpModule`</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">Définition de ces propriétés peut entraîner des problèmes avec des requêtes asynchrones.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">La combinaison de l’Application demandé Routing (ARR) et websockets peut provoquer des exceptions de violation d’accès qui peuvent provoquer w3wp blocage.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">Par exemple, iiscore ! W3_CONTEXT_BASE::GetIsLastNotification + 68 dans iiscore.dll a provoqué une exception de violation d’accès (0xC0000005).</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Occurs just before ASP.NET sends HTTP headers to the client.</source>
          <target state="translated">Se produit juste avant que ASP.NET n'envoie des en-têtes HTTP au client.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Do not use <ph id="ph1">`PreSendRequestHeaders`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">N’utilisez pas <ph id="ph1">`PreSendRequestHeaders`</ph> avec des modules managés qui implémentent <ph id="ph2">`IHttpModule`</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">Définition de ces propriétés peut entraîner des problèmes avec des requêtes asynchrones.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">La combinaison de l’Application demandé Routing (ARR) et websockets peut provoquer des exceptions de violation d’accès qui peuvent provoquer w3wp blocage.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">Par exemple, iiscore ! W3_CONTEXT_BASE::GetIsLastNotification + 68 dans iiscore.dll a provoqué une exception de violation d’accès (0xC0000005).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>The type of the module.</source>
          <target state="translated">Type du module.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>Registers an application module.</source>
          <target state="translated">Inscrit un module d'application.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>Occurs after ASP.NET finishes executing all request event handlers.</source>
          <target state="translated">Se produit après que ASP.NET a terminé d'exécuter tous les gestionnaires d'événements de requête.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>This event causes state modules to save the current state data.</source>
          <target state="translated">Cet événement entraîne un enregistrement des données sur l'état actuel par les modules d'état.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> événement est déclenché, l’application est terminée à la demande et ASP.NET pour stocker l’état de la demande.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>Gets the intrinsic request object for the current request.</source>
          <target state="translated">Obtient l'objet de requête intrinsèque de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> que l'application est en train de traiter.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Occurs when the managed objects that are associated with the request have been released.</source>
          <target state="translated">Se produit lorsque les objets managés associés à la demande ont été libérés.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> événement est appelé après tous les modules managés et les gestionnaires dans le pipeline ASP.NET ont été appelées.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>It enables modules to clean up resources after all managed modules and handlers have executed.</source>
          <target state="translated">Il permet de modules nettoyer les ressources qu'après que tous les modules managés et des gestionnaires ont été exécutées.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</source>
          <target state="translated">Utilisez cet événement si vous avez besoin d’une heure spécifique à supprimer explicitement des ressources managées que vous avez créé lors d’une requête.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</source>
          <target state="translated">Se produit lorsque ASP.NET termine un événement d'autorisation pour permettre aux modules de mise en cache de répondre à des requêtes à partir du cache, ignorant l'exécution du gestionnaire d'événements (par exemple, une page ou un service Web XML).</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>Gets the intrinsic response object for the current request.</source>
          <target state="translated">Obtient l'objet de réponse intrinsèque de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> que l'application est en train de traiter.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Server">
          <source>Gets the intrinsic server object for the current request.</source>
          <target state="translated">Obtient l'objet serveur intrinsèque de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Server">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> que l'application est en train de traiter.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>Gets the intrinsic session object that provides access to session data.</source>
          <target state="translated">Obtient l'objet session intrinsèque qui fournit un accès aux données de session.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object for the current session.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> de la session en cours.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Site">
          <source>Gets or sets a site interface for an <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> implementation.</source>
          <target state="translated">Obtient ou définit une interface de site pour une implémentation <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> object that allows a container to manage and communicate with its child components.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> qui permet à un conteneur de gérer ses composants enfants et de communiquer avec eux.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> qui fournit des références aux objets serveur intrinsèques qui sont utilisés pour traiter des requêtes HTTP.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> to call when the asynchronous method call is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> à appeler lorsque l'appel de la méthode asynchrone est terminé.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, le délégué n’est pas appelé.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Any extra data that is required to process the request.</source>
          <target state="translated">Toute donnée supplémentaire qui est requise pour traiter la requête.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous call to the HTTP event handler.</source>
          <target state="translated">Lance un appel asynchrone au gestionnaire d'événements HTTP.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui contient des informations sur l'état du processus.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui contient des informations sur l'état du processus.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>Provides an asynchronous process <ph id="ph1">&lt;see langword="End" /&gt;</ph> method when the process finishes.</source>
          <target state="translated">Fournit une méthode <ph id="ph1">&lt;see langword="End" /&gt;</ph> de processus asynchrone lorsque le processus se termine.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> méthode pour déclencher toutes les exceptions sont interceptées au cours du processus asynchrone.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>Gets a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether another request can use the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object.</source>
          <target state="translated">Obtient une valeur <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> indiquant si une autre requête peut utiliser l'objet <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance de <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> est réutilisable ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>To explicitly set the <ph id="ph1">`IsReusable`</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>, provide code that overrides the <ph id="ph4">`IsReusable`</ph> property accessor.</source>
          <target state="translated">Pour définir explicitement la <ph id="ph1">`IsReusable`</ph> propriété <ph id="ph2">`true`</ph> ou <ph id="ph3">`false`</ph>, fournir un code qui substitue le <ph id="ph4">`IsReusable`</ph> accesseur de propriété.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> qui fournit des références à des objets serveur intrinsèques qui sont utilisés pour traiter des requêtes HTTP.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated">Active le traitement des requêtes Web HTTP par le biais d'un gestionnaire HTTP personnalisé qui implémente l'interface <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Classes that inherit the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.</source>
          <target state="translated">Les classes qui héritent le <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces sont fournies en tant que référence à un <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> objet pour la requête HTTP actuelle.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>The object provides access to the intrinsic <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, and <ph id="ph3">`Server`</ph> objects for the request.</source>
          <target state="translated">L’objet fournit l’accès à la fonction intrinsèque <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, et <ph id="ph3">`Server`</ph> objets pour la demande.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>In all cases.</source>
          <target state="translated">Dans tous les cas.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</source>
          <target state="translated">Se produit lorsque ASP.NET finit d'exécuter un gestionnaire d'événements pour permettre aux modules de mise en cache de stocker des réponses qui seront utilisées pour répondre à des requêtes ultérieures à partir du cache.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>Gets the intrinsic user object for the current request.</source>
          <target state="translated">Obtient l'objet utilisateur intrinsèque de la requête actuelle.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object that represents the current authenticated or anonymous user.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> qui représente l'utilisateur en cours, authentifié ou anonyme.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>