<Type Name="HttpResponseBase" FullName="System.Web.HttpResponseBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d41ff8503364384bc9d162f943da617c5a65cb89" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294393" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpResponseBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpResponseBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpResponseBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpResponseBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpResponseBase abstract" />
  <TypeSignature Language="F#" Value="type HttpResponseBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e140e-101">Représente la classe de base pour les classes qui fournissent des informations de réponse HTTP à partir d'une opération ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="e140e-101">Represents the base class for classes that provides HTTP-response information from an ASP.NET operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-102">Le <xref:System.Web.HttpResponseBase> classe est une classe abstraite qui contient les mêmes membres que la <xref:System.Web.HttpResponse> classe.</span><span class="sxs-lookup"><span data-stu-id="e140e-102">The <xref:System.Web.HttpResponseBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpResponse> class.</span></span> <span data-ttu-id="e140e-103">Le <xref:System.Web.HttpResponseBase> classe vous permet de créer des classes dérivées qui sont comme les <xref:System.Web.HttpResponse> classe, mais que vous pouvez personnaliser et qui fonctionnent à l’extérieur du pipeline ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="e140e-103">The <xref:System.Web.HttpResponseBase> class enables you to create derived classes that are like the <xref:System.Web.HttpResponse> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="e140e-104">Lorsque vous effectuez des tests unitaires, vous utilisez généralement une classe dérivée pour implémenter des membres qui ont un comportement personnalisé qui correspond au scénario que vous testez.</span><span class="sxs-lookup"><span data-stu-id="e140e-104">When you perform unit testing, you typically use a derived class to implement members that have customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="e140e-105">La classe <xref:System.Web.HttpResponseWrapper> dérive de la classe <xref:System.Web.HttpResponseBase> .</span><span class="sxs-lookup"><span data-stu-id="e140e-105">The <xref:System.Web.HttpResponseWrapper> class derives from the <xref:System.Web.HttpResponseBase> class.</span></span> <span data-ttu-id="e140e-106">Le <xref:System.Web.HttpResponseWrapper> classe sert de wrapper pour la <xref:System.Web.HttpResponse> classe.</span><span class="sxs-lookup"><span data-stu-id="e140e-106">The <xref:System.Web.HttpResponseWrapper> class serves as a wrapper for the <xref:System.Web.HttpResponse> class.</span></span> <span data-ttu-id="e140e-107">Au moment de l’exécution, vous utilisez une instance de la <xref:System.Web.HttpResponseWrapper> classe pour appeler des membres de la <xref:System.Web.HttpResponse> objet.</span><span class="sxs-lookup"><span data-stu-id="e140e-107">At run time, you typically use an instance of the <xref:System.Web.HttpResponseWrapper> class to call members of the <xref:System.Web.HttpResponse> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpResponseBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpResponseBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-108">Initialise une nouvelle instance de la classe <see cref="T:System.Web.HttpResponseBase" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-108">Initializes a new instance of the <see cref="T:System.Web.HttpResponseBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheDependency">
      <MemberSignature Language="C#" Value="public virtual void AddCacheDependency (params System.Web.Caching.CacheDependency[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCacheDependency(class System.Web.Caching.CacheDependency[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddCacheDependency(System.Web.Caching.CacheDependency[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCacheDependency (ParamArray dependencies As CacheDependency())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCacheDependency(... cli::array &lt;System::Web::Caching::CacheDependency ^&gt; ^ dependencies);" />
      <MemberSignature Language="F#" Value="abstract member AddCacheDependency : System.Web.Caching.CacheDependency[] -&gt; unit&#xA;override this.AddCacheDependency : System.Web.Caching.CacheDependency[] -&gt; unit" Usage="httpResponseBase.AddCacheDependency dependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependencies"><span data-ttu-id="e140e-109">Fichier, clé de cache, ou objet <see cref="T:System.Web.Caching.CacheDependency" /> à ajouter à la liste de dépendances d'application.</span><span class="sxs-lookup"><span data-stu-id="e140e-109">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> object to add to the list of application dependencies.</span></span></param>
        <summary><span data-ttu-id="e140e-110">Ajoute les dépendances de cache à la réponse pour permettre l'invalidation de cette réponse si elle est mise en cache et si les dépendances spécifiées sont modifiées.</span><span class="sxs-lookup"><span data-stu-id="e140e-110">Adds an associates cache dependencies with the response that enable the response to be invalidated if it is cached and if the specified dependencies change.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-111">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-111">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCacheItemDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-112">Rend la validité d'une réponse mise en cache dépendante d'autres éléments présents dans le cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-112">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public virtual void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCacheItemDependencies(class System.Collections.ArrayList cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddCacheItemDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCacheItemDependencies (cacheKeys As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCacheItemDependencies(System::Collections::ArrayList ^ cacheKeys);" />
      <MemberSignature Language="F#" Value="abstract member AddCacheItemDependencies : System.Collections.ArrayList -&gt; unit&#xA;override this.AddCacheItemDependencies : System.Collections.ArrayList -&gt; unit" Usage="httpResponseBase.AddCacheItemDependencies cacheKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="e140e-113">Collection qui contient les clés des éléments dont dépend la réponse mise en cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-113">A collection that contains the keys of the items that the cached response is dependent on.</span></span></param>
        <summary><span data-ttu-id="e140e-114">Rend la validité d'une réponse mise en cache dépendante des éléments spécifiés dans le cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-114">Makes the validity of a cached response dependent on the specified items in the cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-115">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-115">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public virtual void AddCacheItemDependencies (string[] cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCacheItemDependencies(string[] cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddCacheItemDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCacheItemDependencies (cacheKeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCacheItemDependencies(cli::array &lt;System::String ^&gt; ^ cacheKeys);" />
      <MemberSignature Language="F#" Value="abstract member AddCacheItemDependencies : string[] -&gt; unit&#xA;override this.AddCacheItemDependencies : string[] -&gt; unit" Usage="httpResponseBase.AddCacheItemDependencies cacheKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="e140e-116">Tableau qui contient les clés des éléments dont dépend la réponse mise en cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-116">An array that contains the keys of the items that the cached response is dependent on.</span></span></param>
        <summary><span data-ttu-id="e140e-117">Rend la validité d'un élément mis en cache dépendant des éléments spécifiés dans le cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-117">Makes the validity of a cached item dependent on the specified items in the cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-118">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependency">
      <MemberSignature Language="C#" Value="public virtual void AddCacheItemDependency (string cacheKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCacheItemDependency(string cacheKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddCacheItemDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCacheItemDependency (cacheKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCacheItemDependency(System::String ^ cacheKey);" />
      <MemberSignature Language="F#" Value="abstract member AddCacheItemDependency : string -&gt; unit&#xA;override this.AddCacheItemDependency : string -&gt; unit" Usage="httpResponseBase.AddCacheItemDependency cacheKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheKey"><span data-ttu-id="e140e-119">Clé de l'élément dont dépend la réponse mise en cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-119">The key of the item that the cached response is dependent on.</span></span></param>
        <summary><span data-ttu-id="e140e-120">Rend la validité d'une réponse mise en cache dépendante de l'élément spécifié dans le cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-120">Makes the validity of a cached response dependent on the specified item in the cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-121">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-121">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFileDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-122">Rend la validité d'une réponse mise en cache dépendante d'un fichier ou de fichiers spécifié(s).</span><span class="sxs-lookup"><span data-stu-id="e140e-122">Makes the validity of a cached response dependent on a specified file or files.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public virtual void AddFileDependencies (System.Collections.ArrayList filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFileDependencies(class System.Collections.ArrayList filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddFileDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddFileDependencies (filenames As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddFileDependencies(System::Collections::ArrayList ^ filenames);" />
      <MemberSignature Language="F#" Value="abstract member AddFileDependencies : System.Collections.ArrayList -&gt; unit&#xA;override this.AddFileDependencies : System.Collections.ArrayList -&gt; unit" Usage="httpResponseBase.AddFileDependencies filenames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="e140e-123">Noms des fichiers à ajouter.</span><span class="sxs-lookup"><span data-stu-id="e140e-123">The names of the files to add.</span></span></param>
        <summary><span data-ttu-id="e140e-124">Ajoute des noms de fichier à la collection de noms de fichiers dont dépend la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-124">Adds file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-125">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-125">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public virtual void AddFileDependencies (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFileDependencies(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddFileDependencies (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddFileDependencies(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="abstract member AddFileDependencies : string[] -&gt; unit&#xA;override this.AddFileDependencies : string[] -&gt; unit" Usage="httpResponseBase.AddFileDependencies filenames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="e140e-126">Tableau des noms de fichiers à ajouter.</span><span class="sxs-lookup"><span data-stu-id="e140e-126">An array of file names to add.</span></span></param>
        <summary><span data-ttu-id="e140e-127">Ajoute un tableau de noms de fichiers à la collection de noms de fichiers dont dépend la réponse en cours.</span><span class="sxs-lookup"><span data-stu-id="e140e-127">Adds an array of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-128">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-128">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependency">
      <MemberSignature Language="C#" Value="public virtual void AddFileDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFileDependency(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddFileDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddFileDependency (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddFileDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member AddFileDependency : string -&gt; unit&#xA;override this.AddFileDependency : string -&gt; unit" Usage="httpResponseBase.AddFileDependency filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e140e-129">Nom du fichier à ajouter.</span><span class="sxs-lookup"><span data-stu-id="e140e-129">The name of the file to add.</span></span></param>
        <summary><span data-ttu-id="e140e-130">Ajoute un seul nom de fichier à la collection de noms de fichiers dont dépend la réponse en cours.</span><span class="sxs-lookup"><span data-stu-id="e140e-130">Adds a single file name to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-131">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-131">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public virtual void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddHeader : string * string -&gt; unit&#xA;override this.AddHeader : string * string -&gt; unit" Usage="httpResponseBase.AddHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e140e-132">Nom de l'en-tête HTTP auquel ajouter <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-132">The name of the HTTP header to add <paramref name="value" /> to.</span></span></param>
        <param name="value"><span data-ttu-id="e140e-133">Chaîne à ajouter à l'en-tête.</span><span class="sxs-lookup"><span data-stu-id="e140e-133">The string to add to the header.</span></span></param>
        <summary><span data-ttu-id="e140e-134">Ajoute un en-tête HTTP à la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-134">Adds an HTTP header to the current response.</span></span> <span data-ttu-id="e140e-135">Cette méthode est fournie à des fins de compatibilité avec les versions précédentes d'ASP.</span><span class="sxs-lookup"><span data-stu-id="e140e-135">This method is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-136">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-136">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnSendingHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnSendingHeaders(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AddOnSendingHeaders(System.Action{System.Web.HttpContextBase})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnSendingHeaders (callback As Action(Of HttpContextBase)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnSendingHeaders(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member AddOnSendingHeaders : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken&#xA;override this.AddOnSendingHeaders : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpResponseBase.AddOnSendingHeaders callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e140e-137">Méthode de rappel.</span><span class="sxs-lookup"><span data-stu-id="e140e-137">The callback method.</span></span></param>
        <summary><span data-ttu-id="e140e-138">[Pris en charge dans .NET Framework 4.5.2 et versions ultérieures]</span><span class="sxs-lookup"><span data-stu-id="e140e-138">[Supported in the .NET Framework 4.5.2 and later versions]</span></span> 
<span data-ttu-id="e140e-139">Enregistre un rappel qui appelle le runtime ASP.NET immédiatement avant l'envoi des en-têtes de réponse correspondants à cette demande.</span><span class="sxs-lookup"><span data-stu-id="e140e-139">Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</span></span></summary>
        <returns><span data-ttu-id="e140e-140">Retourne un objet <see cref="T:System.Web.ISubscriptionToken" /> qui représente l’abonnement au pseudo-événement OnSendingHeaders.</span><span class="sxs-lookup"><span data-stu-id="e140e-140">Returns  an <see cref="T:System.Web.ISubscriptionToken" /> object that represents the subscription to the OnSendingHeaders pseudo event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-141">L’événement de pseudo pseudo-événement diffère de l’événement de pipeline IHttpModule : c’est un abonnement par demande plutôt que d’un abonnement par application.</span><span class="sxs-lookup"><span data-stu-id="e140e-141">The pseudo event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</span></span> <span data-ttu-id="e140e-142">L’objectif est que le rappel peut modifier le code d’état de réponse ou peut définir un en-tête ou un cookie de réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-142">The intent is that the callback may modify the response status code or may set a response cookie or header.</span></span> <span data-ttu-id="e140e-143">Autres remarques sur l’utilisation et les mises en garde :</span><span class="sxs-lookup"><span data-stu-id="e140e-143">Other usage notes and caveats:</span></span>  
  
-   <span data-ttu-id="e140e-144">Cette méthode est effective uniquement lorsque IIS s’exécute dans le pipeline de mode pipeline intégré et uniquement si les en-têtes de réponse n’ont pas encore été envoyés pour la requête actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-144">This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</span></span>  
  
-   <span data-ttu-id="e140e-145">Le runtime ASP.NET ne garantit pas quoi que ce soit sur le thread qui le rappel est appelé sur.</span><span class="sxs-lookup"><span data-stu-id="e140e-145">The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</span></span> <span data-ttu-id="e140e-146">Par exemple, le rappel peut être appelé de façon synchrone dans un thread d’arrière-plan si un vidage d’arrière-plan est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="e140e-146">For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</span></span> <span data-ttu-id="e140e-147"><xref:System.Web.HttpContext.Current%2A> n’est pas garanti pour être disponible dans un thread de ce type.</span><span class="sxs-lookup"><span data-stu-id="e140e-147"><xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.</span></span>  
  
-   <span data-ttu-id="e140e-148">Le rappel ne doit pas appeler toute méthode qui manipule le corps d’entité de réponse ou qui entraîne un vidage.</span><span class="sxs-lookup"><span data-stu-id="e140e-148">The callback must not call any method that manipulates the response entity body or that results in a flush.</span></span> <span data-ttu-id="e140e-149">Par exemple, le rappel ne doit pas appeler <xref:System.Web.HttpResponseBase.Redirect%2A>, comme cette méthode peut manipuler le corps d’entité de réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-149">For example, the callback must not call <xref:System.Web.HttpResponseBase.Redirect%2A>, as that method may manipulate the response entity body.</span></span>  
  
-   <span data-ttu-id="e140e-150">Le rappel doit contenir uniquement du code synchrone courte.</span><span class="sxs-lookup"><span data-stu-id="e140e-150">The callback must contain only short-running synchronous code.</span></span> <span data-ttu-id="e140e-151">Tente d’appeler une opération asynchrone ou attendre une telle opération peut provoquer un interblocage.</span><span class="sxs-lookup"><span data-stu-id="e140e-151">Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</span></span>  
  
-   <span data-ttu-id="e140e-152">Le rappel ne doit pas lever d’exception ; Sinon, le comportement est indéfini.</span><span class="sxs-lookup"><span data-stu-id="e140e-152">The callback must not throw an exception; otherwise behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public virtual void AppendCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AppendCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="abstract member AppendCookie : System.Web.HttpCookie -&gt; unit&#xA;override this.AppendCookie : System.Web.HttpCookie -&gt; unit" Usage="httpResponseBase.AppendCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="e140e-153">Cookie à ajouter à la réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-153">The cookie to add to the response.</span></span></param>
        <summary><span data-ttu-id="e140e-154">Ajoute un cookie HTTP à la collection de cookies de la réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-154">Adds an HTTP cookie to the HTTP response cookie collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-155">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-155">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public virtual void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AppendHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AppendHeader : string * string -&gt; unit&#xA;override this.AppendHeader : string * string -&gt; unit" Usage="httpResponseBase.AppendHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e140e-156">Nom de l'en-tête HTTP à ajouter à la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-156">The name of the HTTP header to add to the current response.</span></span></param>
        <param name="value"><span data-ttu-id="e140e-157">Valeur de l'en-tête.</span><span class="sxs-lookup"><span data-stu-id="e140e-157">The value of the header.</span></span></param>
        <summary><span data-ttu-id="e140e-158">Ajoute un en-tête HTTP à la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-158">Adds an HTTP header to the current response.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-159">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-159">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendToLog">
      <MemberSignature Language="C#" Value="public virtual void AppendToLog (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendToLog(string param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.AppendToLog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendToLog (param As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendToLog(System::String ^ param);" />
      <MemberSignature Language="F#" Value="abstract member AppendToLog : string -&gt; unit&#xA;override this.AppendToLog : string -&gt; unit" Usage="httpResponseBase.AppendToLog param" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param"><span data-ttu-id="e140e-160">Texte à ajouter au fichier journal.</span><span class="sxs-lookup"><span data-stu-id="e140e-160">The text to add to the log file.</span></span></param>
        <summary><span data-ttu-id="e140e-161">Ajoute des informations personnalisées au fichier journal IIS (Internet Information Services).</span><span class="sxs-lookup"><span data-stu-id="e140e-161">Adds custom log information to the Internet Information Services (IIS) log file.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-162">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-162">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyAppPathModifier">
      <MemberSignature Language="C#" Value="public virtual string ApplyAppPathModifier (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ApplyAppPathModifier(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.ApplyAppPathModifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ApplyAppPathModifier (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ApplyAppPathModifier(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAppPathModifier : string -&gt; string&#xA;override this.ApplyAppPathModifier : string -&gt; string" Usage="httpResponseBase.ApplyAppPathModifier virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e140e-163">Chemin d'accès virtuel d'une ressource.</span><span class="sxs-lookup"><span data-stu-id="e140e-163">The virtual path of a resource.</span></span></param>
        <summary><span data-ttu-id="e140e-164">Ajoute un ID de session au chemin d'accès virtuel si la session utilise un état de session <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> et retourne le chemin combiné.</span><span class="sxs-lookup"><span data-stu-id="e140e-164">Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state, and returns the combined path.</span></span></summary>
        <returns><span data-ttu-id="e140e-165">Chemin virtuel avec l'ID de session inséré.</span><span class="sxs-lookup"><span data-stu-id="e140e-165">The virtual path, with the session ID inserted.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-166">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-166">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpResponseBase.BeginFlush (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e140e-167">Objet de rappel.</span><span class="sxs-lookup"><span data-stu-id="e140e-167">The callback object.</span></span></param>
        <param name="state"><span data-ttu-id="e140e-168">État de réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-168">The response state.</span></span></param>
        <summary><span data-ttu-id="e140e-169">Envoie la réponse actuellement en mémoire tampon au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-169">Sends the currently buffered response to the client.</span></span></summary>
        <returns><span data-ttu-id="e140e-170">Objet du résultat asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e140e-170">The asynchronous result object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryWrite">
      <MemberSignature Language="C#" Value="public virtual void BinaryWrite (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BinaryWrite(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.BinaryWrite(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BinaryWrite (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BinaryWrite(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member BinaryWrite : byte[] -&gt; unit&#xA;override this.BinaryWrite : byte[] -&gt; unit" Usage="httpResponseBase.BinaryWrite buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e140e-171">Caractères binaires à écrire dans la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-171">The binary characters to write to the current response.</span></span></param>
        <summary><span data-ttu-id="e140e-172">Écrit une chaîne de caractères binaires dans le flux HTTP en sortie.</span><span class="sxs-lookup"><span data-stu-id="e140e-172">Writes a string of binary characters to the HTTP output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-173">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-173">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public virtual bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Buffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.HttpResponseBase.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-174">Obtient ou définit une valeur qui indique si la sortie doit être placée en mémoire tampon et envoyée une fois que la réponse a été complètement traitée.</span><span class="sxs-lookup"><span data-stu-id="e140e-174">Gets or sets a value that indicates whether to buffer output and send it after the complete response has finished processing.</span></span></summary>
        <value><span data-ttu-id="e140e-175"><see langword="true" /> si la sortie est mise en mémoire tampon ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-175"><see langword="true" /> if the output is buffered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-176">Le <xref:System.Web.HttpResponseBase.Buffer%2A> propriété de la <xref:System.Web.HttpResponseBase> classe a été déconseillée en faveur de la <xref:System.Web.HttpResponseBase.BufferOutput%2A> propriété et n’est fourni uniquement pour la compatibilité avec les versions antérieures d’ASP..</span><span class="sxs-lookup"><span data-stu-id="e140e-176">The <xref:System.Web.HttpResponseBase.Buffer%2A> property of the <xref:System.Web.HttpResponseBase> class has been deprecated in favor of the <xref:System.Web.HttpResponseBase.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-177">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-177">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferOutput">
      <MemberSignature Language="C#" Value="public virtual bool BufferOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.BufferOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BufferOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool BufferOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferOutput : bool with get, set" Usage="System.Web.HttpResponseBase.BufferOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-178">Obtient ou définit une valeur qui indique si la sortie doit être placée en mémoire tampon et envoyée une fois que la page a été complètement traitée.</span><span class="sxs-lookup"><span data-stu-id="e140e-178">Gets or sets a value that indicates whether to buffer output and send it after the complete page has finished processing.</span></span></summary>
        <value><span data-ttu-id="e140e-179"><see langword="true" /> si la sortie est mise en mémoire tampon ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-179"><see langword="true" /> if the output is buffered; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-180">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-180">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpCachePolicyBase Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCachePolicyBase Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As HttpCachePolicyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpCachePolicyBase ^ Cache { System::Web::HttpCachePolicyBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.HttpCachePolicyBase" Usage="System.Web.HttpResponseBase.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCachePolicyBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-181">Obtient la stratégie de mise en cache (délai d'expiration, confidentialité, clauses diverses) de la page Web active.</span><span class="sxs-lookup"><span data-stu-id="e140e-181">Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of the current Web page.</span></span></summary>
        <value><span data-ttu-id="e140e-182">Stratégie de mise en cache pour la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-182">The caching policy of the current response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-183">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-183">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CacheControl">
      <MemberSignature Language="C#" Value="public virtual string CacheControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.CacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheControl : string with get, set" Usage="System.Web.HttpResponseBase.CacheControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-184">Obtient ou définit l'en-tête HTTP <see langword="Cache-Control" /> correspondant à l'une des valeurs d'énumération <see cref="T:System.Web.HttpCacheability" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-184">Gets or sets the <see langword="Cache-Control" /> HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></summary>
        <value><span data-ttu-id="e140e-185">Stratégie de mise en cache pour la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-185">The caching policy of the current response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-186">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-186">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public virtual string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Charset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Charset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Charset : string with get, set" Usage="System.Web.HttpResponseBase.Charset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-187">Obtient ou définit le jeu de caractères HTTP de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-187">Gets or sets the HTTP character set of the current response.</span></span></summary>
        <value><span data-ttu-id="e140e-188">Jeu de caractères HTTP de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-188">The HTTP character set of the current response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-189">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-189">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpResponseBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-190">Efface tous les en-têtes et le contenu de sortie de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-190">Clears all headers and content output from the current response.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-191">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-191">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public virtual void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearContent();" />
      <MemberSignature Language="F#" Value="abstract member ClearContent : unit -&gt; unit&#xA;override this.ClearContent : unit -&gt; unit" Usage="httpResponseBase.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-192">Efface tout le contenu de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-192">Clears all content from the current response.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-193">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-193">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearHeaders">
      <MemberSignature Language="C#" Value="public virtual void ClearHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.ClearHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearHeaders ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearHeaders();" />
      <MemberSignature Language="F#" Value="abstract member ClearHeaders : unit -&gt; unit&#xA;override this.ClearHeaders : unit -&gt; unit" Usage="httpResponseBase.ClearHeaders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-194">Efface tous les en-têtes de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-194">Clears all headers from the current response.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-195">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-195">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnectedToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.CancellationToken ClientDisconnectedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ClientDisconnectedToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.ClientDisconnectedToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientDisconnectedToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::CancellationToken ClientDisconnectedToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientDisconnectedToken : System.Threading.CancellationToken" Usage="System.Web.HttpResponseBase.ClientDisconnectedToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-196">Obtient un objet de <see cref="T:System.Threading.CancellationToken" /> dépassé lors de la déconnexion du client.</span><span class="sxs-lookup"><span data-stu-id="e140e-196">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when the client disconnects.</span></span></summary>
        <value><span data-ttu-id="e140e-197">Objet <see cref="T:System.Threading.CancellationToken" /> dépassé lors de la déconnexion du client.</span><span class="sxs-lookup"><span data-stu-id="e140e-197">The <see cref="T:System.Threading.CancellationToken" /> object that is tripped when the client disconnects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-198">Pour plus d'informations, consultez <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-198">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="httpResponseBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-199">Ferme la connexion du socket à un client.</span><span class="sxs-lookup"><span data-stu-id="e140e-199">Closes the socket connection to a client.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-200">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-200">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpResponseBase.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-201">Obtient ou définit le codage du contenu de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-201">Gets or sets the content encoding of the current response.</span></span></summary>
        <value><span data-ttu-id="e140e-202">Encodage du contenu de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-202">The content encoding of the current response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-203">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-203">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpResponseBase.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-204">Obtient ou définit le type MIME HTTP de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-204">Gets or sets the HTTP MIME type of the current response.</span></span></summary>
        <value><span data-ttu-id="e140e-205">Type MIME HTTP de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-205">The HTTP MIME type of the current response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-206">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-206">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpResponseBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-207">Obtient la collection de cookies constituant la réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-207">Gets the response cookie collection.</span></span></summary>
        <value><span data-ttu-id="e140e-208">Collection de cookies constituant la réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-208">The response cookie collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-209">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-209">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableKernelCache">
      <MemberSignature Language="C#" Value="public virtual void DisableKernelCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisableKernelCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.DisableKernelCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisableKernelCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisableKernelCache();" />
      <MemberSignature Language="F#" Value="abstract member DisableKernelCache : unit -&gt; unit&#xA;override this.DisableKernelCache : unit -&gt; unit" Usage="httpResponseBase.DisableKernelCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-210">Désactive la mise en cache de noyau pour la réponse en cours.</span><span class="sxs-lookup"><span data-stu-id="e140e-210">Disables kernel caching for the current response.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-211">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-211">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableUserCache">
      <MemberSignature Language="C#" Value="public virtual void DisableUserCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisableUserCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.DisableUserCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisableUserCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisableUserCache();" />
      <MemberSignature Language="F#" Value="abstract member DisableUserCache : unit -&gt; unit&#xA;override this.DisableUserCache : unit -&gt; unit" Usage="httpResponseBase.DisableUserCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-212">Désactive la mise en cache en mode utilisateur IIS pour cette réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-212">Disables IIS user-mode caching for this response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-213">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.DisableUserCache%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-213">For information about this member, see <xref:System.Web.HttpResponse.DisableUserCache%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public virtual void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.End" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub End ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void End();" />
      <MemberSignature Language="F#" Value="abstract member End : unit -&gt; unit&#xA;override this.End : unit -&gt; unit" Usage="httpResponseBase.End " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-214">Envoie l'ensemble de la sortie actuellement dans la mémoire tampon au client, arrête l'exécution du processus demandé et déclenche l'événement <see cref="E:System.Web.HttpApplication.EndRequest" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-214">Sends all currently buffered output to the client, stops execution of the requested process, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-215">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-215">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public virtual void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; unit&#xA;override this.EndFlush : IAsyncResult -&gt; unit" Usage="httpResponseBase.EndFlush asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="e140e-216">Objet du résultat asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e140e-216">The asynchronous result object.</span></span></param>
        <summary><span data-ttu-id="e140e-217">Termine une opération de vidage asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e140e-217">Completes an asynchronous flush operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public virtual int Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Expires As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Expires { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : int with get, set" Usage="System.Web.HttpResponseBase.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-218">Obtient ou définit, en minutes, le délai d'expiration d'une page mise en cache sur le client ou le proxy.</span><span class="sxs-lookup"><span data-stu-id="e140e-218">Gets or sets the number of minutes before a page that is cached on the client or proxy expires.</span></span> <span data-ttu-id="e140e-219">Si l'utilisateur retourne à la même page avant qu'elle n'expire, la version mise en cache est affichée.</span><span class="sxs-lookup"><span data-stu-id="e140e-219">If the user returns to the same page before it expires, the cached version is displayed.</span></span> <span data-ttu-id="e140e-220"><see cref="P:System.Web.HttpResponseBase.Expires" /> est fournie pour des raisons de compatibilité avec les versions antérieures d'ASP.</span><span class="sxs-lookup"><span data-stu-id="e140e-220"><see cref="P:System.Web.HttpResponseBase.Expires" /> is provided for compatibility with earlier versions of Active Server Pages (ASP).</span></span></summary>
        <value><span data-ttu-id="e140e-221">Nombre de minutes avant l'expiration de la page.</span><span class="sxs-lookup"><span data-stu-id="e140e-221">The number of minutes before the page expires.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-222">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-222">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAbsolute">
      <MemberSignature Language="C#" Value="public virtual DateTime ExpiresAbsolute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpiresAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.ExpiresAbsolute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExpiresAbsolute As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ExpiresAbsolute { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ExpiresAbsolute : DateTime with get, set" Usage="System.Web.HttpResponseBase.ExpiresAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-223">Obtient ou définit la date et l'heure absolues auxquelles les informations mises en cache expirent dans le cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-223">Gets or sets the absolute date and time at which cached information expires in the cache.</span></span> <span data-ttu-id="e140e-224"><see cref="P:System.Web.HttpResponseBase.ExpiresAbsolute" /> est fournie pour des raisons de compatibilité avec les versions antérieures d'ASP.</span><span class="sxs-lookup"><span data-stu-id="e140e-224"><see cref="P:System.Web.HttpResponseBase.ExpiresAbsolute" /> is provided for compatibility with earlier versions of Active Server Pages (ASP).</span></span></summary>
        <value><span data-ttu-id="e140e-225">Date et heure auxquelles la page expire.</span><span class="sxs-lookup"><span data-stu-id="e140e-225">The date and time at which the page expires.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-226">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-226">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpResponseBase.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-227">Obtient ou définit un objet filter à utiliser pour modifier le corps d'une entité HTTP avant la transmission.</span><span class="sxs-lookup"><span data-stu-id="e140e-227">Gets or sets a filter object that is used to modify the HTTP entity body before transmission.</span></span></summary>
        <value><span data-ttu-id="e140e-228">Objet qui agit comme filtre de sortie.</span><span class="sxs-lookup"><span data-stu-id="e140e-228">An object that acts as the output filter.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-229">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-229">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="httpResponseBase.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-230">Envoie au client l'ensemble de la sortie actuellement en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="e140e-230">Sends all currently buffered output to the client.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-231">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-231">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="httpResponseBase.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e140e-232">Envoie de façon asynchrone l'ensemble de la sortie actuellement en mémoire tampon au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-232">Asynchronously sends all currently buffered output to the client.</span></span></summary>
        <returns><span data-ttu-id="e140e-233">Tâche qui représente l’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e140e-233">The task the represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding HeaderEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.HeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ HeaderEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpResponseBase.HeaderEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-234">Obtient ou définit le codage de l'en-tête de la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-234">Gets or sets the encoding for the header of the current response.</span></span></summary>
        <value><span data-ttu-id="e140e-235">Encodage de l'en-tête actuel.</span><span class="sxs-lookup"><span data-stu-id="e140e-235">The encoding for the current header.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-236">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-236">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpResponseBase.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-237">Obtient la collection d'en-têtes de réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-237">Gets the collection of response headers.</span></span></summary>
        <value><span data-ttu-id="e140e-238">En-têtes de réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-238">The response headers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-239">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-239">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HeadersWritten">
      <MemberSignature Language="C#" Value="public virtual bool HeadersWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersWritten" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.HeadersWritten" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeadersWritten As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HeadersWritten { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HeadersWritten : bool" Usage="System.Web.HttpResponseBase.HeadersWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-240">[Pris en charge dans .NET Framework 4.5.2 et versions ultérieures]</span><span class="sxs-lookup"><span data-stu-id="e140e-240">[Supported in the .NET Framework 4.5.2 and later versions]</span></span> 
<span data-ttu-id="e140e-241">Obtient une valeur indiquant si les en-têtes de réponse ont été écrits.</span><span class="sxs-lookup"><span data-stu-id="e140e-241">Gets a value indicating whether the response headers have been written.</span></span></summary>
        <value><span data-ttu-id="e140e-242"><see langword="true" /> si les en-têtes de réponse ont été écrits ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-242"><see langword="true" /> if the response headers have been written; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsClientConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClientConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsClientConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClientConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClientConnected : bool" Usage="System.Web.HttpResponseBase.IsClientConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-243">Obtient une valeur qui indique si le client est connecté au serveur.</span><span class="sxs-lookup"><span data-stu-id="e140e-243">Gets a value that indicates whether the client is connected to the server.</span></span></summary>
        <value><span data-ttu-id="e140e-244"><see langword="true" /> si le client est actuellement connecté ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-244"><see langword="true" /> if the client is currently connected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-245">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-245">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsRequestBeingRedirected">
      <MemberSignature Language="C#" Value="public virtual bool IsRequestBeingRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestBeingRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.IsRequestBeingRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsRequestBeingRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsRequestBeingRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequestBeingRedirected : bool" Usage="System.Web.HttpResponseBase.IsRequestBeingRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-246">Obtient une valeur qui indique si le client est redirigé vers un nouvel emplacement.</span><span class="sxs-lookup"><span data-stu-id="e140e-246">Gets a value that indicates whether the client is being redirected to a new location.</span></span></summary>
        <value><span data-ttu-id="e140e-247"><see langword="true" /> si la valeur de l'en-tête de réponse d'emplacement est différente de l'emplacement actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-247"><see langword="true" /> if the value of the location response header differs from the current location; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-248">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-248">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public virtual System.IO.TextWriter Output { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Output" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Output As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter with get, set" Usage="System.Web.HttpResponseBase.Output" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-249">Obtient l'objet qui permet la sortie du texte dans le flux de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-249">Gets the object that enables text output to the HTTP response stream.</span></span></summary>
        <value><span data-ttu-id="e140e-250">Objet qui active les sorties vers le client.</span><span class="sxs-lookup"><span data-stu-id="e140e-250">An object that enables output to the client.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-251">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-251">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.OutputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ OutputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputStream : System.IO.Stream" Usage="System.Web.HttpResponseBase.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-252">Obtient l'objet qui permet une sortie binaire vers le corps du contenu HTTP sortant.</span><span class="sxs-lookup"><span data-stu-id="e140e-252">Gets the object that enables binary output to the outgoing HTTP content body.</span></span></summary>
        <value><span data-ttu-id="e140e-253">Objet représentant le contenu brut du corps du contenu HTTP sortant.</span><span class="sxs-lookup"><span data-stu-id="e140e-253">An object that represents the raw contents of the outgoing HTTP content body.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-254">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-254">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pics">
      <MemberSignature Language="C#" Value="public virtual void Pics (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pics(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Pics(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Pics (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Pics(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Pics : string -&gt; unit&#xA;override this.Pics : string -&gt; unit" Usage="httpResponseBase.Pics value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e140e-255">Chaîne à ajouter à l'en-tête <see langword="PICS-Label" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-255">The string to add to the <see langword="PICS-Label" /> header.</span></span></param>
        <summary><span data-ttu-id="e140e-256">Ajoute un en-tête HTTP <see langword="PICS-Label" /> à la réponse actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-256">Appends an HTTP <see langword="PICS-Label" /> header to the current response.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-257">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-257">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushPromise">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-258">Promeut un objet promis.</span><span class="sxs-lookup"><span data-stu-id="e140e-258">Promotes a promised object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public virtual void PushPromise (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushPromise(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.PushPromise(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushPromise (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushPromise(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member PushPromise : string -&gt; unit&#xA;override this.PushPromise : string -&gt; unit" Usage="httpResponseBase.PushPromise path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e140e-259">URL de la demande d'opération push.</span><span class="sxs-lookup"><span data-stu-id="e140e-259">The URL of the push request.</span></span> <span data-ttu-id="e140e-260">Cela doit être le chemin d’accès virtuel de la ressource relative que le serveur souhaite envoyer au client en mode Push.</span><span class="sxs-lookup"><span data-stu-id="e140e-260">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <summary><span data-ttu-id="e140e-261">Cette API permet de prendre en charge les applications qui envoient des promesses push aux clients HTTP 2.0.</span><span class="sxs-lookup"><span data-stu-id="e140e-261">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="e140e-262">Vous trouverez plus de détails concernant le mode Server Push Http2 dans <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2 : Server Push</see>.</span><span class="sxs-lookup"><span data-stu-id="e140e-262">You can find more details regarding to Http2 server push at <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-263">PushPromise est non déterministe et applications ne doivent pas avoir une logique qui en dépend.</span><span class="sxs-lookup"><span data-stu-id="e140e-263">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="e140e-264">Son seul but est parti de performances dans certains cas.</span><span class="sxs-lookup"><span data-stu-id="e140e-264">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="e140e-265">Il existe de nombreuses conditions (protocole et l’implémentation) qui peuvent ignorer les demandes de notifications push complètement.</span><span class="sxs-lookup"><span data-stu-id="e140e-265">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="e140e-266">L’attente est basé sur « fire-et-forget ».</span><span class="sxs-lookup"><span data-stu-id="e140e-266">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public virtual void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushPromise(string path, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushPromise (path As String, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushPromise(System::String ^ path, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member PushPromise : string * string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.PushPromise : string * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpResponseBase.PushPromise (path, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e140e-267">URL de la demande d'opération push.</span><span class="sxs-lookup"><span data-stu-id="e140e-267">The URL of the push request.</span></span> <span data-ttu-id="e140e-268">Cela doit être le chemin d’accès virtuel de la ressource relative que le serveur souhaite envoyer au client en mode Push.</span><span class="sxs-lookup"><span data-stu-id="e140e-268">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <param name="method"><span data-ttu-id="e140e-269">Méthode de demande HTTP utilisée par la demande d'opération push.</span><span class="sxs-lookup"><span data-stu-id="e140e-269">Http request method that would be used by the push request.</span></span></param>
        <param name="headers"><span data-ttu-id="e140e-270">En-tête de demande HTTP utilisé par la demande d'opération push.</span><span class="sxs-lookup"><span data-stu-id="e140e-270">Http request header that would be used by the push request.</span></span></param>
        <summary><span data-ttu-id="e140e-271">Cette API permet de prendre en charge les applications qui envoient des promesses push aux clients HTTP 2.0.</span><span class="sxs-lookup"><span data-stu-id="e140e-271">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="e140e-272">Vous trouverez plus de détails concernant le mode Server Push Http2 dans <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2 : Server Push</see>.</span><span class="sxs-lookup"><span data-stu-id="e140e-272">You can find more details regarding to Http2 server push at <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-273">PushPromise est non déterministe et applications ne doivent pas avoir une logique qui en dépend.</span><span class="sxs-lookup"><span data-stu-id="e140e-273">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="e140e-274">Son seul but est parti de performances dans certains cas.</span><span class="sxs-lookup"><span data-stu-id="e140e-274">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="e140e-275">Il existe de nombreuses conditions (protocole et l’implémentation) qui peuvent ignorer les demandes de notifications push complètement.</span><span class="sxs-lookup"><span data-stu-id="e140e-275">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="e140e-276">L’attente est basé sur « fire-et-forget ».</span><span class="sxs-lookup"><span data-stu-id="e140e-276">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Redirect">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-277">Redirige une demande vers une URL différente.</span><span class="sxs-lookup"><span data-stu-id="e140e-277">Redirects a request to a different URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public virtual void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Redirect (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Redirect(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member Redirect : string -&gt; unit&#xA;override this.Redirect : string -&gt; unit" Usage="httpResponseBase.Redirect url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="e140e-278">Emplacement cible.</span><span class="sxs-lookup"><span data-stu-id="e140e-278">The target location.</span></span></param>
        <summary><span data-ttu-id="e140e-279">Redirige une demande vers l'URL spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e140e-279">Redirects a request to the specified URL.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-280">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-280">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public virtual void Redirect (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Redirect(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Redirect(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Redirect (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Redirect(System::String ^ url, bool endResponse);" />
      <MemberSignature Language="F#" Value="abstract member Redirect : string * bool -&gt; unit&#xA;override this.Redirect : string * bool -&gt; unit" Usage="httpResponseBase.Redirect (url, endResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="e140e-281">Emplacement cible.</span><span class="sxs-lookup"><span data-stu-id="e140e-281">The target location.</span></span></param>
        <param name="endResponse"><span data-ttu-id="e140e-282"><see langword="true" /> pour terminer le processus actuel.</span><span class="sxs-lookup"><span data-stu-id="e140e-282"><see langword="true" /> to terminate the current process.</span></span></param>
        <summary><span data-ttu-id="e140e-283">Redirige une demande vers l'URL spécifiée et indique si l'exécution du processus en cours doit s'arrêter.</span><span class="sxs-lookup"><span data-stu-id="e140e-283">Redirects a request to the specified URL and specifies whether execution of the current process should terminate.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-284">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-284">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public virtual string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.RedirectLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RedirectLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RedirectLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectLocation : string with get, set" Usage="System.Web.HttpResponseBase.RedirectLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-285">Obtient ou définit la valeur de l'en-tête HTTP <see langword="Location" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-285">Gets or sets the value of the HTTP <see langword="Location" /> header.</span></span></summary>
        <value><span data-ttu-id="e140e-286">URL absolue de l'en-tête HTTP <see langword="Location" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-286">The absolute URL of the HTTP <see langword="Location" /> header.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-287">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-287">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectPermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-288">Exécute une redirection permanente de l'URL demandée vers une URL spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e140e-288">Performs a permanent redirect from the requested URL to a specified URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectPermanent (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectPermanent(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member RedirectPermanent : string -&gt; unit&#xA;override this.RedirectPermanent : string -&gt; unit" Usage="httpResponseBase.RedirectPermanent url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="e140e-289">Emplacement vers lequel la demande est redirigée.</span><span class="sxs-lookup"><span data-stu-id="e140e-289">The location to which the request is redirected.</span></span></param>
        <summary><span data-ttu-id="e140e-290">Exécute une redirection permanente de l'URL demandée vers l'URL spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e140e-290">Performs a permanent redirect from the requested URL to the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-291">Le <xref:System.Web.HttpResponseBase.RedirectPermanent%28System.String%29> surcharge de méthode fournit un code d’état HTTP 301 dans la réponse et inclut l’URL pour lequel la requête est redirigée.</span><span class="sxs-lookup"><span data-stu-id="e140e-291">The <xref:System.Web.HttpResponseBase.RedirectPermanent%28System.String%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="e140e-292">Un code d’état HTTP 301 est un code standard dans une réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-292">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="e140e-293">Il indique qu’une redirection permanente existe, et il fournit l’emplacement de redirection.</span><span class="sxs-lookup"><span data-stu-id="e140e-293">It indicates that a permanent redirect exists, and it provides the redirect location.</span></span>  
  
 <span data-ttu-id="e140e-294">Appel de la <xref:System.Web.HttpResponseBase.RedirectPermanent%28System.String%29> méthode termine le reste de la réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-294">Calling the <xref:System.Web.HttpResponseBase.RedirectPermanent%28System.String%29> method terminates the rest of the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-295">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-295">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectPermanent (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectPermanent(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectPermanent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectPermanent (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectPermanent(System::String ^ url, bool endResponse);" />
      <MemberSignature Language="F#" Value="abstract member RedirectPermanent : string * bool -&gt; unit&#xA;override this.RedirectPermanent : string * bool -&gt; unit" Usage="httpResponseBase.RedirectPermanent (url, endResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="e140e-296">Emplacement vers lequel la demande est redirigée.</span><span class="sxs-lookup"><span data-stu-id="e140e-296">The location to which the request is redirected.</span></span></param>
        <param name="endResponse"><span data-ttu-id="e140e-297"><see langword="true" /> pour terminer la réponse ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-297"><see langword="true" /> to terminate the response; otherwise <see langword="false" />.</span></span> <span data-ttu-id="e140e-298">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-298">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e140e-299">Exécute une redirection permanente de l'URL demandée vers l'URL spécifiée, et permet de compléter la réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-299">Performs a permanent redirect from the requested URL to the specified URL, and provides the option to complete the response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-300">Le <xref:System.Web.HttpResponseBase.RedirectPermanent%28System.String%2CSystem.Boolean%29> la surcharge de méthode fournit un code d’état HTTP 301 dans la réponse et inclut l’URL pour lequel la requête est redirigée.</span><span class="sxs-lookup"><span data-stu-id="e140e-300">The <xref:System.Web.HttpResponseBase.RedirectPermanent%28System.String%2CSystem.Boolean%29> overload method provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="e140e-301">Cette surcharge fournit également l’option pour spécifier s’il faut terminer ou compléter la réponse après que la redirection a été effectuée.</span><span class="sxs-lookup"><span data-stu-id="e140e-301">This overload also provides the option to specify whether to terminate or to complete the response after the redirect has been performed.</span></span> <span data-ttu-id="e140e-302">Un code d’état HTTP 301 est un code standard dans une réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-302">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="e140e-303">Il indique qu’une redirection permanente existe, et il fournit l’emplacement de redirection.</span><span class="sxs-lookup"><span data-stu-id="e140e-303">It indicates that a permanent redirect exists, and it provides the redirect location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-304">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-304">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-305">Redirige la requête vers une nouvelle URL en utilisant des valeurs de paramètres d'itinéraires, un nom d'itinéraire, ou les deux.</span><span class="sxs-lookup"><span data-stu-id="e140e-305">Redirects the request to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoute (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoute(System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : obj -&gt; unit&#xA;override this.RedirectToRoute : obj -&gt; unit" Usage="httpResponseBase.RedirectToRoute routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="e140e-306">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-306">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-307">Redirige la requête vers une nouvelle URL à l'aide de valeurs de paramètres d'itinéraires.</span><span class="sxs-lookup"><span data-stu-id="e140e-307">Redirects the request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-308">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoute%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-308">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoute%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-309">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-309">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoute (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoute(System::String ^ routeName);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : string -&gt; unit&#xA;override this.RedirectToRoute : string -&gt; unit" Usage="httpResponseBase.RedirectToRoute routeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="e140e-310">Nom de l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-310">The name of the route.</span></span></param>
        <summary><span data-ttu-id="e140e-311">Redirige la requête vers une nouvelle URL à l'aide d'un nom d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-311">Redirects the request to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-312">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoute%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-312">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoute%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-313">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-313">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoute(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoute(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoute (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoute(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : System.Web.Routing.RouteValueDictionary -&gt; unit&#xA;override this.RedirectToRoute : System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponseBase.RedirectToRoute routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="e140e-314">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-314">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-315">Redirige la requête vers une nouvelle URL à l'aide de valeurs de paramètres d'itinéraires.</span><span class="sxs-lookup"><span data-stu-id="e140e-315">Redirects the request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-316">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoute%28System.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-316">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoute%28System.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-317">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-317">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoute (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : string * obj -&gt; unit&#xA;override this.RedirectToRoute : string * obj -&gt; unit" Usage="httpResponseBase.RedirectToRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="e140e-318">Nom de l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-318">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="e140e-319">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-319">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-320">Redirige la requête vers une nouvelle URL en utilisant des valeurs de paramètres d'itinéraires et un nom d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-320">Redirects the request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-321">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoute%28System.String%2CSystem.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-321">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoute%28System.String%2CSystem.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-322">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-322">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoute(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoute (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoute(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : string * System.Web.Routing.RouteValueDictionary -&gt; unit&#xA;override this.RedirectToRoute : string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponseBase.RedirectToRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="e140e-323">Nom de l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-323">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="e140e-324">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-324">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-325">Redirige la requête vers une nouvelle URL en utilisant des valeurs de paramètres d'itinéraires et un nom d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-325">Redirects the request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-326">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoute%28System.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-326">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoute%28System.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-327">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-327">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoutePermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-328">Effectue une redirection permanente à partir de l'URL demandée vers une nouvelle URL en utilisant des valeurs de paramètres d'itinéraires, un nom d'itinéraire, ou les deux.</span><span class="sxs-lookup"><span data-stu-id="e140e-328">Performs a permanent redirection from the requested URL to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoutePermanent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoutePermanent (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoutePermanent(System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : obj -&gt; unit&#xA;override this.RedirectToRoutePermanent : obj -&gt; unit" Usage="httpResponseBase.RedirectToRoutePermanent routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="e140e-329">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-329">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-330">Effectue une redirection permanente à partir de l'URL demandée vers une nouvelle URL à l'aide de valeurs de paramètres d'itinéraires.</span><span class="sxs-lookup"><span data-stu-id="e140e-330">Performs a permanent redirection from the requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-331">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-331">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-332">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-332">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoutePermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoutePermanent (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoutePermanent(System::String ^ routeName);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : string -&gt; unit&#xA;override this.RedirectToRoutePermanent : string -&gt; unit" Usage="httpResponseBase.RedirectToRoutePermanent routeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="e140e-333">Nom de l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-333">The name of the route.</span></span></param>
        <summary><span data-ttu-id="e140e-334">Effectue une redirection permanente à partir de l'URL demandée vers une nouvelle URL à l'aide d'un nom d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-334">Performs a permanent redirection from the requested URL to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-335">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-335">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-336">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-336">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoutePermanent(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoutePermanent (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoutePermanent(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : System.Web.Routing.RouteValueDictionary -&gt; unit&#xA;override this.RedirectToRoutePermanent : System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponseBase.RedirectToRoutePermanent routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="e140e-337">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-337">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-338">Effectue une redirection permanente à partir de l'URL demandée vers une nouvelle URL à l'aide de valeurs de paramètres d'itinéraires.</span><span class="sxs-lookup"><span data-stu-id="e140e-338">Performs a permanent redirection from the requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-339">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-339">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-340">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-340">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoutePermanent (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoutePermanent(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : string * obj -&gt; unit&#xA;override this.RedirectToRoutePermanent : string * obj -&gt; unit" Usage="httpResponseBase.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="e140e-341">Nom de l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-341">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="e140e-342">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-342">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-343">Effectue une redirection permanente à partir de l'URL demandée vers une nouvelle URL en utilisant les valeurs de paramètres d'itinéraires et le nom d'itinéraire qui correspondent à la nouvelle URL.</span><span class="sxs-lookup"><span data-stu-id="e140e-343">Performs a permanent redirection from the requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-344">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.String%2CSystem.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-344">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.String%2CSystem.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-345">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-345">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToRoutePermanent(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToRoutePermanent (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToRoutePermanent(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : string * System.Web.Routing.RouteValueDictionary -&gt; unit&#xA;override this.RedirectToRoutePermanent : string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponseBase.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="e140e-346">Nom de l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-346">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="e140e-347">Valeurs de paramètre d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-347">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="e140e-348">Effectue une redirection permanente à partir de l'URL demandée vers une nouvelle URL en utilisant des valeurs de paramètres d'itinéraires et un nom d'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="e140e-348">Performs a permanent redirection from the requested URL to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-349">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-349">For information about this member, see <xref:System.Web.HttpResponse.RedirectToRoutePermanent%28System.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-350">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-350">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveOutputCacheItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-351">Supprime des éléments mis en cache du cache de sortie à l'aide du fournisseur de caches de sortie par défaut.</span><span class="sxs-lookup"><span data-stu-id="e140e-351">Removes cached items from the output cache by using the default output-cache provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public virtual void RemoveOutputCacheItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOutputCacheItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RemoveOutputCacheItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOutputCacheItem (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOutputCacheItem(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member RemoveOutputCacheItem : string -&gt; unit&#xA;override this.RemoveOutputCacheItem : string -&gt; unit" Usage="httpResponseBase.RemoveOutputCacheItem path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e140e-352">Chemin d'accès virtuel des éléments à supprimer du cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-352">The virtual absolute path to the items to be removed from the cache.</span></span></param>
        <summary><span data-ttu-id="e140e-353">Supprime du cache tous les éléments associés au chemin d'accès spécifié.</span><span class="sxs-lookup"><span data-stu-id="e140e-353">Removes from the cache all cached items that are associated with the specified path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-354">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-354">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public virtual void RemoveOutputCacheItem (string path, string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOutputCacheItem(string path, string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.RemoveOutputCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOutputCacheItem (path As String, providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOutputCacheItem(System::String ^ path, System::String ^ providerName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveOutputCacheItem : string * string -&gt; unit&#xA;override this.RemoveOutputCacheItem : string * string -&gt; unit" Usage="httpResponseBase.RemoveOutputCacheItem (path, providerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e140e-355">Chemin d'accès virtuel des éléments retirés du cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-355">The virtual absolute path of the items that are removed from the cache.</span></span></param>
        <param name="providerName"><span data-ttu-id="e140e-356">Fournisseur utilisé pour supprimer les artefacts de cache de sortie associés au chemin d'accès spécifié.</span><span class="sxs-lookup"><span data-stu-id="e140e-356">The provider that is used to remove the output-cache artifacts that are associated with the specified path.</span></span></param>
        <summary><span data-ttu-id="e140e-357">Utilise le fournisseur de caches de sortie spécifié pour supprimer tous les artefacts de cache de sortie associés au chemin d'accès spécifié.</span><span class="sxs-lookup"><span data-stu-id="e140e-357">Uses the specified output-cache provider to remove all output-cache artifacts that are associated with the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-358">Appelez cette méthode pour supprimer des éléments de cache de sortie qui sont associés avec les fournisseurs de cache de sortie personnalisés qui sont spécifiés dans le fichier de configuration de site Web.</span><span class="sxs-lookup"><span data-stu-id="e140e-358">Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</span></span> <span data-ttu-id="e140e-359">Pour supprimer des éléments de cache de sortie qui sont associés avec le fournisseur de cache de sortie par défaut, appelez le <xref:System.Web.HttpResponseBase.RemoveOutputCacheItem%28System.String%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="e140e-359">To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponseBase.RemoveOutputCacheItem%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-360">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-360">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public virtual void SetCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.SetCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="abstract member SetCookie : System.Web.HttpCookie -&gt; unit&#xA;override this.SetCookie : System.Web.HttpCookie -&gt; unit" Usage="httpResponseBase.SetCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="e140e-361">Le cookie à mettre à jour dans la collection </span><span class="sxs-lookup"><span data-stu-id="e140e-361">The cookie in the collection to be updated.</span></span></param>
        <summary><span data-ttu-id="e140e-362">Met à jour un cookie dans la collection de cookies.</span><span class="sxs-lookup"><span data-stu-id="e140e-362">Updates an existing cookie in the cookie collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-363">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-363">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public virtual string Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.Status" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Status As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Status { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Status : string with get, set" Usage="System.Web.HttpResponseBase.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-364">Obtient ou définit la valeur <see langword="Status" /> retournée au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-364">Gets or sets the <see langword="Status" /> value that is returned to the client.</span></span></summary>
        <value><span data-ttu-id="e140e-365">État de la sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-365">The status of the HTTP output.</span></span> <span data-ttu-id="e140e-366">Pour plus d’informations sur les codes d’état valides, consultez [Codes d’état HTTP](https://go.microsoft.com/fwlink/?LinkId=73157) sur le site Web MSDN.</span><span class="sxs-lookup"><span data-stu-id="e140e-366">For information about valid status codes, see [HTTP Status Codes](https://go.microsoft.com/fwlink/?LinkId=73157) on the MSDN Web site.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-367">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-367">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public virtual int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StatusCode : int with get, set" Usage="System.Web.HttpResponseBase.StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-368">Obtient ou définit le code d'état HTTP du résultat qui est retourné au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-368">Gets or sets the HTTP status code of the output that is returned to the client.</span></span></summary>
        <value><span data-ttu-id="e140e-369">Code d'état de la sortie HTTP qui est retournée au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-369">The status code of the HTTP output that is returned to the client.</span></span> <span data-ttu-id="e140e-370">Pour plus d’informations sur les codes d’état valides, consultez [Codes d’état HTTP](https://go.microsoft.com/fwlink/?LinkId=73157) sur le site Web MSDN.</span><span class="sxs-lookup"><span data-stu-id="e140e-370">For information about valid status codes, see [HTTP Status Codes](https://go.microsoft.com/fwlink/?LinkId=73157) on the MSDN Web site.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-371">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-371">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public virtual string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.StatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StatusDescription : string with get, set" Usage="System.Web.HttpResponseBase.StatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-372">Obtient ou définit le message d'état HTTP de la sortie qui est retournée au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-372">Gets or sets the HTTP status message of the output that is returned to the client.</span></span></summary>
        <value><span data-ttu-id="e140e-373">Message d'état de la sortie HTTP qui est retournée au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-373">The status message of the HTTP output that is returned to the client.</span></span> <span data-ttu-id="e140e-374">Pour plus d’informations sur les codes d’état valides, consultez [Codes d’état HTTP](https://go.microsoft.com/fwlink/?LinkId=73157) sur le site Web MSDN.</span><span class="sxs-lookup"><span data-stu-id="e140e-374">For information about valid status codes, see [HTTP Status Codes](https://go.microsoft.com/fwlink/?LinkId=73157) on the MSDN Web site.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-375">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-375">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubStatusCode">
      <MemberSignature Language="C#" Value="public virtual int SubStatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubStatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.SubStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubStatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SubStatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SubStatusCode : int with get, set" Usage="System.Web.HttpResponseBase.SubStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-376">Obtient ou définit une valeur qui qualifie le code d'état de la réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-376">Gets or sets a value that qualifies the status code of the response.</span></span></summary>
        <value><span data-ttu-id="e140e-377">Code de sous-état [!INCLUDE[iisver](~/includes/iisver-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e140e-377">The [!INCLUDE[iisver](~/includes/iisver-md.md)] substatus code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-378">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-378">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAsyncFlush { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAsyncFlush : bool" Usage="System.Web.HttpResponseBase.SupportsAsyncFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-379">Obtient une valeur qui indique si la connexion prend en charge l'opération de vidage asynchrone.</span><span class="sxs-lookup"><span data-stu-id="e140e-379">Gets a value that indicates whether the connection supports asynchronous flush operation.</span></span></summary>
        <value><span data-ttu-id="e140e-380"><see langword="true" /> si la connexion prend en charge les opérations de vidage asynchrones ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-380"><see langword="true" /> if the connection supports asynchronous flush operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressContent">
      <MemberSignature Language="C#" Value="public virtual bool SuppressContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.SuppressContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SuppressContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SuppressContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressContent : bool with get, set" Usage="System.Web.HttpResponseBase.SuppressContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-381">Obtient ou définit une valeur qui indique si seuls les en-têtes HTTP seront envoyés au client.</span><span class="sxs-lookup"><span data-stu-id="e140e-381">Gets or sets a value that indicates whether only the HTTP headers will be sent to the client.</span></span></summary>
        <value><span data-ttu-id="e140e-382"><see langword="true" /> Si le contenu du message HTTP est supprimé ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-382"><see langword="true" /> if HTTP message content is suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-383">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-383">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SuppressDefaultCacheControlHeader">
      <MemberSignature Language="C#" Value="public virtual bool SuppressDefaultCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SuppressDefaultCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SuppressDefaultCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressDefaultCacheControlHeader : bool with get, set" Usage="System.Web.HttpResponseBase.SuppressDefaultCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-384">[Pris en charge dans .NET Framework 4.5.2 et versions ultérieures]</span><span class="sxs-lookup"><span data-stu-id="e140e-384">[Supported in the .NET Framework 4.5.2 and later versions]</span></span> 
<span data-ttu-id="e140e-385">Obtient ou définit une valeur indiquant s’il faut supprimer l’en-tête <c>Cache Control: private</c> par défaut de la réponse HTTP actuelle.</span><span class="sxs-lookup"><span data-stu-id="e140e-385">Gets or sets a value indicating whether to suppress the default <c>Cache Control: private</c> header for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="e140e-386">retourne <see cref="T:System.Boolean" /> ;</span><span class="sxs-lookup"><span data-stu-id="e140e-386">Returns <see cref="T:System.Boolean" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-387">Par défaut, ASP.NET envoie un `Cache-Control: private` en-tête de réponse, sauf si une stratégie de cache explicite a été spécifiée pour cette réponse.</span><span class="sxs-lookup"><span data-stu-id="e140e-387">By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response.</span></span> <span data-ttu-id="e140e-388">Cette propriété autorise la suppression de cet en-tête de réponse par défaut sur une base par demande.</span><span class="sxs-lookup"><span data-stu-id="e140e-388">This property allows suppressing this default response header on a per-request basis.</span></span> <span data-ttu-id="e140e-389">L’en-tête peut toujours être supprimée pour l’application entière en définissant <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> dans [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) ou [outputCache, élément de caching (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee).</span><span class="sxs-lookup"><span data-stu-id="e140e-389">The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee).</span></span>  
  
 <span data-ttu-id="e140e-390">Soyez prudent lors de la suppression de la valeur par défaut `Cache-Control: private` en-tête, en tant que proxy et autres intermédiaires peuvent traiter des réponses sans cet en-tête comme mis en cache par défaut.</span><span class="sxs-lookup"><span data-stu-id="e140e-390">Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</span></span> <span data-ttu-id="e140e-391">Ce traitement peut entraîner la mise en cache par inadvertance des informations sensibles.</span><span class="sxs-lookup"><span data-stu-id="e140e-391">This treatment can lead to the inadvertent caching of sensitive information.</span></span> <span data-ttu-id="e140e-392">Consultez [le document RFC 2616, s. 13.4](http://tools.ietf.org/html/rfc2616) pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="e140e-392">See [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressFormsAuthenticationRedirect">
      <MemberSignature Language="C#" Value="public virtual bool SuppressFormsAuthenticationRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SuppressFormsAuthenticationRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SuppressFormsAuthenticationRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressFormsAuthenticationRedirect : bool with get, set" Usage="System.Web.HttpResponseBase.SuppressFormsAuthenticationRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-393">Obtient ou définit une valeur qui spécifie si la redirection d'authentification par formulaire à la page de connexion doit être supprimée.</span><span class="sxs-lookup"><span data-stu-id="e140e-393">Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</span></span></summary>
        <value><span data-ttu-id="e140e-394"><see langword="true" /> si la redirection authentification par formulaire doit être supprimée ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-394"><see langword="true" /> if forms authentication redirection should be suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e140e-395">Pour plus d’informations sur ce membre, consultez <xref:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e140e-395">For information about this member, see <xref:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransmitFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-396">Écrit le fichier spécifié dans le flux de sortie de réponse HTTP, sans le placer en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="e140e-396">Writes the specified file to the HTTP response output stream, without buffering it in memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public virtual void TransmitFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransmitFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.TransmitFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransmitFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransmitFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member TransmitFile : string -&gt; unit&#xA;override this.TransmitFile : string -&gt; unit" Usage="httpResponseBase.TransmitFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e140e-397">Nom du fichier à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-397">The name of the file to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="e140e-398">Écrit le fichier spécifié dans le flux de sortie de réponse HTTP, sans le placer en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="e140e-398">Writes the specified file to the HTTP response output stream, without buffering it in memory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-399">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-399">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public virtual void TransmitFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransmitFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.TransmitFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransmitFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransmitFile(System::String ^ filename, long offset, long length);" />
      <MemberSignature Language="F#" Value="abstract member TransmitFile : string * int64 * int64 -&gt; unit&#xA;override this.TransmitFile : string * int64 * int64 -&gt; unit" Usage="httpResponseBase.TransmitFile (filename, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e140e-400">Nom du fichier à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-400">The name of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="e140e-401">Position où l'écriture commence dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="e140e-401">The position in the file where writing starts.</span></span></param>
        <param name="length"><span data-ttu-id="e140e-402">Nombre d'octets à écrire, à partir de <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-402">The number of bytes to write, starting at <paramref name="offset" />.</span></span></param>
        <summary><span data-ttu-id="e140e-403">Écrit la partie spécifiée d'un fichier dans le flux de sortie de réponse HTTP sans la placer en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="e140e-403">Writes the specified part of a file to the HTTP response output stream, without buffering it in memory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-404">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-404">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrySkipIisCustomErrors">
      <MemberSignature Language="C#" Value="public virtual bool TrySkipIisCustomErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrySkipIisCustomErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponseBase.TrySkipIisCustomErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TrySkipIisCustomErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TrySkipIisCustomErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrySkipIisCustomErrors : bool with get, set" Usage="System.Web.HttpResponseBase.TrySkipIisCustomErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e140e-405">Obtient ou définit une valeur qui indique si les erreurs personnalisées d'[!INCLUDE[iisver](~/includes/iisver-md.md)] sont désactivées.</span><span class="sxs-lookup"><span data-stu-id="e140e-405">Gets or sets a value that specifies whether [!INCLUDE[iisver](~/includes/iisver-md.md)] custom errors are disabled.</span></span></summary>
        <value><span data-ttu-id="e140e-406"><see langword="true" /> si les erreurs personnalisées IIS sont désactivées ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-406"><see langword="true" /> if IIS custom errors are disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-407">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-407">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-408">Écrit des informations dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-408">Writes information to the HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char ch);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="httpResponseBase.Write ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="e140e-409">Caractère à écrire vers le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-409">The character to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="e140e-410">Écrit un caractère dans un flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-410">Writes a character to an HTTP response output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-411">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-411">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="httpResponseBase.Write obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e140e-412">Objet à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-412">The object to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="e140e-413">Écrit l'objet spécifié dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-413">Writes the specified object to the HTTP response stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-414">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-414">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="httpResponseBase.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e140e-415">Chaîne à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-415">The string to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="e140e-416">Écrit la chaîne spécifiée dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-416">Writes the specified string to the HTTP response output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-417">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-417">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="httpResponseBase.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e140e-418">Tableau de caractères à écrire.</span><span class="sxs-lookup"><span data-stu-id="e140e-418">The character array to write.</span></span></param>
        <param name="index"><span data-ttu-id="e140e-419">Emplacement dans le tableau de caractères où l'écriture commence.</span><span class="sxs-lookup"><span data-stu-id="e140e-419">The position in the character array where writing starts.</span></span></param>
        <param name="count"><span data-ttu-id="e140e-420">Nombre de caractères à écrire, à partir de <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-420">The number of characters to write, starting at <paramref name="index" />.</span></span></param>
        <summary><span data-ttu-id="e140e-421">Écrit le tableau de caractères spécifié dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-421">Writes the specified array of characters to the HTTP response output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-422">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-422">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e140e-423">Écrit le fichier spécifié dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-423">Writes the specified file to the HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public virtual void WriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.WriteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="abstract member WriteFile : string -&gt; unit&#xA;override this.WriteFile : string -&gt; unit" Usage="httpResponseBase.WriteFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e140e-424">Nom du fichier à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-424">The name of the file to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="e140e-425">Écrit le contenu du fichier spécifié dans le flux de sortie de réponse HTTP comme un bloc de fichier.</span><span class="sxs-lookup"><span data-stu-id="e140e-425">Writes the contents of the specified file to the HTTP response output stream as a file block.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-426">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-426">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public virtual void WriteFile (string filename, bool readIntoMemory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFile(string filename, bool readIntoMemory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.WriteFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFile (filename As String, readIntoMemory As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFile(System::String ^ filename, bool readIntoMemory);" />
      <MemberSignature Language="F#" Value="abstract member WriteFile : string * bool -&gt; unit&#xA;override this.WriteFile : string * bool -&gt; unit" Usage="httpResponseBase.WriteFile (filename, readIntoMemory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="readIntoMemory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e140e-427">Nom du fichier dans lequel la réponse actuelle est à écrire.</span><span class="sxs-lookup"><span data-stu-id="e140e-427">The name of the file to write to the current response.</span></span></param>
        <param name="readIntoMemory"><span data-ttu-id="e140e-428"><see langword="true" /> pour écrire le fichier dans un bloc de mémoire.</span><span class="sxs-lookup"><span data-stu-id="e140e-428"><see langword="true" /> to write the file into a memory block.</span></span></param>
        <summary><span data-ttu-id="e140e-429">Écrit le contenu du fichier spécifié dans le flux de sortie de réponse HTTP et spécifie si le contenu est écrit sous la forme d'un bloc de mémoire.</span><span class="sxs-lookup"><span data-stu-id="e140e-429">Writes the contents of the specified file to the HTTP response output stream and specifies whether the content is written as a memory block.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-430">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-430">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public virtual void WriteFile (IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFile(native int fileHandle, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.WriteFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFile (fileHandle As IntPtr, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFile(IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="F#" Value="abstract member WriteFile : nativeint * int64 * int64 -&gt; unit&#xA;override this.WriteFile : nativeint * int64 * int64 -&gt; unit" Usage="httpResponseBase.WriteFile (fileHandle, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileHandle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileHandle"><span data-ttu-id="e140e-431">Handle de fichier du fichier à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-431">The file handle of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="e140e-432">Position où l'écriture commence dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="e140e-432">The position in the file where writing starts.</span></span></param>
        <param name="size"><span data-ttu-id="e140e-433">Nombre d'octets à écrire, à partir de <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-433">The number of bytes to write, starting at <paramref name="offset" />.</span></span></param>
        <summary><span data-ttu-id="e140e-434">Écrit le fichier spécifié dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-434">Writes the specified file to the HTTP response output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-435">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-435">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public virtual void WriteFile (string filename, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFile(string filename, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.WriteFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFile (filename As String, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFile(System::String ^ filename, long offset, long size);" />
      <MemberSignature Language="F#" Value="abstract member WriteFile : string * int64 * int64 -&gt; unit&#xA;override this.WriteFile : string * int64 * int64 -&gt; unit" Usage="httpResponseBase.WriteFile (filename, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e140e-436">Nom du fichier à écrire dans le flux de sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-436">The name of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="e140e-437">Position où l'écriture commence dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="e140e-437">The position in the file where writing starts.</span></span></param>
        <param name="size"><span data-ttu-id="e140e-438">Nombre d'octets à écrire, à partir de <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="e140e-438">The number of bytes to write, starting at <paramref name="offset" />.</span></span></param>
        <summary><span data-ttu-id="e140e-439">Écrit le fichier spécifié dans le flux de sortie de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="e140e-439">Writes the specified file to the HTTP response output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-440">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-440">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubstitution">
      <MemberSignature Language="C#" Value="public virtual void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSubstitution(class System.Web.HttpResponseSubstitutionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponseBase.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteSubstitution (callback As HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteSubstitution(System::Web::HttpResponseSubstitutionCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member WriteSubstitution : System.Web.HttpResponseSubstitutionCallback -&gt; unit&#xA;override this.WriteSubstitution : System.Web.HttpResponseSubstitutionCallback -&gt; unit" Usage="httpResponseBase.WriteSubstitution callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpResponseSubstitutionCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e140e-441">La méthode, le contrôle utilisateur ou l'objet à substituer.</span><span class="sxs-lookup"><span data-stu-id="e140e-441">The method, user control, or object to substitute.</span></span></param>
        <summary><span data-ttu-id="e140e-442">Insère des blocs de substitution dans la réponse ; cette technique permet la génération dynamique de régions pour les réponses de sortie mises en cache.</span><span class="sxs-lookup"><span data-stu-id="e140e-442">Inserts substitution blocks into the response, which enables dynamic generation of regions for cached output responses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e140e-443">Toujours.</span><span class="sxs-lookup"><span data-stu-id="e140e-443">Always.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>