<Type Name="XmlSiteMapProvider" FullName="System.Web.XmlSiteMapProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd0a4cc9e543ccf30f8d81c019ab959a1f923900" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37586130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSiteMapProvider : System.Web.StaticSiteMapProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSiteMapProvider extends System.Web.StaticSiteMapProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.XmlSiteMapProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSiteMapProvider&#xA;Inherits StaticSiteMapProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSiteMapProvider : System::Web::StaticSiteMapProvider, IDisposable" />
  <TypeSignature Language="F#" Value="type XmlSiteMapProvider = class&#xA;    inherit StaticSiteMapProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.StaticSiteMapProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>The <see cref="T:System.Web.XmlSiteMapProvider" /> class is derived from the <see cref="T:System.Web.SiteMapProvider" /> class and is the default site map provider for ASP.NET. The <see cref="T:System.Web.XmlSiteMapProvider" /> class generates site map trees from XML files with the file name extension .sitemap.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> classe charge les données de plan de site à partir d’un fichier XML qui suit un schéma connu. Les données de plan de site sont limitées par `<siteMap>` balises et se compose d’imbriquée `<siteMapNode>` balises. Deux contraintes imposées par le <xref:System.Web.SiteMapProvider> et <xref:System.Web.XmlSiteMapProvider> classes sur la structure du site de plan de données :  
  
-   Nœud racine qu’une seule peut exister.  
  
-   Pour <xref:System.Web.SiteMapNode> objets qui spécifient des URL, l’URL doit être unique dans la portée du fournisseur. (Pour les nœuds qui ne spécifient pas d’URL, toutes les clés doivent être uniques.)  
  
 L’exemple de code suivant montre un exemple d’un fichier XML qui peut être utilisé avec le <xref:System.Web.XmlSiteMapProvider>.  
  
```  
<siteMap>  
  <siteMapNode title="RootNode" description="This is the root node of the site map. There can be only one root node." url="Page1.aspx" >  
    <siteMapNode title="ChildofRootNode" description="Descriptions do not have to be unique." url="Page2.aspx">  
      <siteMapNode title="ChildOfChildNode" description="SiteMapNode objects can be nested to any level." url="Page3.aspx"/>  
    </siteMapNode>  
    <siteMapNode title="ChildofRootNode" description="Descriptions do not have to be unique." url="Page4.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 Le <xref:System.Web.XmlSiteMapProvider> est le fournisseur par défaut pour ASP.NET et lit les données XML à partir d’un fichier nommé Web.sitemap qui se trouve dans la structure de répertoires de l’application ASP.NET. Par défaut, le fichier Web.sitemap se trouve dans la racine de l’application ; Toutefois, si vous souhaitez modifier le nom ou l’emplacement du fichier à partir duquel le <xref:System.Web.XmlSiteMapProvider> charge les données, vous pouvez remplacer la configuration par défaut dans votre fichier Web.config. En substituant les paramètres de configuration par défaut dans votre fichier Web.config, vous pouvez personnaliser le comportement de la <xref:System.Web.XmlSiteMapProvider> pour chaque application ASP.NET, en fonction des besoins.  
  
 L’exemple de code suivant montre un exemple de fichier Web.config, où le <xref:System.Web.XmlSiteMapProvider> est encore utilisé, mais un autre fichier de plan de site. Étant donné que tous les fournisseurs dans un <xref:System.Web.SiteMapProviderCollection> objet doit être nommé de manière unique, celui qui est spécifié dans le fichier Web.config utilise un nom différent de la valeur par défaut, mais est également définie avec le fournisseur par défaut afin qu’il sera utilisé à la place de la <xref:System.Web.XmlSiteMapProvider> qui est spécifié dans th configuration d’ASP.NET e par défaut.  
  
> [!NOTE]
>  Vous pouvez modifier le nom du fichier de données de navigation de site, mais vous ne pouvez pas modifier son extension. Le <xref:System.Web.XmlSiteMapProvider> lit uniquement les données à partir de fichiers qui sont nommés avec l’extension de nom de fichier .sitemap.  
  
```  
<siteMap defaultProvider="MyXmlSiteMapProvider" enabled="true">  
  <providers>  
    <add name="MyXmlSiteMapProvider"  
      description="SiteMap provider that reads in .sitemap files."  
      type="System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"  
      siteMapFile="CustomWeb.sitemap" />  
  </providers>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.StaticSiteMapProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSiteMapProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSiteMapProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new, unnamed, instance of the <see cref="T:System.Web.XmlSiteMapProvider" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="protected internal override void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddNode(class System.Web.SiteMapNode node, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddNode (node As SiteMapNode, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddNode(System::Web::SiteMapNode ^ node, System::Web::SiteMapNode ^ parentNode);" />
      <MemberSignature Language="F#" Value="override this.AddNode : System.Web.SiteMapNode * System.Web.SiteMapNode -&gt; unit" Usage="xmlSiteMapProvider.AddNode (node, parentNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">The <see cref="T:System.Web.SiteMapNode" /> to add to the provider.</param>
        <param name="parentNode">The <see cref="T:System.Web.SiteMapNode" /> under which to add <c>node</c>.</param>
        <summary>Adds a <see cref="T:System.Web.SiteMapNode" /> object to the collections that are maintained by the current provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `node` paramètre est ajouté à une collection interne, et une relation parent/enfant est créée entre celui-ci et `parentNode`.  
  
 Le <xref:System.Web.XmlSiteMapProvider> classe, dérivée de la <xref:System.Web.StaticSiteMapProvider> classe et le fournisseur de plan de site par défaut pour ASP.NET, utilise le <xref:System.Web.SiteMapNode.Url%2A> propriété d’un <xref:System.Web.SiteMapNode> objet en tant que clé de recherche dans ses collections internes, par défaut. Si le <xref:System.Web.SiteMapNode.Url%2A> propriété de la <xref:System.Web.SiteMapNode> est défini, il doit être unique dans la portée du fournisseur. Le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> méthode tente de récupérer des nœuds en fonction de leur <xref:System.Web.SiteMapNode.Url%2A>. Sinon, vous pouvez utiliser la <xref:System.Web.SiteMapNode.Key%2A> propriété et le correspondant <xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A> (méthode), pour récupérer des nœuds.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> or <paramref name="parentNode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The current <see cref="T:System.Web.XmlSiteMapProvider" /> is not the provider associated with <paramref name="node" />.</exception>
        <exception cref="T:System.InvalidOperationException">A node with the same URL or key is already registered with the <see cref="T:System.Web.XmlSiteMapProvider" />. - or -  A duplicate site map node has been encountered programmatically, such as when linking two site map providers.  \- or -  <paramref name="node" /> is the root node of the <see cref="T:System.Web.XmlSiteMapProvider" />.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="protected virtual void AddProvider (string providerName, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddProvider(string providerName, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.AddProvider(System.String,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddProvider (providerName As String, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddProvider(System::String ^ providerName, System::Web::SiteMapNode ^ parentNode);" />
      <MemberSignature Language="F#" Value="abstract member AddProvider : string * System.Web.SiteMapNode -&gt; unit&#xA;override this.AddProvider : string * System.Web.SiteMapNode -&gt; unit" Usage="xmlSiteMapProvider.AddProvider (providerName, parentNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="providerName">The name of one of the <see cref="T:System.Web.SiteMapProvider" /> objects currently registered in the <see cref="P:System.Web.SiteMap.Providers" />.</param>
        <param name="parentNode">A site map node of the current site map provider under which the root node and all nodes of the child provider is added.</param>
        <summary>Links a child site map provider to the current provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.AddProvider%2A> liens de la méthode `providerName` pour le fournisseur actuel en tant qu’enfant du fournisseur actuel. Le nœud racine de `providerName` est ajouté à la hiérarchie pour le fournisseur actuel en tant que nœud enfant de `parentNode`. Étant donné que le fournisseur parent appelle le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode sur `providerName`, les exceptions qui sont décrites dans le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut être levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.SiteMapNode.Provider" /> property of the <paramref name="parentNode" /> does not reference the current provider.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentNode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="providerName" /> cannot be resolved.</exception>
        <exception cref="T:System.InvalidOperationException">The site map file used by <paramref name="providerName" /> is already in use within the provider hierarchy.  -or-  The root node returned by <paramref name="providerName" /> is <see langword="null" />.  -or-  The root node returned by <paramref name="providerName" /> has a URL or key that is already registered with the parent <see cref="T:System.Web.XmlSiteMapProvider" />.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.RemoveProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BuildSiteMap">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode BuildSiteMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode BuildSiteMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildSiteMap () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ BuildSiteMap();" />
      <MemberSignature Language="F#" Value="override this.BuildSiteMap : unit -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.BuildSiteMap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Loads the site map information from an XML file and builds it in memory.</summary>
        <returns>Returns the root <see cref="T:System.Web.SiteMapNode" /> of the site map navigation structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode est appelée pour charger et générer le plan de site à partir d’un stockage persistant.  
  
 Le comportement par défaut lors de la suppression de la sécurité est activée, consultez « Remarques » dans <xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>.  
  
 Après le <xref:System.Web.XmlSiteMapProvider> objet analyse et charge les données de plan de site, tous chargées <xref:System.Web.SiteMapNode> objets et <xref:System.Web.SiteMapNodeCollection> collections sont en lecture seule. Lorsque le <xref:System.Web.XmlSiteMapProvider> analyse le <xref:System.Web.SiteMapNode.Url%2A> propriété à partir d’un fichier de mappage de site, il convertit des URL relatives à l’application, ainsi que les URL relatives, en chemins d’accès virtuels absolu de l’application.  
  
 Le <xref:System.Web.XmlSiteMapProvider> s’abonne aux notifications de modification de fichier pour le fichier .sitemap. Si une modification est apportée au fichier .sitemap, le <xref:System.Web.XmlSiteMapProvider> est rechargé, et la structure de plan de site est régénérée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Web.XmlSiteMapProvider> classe et l’initialiser pour générer un plan de site à partir de données XML.  
  
```csharp  
<%@ Page Language="c#" %>  
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">  
 <SCRIPT runat="server">  
 private void Page_Load(object sender, System.EventArgs e)  
 {  
     // Create an instance of the XmlSiteMapProvider class.  
     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  
     NameValueCollection providerAttributes = new NameValueCollection(1);  
     providerAttributes.Add("siteMapFile","test.sitemap");  
     // Initialize the provider with a provider name and file name.  
     testXmlProvider.Initialize("testProvider", providerAttributes);  
  
     // The BuildSiteMap method is implicitly called when the   
     // RootNode propety is accessed.  
  
     // Prints "/myvirtualdirectory/WebForm1.aspx"  
     Response.Write(testXmlProvider.RootNode.Url + "<BR>");  
     // Prints "/myvirtualdirectory/WebForm2.aspx"  
     Response.Write(testXmlProvider.CurrentNode.Url + "<BR>");  
 }  
```  
  
 L’exemple de code précédent utilise un fichier XML qui se trouve dans la racine virtuelle de l’application ASP.NET. Le fichier a le format suivant :  
  
```  
<siteMap>  
     <siteMapNode title="RootNode" description="The root page." url="WebForm1.aspx">  
         <siteMapNode title="CurrentNode" description="Some sub page." url="WebForm2.aspx"/>  
     </siteMapNode>  
 </siteMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.XmlSiteMapProvider" /> was not initialized properly.  \- or -  A <see langword="siteMapFile" /> is parsed for a <see langword="&lt;siteMapNode&gt;" /> that is not unique.  \- or -  The file specified by the <see langword="siteMapFile" /> does not have the file name extension .sitemap.  \- or -  The file specified by the <see langword="siteMapFile" /> does not exist.  \- or -  A provider configured in the <see langword="provider" /> of a <see langword="&lt;siteMapNode&gt;" /> returns a null root node.</exception>
        <exception cref="T:System.ArgumentException">The <see langword="siteMapFile" /> is specified but the path lies outside the current directory structure for the application.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">There is an error loading the configuration file.  \- or -  The top element of the configuration file is not <see langword="named &lt;siteMap&gt;" />.  \- or -  More than one top node exists in the configuration file.  \- or -  A child of the <see langword="&lt;siteMap&gt;" /> has a name other than <see langword="&lt;siteMapNode&gt;" />.  \- or -  An unexpected attribute is parsed for the <see langword="&lt;siteMapNode&gt;" />.  \- or -  Sub-elements are nested beneath a <see langword="&lt;siteMapNode&gt;" /> where the <see langword="provider" /> is set.  \- or -  The <see langword="roles" /> of the <see langword="&lt;siteMapNode&gt;" /> contain characters that are not valid.  \- or -  A <see langword="url" /> is parsed for a <see langword="&lt;siteMapNode&gt;" /> that is not unique.  \- or -  A <see cref="T:System.Web.SiteMapNode" /> was encountered with a duplicate value for <see cref="P:System.Web.SiteMapNode.Key" />.  \- or -  The <see cref="P:System.Web.SiteMapNode.ResourceKey" /> or <see cref="P:System.Web.SiteMapNode.Title" /> was specified on a <see cref="T:System.Web.SiteMapNode" /> or a <see langword="custom" /> attribute defined for the node contained an explicit resource expression.  \- or -  An explicit resource expression was applied either to the <see cref="P:System.Web.SiteMapNode.Title" /> or <see cref="P:System.Web.SiteMapNode.Description" /> or to a <see langword="custom" /> attribute of a <see cref="T:System.Web.SiteMapNode" /> but the explicit information was not valid.  \- or -  An error occurred while parsing the <see cref="P:System.Web.SiteMapNode.Url" /> of a <see cref="T:System.Web.SiteMapNode" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">A named provider cannot be found in the current site map providers collection.</exception>
        <exception cref="T:System.ArgumentNullException">A <see langword="&lt;siteMapNode&gt;" /> referencing a site map file contains an empty string for the <see langword="siteMapFile" />.</exception>
        <exception cref="T:System.Web.HttpException">A <see langword="siteMapFile" /> of a <see langword="&lt;siteMapNode&gt;" /> uses a physical path.  \- or -  An error occurred while attempting to parse the virtual path to the file specified in the <see langword="siteMapFile" />.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="xmlSiteMapProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all elements in the collections of child and parent site map nodes and site map providers that the <see cref="T:System.Web.XmlSiteMapProvider" /> object internally tracks as part of its state.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> classe substitue héritées <xref:System.Web.XmlSiteMapProvider.Clear%2A> méthode pour fournir un nettoyage supplémentaire de l’état au-delà de la base <xref:System.Web.StaticSiteMapProvider.Clear%2A?displayProperty=nameWithType> implémentation, y compris en désactivant son fournisseur enfant de suivi et le <xref:System.Web.XmlSiteMapProvider.RootNode%2A> propriété mécanismes de suivi.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode CurrentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode CurrentNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.XmlSiteMapProvider.CurrentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ CurrentNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNode : System.Web.SiteMapNode" Usage="System.Web.XmlSiteMapProvider.CurrentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.SiteMapNode" /> object that represents the currently requested page.</summary>
        <value>L’objet de mappage de site qui représente la page actuellement demandée.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Notifies the file monitor of the Web.sitemap file that the <see cref="T:System.Web.XmlSiteMapProvider" /> object no longer requires the file to be monitored.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlSiteMapProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the file monitor of the Web.sitemap file that the <see cref="T:System.Web.XmlSiteMapProvider" /> object no longer requires the file to be monitored.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> la classe implémente le <xref:System.IDisposable.Dispose%2A> méthode de la <xref:System.IDisposable> interface à libérer son moniteur de fichier associé lorsque le fichier de mappage de site est déchargé de la mémoire. Cette surcharge de la <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode appelle la surcharge qui accepte un <xref:System.Boolean> paramètre et définit la valeur sur `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlSiteMapProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Notifies the file monitor of the Web.sitemap file that the <see cref="T:System.Web.XmlSiteMapProvider" /> object no longer requires the file to be monitored. The <see cref="M:System.Web.XmlSiteMapProvider.Dispose(System.Boolean)" /> method takes a Boolean parameter indicating whether the method is called by user code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.Dispose%2A> retourne de la méthode `true` si le <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode est appelée par le code utilisateur. Sinon, elle retourne `false`, si le <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode est appelée par le thread finaliseur pendant l’exécution.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IDisposable" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNode (string rawUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNode(string rawUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.FindSiteMapNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNode (rawUrl As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNode(System::String ^ rawUrl);" />
      <MemberSignature Language="F#" Value="override this.FindSiteMapNode : string -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.FindSiteMapNode rawUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawUrl">A URL that identifies the page for which to retrieve a <see cref="T:System.Web.SiteMapNode" />.</param>
        <summary>Retrieves a <see cref="T:System.Web.SiteMapNode" /> object that represents the page at the specified URL.</summary>
        <returns>A <see cref="T:System.Web.SiteMapNode" /> that represents the page identified by <paramref name="rawURL" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> objet remplacements le <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> pour s’assurer que tous les fournisseurs enfants liés sont recherchés pour le nœud si l’implémentation de la classe de base ne retourne pas d’un nœud pour l’URL spécifiée.  
  
 Le `rawUrl` paramètre doit être un chemin d’accès virtuel absolu ou un chemin d’accès relatif à l’application, en fonction de la façon dont il est spécifié dans le fichier de données de plan de site XML.  
  
 Le <xref:System.Web.XmlSiteMapProvider> classe et des classes qui en sont dérivés utilisent l’URL d’un <xref:System.Web.SiteMapNode> objet en tant que clé dans les différentes collections que la classe gère. Par conséquent, ces URL doivent être uniques dans la portée du plan du site. Si l’URL est introuvable dans les données de plan de site immédiates sont gérées par le <xref:System.Web.XmlSiteMapProvider>, il appelle le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> sur chaque fournisseur enfant qui lui est associé par le biais du `provider` attribut de ses nœuds de plan de site.  
  
 Le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> méthode appelle indirectement la <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode pour récupérer le nœud de niveau supérieur dans le plan du site. Par conséquent, toutes les exceptions qui se produisent pour les <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut également se produire lors de l’appel le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">A child provider linked to the current site map provider returned a node that is not valid.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNodeFromKey">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNodeFromKey (key As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNodeFromKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="override this.FindSiteMapNodeFromKey : string -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.FindSiteMapNodeFromKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A lookup key with which to search for a <see cref="T:System.Web.SiteMapNode" />.</param>
        <summary>Retrieves a <see cref="T:System.Web.SiteMapNode" /> object based on a specified key.</summary>
        <returns>A <see cref="T:System.Web.SiteMapNode" /> that represents the page identified by <paramref name="key" />; otherwise, <see langword="null" />, if security trimming is enabled and the node cannot be shown to the current user or the node is not found by <paramref name="key" /> in the node collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> substitue le <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> méthode pour garantir que tous fournisseurs enfants liés sont recherchés pour le nœud, si l’implémentation de la classe de base ne retourne pas d’un nœud pour `key`.  
  
 Le <xref:System.Web.XmlSiteMapProvider> les objets dérivés de la <xref:System.Web.StaticSiteMapProvider> classe et le fournisseur de plan de site par défaut pour ASP.NET, utilise le <xref:System.Web.SiteMapNode.Url%2A> propriété d’un <xref:System.Web.SiteMapNode> objet en tant que clé de recherche dans ses collections internes, par défaut. Si le <xref:System.Web.SiteMapNode.Url%2A> propriété de la <xref:System.Web.SiteMapNode> est défini, il doit être unique dans la portée du fournisseur. Si aucun <xref:System.Web.SiteMapNode.Url%2A> est spécifié, le <xref:System.Web.XmlSiteMapProvider> génère automatiquement un <xref:System.Web.SiteMapNode.Key%2A> pour suivre les nœuds.  
  
 Le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A> méthode peut appeler le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> (méthode) sur tous les fournisseurs enfants qui sont associées avec le fournisseur actuel. Par conséquent, les exceptions qui sont décrites dans le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut être levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">A child provider linked to the current site map provider returned a node that is not valid.</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.FindSiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName="GetChildNodes">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNodeCollection GetChildNodes(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildNodes (node As SiteMapNode) As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNodeCollection ^ GetChildNodes(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.GetChildNodes : System.Web.SiteMapNode -&gt; System.Web.SiteMapNodeCollection" Usage="xmlSiteMapProvider.GetChildNodes node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">The <see cref="T:System.Web.SiteMapNode" /> object to get child nodes from.</param>
        <summary>Returns the child nodes of the site map.</summary>
        <returns>A collection of site map nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode GetParentNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParentNode (node As SiteMapNode) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ GetParentNode(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.GetParentNode : System.Web.SiteMapNode -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.GetParentNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">The <see cref="T:System.Web.SiteMapNode" /> object to get the parent node from.</param>
        <summary>Returns the parent node of the site map.</summary>
        <returns>The parent node of the site map.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootNodeCore">
      <MemberSignature Language="C#" Value="protected internal override System.Web.SiteMapNode GetRootNodeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.SiteMapNode GetRootNodeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetRootNodeCore () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::SiteMapNode ^ GetRootNodeCore();" />
      <MemberSignature Language="F#" Value="override this.GetRootNodeCore : unit -&gt; System.Web.SiteMapNode" Usage="xmlSiteMapProvider.GetRootNodeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the top-level node of the current site map data structure.</summary>
        <returns>A <see cref="T:System.Web.SiteMapNode" /> that represents the top-level node in the current site map data structure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.GetRootNodeCore%2A> les appels de méthode le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode pour récupérer le nœud de niveau supérieur dans le plan du site. Par conséquent, toutes les exceptions qui se produisent pour les <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut également se produire lors de l’appel le <xref:System.Web.XmlSiteMapProvider.GetRootNodeCore%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.XmlSiteMapProvider.RootNode" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, attributes As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="xmlSiteMapProvider.Initialize (name, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The <see cref="T:System.Web.XmlSiteMapProvider" /> to initialize.</param>
        <param name="attributes">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that can contain additional attributes to help initialize <c>name</c>. These attributes are read from the <see cref="T:System.Web.XmlSiteMapProvider" /> configuration in the Web.config file.</param>
        <summary>Initializes the <see cref="T:System.Web.XmlSiteMapProvider" /> object. The <see cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method does not actually build a site map, it only prepares the state of the <see cref="T:System.Web.XmlSiteMapProvider" /> to do so.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> classe substitue héritées <xref:System.Web.XmlSiteMapProvider.Initialize%2A> méthode pour appliquer plusieurs attributs, tels que le `siteMapFile` et `description` des attributs, à le `attributes` collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Web.XmlSiteMapProvider> classe et l’initialiser pour générer un plan de site à partir de données XML.  
  
```csharp  
<%@ Page Language="c#" %>  
<SCRIPT runat="server">  
 private void Page_Load(object sender, System.EventArgs e) {  
     // Create an instance of the XmlSiteMapProvider class.  
     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  
     NameValueCollection providerAttributes = new NameValueCollection(1);  
     providerAttributes.Add("siteMapFile","test.sitemap");  
  
     // Initialize the provider with a provider name and file name.  
     testXmlProvider.Initialize("testProvider", providerAttributes);  
  
     // Call the BuildSiteMap to load the site map information into memory.  
     testXmlProvider.BuildSiteMap();  
  
     // Prints "/myvirtualdirectory/WebForm1.aspx"  
     Response.Write(testXmlProvider.RootNode.Url + "<BR>");  
  
     // Prints "/myvirtualdirectory/WebForm2.aspx"  
     Response.Write(testXmlProvider.CurrentNode.Url + "<BR>");  
 }  
 </SCRIPT>  
```  
  
 L’exemple de code précédent utilise un fichier XML qui se trouve dans la racine virtuelle de l’application ASP.NET. Le fichier a le format suivant :  
  
```  
<siteMap>  
  <siteMapNode title="RootNode" description="The root page." url="WebForm1.aspx">  
    <siteMapNode title="CurrentNode" description="Some sub page." url="WebForm2.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.XmlSiteMapProvider" /> is initialized more than once.</exception>
        <exception cref="T:System.Web.HttpException">A <see cref="T:System.Web.SiteMapNode" /> used a physical path to reference a site map file.  \- or -  An error occurred while attempting to parse the virtual path supplied for the <see langword="siteMapFile" /> attribute.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="protected internal override void RemoveNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemoveNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RemoveNode (node As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RemoveNode(System::Web::SiteMapNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.RemoveNode : System.Web.SiteMapNode -&gt; unit" Usage="xmlSiteMapProvider.RemoveNode node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">The node to remove from the node collections.</param>
        <summary>Removes the specified <see cref="T:System.Web.SiteMapNode" /> object from all node collections that are tracked by the provider.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="node" /> is the root node of the site map provider that owns it.  \- or -  <paramref name="node" /> is not managed by the provider or by a provider in the chain of parent providers for this provider.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> is <see langword="null" />.</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="protected virtual void RemoveProvider (string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveProvider(string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.RemoveProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveProvider (providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveProvider(System::String ^ providerName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProvider : string -&gt; unit&#xA;override this.RemoveProvider : string -&gt; unit" Usage="xmlSiteMapProvider.RemoveProvider providerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">The name of one of the <see cref="T:System.Web.SiteMapProvider" /> objects currently registered in the <see cref="P:System.Web.SiteMap.Providers" />.</param>
        <summary>Removes a linked child site map provider from the hierarchy for the current provider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.RemoveProvider%2A> supprime de la méthode `providerName` à partir de la hiérarchie pour le fournisseur actuel, y compris toutes les relations parent/enfant qui sont établies par le <xref:System.Web.XmlSiteMapProvider.AddProvider%2A> méthode entre les nœuds de plan de site du fournisseur actuel et du fournisseur supprimé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="providerName" /> cannot be resolved.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="providerName" /> is not a registered child provider of the current site map provider.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" /> is <see langword="null" />.</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode RootNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode RootNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.XmlSiteMapProvider.RootNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RootNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ RootNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNode : System.Web.SiteMapNode" Usage="System.Web.XmlSiteMapProvider.RootNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the root node of the site map.</summary>
        <value>Un <see cref="T:System.Web.SiteMapNode" /> qui représente le nœud racine du plan de site ; sinon, <see langword="null" />, si le filtrage de sécurité est activé et le nœud racine n’est pas accessible à l’utilisateur actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.RootNode%2A> propriété appelle le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode pour récupérer le nœud de niveau supérieur dans le plan du site. Par conséquent, toutes les exceptions qui se produisent pour les <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut également se produire lorsque vous accédez à la <xref:System.Web.XmlSiteMapProvider.RootNode%2A> propriété.  
  
 Le <xref:System.Web.SiteMapProvider> et <xref:System.Web.XmlSiteMapProvider> classes ne permettent qu’une seule racine <xref:System.Web.SiteMapNode> objet dans un plan de site. Le <xref:System.Web.XmlSiteMapProvider> classe substitue l’abstraite <xref:System.Web.SiteMapProvider.RootNode%2A?displayProperty=nameWithType> propriété et fournit une implémentation simple pour effectuer le suivi du nœud racine.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
        <altmember cref="P:System.Web.SiteMapProvider.RootNode" />
      </Docs>
    </Member>
  </Members>
</Type>