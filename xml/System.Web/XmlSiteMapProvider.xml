<Type Name="XmlSiteMapProvider" FullName="System.Web.XmlSiteMapProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ff13c4dbb6d82aa66a3d9bcd1c197e29f74734f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610793" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSiteMapProvider : System.Web.StaticSiteMapProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSiteMapProvider extends System.Web.StaticSiteMapProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.XmlSiteMapProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSiteMapProvider&#xA;Inherits StaticSiteMapProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSiteMapProvider : System::Web::StaticSiteMapProvider, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.StaticSiteMapProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>La classe <see cref="T:System.Web.XmlSiteMapProvider" /> est dérivée de la classe <see cref="T:System.Web.SiteMapProvider" /> et est le fournisseur de plan de site par défaut pour ASP.NET. La classe <see cref="T:System.Web.XmlSiteMapProvider" /> génère des arborescences de plans de site à partir de fichiers XML avec l'extension de nom de fichier .sitemap.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.XmlSiteMapProvider> classe charge les données de plan de site à partir d’un fichier XML qui suit un schéma connu. Les données de plan de site sont limitées par `<siteMap>` balises et se compose d’imbriquée `<siteMapNode>` balises. Deux contraintes sont imposées par le <xref:System.Web.SiteMapProvider> et <xref:System.Web.XmlSiteMapProvider> classes sur la structure du site de mappent des données :  
  
-   Qu’un seul nœud peut exister.  
  
-   Pour <xref:System.Web.SiteMapNode> objets qui spécifient des URL, l’URL doit être unique dans la portée du fournisseur. (Pour les nœuds qui ne spécifient pas d’URL, toutes les clés doivent être uniques).  
  
 L’exemple de code suivant montre un exemple d’un fichier XML qui peut être utilisé avec le <xref:System.Web.XmlSiteMapProvider>.  
  
```  
<siteMap>  
  <siteMapNode title="RootNode" description="This is the root node of the site map. There can be only one root node." url="Page1.aspx" >  
    <siteMapNode title="ChildofRootNode" description="Descriptions do not have to be unique." url="Page2.aspx">  
      <siteMapNode title="ChildOfChildNode" description="SiteMapNode objects can be nested to any level." url="Page3.aspx"/>  
    </siteMapNode>  
    <siteMapNode title="ChildofRootNode" description="Descriptions do not have to be unique." url="Page4.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 Le <xref:System.Web.XmlSiteMapProvider> est le fournisseur par défaut pour ASP.NET et lit les données XML à partir d’un fichier nommé Web.sitemap qui se trouve dans la structure de répertoires de l’application ASP.NET. Par défaut, le fichier Web.sitemap se trouve à la racine de l’application ; Toutefois, si vous souhaitez modifier le nom ou l’emplacement du fichier à partir de laquelle le <xref:System.Web.XmlSiteMapProvider> charge les données, vous pouvez remplacer la configuration par défaut dans votre fichier Web.config. En substituant les paramètres de configuration par défaut dans votre fichier Web.config, vous pouvez personnaliser le comportement de la <xref:System.Web.XmlSiteMapProvider> pour chaque application ASP.NET, si nécessaire.  
  
 L’exemple de code suivant montre un exemple de fichier Web.config, où le <xref:System.Web.XmlSiteMapProvider> est encore utilisé, mais un autre fichier de mappage de site est utilisé. Étant donné que tous les fournisseurs dans un <xref:System.Web.SiteMapProviderCollection> objet doit être nommé de manière unique, celui qui est spécifié dans le fichier Web.config utilise un nom différent de la valeur par défaut, mais est également défini en tant que le fournisseur par défaut afin qu’il sera utilisé à la place de la <xref:System.Web.XmlSiteMapProvider> qui est spécifié dans th configuration de ASP.NET e par défaut.  
  
> [!NOTE]
>  Vous pouvez modifier le nom du fichier de données de navigation de site, mais vous ne pouvez pas modifier son extension. Le <xref:System.Web.XmlSiteMapProvider> lit uniquement les données à partir de fichiers qui sont nommées avec l’extension de nom de fichier .sitemap.  
  
```  
<siteMap defaultProvider="MyXmlSiteMapProvider" enabled="true">  
  <providers>  
    <add name="MyXmlSiteMapProvider"  
      description="SiteMap provider that reads in .sitemap files."  
      type="System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"  
      siteMapFile="CustomWeb.sitemap" />  
  </providers>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.StaticSiteMapProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSiteMapProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSiteMapProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crée une nouvelle instance sans nom de la classe <see cref="T:System.Web.XmlSiteMapProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="protected internal override void AddNode (System.Web.SiteMapNode node, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddNode(class System.Web.SiteMapNode node, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.AddNode(System.Web.SiteMapNode,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddNode (node As SiteMapNode, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddNode(System::Web::SiteMapNode ^ node, System::Web::SiteMapNode ^ parentNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <see cref="T:System.Web.SiteMapNode" /> à ajouter au fournisseur.</param>
        <param name="parentNode">
          <see cref="T:System.Web.SiteMapNode" /> sous lequel ajouter le <c>nœud</c>.</param>
        <summary>Ajoute un objet <see cref="T:System.Web.SiteMapNode" /> aux collections gérées par le fournisseur actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `node` paramètre est ajouté à une collection interne, et une relation parent/enfant est créée entre celui-ci et `parentNode`.  
  
 Le <xref:System.Web.XmlSiteMapProvider> classe, dérivée de la <xref:System.Web.StaticSiteMapProvider> classe et le fournisseur de plan de site par défaut pour ASP.NET, utilise le <xref:System.Web.SiteMapNode.Url%2A> propriété d’un <xref:System.Web.SiteMapNode> objet en tant que clé de recherche dans ses collections internes, par défaut. Si le <xref:System.Web.SiteMapNode.Url%2A> propriété de la <xref:System.Web.SiteMapNode> est définie, elle doit être unique dans la portée du fournisseur. Le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> méthode tente de récupérer des nœuds en fonction de leur <xref:System.Web.SiteMapNode.Url%2A>. Sinon, vous pouvez utiliser la <xref:System.Web.SiteMapNode.Key%2A> propriété et correspondants <xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A> (méthode), pour extraire des nœuds.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> ou <paramref name="parentNode" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le <see cref="T:System.Web.XmlSiteMapProvider" /> en cours n'est pas le fournisseur associé à <paramref name="node" />.</exception>
        <exception cref="T:System.InvalidOperationException">Un nœud avec la même URL ou clé est déjà enregistré avec le <see cref="T:System.Web.XmlSiteMapProvider" />. ou  
  
 Un nœud de plan de site en double a été rencontré par programme, comme cela est le cas lors de la liaison de deux fournisseurs de plan de site.  
  
 \- ou -  
  
 <paramref name="node" /> est le nœud racine de <see cref="T:System.Web.XmlSiteMapProvider" />.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="protected virtual void AddProvider (string providerName, System.Web.SiteMapNode parentNode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddProvider(string providerName, class System.Web.SiteMapNode parentNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.AddProvider(System.String,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddProvider (providerName As String, parentNode As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddProvider(System::String ^ providerName, System::Web::SiteMapNode ^ parentNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="parentNode" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="providerName">Nom de l'un des objets <see cref="T:System.Web.SiteMapProvider" /> actuellement inscrits dans les <see cref="P:System.Web.SiteMap.Providers" />.</param>
        <param name="parentNode">Nœud de plan de site du fournisseur de plan de site actuel sous lequel le nœud racine et tous les nœuds du fournisseur enfant sont ajoutés.</param>
        <summary>Lie un fournisseur de plan de site enfant au fournisseur actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.AddProvider%2A> liens de la méthode `providerName` pour le fournisseur actuel en tant qu’enfant du fournisseur actuel. Le nœud racine de `providerName` est ajouté à la hiérarchie pour le fournisseur actuel en tant que nœud enfant de `parentNode`. Étant donné que le fournisseur parent appelle la <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode sur `providerName`, les exceptions qui sont décrites dans le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut être levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Web.SiteMapNode.Provider" /> de <paramref name="parentNode" /> ne référence pas le fournisseur actuel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentNode" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="providerName" /> ne peut pas être résolu.</exception>
        <exception cref="T:System.InvalidOperationException">Le fichier de plan de site utilisé par <paramref name="providerName" /> est déjà utilisé dans la hiérarchie du fournisseur.  
  
 - ou -  
  
 Le nœud racine retourné par <paramref name="providerName" /> est <see langword="null" />.  
  
 - ou -  
  
 Le nœud racine retourné par <paramref name="providerName" /> possède une URL ou une clé qui est déjà inscrite auprès du <see cref="T:System.Web.XmlSiteMapProvider" /> parent.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.RemoveProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BuildSiteMap">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode BuildSiteMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode BuildSiteMap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildSiteMap () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ BuildSiteMap();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Charge les informations de plan de site à partir d'un fichier XML et les génère en mémoire.</summary>
        <returns>Retourne le <see cref="T:System.Web.SiteMapNode" /> racine de la structure de navigation de plan de site.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode est appelée pour charger et générer le plan de site à partir d’un stockage persistant.  
  
 Le comportement par défaut lors de la suppression de la sécurité est activée, consultez la section « Notes » dans <xref:System.Web.SiteMapProvider.IsAccessibleToUser%2A>.  
  
 Après le <xref:System.Web.XmlSiteMapProvider> objet analyse et charge les données de plan de site, tous chargées <xref:System.Web.SiteMapNode> objets et <xref:System.Web.SiteMapNodeCollection> collections sont en lecture seule. Lorsque le <xref:System.Web.XmlSiteMapProvider> analyse le <xref:System.Web.SiteMapNode.Url%2A> propriété à partir d’un fichier de mappage de site, il convertit des URL relatives à l’application, ainsi que les URL relatives, les chemins d’accès virtuels absolu de l’application.  
  
 Le <xref:System.Web.XmlSiteMapProvider> s’abonne aux notifications de modification de fichier pour le fichier .sitemap. Si une modification est apportée au fichier .sitemap, le <xref:System.Web.XmlSiteMapProvider> est rechargé, et la structure de plan de site est reconstruite.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Web.XmlSiteMapProvider> classe et l’initialiser pour générer un plan de site à partir des données XML.  
  
```csharp  
<%@ Page Language="c#" %>  
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">  
 <SCRIPT runat="server">  
 private void Page_Load(object sender, System.EventArgs e)  
 {  
     // Create an instance of the XmlSiteMapProvider class.  
     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  
     NameValueCollection providerAttributes = new NameValueCollection(1);  
     providerAttributes.Add("siteMapFile","test.sitemap");  
     // Initialize the provider with a provider name and file name.  
     testXmlProvider.Initialize("testProvider", providerAttributes);  
  
     // The BuildSiteMap method is implicitly called when the   
     // RootNode propety is accessed.  
  
     // Prints "/myvirtualdirectory/WebForm1.aspx"  
     Response.Write(testXmlProvider.RootNode.Url + "<BR>");  
     // Prints "/myvirtualdirectory/WebForm2.aspx"  
     Response.Write(testXmlProvider.CurrentNode.Url + "<BR>");  
 }  
```  
  
 L’exemple de code précédent utilise un fichier XML qui se trouve dans la racine virtuelle de l’application ASP.NET. Le fichier a le format suivant :  
  
```  
<siteMap>  
     <siteMapNode title="RootNode" description="The root page." url="WebForm1.aspx">  
         <siteMapNode title="CurrentNode" description="Some sub page." url="WebForm2.aspx"/>  
     </siteMapNode>  
 </siteMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Web.XmlSiteMapProvider" /> n'a pas été initialisé correctement.  
  
 \- ou -  
  
 Un <see langword="siteMapFile" /> est analysé pour un <see langword="&lt;siteMapNode&gt;" /> qui n'est pas unique.  
  
 \- ou -  
  
 Le fichier spécifié par le <see langword="siteMapFile" /> ne possède pas l'extension de nom de fichier .sitemap.  
  
 \- ou -  
  
 Le fichier spécifié par le <see langword="siteMapFile" /> n'existe pas.  
  
 \- ou -  
  
 Un fournisseur configuré dans le <see langword="provider" /> d'un <see langword="&lt;siteMapNode&gt;" /> retourne un nœud racine null.</exception>
        <exception cref="T:System.ArgumentException">Le <see langword="siteMapFile" /> est spécifié mais le chemin d'accès se situe en dehors de la structure de répertoire actif pour l'application.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Une erreur se produit lors du chargement du fichier de configuration.  
  
 \- ou -  
  
 L'élément supérieur du fichier de configuration n'est pas <see langword="named &lt;siteMap&gt;" />.  
  
 \- ou -  
  
 Plusieurs nœuds supérieurs existent dans le fichier de configuration.  
  
 \- ou -  
  
 Un enfant du <see langword="&lt;siteMap&gt;" /> n'est pas nommé <see langword="&lt;siteMapNode&gt;" />.  
  
 \- ou -  
  
 Un attribut inattendu est analysé pour le <see langword="&lt;siteMapNode&gt;" />.  
  
 \- ou -  
  
 Des sous-éléments sont imbriqués sous un <see langword="&lt;siteMapNode&gt;" /> où le <see langword="provider" /> est défini.  
  
 \- ou -  
  
 Les <see langword="roles" /> du <see langword="&lt;siteMapNode&gt;" /> contiennent des caractères qui ne sont pas valides.  
  
 \- ou -  
  
 Un <see langword="url" /> est analysé pour un <see langword="&lt;siteMapNode&gt;" /> qui n'est pas unique.  
  
 \- ou -  
  
 Un <see cref="T:System.Web.SiteMapNode" /> a été rencontré avec une valeur en double pour <see cref="P:System.Web.SiteMapNode.Key" />.  
  
 \- ou -  
  
 Le <see cref="P:System.Web.SiteMapNode.ResourceKey" /> ou <see cref="P:System.Web.SiteMapNode.Title" /> a été spécifié sur un <see cref="T:System.Web.SiteMapNode" /> ou un attribut <see langword="custom" /> défini pour le nœud contenait une expression de ressource explicite.  
  
 \- ou -  
  
 Une expression de ressource explicite a été appliquée au <see cref="P:System.Web.SiteMapNode.Title" /> ou <see cref="P:System.Web.SiteMapNode.Description" /> ou à un attribut <see langword="custom" /> d'un <see cref="T:System.Web.SiteMapNode" />, mais les informations explicites n'étaient pas valides.  
  
 \- ou -  
  
 Une erreur s'est produite lors de l'analyse de <see cref="P:System.Web.SiteMapNode.Url" /> d'un <see cref="T:System.Web.SiteMapNode" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Un fournisseur nommé est introuvable dans la collection des fournisseurs de plan de site en cours.</exception>
        <exception cref="T:System.ArgumentNullException">Un <see langword="&lt;siteMapNode&gt;" /> référençant un fichier de plan de site contient une chaîne vide pour le <see langword="siteMapFile" />.</exception>
        <exception cref="T:System.Web.HttpException">Un <see langword="siteMapFile" /> d'un <see langword="&lt;siteMapNode&gt;" /> utilise un chemin d'accès physique.  
  
 \- ou -  
  
 Une erreur s'est produite lors de la tentative d'analyse du chemin d'accès virtuel du fichier spécifié dans le <see langword="siteMapFile" />.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les éléments dans les collections de nœuds de plan de site enfants et parents et les fournisseurs de plan de site dont l'objet <see cref="T:System.Web.XmlSiteMapProvider" /> effectue le suivi en interne dans le cadre de son état.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> classe substitue la <xref:System.Web.XmlSiteMapProvider.Clear%2A> méthode pour fournir un nettoyage supplémentaire de l’état base <xref:System.Web.StaticSiteMapProvider.Clear%2A?displayProperty=nameWithType> implémentation, y compris l’effacement son fournisseur enfant de suivi et la <xref:System.Web.XmlSiteMapProvider.RootNode%2A> propriété mécanismes de suivi.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="CurrentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode CurrentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode CurrentNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.XmlSiteMapProvider.CurrentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ CurrentNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.SiteMapNode" /> qui représente la page actuellement demandée.</summary>
        <value>Objet de plan de site qui représente la page actuellement demandée.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Avertit le programme de contrôle de fichiers du fichier Web.sitemap que l'objet <see cref="T:System.Web.XmlSiteMapProvider" /> ne requiert plus le contrôle du fichier.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avertit le programme de contrôle de fichiers du fichier Web.sitemap que l'objet <see cref="T:System.Web.XmlSiteMapProvider" /> ne requiert plus le contrôle du fichier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> la classe implémente le <xref:System.IDisposable.Dispose%2A> méthode de la <xref:System.IDisposable> interface à libérer son analyse de fichier associé lorsque le fichier de mappage de site est déchargé de la mémoire. Cette surcharge de la <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode appelle la surcharge qui accepte un <xref:System.Boolean> paramètre et définit la valeur `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Avertit le programme de contrôle de fichiers du fichier Web.sitemap que l'objet <see cref="T:System.Web.XmlSiteMapProvider" /> ne requiert plus le contrôle du fichier. La méthode <see cref="M:System.Web.XmlSiteMapProvider.Dispose(System.Boolean)" /> accepte un paramètre Boolean qui indique si la méthode est appelée par du code utilisateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode retourne `true` si le <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode est appelée par le code utilisateur. Sinon, elle retourne `false`, si le <xref:System.Web.XmlSiteMapProvider.Dispose%2A> méthode est appelée par le thread finaliseur pendant l’exécution.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IDisposable" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNode (string rawUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNode(string rawUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.FindSiteMapNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNode (rawUrl As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNode(System::String ^ rawUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawUrl">URL qui identifie la page à laquelle récupérer un <see cref="T:System.Web.SiteMapNode" />.</param>
        <summary>Récupère un objet <see cref="T:System.Web.SiteMapNode" /> qui représente la page à l'URL spécifiée.</summary>
        <returns>
          <see cref="T:System.Web.SiteMapNode" /> qui représente la page identifiée par <paramref name="rawURL" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> objet remplacements le <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> pour s’assurer que tous les fournisseurs enfants liés sont recherchés pour le nœud si l’implémentation de la classe de base ne retourne pas d’un nœud pour l’URL spécifiée.  
  
 Le `rawUrl` paramètre doit être un chemin d’accès virtuel absolu ou un chemin d’accès relatif à l’application, selon la façon dont il est spécifié dans le fichier de données de plan de site XML.  
  
 Le <xref:System.Web.XmlSiteMapProvider> classe et des classes qui en dérivent utilisent l’URL d’un <xref:System.Web.SiteMapNode> objet en tant que clé dans les différentes collections que la classe gère. Par conséquent, ces URL doivent être uniques dans la portée du plan de site. Si l’URL n’est pas trouvé dans les données de plan de site immédiates qui sont gérées par le <xref:System.Web.XmlSiteMapProvider>, il appelle la <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> sur chaque fournisseur enfant qui y est lié via le `provider` attribut de ses nœuds.  
  
 Le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> méthode appelle indirectement la <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode pour récupérer le nœud de niveau supérieur dans le plan de site. Par conséquent, toutes les exceptions qui se produisent pour les <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut également se produire lors de l’appel du <xref:System.Web.XmlSiteMapProvider.FindSiteMapNode%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Un fournisseur enfant lié au fournisseur de plan de site en cours a retourné un nœud qui n'est pas valide.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="FindSiteMapNodeFromKey">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode FindSiteMapNodeFromKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode FindSiteMapNodeFromKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindSiteMapNodeFromKey (key As String) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ FindSiteMapNodeFromKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Clé de recherche à utiliser pour rechercher un <see cref="T:System.Web.SiteMapNode" />.</param>
        <summary>Récupère un objet <see cref="T:System.Web.SiteMapNode" /> selon une clé spécifiée.</summary>
        <returns>
          <see cref="T:System.Web.SiteMapNode" /> qui représente la page identifiée par <paramref name="key" /> ; sinon, <see langword="null" />, si l'ajustement de la sécurité est activé et que le nœud ne peut pas être présenté à l'utilisateur actuel ou si <paramref name="key" /> ne parvient pas à trouver le nœud dans la collection de nœuds.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> substitue le <xref:System.Web.StaticSiteMapProvider.FindSiteMapNodeFromKey%2A> pour s’assurer que tous les fournisseurs enfants liés sont recherchés pour le nœud, si l’implémentation de la classe de base ne retourne pas d’un nœud pour `key`.  
  
 Le <xref:System.Web.XmlSiteMapProvider> les objets dérivés de la <xref:System.Web.StaticSiteMapProvider> classe et le fournisseur de plan de site par défaut pour ASP.NET, utilise le <xref:System.Web.SiteMapNode.Url%2A> propriété d’un <xref:System.Web.SiteMapNode> objet en tant que clé de recherche dans ses collections internes, par défaut. Si le <xref:System.Web.SiteMapNode.Url%2A> propriété de la <xref:System.Web.SiteMapNode> est définie, elle doit être unique dans la portée du fournisseur. Si aucun <xref:System.Web.SiteMapNode.Url%2A> est spécifié, le <xref:System.Web.XmlSiteMapProvider> génère automatiquement un <xref:System.Web.SiteMapNode.Key%2A> pour suivre les nœuds.  
  
 Le <xref:System.Web.XmlSiteMapProvider.FindSiteMapNodeFromKey%2A> méthode peut appeler le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode sur tous les fournisseurs enfants qui sont associées avec le fournisseur actuel. Par conséquent, les exceptions qui sont décrites dans le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut être levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Un fournisseur enfant lié au fournisseur de plan de site en cours a retourné un nœud qui n'est pas valide.</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.FindSiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName="GetChildNodes">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNodeCollection GetChildNodes (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNodeCollection GetChildNodes(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildNodes (node As SiteMapNode) As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNodeCollection ^ GetChildNodes(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">Objet <see cref="T:System.Web.SiteMapNode" /> duquel obtenir les nœuds enfants.</param>
        <summary>Retourne les nœuds enfants du plan de site.</summary>
        <returns>Collection de nœuds de plan de site.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode GetParentNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.SiteMapNode GetParentNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetParentNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParentNode (node As SiteMapNode) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::SiteMapNode ^ GetParentNode(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">Objet <see cref="T:System.Web.SiteMapNode" /> à partir duquel extraire le nœud parent.</param>
        <summary>Retourne le nœud parent du plan de site.</summary>
        <returns>Nœud parent du plan du site.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootNodeCore">
      <MemberSignature Language="C#" Value="protected internal override System.Web.SiteMapNode GetRootNodeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.SiteMapNode GetRootNodeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetRootNodeCore () As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::SiteMapNode ^ GetRootNodeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le nœud de haut niveau de la structure de données du plan de site en cours.</summary>
        <returns>Un <see cref="T:System.Web.SiteMapNode" /> qui représente le nœud de haut niveau dans la structure de données du plan de site en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.GetRootNodeCore%2A> les appels de méthode le <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> pour récupérer le nœud de niveau supérieur dans le plan de site. Par conséquent, toutes les exceptions qui se produisent pour les <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut également se produire lors de l’appel du <xref:System.Web.XmlSiteMapProvider.GetRootNodeCore%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.XmlSiteMapProvider.RootNode" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, attributes As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Objet <see cref="T:System.Web.XmlSiteMapProvider" /> à initialiser.</param>
        <param name="attributes">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> qui peut contenir des attributs supplémentaires contribuant à initialiser <c>name</c>. Ces attributs sont lus à partir de la configuration <see cref="T:System.Web.XmlSiteMapProvider" /> dans le fichier Web.config.</param>
        <summary>Initialise l'objet <see cref="T:System.Web.XmlSiteMapProvider" />. La méthode <see cref="M:System.Web.XmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> ne génère pas réellement de plan de site ; elle prépare seulement l'état de <see cref="T:System.Web.XmlSiteMapProvider" /> à cette fin.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider> classe substitue hérité <xref:System.Web.XmlSiteMapProvider.Initialize%2A> méthode pour appliquer plusieurs attributs, tels que le `siteMapFile` et `description` des attributs, à le `attributes` collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Web.XmlSiteMapProvider> classe et l’initialiser pour générer un plan de site à partir des données XML.  
  
```csharp  
<%@ Page Language="c#" %>  
<SCRIPT runat="server">  
 private void Page_Load(object sender, System.EventArgs e) {  
     // Create an instance of the XmlSiteMapProvider class.  
     XmlSiteMapProvider testXmlProvider = new XmlSiteMapProvider();  
     NameValueCollection providerAttributes = new NameValueCollection(1);  
     providerAttributes.Add("siteMapFile","test.sitemap");  
  
     // Initialize the provider with a provider name and file name.  
     testXmlProvider.Initialize("testProvider", providerAttributes);  
  
     // Call the BuildSiteMap to load the site map information into memory.  
     testXmlProvider.BuildSiteMap();  
  
     // Prints "/myvirtualdirectory/WebForm1.aspx"  
     Response.Write(testXmlProvider.RootNode.Url + "<BR>");  
  
     // Prints "/myvirtualdirectory/WebForm2.aspx"  
     Response.Write(testXmlProvider.CurrentNode.Url + "<BR>");  
 }  
 </SCRIPT>  
```  
  
 L’exemple de code précédent utilise un fichier XML qui se trouve dans la racine virtuelle de l’application ASP.NET. Le fichier a le format suivant :  
  
```  
<siteMap>  
  <siteMapNode title="RootNode" description="The root page." url="WebForm1.aspx">  
    <siteMapNode title="CurrentNode" description="Some sub page." url="WebForm2.aspx"/>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Web.XmlSiteMapProvider" /> est initialisé plusieurs fois.</exception>
        <exception cref="T:System.Web.HttpException">Un <see cref="T:System.Web.SiteMapNode" /> a utilisé un chemin d'accès physique pour référencer un fichier de plan de site.  
  
 \- ou -  
  
 Une erreur s'est produite lors de la tentative d'analyse du chemin d'accès virtuel fourni pour l'attribut <see langword="siteMapFile" />.</exception>
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="protected internal override void RemoveNode (System.Web.SiteMapNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemoveNode(class System.Web.SiteMapNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.RemoveNode(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RemoveNode (node As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RemoveNode(System::Web::SiteMapNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="node">Nœud à supprimer de la collection de nœuds.</param>
        <summary>Supprime l'objet <see cref="T:System.Web.SiteMapNode" /> spécifié de toutes les collections de nœuds suivies par le fournisseur.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="node" /> est le nœud racine du fournisseur de plan de site à qui il appartient.  
  
 \- ou -  
  
 <paramref name="node" /> n'est pas géré par le fournisseur ni par un fournisseur appartenant à la chaîne de fournisseurs parents de ce fournisseur.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="node" /> est <see langword="null" />.</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="protected virtual void RemoveProvider (string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveProvider(string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.XmlSiteMapProvider.RemoveProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveProvider (providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveProvider(System::String ^ providerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nom de l'un des objets <see cref="T:System.Web.SiteMapProvider" /> actuellement inscrits dans les <see cref="P:System.Web.SiteMap.Providers" />.</param>
        <summary>Supprime un fournisseur de plan de site enfant lié de la hiérarchie pour le fournisseur actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.RemoveProvider%2A> supprime de la méthode `providerName` à partir de la hiérarchie pour le fournisseur actuel, y compris toutes les relations parent/enfant qui sont établies par le <xref:System.Web.XmlSiteMapProvider.AddProvider%2A> méthode entre les nœuds de plan de site du fournisseur actuel et du fournisseur supprimé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="providerName" /> ne peut pas être résolu.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="providerName" /> n'est pas un fournisseur enfant inscrit du fournisseur de plan de site actuel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerName" /> est <see langword="null" />.</exception>
        <altmember cref="Overload:System.Web.XmlSiteMapProvider.AddNode" />
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public override System.Web.SiteMapNode RootNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode RootNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.XmlSiteMapProvider.RootNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RootNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ RootNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nœud racine du plan de site.</summary>
        <value>
          <see cref="T:System.Web.SiteMapNode" /> qui représente le nœud racine du plan de site ; sinon, <see langword="null" />, si l'ajustement de la sécurité est activé et que le nœud racine n'est pas accessible à l'utilisateur en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.XmlSiteMapProvider.RootNode%2A> propriété appelle la <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode pour récupérer le nœud de niveau supérieur dans le plan de site. Par conséquent, toutes les exceptions qui se produisent pour les <xref:System.Web.XmlSiteMapProvider.BuildSiteMap%2A> méthode peut également se produire lors de l’accès le <xref:System.Web.XmlSiteMapProvider.RootNode%2A> propriété.  
  
 Le <xref:System.Web.SiteMapProvider> et <xref:System.Web.XmlSiteMapProvider> classes ne permettent qu’une seule racine <xref:System.Web.SiteMapNode> objet dans un plan de site. Le <xref:System.Web.XmlSiteMapProvider> classe substitue abstraite <xref:System.Web.SiteMapProvider.RootNode%2A?displayProperty=nameWithType> propriété et fournit une implémentation simple pour effectuer le suivi du nœud racine.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.XmlSiteMapProvider.GetRootNodeCore" />
        <altmember cref="M:System.Web.XmlSiteMapProvider.BuildSiteMap" />
        <altmember cref="P:System.Web.SiteMapProvider.RootNode" />
      </Docs>
    </Member>
  </Members>
</Type>