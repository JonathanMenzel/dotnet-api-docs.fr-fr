<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2c352df1b28f38f0a3b065d4d267aae07a567d2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39761034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <TypeSignature Language="F#" Value="type HttpCookie = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ab7da-101">Fournit une manière sécurisée de créer et de manipuler des cookies HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab7da-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7da-102">Le <xref:System.Web.HttpCookie> classe obtient et définit les propriétés de cookies individuels.</span><span class="sxs-lookup"><span data-stu-id="ab7da-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="ab7da-103">Le <xref:System.Web.HttpCookieCollection> classe fournit des méthodes pour stocker, récupérer et gérer plusieurs cookies.</span><span class="sxs-lookup"><span data-stu-id="ab7da-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="ab7da-104">ASP.NET inclut deux collections de cookies intrinsèque.</span><span class="sxs-lookup"><span data-stu-id="ab7da-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="ab7da-105">La collection accédée via la <xref:System.Web.HttpRequest.Cookies%2A> collection de la <xref:System.Web.HttpRequest> objet contient des cookies transmis par le client au serveur dans le `Cookie` en-tête.</span><span class="sxs-lookup"><span data-stu-id="ab7da-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="ab7da-106">La collection accédée via la <xref:System.Web.HttpResponse.Cookies%2A> collection de la <xref:System.Web.HttpResponse> objet contient les nouveaux cookies créés sur le serveur et transmis au client dans le `Set-Cookie` en-tête de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="ab7da-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7da-107">L’exemple de code suivant montre comment rechercher un cookie nommé `DateCookieExample` dans le <xref:System.Web.HttpRequest> objet.</span><span class="sxs-lookup"><span data-stu-id="ab7da-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="ab7da-108">Si le cookie est introuvable, il est créé et ajouté à la <xref:System.Web.HttpResponse> objet.</span><span class="sxs-lookup"><span data-stu-id="ab7da-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="ab7da-109">Le cookie est configuré pour expirer dans 10 minutes.</span><span class="sxs-lookup"><span data-stu-id="ab7da-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-110">Initialise une nouvelle instance de la classe <see cref="T:System.Web.HttpCookie" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ab7da-111">Nom du nouveau cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-111">The name of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7da-112">Crée et nomme un nouveau cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-112">Creates and names a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-113">L’exemple de code suivant crée et nomme un nouveau cookie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string * string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ab7da-114">Nom du nouveau cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-114">The name of the new cookie.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ab7da-115">Valeur du nouveau cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-115">The value of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7da-116">Crée et nomme un nouveau cookie et lui assigne une valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-116">Creates, names, and assigns a value to a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-117">L’exemple de code suivant crée et nomme et définit la valeur d’un nouveau cookie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.HttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-118">Obtient ou définit le domaine auquel associer le cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-118">Gets or sets the domain to associate the cookie with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-119">Nom du domaine auquel associer le cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-119">The name of the domain to associate the cookie with.</span>
          </span>
          <span data-ttu-id="ab7da-120">La valeur par défaut est le domaine en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-120">The default value is the current domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7da-121">Définition de la `Domain` attribut limite la transmission du cookie aux clients qui demandent une ressource à partir de ce domaine.</span><span class="sxs-lookup"><span data-stu-id="ab7da-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7da-122">L’exemple de code suivant définit le domaine du cookie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : DateTime with get, set" Usage="System.Web.HttpCookie.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-123">Obtient ou définit la date et l'heure d'expiration du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-123">Gets or sets the expiration date and time for the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-124">Heure (sur le client) à laquelle le cookie expire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-124">The time of day (on the client) at which the cookie expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-125">L’exemple de code suivant définit le délai d’expiration du cookie à 10 minutes de l’heure actuelle.</span><span class="sxs-lookup"><span data-stu-id="ab7da-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeys : bool" Usage="System.Web.HttpCookie.HasKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-126">Obtient une valeur indiquant si un cookie possède des sous-clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-126">Gets a value indicating whether a cookie has subkeys.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-127">
            <see langword="true" /> si le cookie possède des sous-clés ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-127">
              <see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7da-128">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-129">L’exemple de code suivant examine chaque membre d’une collection de cookies pour plusieurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="ab7da-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="ab7da-130">Si un cookie <xref:System.Web.HttpCookie.HasKeys%2A> propriété est `true`, indiquant que plusieurs valeurs sont présentes, cet exemple copie les noms de valeurs dans un tableau de chaînes et les valeurs correspondantes dans un autre tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="ab7da-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="ab7da-131">Pour obtenir un exemple montrant comment créer plusieurs valeurs pour un cookie, consultez <xref:System.Web.HttpCookie.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab7da-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpOnly : bool with get, set" Usage="System.Web.HttpCookie.HttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-132">Obtient ou définit une valeur qui spécifie si un cookie est accessible par un script côté client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-133">
            <see langword="true" /> si le cookie a l'attribut <see langword="HttpOnly" /> et n'est pas accessible à l'aide d'un script côté client ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-133">
              <see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7da-134">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7da-135">Version de Microsoft Internet Explorer 6 Service Pack 1 et versions ultérieures prend en charge une propriété de cookie, <xref:System.Web.HttpCookie.HttpOnly%2A>, qui permet d’atténuer les menaces de script entre sites qui génèrent des cookies volés.</span><span class="sxs-lookup"><span data-stu-id="ab7da-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="ab7da-136">Les cookies volés peuvent contenir des informations sensibles identifiant l’utilisateur vers le site, telles que l’ASP.NET session ID ou des formulaires ticket d’authentification et peuvent être relues par l’attaquant afin d’usurper l’identité de l’utilisateur ou d’obtenir des informations sensibles.</span><span class="sxs-lookup"><span data-stu-id="ab7da-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="ab7da-137">Quand un `HttpOnly` cookie est reçu par un navigateur compatible, il n’est pas accessible à un script côté client.</span><span class="sxs-lookup"><span data-stu-id="ab7da-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7da-138">Définition de la <xref:System.Web.HttpCookie.HttpOnly%2A> propriété `true` n’empêche pas un pirate ayant accès au canal de réseau d’accéder directement au cookie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="ab7da-139">Envisagez d’utiliser Secure Sockets Layer (SSL) pour vous protéger contre cela.</span><span class="sxs-lookup"><span data-stu-id="ab7da-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="ab7da-140">Sécurité de la station de travail est également importante, comme un utilisateur malveillant peut utiliser une fenêtre de navigateur ouvert ou sur un ordinateur contenant les cookies persistants pour obtenir l’accès à un site Web avec l’identité d’un utilisateur légitime.</span><span class="sxs-lookup"><span data-stu-id="ab7da-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="ab7da-141">Pour plus d’informations sur les attaques possibles et comment cette propriété peut aider à les atténuer, consultez [Mitigating Cross-site Scripting With Cookies HTTP uniquement](http://go.microsoft.com/fwlink/?LinkId=41580).</span><span class="sxs-lookup"><span data-stu-id="ab7da-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7da-142">L’exemple de code suivant montre comment écrire un `HttpOnly` cookie et montre comment il n’est pas accessible par le client via ECMAScript.</span><span class="sxs-lookup"><span data-stu-id="ab7da-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.HttpCookie.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ab7da-143">Clé (index) de la valeur du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-143">The key (index) of the cookie value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7da-144">Obtient une référence à la propriété <see cref="P:System.Web.HttpCookie.Values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span>
          </span>
          <span data-ttu-id="ab7da-145">Cette propriété est fournie pour des raisons de compatibilité avec les versions précédentes de ASP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-146">Valeur du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-146">The cookie value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.HttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-147">Obtient ou définit le nom d'un cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-147">Gets or sets the name of a cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-148">La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic),  sauf indication contraire dans le constructeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-149">L’exemple de code suivant reçoit une collection de cookies du client dans le `Cookie` en-tête et effectue une boucle sur la collection que vous recherchez un cookie portant le nom spécifique.</span><span class="sxs-lookup"><span data-stu-id="ab7da-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.HttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-150">Obtient ou définit le chemin d'accès virtuel à transmettre avec le cookie en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-150">Gets or sets the virtual path to transmit with the current cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-151">Chemin d'accès virtuel à transmettre avec le cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-151">The virtual path to transmit with the cookie.</span>
          </span>
          <span data-ttu-id="ab7da-152">La valeur par défaut est <see langword="/" />, qui est la racine de serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-152">The default is <see langword="/" />, which is the server root.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7da-153">Le <xref:System.Web.HttpCookie.Path%2A> propriété étend la <xref:System.Web.HttpCookie.Domain%2A> propriété pour décrire complètement l’URL spécifique à laquelle s’applique le cookie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="ab7da-154">Par exemple, dans l’URL http:/ www.microsoft.com/asp, le domaine est www.microsoft.com et le chemin d’accès est "/ASP".</span><span class="sxs-lookup"><span data-stu-id="ab7da-154">For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7da-155">Le code suivant exemple définit le <xref:System.Web.HttpCookie.Path%2A> propriété d’un nouveau cookie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.SameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.HttpCookie.SameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-156">Obtient ou définit la valeur de l’attribut SameSite du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-156">Gets or sets the value for the SameSite attribute of the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-157">Une des valeurs d'énumération qui représente le mode d’application du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-157">One of the enumeration values that represents the enforcement mode of the cookie.</span>
          </span>
          <span data-ttu-id="ab7da-158">Si l’application cible le .NET Framework 4.7.2 ou versions ultérieures, la valeur par défaut est <see cref="F:System.Web.SameSiteMode.Lax" /> ; sinon, la valeur par défaut est <see cref="F:System.Web.SameSiteMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-158">If the application targets the .NET Framework 4.7.2 or later versions, the default value is <see cref="F:System.Web.SameSiteMode.Lax" />; otherwise, the default value is <see cref="F:System.Web.SameSiteMode.None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Secure : bool with get, set" Usage="System.Web.HttpCookie.Secure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-159">Obtient ou définit une valeur qui indique si le cookie doit être transmis en utilisant une connexion SSL (via HTTPS uniquement).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-159">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-160">
            <see langword="true" /> pour transmettre le cookie via une connexion SSL ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-160">
              <see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7da-161">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7da-162">Pour définir la transmission de cookies à l’aide de SSL pour une application entière, vous devez l’activer dans le fichier de configuration de l’application, Web.config, qui se trouve dans le répertoire racine de l’application.</span><span class="sxs-lookup"><span data-stu-id="ab7da-162">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="ab7da-163">Pour plus d’informations, consultez [httpCookies, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span><span class="sxs-lookup"><span data-stu-id="ab7da-163">For more information, see [httpCookies Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="ab7da-164">Valeurs définies par programme en utilisant le <xref:System.Web.HttpCookie.Secure%2A> propriété remplacent les valeurs définies dans le fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="ab7da-164">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="ab7da-165">Lors du traitement des informations confidentielles, il est fortement recommandé d’utiliser le protocole HTTPS avec le chiffrement SSL.</span><span class="sxs-lookup"><span data-stu-id="ab7da-165">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="ab7da-166">SSL protège contre la modification des données (intégrité des données), protège l’identité d’un utilisateur (confidentialité) et garantit que les données proviennent du client attendu (authentification).</span><span class="sxs-lookup"><span data-stu-id="ab7da-166">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="ab7da-167">Pour plus d’informations sur les avantages du chiffrement, consultez [Services de chiffrement](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="ab7da-167">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="ab7da-168">Pour plus d’informations sur la configuration de SSL sur un serveur Web des Internet Information Services (IIS), consultez [configuration de SSL sur un serveur Web ou un Site Web](http://go.microsoft.com/fwlink/?LinkId=38553).</span><span class="sxs-lookup"><span data-stu-id="ab7da-168">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7da-169">L’exemple de code suivant prend l’action si le cookie est défini à transmettre à l’aide de SSL.</span><span class="sxs-lookup"><span data-stu-id="ab7da-169">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Shareable : bool with get, set" Usage="System.Web.HttpCookie.Shareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-170">Détermine si le cookie est autorisé pour participer à la mise en cache de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-170">Determines whether the cookie is allowed to participate in output caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-171">
            <see langword="true" /> pour spécifier que la mise en cache de sortie ne sera pas supprimée pour une <see cref="T:System.Web.HttpResponse" /> donnée contenant un ou plusieurs cookies sortants ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-171">
              <see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7da-172">Si une donnée <xref:System.Web.HttpResponse> contient un ou plusieurs cookies sortants avec <xref:System.Web.HttpCookie.Shareable%2A> a la valeur `false` (la valeur par défaut), la mise en cache est supprimée de la réponse de sortie.</span><span class="sxs-lookup"><span data-stu-id="ab7da-172">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="ab7da-173">Cela empêche les cookies qui contiennent des informations potentiellement sensibles ne soient pas mises en cache dans la réponse et envoyé à plusieurs clients.</span><span class="sxs-lookup"><span data-stu-id="ab7da-173">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="ab7da-174">Pour permettre une réponse contenant les cookies à mettre en cache, configurer la mise en cache normalement pour la réponse, comme l’utilisation de la `OutputCache` directive ou MVC [OutputCache] attribut et définissez tous les cookies sortants pour avoir <xref:System.Web.HttpCookie.Shareable%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ab7da-174">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Web.HttpCookie.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Web.HttpCookie" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="ab7da-175">Représentation sous forme de chaîne d’un cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-175">The string representation of a cookie.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="ab7da-176">Si la conversion a réussi, contient la valeur <see cref="T:System.Web.HttpCookie" /> équivalente au cookie contenu dans <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-176">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="ab7da-177">Si la conversion a échoué, <paramref name="result" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-177">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ab7da-178">La conversion échoue si le paramètre <paramref name="input" /> est <see langword="null" /> ou vide, ou si un nom de cookie ne peut pas être déterminé à partir de <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-178">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="ab7da-179">La valeur de ce paramètre est remplacée par la méthode ; le paramètre est passé par référence et la valeur null lui est affectée dès que la méthode est sollicitée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-179">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7da-180">Convertit la représentation sous forme de chaîne spécifiée d’un cookie en son équivalent <see cref="T:System.Web.HttpCookie" /> et retourne une valeur qui indique si la conversion a réussi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-180">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7da-181">
            <see langword="true" /> si la conversion de <paramref name="input" /> est réussie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-181">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.HttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-182">Obtient ou définit une valeur de cookie individuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-182">Gets or sets an individual cookie value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-183">Valeur du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-183">The value of the cookie.</span>
          </span>
          <span data-ttu-id="ab7da-184">La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-184">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-185">L’exemple de code suivant définit la valeur d’un cookie existant pour « abc123 ».</span><span class="sxs-lookup"><span data-stu-id="ab7da-185">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpCookie.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7da-186">Obtient une collection de paires clé/valeur contenues dans un objet de cookie unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-186">Gets a collection of key/value pairs that are contained within a single cookie object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7da-187">Collection de valeurs du cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7da-187">A collection of cookie values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7da-188">L’exemple de code suivant crée un nouveau cookie et lui ajoute plusieurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="ab7da-188">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="ab7da-189">Pour obtenir un exemple montrant comment extraire plusieurs valeurs d’un cookie, consultez <xref:System.Web.HttpCookie.HasKeys%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab7da-189">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>