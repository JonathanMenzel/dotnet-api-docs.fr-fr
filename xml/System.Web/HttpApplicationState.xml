<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplicationState.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac516f2143bf2be7e6b84dc7a430caca84732d94bfd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16f2143bf2be7e6b84dc7a430caca84732d94bfd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>Enables sharing of global information across multiple sessions and requests within an ASP.NET application.</source>
          <target state="translated">Autorise le partage d’informations globales entre plusieurs sessions et demandes au sein d’une application ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.</source>
          <target state="translated">Une application ASP.NET est la somme de tous les fichiers, pages, gestionnaires, modules et le code dans l’étendue d’un répertoire virtuel et ses sous-répertoires sur un seul serveur Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>A single instance of an <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.</source>
          <target state="translated">Une instance unique d’un <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> classe est créée la première fois qu’un client demande une ressource de l’URL à partir d’un répertoire virtuel particulier d’application ASP.NET.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>A separate single instance is created for each ASP.NET application on a Web server.</source>
          <target state="translated">Une seule instance distincte est créée pour chaque application ASP.NET sur un serveur Web.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>A reference to each instance is then exposed via the intrinsic <ph id="ph1">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object.</source>
          <target state="translated">Une référence à chaque instance est alors exposée via la fonction intrinsèque <ph id="ph1">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).</source>
          <target state="translated">État de l’application n’est pas partagée dans une batterie de serveurs Web (où une application est hébergée sur plusieurs serveurs) ou d’un domaine privé Web que (dans lequel une application est hébergée entre plusieurs processus sur le même ordinateur).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>This type is thread safe.</source>
          <target state="translated">Ce type est thread-safe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>The name of the object to be added to the collection.</source>
          <target state="translated">Nom de l'objet à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>The value of the object.</source>
          <target state="translated">Valeur de l'objet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>Adds a new object to the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Ajoute un nouvel objet à la collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.</source>
          <target state="translated">L’exemple suivant ajoute deux variables d’application nommées MyAppVar1 et MyAppVar2 à la collection de l’Application.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.AllKeys">
          <source>Gets the access keys in the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Obtient les touches d'accès rapide de la collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.AllKeys">
          <source>A string array of <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object names.</source>
          <target state="translated">Tableau de chaînes de noms d'objets <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.AllKeys">
          <source>The following example fills a string array with all the object names in the application state collection.</source>
          <target state="translated">L’exemple suivant remplit un tableau de chaînes avec tous les noms d’objets dans la collection d’état de l’application.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Clear">
          <source>Removes all objects from an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Supprime tous les objets d'une collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Clear">
          <source>The following example removes all <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables from the collection.</source>
          <target state="translated">L’exemple suivant supprime tous les <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables de la collection.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Contents">
          <source>Gets a reference to the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object.</source>
          <target state="translated">Obtient une référence à l’objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Contents">
          <source>A reference to the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object.</source>
          <target state="translated">Référence à l'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Contents">
          <source>This property provides compatibility with earlier versions of ASP.</source>
          <target state="translated">Cette propriété fournit une compatibilité avec les versions antérieures d’ASP.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Contents">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> object that is used to access the object names in the application state collection.</source>
          <target state="translated">L’exemple suivant crée un nouveau <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> objet permet d’accéder aux noms d’objets dans la collection d’état de l’application.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Count">
          <source>Gets the number of objects in the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Obtient le nombre d'objets dans la collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Count">
          <source>The number of item objects in the collection.</source>
          <target state="translated">Nombre d'objets élément dans la collection.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Count">
          <source>The default is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Count">
          <source>The following example executes only if the number of objects in the collection exceeds five.</source>
          <target state="translated">L’exemple suivant exécute uniquement si le nombre d’objets dans la collection est supérieur à cinq.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by name or index.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> par son nom ou son index.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>The index of the application state object.</source>
          <target state="translated">Index de l'objet d'état de l'application.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by numerical index.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> par son index numérique.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Objet référencé par <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>The following example returns the first object (index = 0) from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">L’exemple suivant retourne le premier objet (index = 0) à partir de la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection de la fonction intrinsèque <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> de l’objet et le copie dans une variable objet.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>The name of the object.</source>
          <target state="translated">Nom de l'objet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by name.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> par son nom.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Objet référencé par <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>The following example returns an object named MyAppVar1 from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">L’exemple suivant retourne un objet nommé MyAppVar1 à partir de la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection de la fonction intrinsèque <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> de l’objet et le copie dans une variable objet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>The index of the application state object.</source>
          <target state="translated">Index de l'objet d'état de l'application.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object name by index.</source>
          <target state="translated">Obtient un nom d'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> par son index.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>The name under which the application state object was saved.</source>
          <target state="translated">Nom sous lequel l'objet d'état de l'application a été enregistré.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>The following example returns the names of all the objects in the application state collection and stores the names in a string array.</source>
          <target state="translated">L’exemple suivant retourne les noms de tous les objets dans la collection d’état application et stocke les noms dans un tableau de chaînes.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>Gets access to an object in an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Obtient l'accès à un objet de la collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>This property is overloaded to allow access to an object by name or numerical index.</source>
          <target state="translated">Cette propriété est surchargée pour permettre l'accès à un objet par son nom ou son index numérique.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>The numerical index of the object in the collection.</source>
          <target state="translated">Index numérique de l'objet dans la collection.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>Gets a single <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by index.</source>
          <target state="translated">Obtient un seul objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> par son index.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Objet référencé par <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>The following example returns the first object (index = 0) from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">L’exemple suivant retourne le premier objet (index = 0) à partir de la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection de la fonction intrinsèque <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> de l’objet et le copie dans une variable objet.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>The name of the object in the collection.</source>
          <target state="translated">Nom de l’objet dans la collection.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>Gets the value of a single <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by name.</source>
          <target state="translated">Obtient la valeur d'un seul objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> par son nom.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Objet référencé par <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>The following example returns an object named <ph id="ph1">`MyAppVar1`</ph> from the <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph3">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">L’exemple suivant retourne un objet nommé <ph id="ph1">`MyAppVar1`</ph> à partir de la <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection de la fonction intrinsèque <ph id="ph3">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> de l’objet et le copie dans une variable objet.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Lock">
          <source>Locks access to an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> variable to facilitate access synchronization.</source>
          <target state="translated">Verrouille l'accès à une variable <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> pour faciliter la synchronisation d'accès.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Lock">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class performs automatic locking and unlocking with the <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> and <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> methods.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> classe effectue le verrouillage automatique et le déverrouillage avec le <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> propriétés et le <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> et <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Lock">
          <source>However, explicitly using the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> methods when you have a series of operations may be more efficient.</source>
          <target state="translated">Toutefois, en utilisant explicitement le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> méthodes lorsque vous disposez d’une série d’opérations peuvent être plus efficaces.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Lock">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> méthode et <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> pour empêcher d’autres sessions de modifier la valeur de deux variables de l’application tant que la session locale a modifié les.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Remove(System.String)">
          <source>The name of the object to be removed from the collection.</source>
          <target state="translated">Nom de l'objet à supprimer de la collection.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Remove(System.String)">
          <source>Removes the named object from an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Supprime l'objet nommé d'une collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Remove(System.String)">
          <source>The following example removes one application state variable from the collection.</source>
          <target state="translated">L’exemple suivant supprime une variable d’état application de la collection.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.RemoveAll">
          <source>Removes all objects from an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Supprime tous les objets d'une collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.RemoveAll">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAll%2A&gt;</ph> is an internal call to <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAll%2A&gt;</ph> est un appel interne à <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.RemoveAll">
          <source>The following example removes all <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables from the collection.</source>
          <target state="translated">L’exemple suivant supprime tous les <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables de la collection.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
          <source>The position in the collection of the item to remove.</source>
          <target state="translated">Position dans la collection de l’élément à supprimer.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object from a collection by index.</source>
          <target state="translated">Supprime un objet <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> d'une collection en utilisant l'index.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
          <source>The following code example demonstrates how to insert two application variables into the collection, and then use the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> method to remove the first variable in a custom <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment insérer deux variables d’application dans la collection et ensuite utiliser le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> méthode pour supprimer la première variable personnalisé <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>The name of the object to be updated.</source>
          <target state="translated">Nom de l'objet à mettre à jour.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>The updated value of the object.</source>
          <target state="translated">Valeur mise à jour de l’objet.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>Updates the value of an object in an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Met à jour la valeur d'un objet dans une collection <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>The following example updates the value of an existing application state variable.</source>
          <target state="translated">L’exemple suivant met à jour la valeur d’une variable d’état application existante.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>Gets all objects declared by an <ph id="ph1">&lt;see langword="&amp;lt;object&amp;gt;" /&gt;</ph> tag where the scope is set to "Application" within the ASP.NET application.</source>
          <target state="translated">Extrait tous les objets déclarés par une balise <ph id="ph1">&lt;see langword="&amp;lt;object&amp;gt;" /&gt;</ph> où la portée a comme valeur "Application" dans l'application ASP.NET.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>A collection of objects on the page.</source>
          <target state="translated">Collection d'objets de la page.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>Application objects are defined in the Global.asax file inside the <ph id="ph1">`&lt;object runat="server" scope="Application"&gt; &lt;/object&gt;`</ph> tags.</source>
          <target state="translated">Objets d’application sont définis dans le fichier Global.asax à l’intérieur de la <ph id="ph1">`&lt;object runat="server" scope="Application"&gt; &lt;/object&gt;`</ph> balises.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>The following example gets all application objects into a <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> variable and executes a routine only if the number of objects is greater than 0.</source>
          <target state="translated">L’exemple suivant obtient tous les objets d’application dans un <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> variable et exécute une routine uniquement si le nombre d’objets est supérieur à 0.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>Unlocks access to an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> variable to facilitate access synchronization.</source>
          <target state="translated">Déverrouille l'accès à une variable <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> pour faciliter la synchronisation d'accès.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class performs automatic locking and unlocking with the <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> and <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> methods.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> classe effectue le verrouillage automatique et le déverrouillage avec le <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> propriétés et le <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> et <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>However, explicitly using the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> methods when you have a series of operations may be more efficient.</source>
          <target state="translated">Toutefois, en utilisant explicitement le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> méthodes lorsque vous disposez d’une série d’opérations peuvent être plus efficaces.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> méthode et <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> pour empêcher d’autres sessions de modifier la valeur de deux variables de l’application tant que la session locale a modifié les.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>