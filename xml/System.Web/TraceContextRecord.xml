<Type Name="TraceContextRecord" FullName="System.Web.TraceContextRecord">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a1ae86eb653060cd829c8cde833fa6705d75cd76" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51915004" /></Metadata><TypeSignature Language="C#" Value="public sealed class TraceContextRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextRecord" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextRecord sealed" />
  <TypeSignature Language="F#" Value="type TraceContextRecord = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un message de trace ASP.NET et toutes les données associées.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.TraceContextRecord> objet encapsule le message de trace, catégorie, toute associé <xref:System.Exception>, et si l’enregistrement de trace a été écrit par le <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> (méthode).  
  
 Chaque appel à la <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> et <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> méthodes génère un <xref:System.Web.TraceContextRecord> objet qui est ajouté à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> collection de messages. Vous pouvez accéder à la collection d’enregistrements en gérant le <xref:System.Web.TraceContext.TraceFinished> événement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez inscrire un <xref:System.Web.TraceContextEventHandler> délégué pour gérer le <xref:System.Web.TraceContext.TraceFinished> événement. Dans cet exemple, le `OnTraceFinished` méthode accède à la collection de <xref:System.Web.TraceContextRecord> objets via le <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> itère au sein de leur propriété et les écrit dans le flux de réponse.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Vue d'ensemble du traçage ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/74e3b3f7-7fc2-4e38-ac55-2b9c2e832a3c">Comment :  activer le traçage d'une page ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string msg, bool isWarning, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, msg As String, isWarning As Boolean, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextRecord(System::String ^ category, System::String ^ msg, bool isWarning, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextRecord : string * string * bool * Exception -&gt; System.Web.TraceContextRecord" Usage="new System.Web.TraceContextRecord (category, msg, isWarning, errorInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="isWarning" Type="System.Boolean" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Catégorie de trace qui reçoit le message.</param>
        <param name="msg">Message de trace.</param>
        <param name="isWarning"><see langword="true" /> si la méthode associée à <see cref="T:System.Web.TraceContextRecord" /> est la méthode <see cref="Overload:System.Web.TraceContext.Warn" /> ; <see langword="false" /> si la méthode de traçage est la méthode <see cref="Overload:System.Web.TraceContext.Write" />.</param>
        <param name="errorInfo">Objet <see cref="T:System.Exception" /> contenant des informations supplémentaires sur l'erreur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.TraceContextRecord" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque appel à la <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> et <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> méthodes génère un <xref:System.Web.TraceContextRecord> objet qui est ajouté à la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> collection de messages. Le <xref:System.Web.TraceContext.Warn%2A> jeux d’appel de méthode le <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété `true`, tandis que le <xref:System.Web.TraceContext.Write%2A> les appels de méthode affectez-lui la valeur `false`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Vue d'ensemble du traçage ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Web.TraceContextRecord.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reçoit la catégorie définie par l'utilisateur pour l'enregistrement de trace.</summary>
        <value>Chaîne représentant une catégorie de l'enregistrement de trace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La catégorie permet de mieux organiser les messages de trace dans les groupes reconnaissables, mais peut être n’importe quelle chaîne. Le <xref:System.Web.TraceContext> classe utilise <xref:System.String.Empty?displayProperty=nameWithType> en tant que catégorie par défaut pour les méthodes qui acceptent uniquement un `message` paramètre. La catégorie par défaut pour ASP.NET, qui écrit plusieurs enregistrements de trace lorsque le traçage est activé, est « aspx.page ».  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder au <xref:System.Web.TraceContextRecord.Category%2A> propriété d’un <xref:System.Web.TraceContextRecord>et l’imprimer son message de trace associé à la `Response` flux.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Vue d'ensemble du traçage ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ErrorInfo">
      <MemberSignature Language="C#" Value="public Exception ErrorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.ErrorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorInfo As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorInfo { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorInfo : Exception" Usage="System.Web.TraceContextRecord.ErrorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Exception" /> associé à l'enregistrement de trace, si disponible.</summary>
        <value><see cref="T:System.Exception" /> associé à l'enregistrement de trace, s'il existe, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous utilisez le suivi pour déboguer une application ou de dépanner des erreurs et la gestion des exceptions, vous pouvez inclure une exception dans un enregistrement de trace. Le <xref:System.Web.TraceContextRecord.ErrorInfo%2A> propriété est `null` lorsque l’enregistrement de trace est associé à un de le <xref:System.Web.TraceContext> méthodes qui n’ont pas explicite `errorInfo` paramètre ou aucune exception n’est fournie.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Vue d'ensemble du traçage ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsWarning">
      <MemberSignature Language="C#" Value="public bool IsWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.IsWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarning : bool" Usage="System.Web.TraceContextRecord.IsWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'enregistrement de trace est associé à un appel de méthode <see cref="Overload:System.Web.TraceContext.Warn" />.</summary>
        <value><see langword="true" /> si le <see cref="T:System.Web.TraceContextRecord" /> est associé à l'appel de la méthode <see cref="Overload:System.Web.TraceContext.Warn" /> ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment vérifier la <xref:System.Web.TraceContextRecord.IsWarning%2A> propriété d’un <xref:System.Web.TraceContextRecord> pour déterminer si le message qui contient l’enregistrement a été écrit par un <xref:System.Web.TraceContext.Warn%2A> ou <xref:System.Web.TraceContext.Write%2A> appel de méthode. Si l’enregistrement de trace est un message d’avertissement, une autre action est effectuée que si elle est un message d’erreur.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Vue d'ensemble du traçage ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.TraceContextRecord.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le message de trace défini par l'utilisateur.</summary>
        <value>Chaîne représentant un message de l'enregistrement de trace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le message peut être n’importe quelle chaîne et est utilisé pour écrire des informations de suivi détaillées. Il correspond au paramètre de message qui est passé à la <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> et <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> méthodes. Les informations peuvent être des valeurs d’exécution, les messages vous orientant et vous guide tout au long de l’exécution d’un programme ou d’autres données de Diagnostics.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.TraceContextRecord.Message%2A> propriété d’un <xref:System.Web.TraceContextRecord>et l’imprimer à la `Response` flux.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Vue d'ensemble du traçage ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>