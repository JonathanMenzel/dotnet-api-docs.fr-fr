<Type Name="IHttpAsyncHandler" FullName="System.Web.IHttpAsyncHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1ce61ec115ed0264727ea9352b20a7bab01409b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52206517" /></Metadata><TypeSignature Language="C#" Value="public interface IHttpAsyncHandler : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpAsyncHandler implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpAsyncHandler&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpAsyncHandler : System::Web::IHttpHandler" />
  <TypeSignature Language="F#" Value="type IHttpAsyncHandler = interface&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6c673-101">Définit le contrat que les objets de gestionnaire asynchrones HTTP doivent implémenter.</span><span class="sxs-lookup"><span data-stu-id="6c673-101">Defines the contract that HTTP asynchronous handler objects must implement.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c673-102">Un <xref:System.Web.IHttpAsyncHandler> classe peut être associée une extension de nom de fichier ou une URL particulière par un fichier de configuration, dans le `httpHandlers` section de configuration.</span><span class="sxs-lookup"><span data-stu-id="6c673-102">An <xref:System.Web.IHttpAsyncHandler> class can be associated with a file name extension or a particular URL by a configuration file, in the `httpHandlers` configuration section.</span></span> <span data-ttu-id="6c673-103">L’infrastructure ASP.NET sera ensuite instancier et appeler le gestionnaire lorsque la demande correspondante est reçue.</span><span class="sxs-lookup"><span data-stu-id="6c673-103">The ASP.NET infrastructure will then instantiate and call the handler when the corresponding request is received.</span></span> <span data-ttu-id="6c673-104">Le gestionnaire peut également être défini dans un fichier .ashx et lorsque la demande correspondante est reçue pour le fichier .ashx que le gestionnaire sera exécuté.</span><span class="sxs-lookup"><span data-stu-id="6c673-104">Alternatively, the handler can be defined in an .ashx file and when the corresponding request is received for the .ashx file the hander will be executed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="iHttpAsyncHandler.BeginProcessRequest (context, cb, extraData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="6c673-105">Objet <see cref="T:System.Web.HttpContext" /> qui fournit les références à des objets serveur intrinsèques (par exemple, <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> et <see langword="Server" />) utilisés pour traiter des demandes HTTP.</span><span class="sxs-lookup"><span data-stu-id="6c673-105">An <see cref="T:System.Web.HttpContext" /> object that provides references to intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />) used to service HTTP requests.</span></span></param>
        <param name="cb"><span data-ttu-id="6c673-106"><see cref="T:System.AsyncCallback" /> à appeler lorsque l'appel de la méthode asynchrone est terminé.</span><span class="sxs-lookup"><span data-stu-id="6c673-106">The <see cref="T:System.AsyncCallback" /> to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="6c673-107">Si <paramref name="cb" /> a la valeur <see langword="null" />, le délégué n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="6c673-107">If <paramref name="cb" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="extraData"><span data-ttu-id="6c673-108">Données supplémentaires éventuelles nécessaires pour traiter la demande.</span><span class="sxs-lookup"><span data-stu-id="6c673-108">Any extra data needed to process the request.</span></span></param>
        <summary><span data-ttu-id="6c673-109">Lance un appel asynchrone au gestionnaire HTTP.</span><span class="sxs-lookup"><span data-stu-id="6c673-109">Initiates an asynchronous call to the HTTP handler.</span></span></summary>
        <returns><span data-ttu-id="6c673-110"><see cref="T:System.IAsyncResult" /> qui contient des informations sur l'état du processus.</span><span class="sxs-lookup"><span data-stu-id="6c673-110">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessRequest : IAsyncResult -&gt; unit" Usage="iHttpAsyncHandler.EndProcessRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6c673-111"><see cref="T:System.IAsyncResult" /> qui contient des informations sur l'état du processus.</span><span class="sxs-lookup"><span data-stu-id="6c673-111">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span></span></param>
        <summary><span data-ttu-id="6c673-112">Fournit une méthode End de processus asynchrone lorsque le processus se termine.</span><span class="sxs-lookup"><span data-stu-id="6c673-112">Provides an asynchronous process End method when the process ends.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c673-113">Vous pouvez utiliser <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> pour déclencher les exceptions interceptées au cours du processus asynchrone.</span><span class="sxs-lookup"><span data-stu-id="6c673-113">You can use <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> to raise any exceptions caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>