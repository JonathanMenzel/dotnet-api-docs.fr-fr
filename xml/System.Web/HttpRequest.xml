<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="754993484ddc8e485185a1840c46a8703376bdb1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39768912" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3e346-101">Permet à ASP.NET de lire les valeurs HTTP envoyées par un client dans le cadre d'une requête web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3e346-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-102">Les méthodes et propriétés de la <xref:System.Web.HttpRequest> classe sont exposées via la `Request` propriétés de la <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, et <xref:System.Web.UI.UserControl> classes.</span><span class="sxs-lookup"><span data-stu-id="3e346-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="3e346-103">Pour accéder aux données à partir de la <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, ou <xref:System.Web.HttpRequest.ServerVariables%2A> collections, vous pouvez écrire `Request["key"]`, comme illustré dans l’exemple pour le <xref:System.Web.HttpRequest.QueryString%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3e346-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e346-104">Prise en charge Unicode pour <xref:System.Web.HttpRequest> membres de classe requiert IIS version 6.0 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="3e346-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-105">Les exemples d’accès suivant le <xref:System.Web.HttpRequest> instance pour la requête actuelle à l’aide de la <xref:System.Web.UI.Page.Request%2A> propriété de la <xref:System.Web.UI.Page> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="3e346-106">Vous pouvez utiliser une syntaxe simplifiée pour accéder aux données à partir de la <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, ou <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span><span class="sxs-lookup"><span data-stu-id="3e346-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="3e346-107">Vous pouvez écrire `Request["key"]`.</span><span class="sxs-lookup"><span data-stu-id="3e346-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="3e346-108">Le premier exemple montre comment récupérer une valeur de chaîne de requête lors du chargement d’une page.</span><span class="sxs-lookup"><span data-stu-id="3e346-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="3e346-109">L’exemple suivant montre comment vérifier si la demande est authentifiée et de récupérer l’URL brute.</span><span class="sxs-lookup"><span data-stu-id="3e346-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="3e346-110">Un projet de site Web Visual Studio avec code source est disponible pour accompagner cette rubrique : [télécharger](http://go.microsoft.com/fwlink/?LinkID=191455).</span><span class="sxs-lookup"><span data-stu-id="3e346-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="3e346-111">Cet exemple utilise le <xref:System.IO.StreamWriter> classe permettant d’écrire les valeurs de plusieurs <xref:System.Web.HttpRequest> propriétés dans un fichier de classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="3e346-112">Pour les propriétés qui sont de type chaîne, les valeurs sont codées en HTML comme ils sont écrits dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="3e346-113">Les propriétés qui représentent une collection sont traitées en boucle par le biais, et chaque paire clé/valeur qu’ils contiennent est écrites dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e346-114">Cet exemple comprend une zone de texte qui accepte une entrée d'utilisateur, ce qui constitue une menace potentielle pour la sécurité.</span><span class="sxs-lookup"><span data-stu-id="3e346-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="3e346-115">Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML.</span><span class="sxs-lookup"><span data-stu-id="3e346-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="3e346-116">Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="3e346-116">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="3e346-117">Nom du fichier associé à la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-117">The name of the file associated with the request.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="3e346-118">Informations sur l'URL de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-118">The information regarding the URL of the current request.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="3e346-119">Chaîne de requête entière envoyée avec la requête (tout ce qui suit <c>'?'</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-120">Initialise un objet <see cref="T:System.Web.HttpRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-121">Vous n’avez pas besoin créer votre propre instance de la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="3e346-122">Les méthodes et propriétés de la <xref:System.Web.HttpRequest> classe sont exposées via la `Request` propriété de la <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, et <xref:System.Web.UI.UserControl> classes.</span><span class="sxs-lookup"><span data-stu-id="3e346-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e346-123">Termine de force la connexion TCP sous-jacente, entraînant l'échec des E/S en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          </span>
          <span data-ttu-id="3e346-124">Vous pouvez utiliser cette méthode en réponse à une attaque par un client HTTP malveillant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-124">You might use this method in response to an attack by a malicious HTTP client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-125">Cette méthode est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="3e346-125">This method is thread-safe.</span></span> <span data-ttu-id="3e346-126">N’importe quel thread peut appeler à tout moment.</span><span class="sxs-lookup"><span data-stu-id="3e346-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="3e346-127">Cette méthode peut uniquement être utilisée en mode intégré.</span><span class="sxs-lookup"><span data-stu-id="3e346-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="3e346-128">Si vous l’appelez en mode classique, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="3e346-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="3e346-129">Pour déterminer le mode de pipeline, utilisez <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-130">Obtient un tableau de chaînes contenant les types MIME pris en charge par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-130">Gets a string array of client-supported MIME accept types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-131">Tableau de chaînes représentant les types MIME pris en charge par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-131">A string array of client-supported MIME accept types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-132">L’exemple de code suivant capture les multiples valeurs retournées par la <xref:System.Web.HttpRequest.AcceptTypes%2A> propriété dans une variable objet et écrit le nombre et le nom de chaque valeur à ces une ligne distincte de la sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="3e346-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-133">Obtient l'identificateur anonyme de l'utilisateur, s'il existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-133">Gets the anonymous identifier for the user, if present.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-134">Chaîne représentant l'identificateur de l'utilisateur anonyme actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-134">A string representing the current anonymous user identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-135">Le <xref:System.Web.HttpRequest.AnonymousID%2A> propriété assigne un identificateur unique de longue durée à un utilisateur non authentifié, ce qui peut être utilisé pour effectuer le suivi de l’utilisateur ou affecter des propriétés de profil à cet utilisateur sans stocker les données dans un `Session` objet.</span><span class="sxs-lookup"><span data-stu-id="3e346-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="3e346-136">Par défaut, le <xref:System.Web.HttpRequest.AnonymousID%2A> propriété est suivie à l’aide d’un cookie, mais il peut être configuré pour utiliser l’URI lorsque le <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribut dans la section de configuration de l’identification anonyme a la valeur la <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, ou <xref:System.Web.HttpCookieMode.AutoDetect> valeur.</span><span class="sxs-lookup"><span data-stu-id="3e346-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="3e346-137">Vous devez effacer le cookie explicitement si vous ne souhaitez plus disponible, par exemple lorsqu’un utilisateur anonyme est authentifié.</span><span class="sxs-lookup"><span data-stu-id="3e346-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="3e346-138">L’identification anonyme est utilisée lorsqu’il est nécessaire pour identifier les entités qui ne sont pas authentifiées et lorsqu’une autorisation est requise.</span><span class="sxs-lookup"><span data-stu-id="3e346-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="3e346-139">Pour plus d’informations, consultez [anonymousIdentification, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span><span class="sxs-lookup"><span data-stu-id="3e346-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-140">L’exemple suivant montre comment utiliser le <xref:System.Web.HttpRequest.AnonymousID%2A> propriété en gérant le <xref:System.Web.Security.AnonymousIdentificationModule.Creating> événement dans le fichier Global.asax.</span><span class="sxs-lookup"><span data-stu-id="3e346-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="3e346-141">Cet exemple comporte deux parties :</span><span class="sxs-lookup"><span data-stu-id="3e346-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="3e346-142">Une méthode dans le fichier Global.asax qui gère la <xref:System.Web.Security.AnonymousIdentificationModule.Creating> événement.</span><span class="sxs-lookup"><span data-stu-id="3e346-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="3e346-143">Une page Web Forms.</span><span class="sxs-lookup"><span data-stu-id="3e346-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="3e346-144">La première partie de l’exemple de code montre comment définir le <xref:System.Web.HttpRequest.AnonymousID%2A> propriété en gérant le <xref:System.Web.Security.AnonymousIdentificationModule.Creating> événement dans le fichier Global.asax.</span><span class="sxs-lookup"><span data-stu-id="3e346-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="3e346-145">La méthode qui est nommée `AnonymousIdentification_Creating` définit le <xref:System.Web.HttpRequest.AnonymousID%2A> propriété lorsqu’un ID anonyme est créé.</span><span class="sxs-lookup"><span data-stu-id="3e346-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="3e346-146">La deuxième partie de l’exemple de code montre comment afficher la nouvelle <xref:System.Web.HttpRequest.AnonymousID%2A> qui est créé par le `AnonymousIdentification_Creating` Gestionnaire d’événements dans l’exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="3e346-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-147">Obtient le chemin d’accès racine virtuel de l’application ASP.NET sur le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-147">Gets the ASP.NET application's virtual application root path on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-148">Chemin d'accès virtuel de l'application actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-148">The virtual path of the current application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-149">Utilisez cette propriété pour construire une URL relative à la racine de l’application à partir d’une page ou un contrôle utilisateur Web qui n’est pas dans le répertoire racine.</span><span class="sxs-lookup"><span data-stu-id="3e346-149">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="3e346-150">Ainsi, les pages et contrôles partagés qui existent à différents niveaux d’une structure de répertoires à utiliser le même code pour lier à des ressources sur des emplacements fixes dans l’application.</span><span class="sxs-lookup"><span data-stu-id="3e346-150">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-151">L’exemple suivant utilise le <xref:System.IO.StreamWriter.Write%2A> méthode à encoder en HTML, puis écrire la valeur de la <xref:System.Web.HttpRequest.ApplicationPath%2A> propriété dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="3e346-151">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="3e346-152">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-152">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="3e346-153">Il suppose l’existence d’un <xref:System.IO.StreamWriter> objet nommé `sw`.</span><span class="sxs-lookup"><span data-stu-id="3e346-153">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="3e346-154">L’exemple suivant utilise le <xref:System.Web.HttpRequest.ApplicationPath%2A> propriété pour construire par programme un chemin d’accès à une ressource qui se trouve dans un emplacement fixe dans l’application.</span><span class="sxs-lookup"><span data-stu-id="3e346-154">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="3e346-155">La page qui référence la ressource ne devra pas se trouver dans le même répertoire que la ressource.</span><span class="sxs-lookup"><span data-stu-id="3e346-155">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="3e346-156">Si vous exécutez cet exemple dans une application Web qui est nommée WebSite1, `/WebSite1` s’affichera en tant que la valeur de la <xref:System.Web.HttpRequest.ApplicationPath%2A> propriété et `/WebSite1/images/Image1.gif` s’affiche sous le chemin d’accès complet de l’image.</span><span class="sxs-lookup"><span data-stu-id="3e346-156">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-157">Obtient le chemin d’accès virtuel de la racine de l’application et le rend relatif en utilisant un tilde (~) à la racine de l’application (par exemple « ~/page.aspx »).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-158">Chemin d'accès virtuel de la racine de l'application pour la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-158">The virtual path of the application root for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-159">Utilisez cette propriété pour fournir des informations d’URL qui resteront les mêmes même si l’application change d’emplacement.</span><span class="sxs-lookup"><span data-stu-id="3e346-159">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="3e346-160">Ainsi, le même code de mappage d’URL à utiliser dans un environnement de test et dans l’environnement de déploiement final, ou pour être utilisé par les copies d’applications Web dans des domaines différents.</span><span class="sxs-lookup"><span data-stu-id="3e346-160">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-161">L’exemple suivant utilise le <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> propriété pour définir l’URL d’un <xref:System.Web.UI.WebControls.Image> contrôle à une image dans le même répertoire que la page.</span><span class="sxs-lookup"><span data-stu-id="3e346-161">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="3e346-162">Exécutez cette page à différents niveaux d’une structure de répertoire pour voir le résultat <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="3e346-162">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="3e346-163">L’exemple suivant utilise le <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> propriété à définir par programme le chemin d’accès à une ressource, selon le chemin d’accès actuel de la page.</span><span class="sxs-lookup"><span data-stu-id="3e346-163">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="3e346-164">Nombre d'octets à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-164">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-165">Exécute une lecture binaire d'un nombre spécifié d'octets du flux d'entrée actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-165">Performs a binary read of a specified number of bytes from the current input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-166">Tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-166">A byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-167">Le <xref:System.Web.HttpRequest.BinaryRead%2A> méthode est fournie pour la compatibilité avec ASP.</span><span class="sxs-lookup"><span data-stu-id="3e346-167">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e346-168">
            <paramref name="count" /> est égal à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-168">
              <paramref name="count" /> is 0.</span>
          </span>
          <span data-ttu-id="3e346-169">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-169">\- or -</span>
          </span>
          <span data-ttu-id="3e346-170">
            <paramref name="count" /> est supérieur au nombre d’octets disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-170">
              <paramref name="count" /> is greater than the number of bytes available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-171">Obtient ou définit des informations sur les fonctionnalités de navigation du client demandeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-171">Gets or sets information about the requesting client's browser capabilities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-172">Objet <see cref="T:System.Web.HttpBrowserCapabilities" /> répertoriant les fonctionnalités de navigation du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-172">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-173">L’exemple de code suivant envoie une liste des fonctionnalités du navigateur vers le client dans une page HTML.</span><span class="sxs-lookup"><span data-stu-id="3e346-173">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-174">Obtient le certificat de sécurité du client pour la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-174">Gets the current request's client security certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-175">Objet <see cref="T:System.Web.HttpClientCertificate" /> contenant des informations sur les paramètres du certificat de sécurité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-175">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-176">L’exemple de code suivant envoie les paramètres de certificat du client vers le client dans une page HTML.</span><span class="sxs-lookup"><span data-stu-id="3e346-176">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-177">Obtient ou définit le jeu de caractères du corps de l'entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-177">Gets or sets the character set of the entity-body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-178">Objet <see cref="T:System.Text.Encoding" /> représentant le jeu de caractères du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-178">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-179">Encodage du contenu par défaut peut être spécifié dans le [globalization, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) d’un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="3e346-179">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="3e346-180">Si l’encodage du contenu est également spécifié par le client, les paramètres de configuration par défaut sont remplacées.</span><span class="sxs-lookup"><span data-stu-id="3e346-180">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-181">L’exemple de code suivant assigne une valeur représentant la description de l’encodage HTTP actuelle à une variable de chaîne.</span><span class="sxs-lookup"><span data-stu-id="3e346-181">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-182">Spécifie la longueur en octets du contenu envoyé par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-182">Specifies the length, in bytes, of content sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-183">Longueur en octets du contenu envoyé par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-183">The length, in bytes, of content sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-184">L’exemple de code suivant assigne la valeur représentant la longueur du contenu de la demande entrante à une variable de type entier.</span><span class="sxs-lookup"><span data-stu-id="3e346-184">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-185">Obtient ou définit le type de contenu MIME de la requête entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-185">Gets or sets the MIME content type of the incoming request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-186">Chaîne représentant le type de contenu MIME de la requête entrante, par exemple, « text/html ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-186">A string representing the MIME content type of the incoming request, for example, "text/html".</span>
          </span>
          <span data-ttu-id="3e346-187">Les types MIME communs supplémentaires incluent « audio.wav », « image/gif » et « application/pdf ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-187">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-188">L’exemple de code suivant assigne la valeur représentant le type de contenu de la demande entrante à une variable de chaîne.</span><span class="sxs-lookup"><span data-stu-id="3e346-188">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3e346-189">L’exemple suivant montre la sortie qui peut-être être généré par ce code.</span><span class="sxs-lookup"><span data-stu-id="3e346-189">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-190">Obtient une collection de cookies envoyée par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-190">Gets a collection of cookies sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-191">Objet <see cref="T:System.Web.HttpCookieCollection" /> représentant les variables de cookies du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-191">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-192">ASP.NET inclut deux collections de cookies intrinsèque.</span><span class="sxs-lookup"><span data-stu-id="3e346-192">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="3e346-193">La collection accédée via la <xref:System.Web.HttpRequest.Cookies%2A> collection de <xref:System.Web.HttpRequest> contient des cookies transmis par le client au serveur dans le `Cookie` en-tête.</span><span class="sxs-lookup"><span data-stu-id="3e346-193">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="3e346-194">La collection accédée via la <xref:System.Web.HttpResponse.Cookies%2A> collection de <xref:System.Web.HttpResponse> contient de nouveaux cookies créés sur le serveur et transmis au client dans le `Set-Cookie` en-tête.</span><span class="sxs-lookup"><span data-stu-id="3e346-194">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e346-195">Après avoir ajouté un cookie à l’aide de la <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, le cookie est immédiatement disponible dans le <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, même si la réponse n’a pas été envoyée au client.</span><span class="sxs-lookup"><span data-stu-id="3e346-195">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-196">L’exemple de code suivant effectue une itération sur tous les cookies envoyés par le client et envoie le nom, date d’expiration, paramètre de sécurité et les valeurs de chaque cookie à la sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="3e346-196">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-197">Obtient le chemin d'accès virtuel de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-197">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-198">Chemin d'accès virtuel de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-198">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-199"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Retourne le chemin d’accès au Gestionnaire de page en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="3e346-199"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="3e346-200">Pour les scénarios de redirection à l’aide de <xref:System.Web.HttpServerUtility.Execute%2A> et <xref:System.Web.HttpServerUtility.Transfer%2A> méthodes, cela signifie que le <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriété retourne le chemin d’accès à la page redirigée (page enfant).</span><span class="sxs-lookup"><span data-stu-id="3e346-200">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="3e346-201">Toutefois, lorsque le client est redirigé vers une autre page, le <xref:System.Web.HttpRequest.FilePath%2A> propriété retourne le chemin d’accès à la page d’origine.</span><span class="sxs-lookup"><span data-stu-id="3e346-201">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-202">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-202">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-203">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-203">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-204">Obtient l'extension du nom de fichier spécifié dans la propriété <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-204">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-205">Extension du nom de fichier spécifié dans la propriété <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-205">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-206">Obtient le chemin d'accès virtuel de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-206">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-207">Chemin d'accès virtuel de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-207">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-208">Le <xref:System.Web.HttpRequest.FilePath%2A> propriété n’inclut pas le <xref:System.Web.HttpRequest.PathInfo%2A> code de fin.</span><span class="sxs-lookup"><span data-stu-id="3e346-208">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="3e346-209">Par exemple, pour l’URL http://www.contoso.com/virdir/page.html/tail, le <xref:System.Web.HttpRequest.FilePath%2A> valeur est/virdir/page.HTML.</span><span class="sxs-lookup"><span data-stu-id="3e346-209">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-210">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.FilePath%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-210">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-211">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-211">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-212">Obtient la collection des fichiers téléchargés par le client (format Multipart MIME).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-212">Gets the collection of files uploaded by the client, in multipart MIME format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-213">Objet <see cref="T:System.Web.HttpFileCollection" /> représentant une collection de fichiers téléchargés par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-213">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span>
          </span>
          <span data-ttu-id="3e346-214">Les éléments de l'objet <see cref="T:System.Web.HttpFileCollection" /> sont de type <see cref="T:System.Web.HttpPostedFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-214">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-215">La collection de fichiers est remplie uniquement lorsque la demande HTTP `Content-Type` valeur est « multipart/form-data ».</span><span class="sxs-lookup"><span data-stu-id="3e346-215">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-216">L’exemple de code suivant affiche les noms de tous les fichiers dans le <xref:System.Web.HttpRequest.Files%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="3e346-216">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-217">Obtient ou définit le filtre à utiliser lors de la lecture du flux d'entrée actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-217">Gets or sets the filter to use when reading the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-218">Objet <see cref="T:System.IO.Stream" /> à utiliser comme filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-218">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-219">L’exemple de code suivant crée deux nouvelles classes, `QQQ1` et `QQQ2` ce filtre le <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-219">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="3e346-220">Placez les classes dans le fichier Global.asax dans le répertoire d’une application ASP.NET afin que toutes les entrées pour toutes les pages Web ASP.NET dans l’application seront filtrée.</span><span class="sxs-lookup"><span data-stu-id="3e346-220">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-221">Le <see cref="T:System.IO.Stream" /> spécifié n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-221">The specified <see cref="T:System.IO.Stream" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-222">Obtient une collection de variables de formulaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-222">Gets a collection of form variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-223">
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> représentant une collection de variables de formulaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-223">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-224">Le <xref:System.Web.HttpRequest.Form%2A> propriété est remplie lorsque la demande HTTP `Content-Type` valeur est « application/x--www-form-urlencoded » ou « multipart/form-data ».</span><span class="sxs-lookup"><span data-stu-id="3e346-224">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-225">L’exemple suivant montre comment lire les valeurs dans la collection de formulaire publiées à partir d’un navigateur.</span><span class="sxs-lookup"><span data-stu-id="3e346-225">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="3e346-226">Chaque paire nom/valeur dans la collection représente un contrôle sous la forme et sa valeur.</span><span class="sxs-lookup"><span data-stu-id="3e346-226">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e346-227">Obtient un objet <see cref="T:System.IO.Stream" /> qui permet de lire le corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-227">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-228">Objet <see cref="T:System.IO.Stream" /> qui permet de lire le corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-228">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-229">Cette méthode est identique à <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> sauf qu’elle copie également les octets sont lus dans le stockage interne qui est utilisé par ASP.NET pour remplir le <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, et <xref:System.Web.HttpRequest.InputStream%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="3e346-229">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="3e346-230">Comme ces informations sont conservées, le code en aval comme les pages Web Forms ASP.NET (fichiers .aspx) s'exécutera avec succès.</span><span class="sxs-lookup"><span data-stu-id="3e346-230">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="3e346-231">Ce n'est pas le cas avec la méthode <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-231">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-232">Le corps de l'entité de la requête a déjà été chargé et analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-232">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="3e346-233">Les exemples de propriétés qui provoquent le chargement et l'analyse du corps de l'entité sont les suivants :</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-233">Examples of properties that cause the entity body to be loaded and parsed include the following:</span>
          </span>
          <span data-ttu-id="3e346-234">- La propriété <see cref="P:System.Web.HttpRequest.Form" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-234">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          </span>
          <span data-ttu-id="3e346-235">- La propriété <see cref="P:System.Web.HttpRequest.Files" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-235">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          </span>
          <span data-ttu-id="3e346-236">- La propriété <see cref="P:System.Web.HttpRequest.InputStream" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-236">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          </span>
          <span data-ttu-id="3e346-237">- La méthode <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-237">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span>
          </span>
          <span data-ttu-id="3e346-238">Pour éviter cette exception, appelez la méthode <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> en premier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-238">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="3e346-239">Cette exception est également levée si le client se déconnecte lors de la lecture d'un corps d'entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-239">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-240">Obtient un objet <see cref="T:System.IO.Stream" /> qui permet de lire le corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-240">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e346-241">Obtient un objet <see cref="T:System.IO.Stream" /> qui permet de lire le corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-241">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-242">Objet <see cref="T:System.IO.Stream" /> qui permet de lire le corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-242">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-243">Cette méthode fournit une alternative à l’utilisation de la <xref:System.Web.HttpRequest.InputStream%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3e346-243">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="3e346-244">Le <xref:System.Web.HttpRequest.InputStream%2A> propriété attend jusqu'à ce que la demande entière a été reçue avant de retourner un <xref:System.IO.Stream> objet.</span><span class="sxs-lookup"><span data-stu-id="3e346-244">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="3e346-245">En revanche, le <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> méthode retourne le <xref:System.IO.Stream> immédiatement l’objet.</span><span class="sxs-lookup"><span data-stu-id="3e346-245">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="3e346-246">Vous pouvez utiliser la méthode pour commencer à traiter le corps d’entité avant que le contenu du corps complet ont été reçu.</span><span class="sxs-lookup"><span data-stu-id="3e346-246">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="3e346-247">Le corps d’entité (ou autant que vous avez demander et a été reçu) est retourné uniquement lorsque vous utilisez l’objet qui est retourné par cette méthode pour lire le flux, en appelant des méthodes telles que la <xref:System.IO.Stream.Read%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e346-247">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="3e346-248">Vous utilisez des paramètres de la <xref:System.IO.Stream.Read%2A> méthode pour spécifier la partie du corps d’entité à lire.</span><span class="sxs-lookup"><span data-stu-id="3e346-248">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="3e346-249">Le <xref:System.IO.Stream> objet retourné par ASP.NET à partir de cette méthode prend en charge les méthodes de lecture à la fois synchrones et asynchrones.</span><span class="sxs-lookup"><span data-stu-id="3e346-249">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="3e346-250">Le <xref:System.IO.Stream> objet implémente à la fois le <xref:System.IO.Stream.BeginRead%2A> et <xref:System.IO.Stream.EndRead%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="3e346-250">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="3e346-251">Les méthodes asynchrones vous permettent de lire de façon asynchrone l’entité de requête dans des segments, alors que ASP.NET libère le thread actuel entre chaque itération d’une boucle de lecture asynchrone.</span><span class="sxs-lookup"><span data-stu-id="3e346-251">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="3e346-252">Cette méthode peut être utile si la requête télécharge un fichier volumineux et que vous souhaitez commencer à accéder au contenu du fichier avant que le téléchargement est terminé.</span><span class="sxs-lookup"><span data-stu-id="3e346-252">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="3e346-253">Toutefois, vous devez utiliser uniquement cette méthode pour les scénarios où vous souhaitez reprendre à tout le traitement du corps d’entité.</span><span class="sxs-lookup"><span data-stu-id="3e346-253">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="3e346-254">Cela signifie que vous ne pouvez pas utiliser cette méthode à partir d’une page .aspx, car au moment où qu'une page .aspx s’exécute, le corps d’entité a déjà été lu.</span><span class="sxs-lookup"><span data-stu-id="3e346-254">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-255">Le corps de l'entité de la requête a déjà été chargé et analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-255">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="3e346-256">Les exemples de propriétés qui provoquent le chargement et l'analyse du corps de l'entité sont les suivants :</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-256">Examples of properties that cause the entity body to be loaded and parsed include the following:</span>
          </span> 
-   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /><span data-ttu-id="3e346-257">Pour éviter cette exception, appelez la méthode <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> en premier.</span><span class="sxs-lookup"><span data-stu-id="3e346-257">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span><span data-ttu-id="3e346-258">Cette exception est également levée si le client se déconnecte lors de la lecture d'un corps d'entité.</span><span class="sxs-lookup"><span data-stu-id="3e346-258">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength">
          <span data-ttu-id="3e346-259">
            <see langword="true" /> pour désactiver la longueur maximale des requêtes ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-259">
              <see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-260">Obtient un objet <see cref="T:System.IO.Stream" /> qui peut être utilisé pour lire le corps d'entité HTTP entrant, en désactivant éventuellement la longueur maximale des requêtes définie dans la propriété <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-260">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-261">Objet <see cref="T:System.IO.Stream" /> qui permet de lire le corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-261">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-262">Pour plus d’informations sur cette méthode, consultez la <xref:System.Web.HttpRequest.GetBufferlessInputStream> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="3e346-262">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-263">Le corps de l'entité de la requête a déjà été chargé et analysé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-263">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="3e346-264">Les exemples de propriétés qui provoquent le chargement et l'analyse du corps de l'entité sont les suivants :</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-264">Examples of properties that cause the entity body to be loaded and parsed include the following:</span>
          </span>
          <span data-ttu-id="3e346-265">- La propriété <see cref="P:System.Web.HttpRequest.Form" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-265">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          </span>
          <span data-ttu-id="3e346-266">- La propriété <see cref="P:System.Web.HttpRequest.Files" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-266">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          </span>
          <span data-ttu-id="3e346-267">- La propriété <see cref="P:System.Web.HttpRequest.InputStream" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-267">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          </span>
          <span data-ttu-id="3e346-268">- La méthode <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-268">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span>
          </span>
          <span data-ttu-id="3e346-269">Pour éviter cette exception, appelez la méthode <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> en premier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-269">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="3e346-270">Cette exception est également levée si le client se déconnecte lors de la lecture d'un corps d'entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-270">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-271">Obtient une collection d’en-têtes HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-271">Gets a collection of HTTP headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-272">
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> d'en-têtes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-272">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-273">Pour obtenir la liste de tous les en-têtes possibles, consultez [Request Header Fields](http://go.microsoft.com/fwlink/?LinkId=73147) sur le site Web de W3C.</span><span class="sxs-lookup"><span data-stu-id="3e346-273">For a listing of all possible headers, see [Request Header Fields](http://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-274">L’exemple de code suivant affiche les noms et valeurs de tous les en-têtes dans la requête HTTP.</span><span class="sxs-lookup"><span data-stu-id="3e346-274">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-275">Obtient l'objet <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> de l'instance actuelle de <see cref="T:System.Web.HttpWorkerRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-275">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-276">Objet <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> de l'instance actuelle de <see cref="T:System.Web.HttpWorkerRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-276">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3e346-277">L'objet <see cref="T:System.Web.HttpWorkerRequest" /> actif n'est ni un objet <see langword="System.Web.Hosting.IIS7WorkerRequest" /> ni un objet <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-277">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-278">Obtient la méthode de transfert de données HTTP (par exemple :  <see langword="GET" />, <see langword="POST" /> ou <see langword="HEAD" />) utilisée par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-278">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-279">Méthode de transfert de données HTTP utilisée par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-279">The HTTP data transfer method used by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-280">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.HttpMethod%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-280">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-281">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-281">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="3e346-282">L’exemple suivant montre la sortie produite par ce code.</span><span class="sxs-lookup"><span data-stu-id="3e346-282">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-283">Obtient le contenu du corps de l'entité HTTP entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-283">Gets the contents of the incoming HTTP entity body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-284">Objet <see cref="T:System.IO.Stream" /> représentant le contenu du corps de contenu HTTP entrant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-284">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-285">L’exemple de code suivant copie le contenu d’un <xref:System.Web.HttpRequest.InputStream%2A> dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="3e346-285">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-286">Fournit un wrapper managé pour la méthode IIS qui insère un corps d'entité de requête HTTP dans la mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-286">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-287">Le <xref:System.Web.HttpRequest.InsertEntityBody%2A> surcharges de méthode fournissant un accès géré à l’IIS 7 `IHttpRequest::InsertEntityBody` (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e346-287">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="3e346-288">La méthode IIS insère un corps d’entité HTTP (les données publiées par un client) dans la mémoire.</span><span class="sxs-lookup"><span data-stu-id="3e346-288">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="3e346-289">Cela est utile, car IIS ne conserve pas une copie de l’entité de requête après avoir été lue.</span><span class="sxs-lookup"><span data-stu-id="3e346-289">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="3e346-290">Le <xref:System.Web.HttpRequest.InsertEntityBody%2A> méthodes créer une copie de données d’entité de requête HTTP et à la disposition IIS pour un traitement personnalisé supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="3e346-290">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e346-291">Le <xref:System.Web.HttpRequest.InsertEntityBody%2A> les surcharges de méthode fonctionnent uniquement sur IIS 7.0 ou version ultérieure, car le `IHttpRequest::InsertEntityBody` méthode a été ajoutée dans IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="3e346-291">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e346-292">Fournit à IIS une copie du corps d'entité de la requête HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-292">Provides IIS with a copy of the HTTP request entity body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-293">IIS ne conserve pas une copie de la demande après avoir été lue.</span><span class="sxs-lookup"><span data-stu-id="3e346-293">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="3e346-294">Par conséquent, il est recommandé qu’uniquement le Gestionnaire d’une requête HTTP doit lire l’entité de demande.</span><span class="sxs-lookup"><span data-stu-id="3e346-294">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="3e346-295">Le <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> surcharge de méthode fournit à IIS une copie de l’entité de requête si elle a été lue précédemment par ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="3e346-295">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="3e346-296">Cette surcharge de méthode est utile lorsque ASP.NET a lu la demande d’entité et que vous souhaitez réutiliser les données existantes de la demande.</span><span class="sxs-lookup"><span data-stu-id="3e346-296">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3e346-297">La méthode a été appelée sur une version d’IIS antérieure à IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-297">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="3e346-298">pour fonctionner dans un environnement hébergé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-298">For operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="3e346-299">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-299">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="3e346-300">Énumération associée : <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-300">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3e346-301">Tableau qui contient les données d'entité de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-301">An array that contains the request entity data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3e346-302">Position de base zéro dans <c>buffer</c> où commencer le stockage des données d’entité de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-302">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3e346-303">Nombre d’octets à lire dans le tableau <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-303">The number of bytes to read into the <c>buffer</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-304">Fournit à IIS une copie du corps d'entité de la requête HTTP et des informations à propos de l'objet d'entité de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-304">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-305">IIS ne conserve pas une copie de la demande après avoir été lue.</span><span class="sxs-lookup"><span data-stu-id="3e346-305">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="3e346-306">Par conséquent, il est recommandé qu’uniquement le Gestionnaire d’une requête HTTP doit lire l’entité de demande.</span><span class="sxs-lookup"><span data-stu-id="3e346-306">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="3e346-307">Le <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> surcharge de méthode est utile lorsque vous souhaitez effectuer un traitement personnalisé, telles que l’insertion d’un corps d’entité différents dans la mémoire.</span><span class="sxs-lookup"><span data-stu-id="3e346-307">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3e346-308">La méthode a été appelée sur une version d’IIS antérieure à IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-308">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e346-309">
            <paramref name="buffer" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-309">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e346-310">
            <paramref name="offset" /> est une valeur négative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-310">
              <paramref name="offset" /> is a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e346-311">Le nombre d'éléments dans <paramref name="count" /> est supérieur à l'espace disponible dans <paramref name="buffer" />, étant donné la valeur de <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-311">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="3e346-312">pour fonctionner dans un environnement hébergé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-312">for operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="3e346-313">Action de sécurité : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-313">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="3e346-314">Énumération associée : <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-314">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-315">Obtient une valeur indiquant si la requête a été authentifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-315">Gets a value indicating whether the request has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-316">
            <see langword="true" /> si la demande a été authentifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-316">
              <see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-317">Le code suivant exemple utilise le <xref:System.Web.HttpRequest.IsAuthenticated%2A> propriété afin de déterminer si la requête actuelle a été authentifiée.</span><span class="sxs-lookup"><span data-stu-id="3e346-317">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="3e346-318">Si elle n’a pas été authentifié, la demande est redirigée vers une autre page où les utilisateurs peuvent entrer leurs informations d’identification dans l’application Web.</span><span class="sxs-lookup"><span data-stu-id="3e346-318">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="3e346-319">Il s’agit d’une technique courante utilisée dans la page par défaut pour une application.</span><span class="sxs-lookup"><span data-stu-id="3e346-319">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-320">Obtient une valeur indiquant si la requête provient d'un ordinateur local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-320">Gets a value indicating whether the request is from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-321">
            <see langword="true" /> si la requête provient de l'ordinateur local ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-321">
              <see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-322">Le <xref:System.Web.HttpRequest.IsLocal%2A> retourne de la propriété `true` si l’adresse IP de l’expéditeur de la demande est 127.0.0.1 ou si l’adresse IP de la demande est identique à l’adresse IP du serveur.</span><span class="sxs-lookup"><span data-stu-id="3e346-322">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-323">Obtient une valeur indiquant si la connexion HTTP est sécurisée (c'est-à-dire de type HTTPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-323">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-324">
            <see langword="true" /> s'il s'agit d'une connexion SSL ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-324">
              <see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-325">L’exemple de code suivant détermine si le <xref:System.Web.HttpRequest.IsSecureConnection%2A> propriété est définie sur false.</span><span class="sxs-lookup"><span data-stu-id="3e346-325">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="3e346-326">Dans le cas, le <xref:System.Web.HttpResponse.SuppressContent%2A> propriété est définie sur true pour arrêter l’envoi de réponse en cours.</span><span class="sxs-lookup"><span data-stu-id="3e346-326">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3e346-327">Nom du membre de collection à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-327">The name of the collection member to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-328">Obtient l'objet spécifié des collections <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> ou <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-328">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-329">Membre de collection <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> ou <see cref="P:System.Web.HttpRequest.ServerVariables" /> spécifié dans le paramètre <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-329">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span>
          </span>
          <span data-ttu-id="3e346-330">Si le <paramref name="key" /> spécifié est introuvable, la valeur <see langword="null" /> est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-330">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-331">Obtient le type <see cref="T:System.Security.Principal.WindowsIdentity" /> pour l'utilisateur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-331">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-332">Objet <see cref="T:System.Security.Principal.WindowsIdentity" /> pour les paramètres d'authentification Microsoft Internet Information Services (IIS) actuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-332">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-333">Le <xref:System.Web.HttpRequest.LogonUserIdentity%2A> propriété expose les propriétés et méthodes de la <xref:System.Security.Principal.WindowsIdentity> objet pour l’utilisateur actuellement connecté à Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="3e346-333">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="3e346-334">L’instance de la <xref:System.Security.Principal.WindowsIdentity> classe qui est exposé par <xref:System.Web.HttpRequest.LogonUserIdentity%2A> suit le jeton de demande IIS et fournit un accès facile à ce jeton pour la requête HTTP actuelle traitée dans ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="3e346-334">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="3e346-335">Une instance de la <xref:System.Security.Principal.WindowsIdentity> classe est créée automatiquement donc il n’a pas besoin d’être construite pour accéder à ses méthodes et propriétés.</span><span class="sxs-lookup"><span data-stu-id="3e346-335">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-336">L’exemple de code suivant montre comment récupérer le <xref:System.Web.HttpRequest.LogonUserIdentity%2A> propriété pour l’utilisateur actuel et écrire les valeurs de chaque élément dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="3e346-336">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="3e346-337">Placez ce code dans la page ASP.NET référencée par le formulaire `ACTION` attribut.</span><span class="sxs-lookup"><span data-stu-id="3e346-337">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3e346-338">L’application web s’exécute dans IIS 7 en mode intégré et l’événement <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> n’a pas encore été déclenché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-338">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="3e346-339">Nom de l'image interactive du formulaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-339">The name of the form image map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-340">Mappe un paramètre de formulaire avec champ image entrant aux valeurs de coordonnées x/y appropriées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-340">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-341">Tableau d'entiers à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-341">A two-dimensional array of integers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-342">Mappe le chemin d’accès virtuel de l’URL demandée à un chemin physique sur le serveur pour la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-342">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="3e346-343">Chemin d’accès virtuel (absolu ou relatif) de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-343">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-344">Mappe le chemin d’accès virtuel spécifié à un chemin d’accès physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-344">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-345">Chemin d'accès physique sur le serveur spécifié par <paramref name="virtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-345">The physical path on the server specified by <paramref name="virtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="3e346-346">Le <xref:System.Web.HttpRequest.MapPath%2A> propriété contient potentiellement des informations sensibles sur l’environnement d’hébergement.</span><span class="sxs-lookup"><span data-stu-id="3e346-346">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="3e346-347">La valeur de retour ne doit pas être affichée aux utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="3e346-347">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-348">Le code suivant exemple utilise le <xref:System.Web.HttpRequest.MapPath%2A> méthode pour convertir un chemin d’accès virtuel en un chemin d’accès physique qualifié complet sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="3e346-348">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="3e346-349">Cet exemple comporte deux parties :</span><span class="sxs-lookup"><span data-stu-id="3e346-349">This example has two parts:</span></span>  
  
-   <span data-ttu-id="3e346-350">Une page .aspx mappe le chemin d’accès, lit le fichier et affiche les résultats de l’opération de lecture.</span><span class="sxs-lookup"><span data-stu-id="3e346-350">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="3e346-351">Une classe, `UpperCaseFilterStream`, qui change tous les caractères en majuscules.</span><span class="sxs-lookup"><span data-stu-id="3e346-351">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="3e346-352">La première partie de l’exemple montre comment convertir un chemin d’accès virtuel à un chemin d’accès physique qualifié complet à l’aide de la <xref:System.Web.HttpRequest.MapPath%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="3e346-352">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="3e346-353">Ce chemin d’accès physique est ensuite transmise à un <xref:System.IO.StreamReader> objet qui reçoit le contenu du fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-353">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="3e346-354">Le <xref:System.Web.HttpResponse.Write%2A> méthode est ensuite appelée pour afficher le contenu du fichier sur la page.</span><span class="sxs-lookup"><span data-stu-id="3e346-354">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="3e346-355">Le <xref:System.Web.HttpResponse.Filter%2A> propriété est utilisée pour joindre un filtre dans le flux de réponse qui met le texte affiché à la page tout en majuscules.</span><span class="sxs-lookup"><span data-stu-id="3e346-355">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="3e346-356">La deuxième partie de l’exemple montre une classe qui hérite de <xref:System.IO.Stream> et convertit tous les caractères dans un flux de données en majuscules.</span><span class="sxs-lookup"><span data-stu-id="3e346-356">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="3e346-357">Placez ce code dans le `App_Code` dossier pour votre application.</span><span class="sxs-lookup"><span data-stu-id="3e346-357">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-358">Aucun objet <see cref="T:System.Web.HttpContext" /> n'est défini pour la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-358">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="3e346-359">Chemin d’accès virtuel (absolu ou relatif) de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-359">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <param name="baseVirtualDir">
          <span data-ttu-id="3e346-360">Chemin d’accès du répertoire de base virtuel utilisé pour la résolution relative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-360">The virtual base directory path used for relative resolution.</span>
          </span>
        </param>
        <param name="allowCrossAppMapping">
          <span data-ttu-id="3e346-361">
            <see langword="true" /> pour indiquer que <c>virtualPath</c> peut appartenir à une autre application ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-361">
              <see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-362">Mappe le chemin d’accès virtuel spécifié à un chemin d’accès physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-362">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-363">Chemin d’accès physique sur le serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-363">The physical path on the server.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="3e346-364">Le <xref:System.Web.HttpRequest.MapPath%2A> propriété contient potentiellement des informations sensibles sur l’environnement d’hébergement.</span><span class="sxs-lookup"><span data-stu-id="3e346-364">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="3e346-365">La valeur de retour ne doit pas être affichée aux utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="3e346-365">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-366">Aucun objet <see cref="T:System.Web.HttpContext" /> n'est défini pour la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-366">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="3e346-367">Nom du champ image.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-367">The name of the image field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-368">Mappe un paramètre de formulaire avec champ image entrant aux valeurs de coordonnées x/y appropriées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-368">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3e346-369">Valeurs de coordonnées x et y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-369">The x and y coordinate values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-370">Obtient une collection combinée d'éléments <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> et <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-370">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-371">Objet <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-371">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-372">Paires nom-valeur sont ajoutés à la collection dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="3e346-372">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="3e346-373">Paramètres de chaîne de requête.</span><span class="sxs-lookup"><span data-stu-id="3e346-373">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="3e346-374">Champs de formulaire.</span><span class="sxs-lookup"><span data-stu-id="3e346-374">Form fields.</span></span>  
  
3.  <span data-ttu-id="3e346-375">Cookies.</span><span class="sxs-lookup"><span data-stu-id="3e346-375">Cookies.</span></span>  
  
4.  <span data-ttu-id="3e346-376">Variables de serveur.</span><span class="sxs-lookup"><span data-stu-id="3e346-376">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-377">L’exemple de code suivant montre comment itérer sur le <xref:System.Web.HttpRequest.Params%2A> propriété pour une page et comment afficher chaque paire clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="3e346-377">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-378">Obtient le chemin d'accès virtuel de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-378">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-379">Chemin d'accès virtuel de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-379">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-380">Le <xref:System.Web.HttpRequest.Path%2A> est la concaténation de la <xref:System.Web.HttpRequest.FilePath%2A> et le <xref:System.Web.HttpRequest.PathInfo%2A> code de fin.</span><span class="sxs-lookup"><span data-stu-id="3e346-380">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="3e346-381">Par exemple, pour l’URL http://www.contoso.com/virdir/page.html/tail, le <xref:System.Web.HttpRequest.Path%2A> est /virdir/page.html/tail.</span><span class="sxs-lookup"><span data-stu-id="3e346-381">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-382">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.Path%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-382">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-383">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-383">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-384">Obtient des informations supplémentaires sur le chemin d’accès d’une ressource avec extension URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-384">Gets the additional path information for a resource with a URL extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-385">Informations supplémentaires sur le chemin d’accès d’une ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-385">The additional path information for a resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-386">Pour l’URL Http://www.contoso.com/virdir/page.html/tail, le <xref:System.Web.HttpRequest.PathInfo%2A> valeur est "/tail".</span><span class="sxs-lookup"><span data-stu-id="3e346-386">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-387">L’exemple de code suivant détermine si le <xref:System.Web.HttpRequest.PathInfo%2A> propriété contient une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="3e346-387">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="3e346-388">Si tel est le cas le <xref:System.IO.StreamWriter.Write%2A> méthode écrit une chaîne indiquant que ce dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-388">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="3e346-389">Dans ce cas, le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode code en HTML la valeur de la <xref:System.Web.HttpRequest.PathInfo%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode écrit la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-389">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="3e346-390">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-390">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-391">Obtient le chemin d’accès physique, dans le système de fichiers, du répertoire racine de l’application serveur en cours d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-391">Gets the physical file system path of the currently executing server application's root directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-392">Chemin d’accès au répertoire racine de l’application actuelle dans le système de fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-392">The file system path of the current application's root directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-393">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-393">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-394">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-395">Obtient le chemin d’accès physique, dans le système de fichiers, correspondant à l’URL demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-395">Gets the physical file system path corresponding to the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-396">Chemin d’accès de la requête actuelle dans le système de fichiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-396">The file system path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-397">Dans les scénarios de redirection à l’aide de <xref:System.Web.HttpServerUtility.Execute%2A> et <xref:System.Web.HttpServerUtility.Transfer%2A>, le <xref:System.Web.HttpRequest.PhysicalPath%2A> propriété retourne le chemin d’accès à la page d’origine.</span><span class="sxs-lookup"><span data-stu-id="3e346-397">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="3e346-398">Pour rechercher le chemin d’accès physique de l’utilisation de page en cours d’exécution le <xref:System.Web.HttpRequest.MapPath%2A> méthode avec l’argument d’entrée défini comme le <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3e346-398">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-399">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.PhysicalPath%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-399">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-400">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-400">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-401">Obtient la collection des variables de chaîne de requête HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-401">Gets the collection of HTTP query string variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-402">Variables de chaîne de requête envoyées par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-402">The query string variables sent by the client.</span>
          </span>
          <span data-ttu-id="3e346-403">Les clés et les valeurs sont décodées par URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-403">Keys and values are URL-decoded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-404">L’exemple de code suivant montre deux façons d’obtenir la valeur d’une variable de chaîne de requête nommée « fullname ».</span><span class="sxs-lookup"><span data-stu-id="3e346-404">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="3e346-405">Dans chaque cas, si l’URL est `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, alors la valeur retournée est « Fadi Fakhouri », car le `%20` est décodée URL dans un espace.</span><span class="sxs-lookup"><span data-stu-id="3e346-405">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="3e346-406">Si l’URL n’a pas un `fullname` ID de chaîne de requête, la valeur retournée serait `null`.</span><span class="sxs-lookup"><span data-stu-id="3e346-406">If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="3e346-407">La première ligne de code recherche la clé « fullname » uniquement dans la chaîne de requête ; la deuxième ligne recherche la clé « fullname » dans toutes les collections de demande HTTP.</span><span class="sxs-lookup"><span data-stu-id="3e346-407">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="3e346-408">Pour plus d’informations sur la deuxième ligne, consultez <xref:System.Web.HttpRequest.Item%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-408">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-409">Obtient l'URL brute de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-409">Gets the raw URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-410">URL brute de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-410">The raw URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-411">L’URL brute est défini comme la partie de l’URL qui suit les informations de domaine.</span><span class="sxs-lookup"><span data-stu-id="3e346-411">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="3e346-412">Dans la chaîne d’URL http://www.contoso.com/articles/recent.aspx, l’URL brute est /articles/recent.aspx.</span><span class="sxs-lookup"><span data-stu-id="3e346-412">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="3e346-413">L’URL brute comprend la chaîne de requête, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="3e346-413">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-414">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.RawUrl%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-414">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-415">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-415">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-416">Obtient une valeur qui indique si le corps d'entité de requête a été lu et, si tel est le cas, comment il a été lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-416">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-417">Valeur qui indique comment le corps de l'entité de requête a été lu, ou qu'il n'a pas été lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-417">The value that indicates how the request entity body was read, or that it has not been read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-418">Cette méthode est utilisée pour éviter l’exception est levée si le corps d’entité a déjà été lu et une tentative est effectuée pour le lire à l’aide d’une méthode incompatible.</span><span class="sxs-lookup"><span data-stu-id="3e346-418">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="3e346-419">Méthodes et propriétés que vous lire le corps d’entité sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="3e346-419">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="3e346-420">La propriété <xref:System.Web.HttpRequest.Form%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-420">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="3e346-421">La propriété <xref:System.Web.HttpRequest.Files%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-421">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="3e346-422">La propriété <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e346-422">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="3e346-423">Méthode <xref:System.Web.HttpRequest.GetBufferedInputStream%2A></span><span class="sxs-lookup"><span data-stu-id="3e346-423">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="3e346-424">Méthode <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A></span><span class="sxs-lookup"><span data-stu-id="3e346-424">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-425">Obtient l'instance <see cref="T:System.Web.Routing.RequestContext" /> de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-425">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-426">Instance de <see cref="T:System.Web.Routing.RequestContext" /> de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-426">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
          <span data-ttu-id="3e346-427">Pour les requêtes non routées, l'objet <see cref="T:System.Web.Routing.RequestContext" /> retourné est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-427">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-428">Cette propriété fournit l’accès à la <xref:System.Web.Routing.RouteData> objet pour la requête actuelle.</span><span class="sxs-lookup"><span data-stu-id="3e346-428">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="3e346-429">Pour plus d’informations sur le routage ASP.NET, consultez. [Routage ASP.NET](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span><span class="sxs-lookup"><span data-stu-id="3e346-429">For more information about ASP.NET routing, see.[ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-430">Obtient ou définit la méthode de transfert de données HTTP (<see langword="GET" /> ou <see langword="POST" />) utilisée par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-430">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-431">Chaîne représentant le type d'appel HTTP envoyé par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-431">A string representing the HTTP invocation type sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-432">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.RequestType%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-432">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-433">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-433">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="3e346-434">Chemin d’accès au lecteur physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-434">The physical drive path.</span>
          </span>
        </param>
        <param name="includeHeaders">
          <span data-ttu-id="3e346-435">Valeur booléenne indiquant si un en-tête HTTP doit être enregistré sur disque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-435">A Boolean value specifying whether an HTTP header should be saved to disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3e346-436">Enregistre une requête HTTP sur disque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-436">Saves an HTTP request to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-437">L’enregistrement du contexte de requête sur le disque peut être utile lors du débogage.</span><span class="sxs-lookup"><span data-stu-id="3e346-437">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-438">Le code suivant exemple appelle la <xref:System.Web.HttpRequest.SaveAs%2A> méthode lorsqu’une page est chargée.</span><span class="sxs-lookup"><span data-stu-id="3e346-438">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="3e346-439">L’appel spécifie que la demande sera enregistré sous un fichier texte dans un répertoire où l’identité du processus ASP.NET a été accordée autorisations en écriture, et que les informations d’en-tête incluses dans la demande sont incluses dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-439">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3e346-440">La propriété <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> de <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> a la valeur <see langword="true" />, mais <paramref name="filename" /> n'est pas un chemin d'accès absolu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-440">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-441">Obtient une collection des variables de serveur web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-441">Gets a collection of Web server variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-442">
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> de variables de serveur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-442">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-443">Pour obtenir la liste des variables serveur prises en charge par IIS, consultez [Variables serveur IIS](http://go.microsoft.com/fwlink/?LinkId=52471).</span><span class="sxs-lookup"><span data-stu-id="3e346-443">For a list of server variables supported by IIS, see [IIS Server Variables](http://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e346-444">L’exemple de code suivant affiche les noms et valeurs de toutes les variables de serveur nommée.</span><span class="sxs-lookup"><span data-stu-id="3e346-444">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-445">Obtient un objet <see cref="T:System.Threading.CancellationToken" /> dépassé lors de l'expiration d'une requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-445">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-446">Jeton d'annulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-446">The cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-447">Le délai d’expiration peut être spécifié dans le fichier Web.config (consultez <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) ou par programmation (voir <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="3e346-447">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="3e346-448">Le délai d’expiration est mesuré à partir du moment que la demande arrive.</span><span class="sxs-lookup"><span data-stu-id="3e346-448">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="3e346-449">Si le délai d’expiration par défaut de 110 secondes est en vigueur, le jeton d’annulation sera dépassé n’antérieures à 110 secondes après le début du traitement de la demande.</span><span class="sxs-lookup"><span data-stu-id="3e346-449">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="3e346-450">Vous pouvez modifier le <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> valeur de propriété, et que la durée pendant laquelle ce jeton n’a pas encore dépassé, la nouvelle valeur de délai d’attente est respectée.</span><span class="sxs-lookup"><span data-stu-id="3e346-450">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="3e346-451">Le jeton fournit actuellement que la granularité de deuxième 15, ce qui signifie que si la valeur de délai d’expiration est de 110 secondes, le jeton sera être dépassé un certain temps entre 110 et 125 secondes après le début du traitement de la demande.</span><span class="sxs-lookup"><span data-stu-id="3e346-451">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="3e346-452">La granularité peut changer à l’avenir.</span><span class="sxs-lookup"><span data-stu-id="3e346-452">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="3e346-453">Même si cette propriété est thread-safe, il existe des restrictions sur son utilisation.</span><span class="sxs-lookup"><span data-stu-id="3e346-453">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="3e346-454">Pour plus d'informations, consultez <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e346-454">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3e346-455">Cette propriété est sans signification si le traitement de la requête WebSocket a commencé.</span><span class="sxs-lookup"><span data-stu-id="3e346-455">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-456">Obtient les informations de liaison de jeton TLS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-456">Gets the TLS token binding information.</span>
          </span>
          <span data-ttu-id="3e346-457">La propriété permet aux applications de récupérer des informations de jeton dans les requêtes HTTP entrantes pour une authentification améliorée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-457">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-458">Jeton de liaison pour la connexion actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-458">The binding token for the current connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-459">Cette propriété retourne `null` sur les plateformes non Windows-10.</span><span class="sxs-lookup"><span data-stu-id="3e346-459">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-460">Obtient le nombre d'octets dans le flux d'entrée actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-460">Gets the number of bytes in the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-461">Nombre d'octets dans le flux d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-461">The number of bytes in the input stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-462">L’exemple de code suivant détermine si le <xref:System.Web.HttpRequest.TotalBytes%2A> valeur de propriété est supérieure à 1 000 octets et écrit ces informations dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-462">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-463">Obtient les valeurs de requête HTTP sans déclencher la validation de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-463">Gets the HTTP request values without triggering request validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-464">Valeurs de requête qui n’ont pas été vérifiées via la validation de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-464">The HTTP request values that have not been checked using request validation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-465">Demander des contrôles de validation de balisage HTML ou script pouvant indiquer une attaque de script entre sites potentielle.</span><span class="sxs-lookup"><span data-stu-id="3e346-465">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="3e346-466">Par défaut, toutes les valeurs sont vérifiées à l’aide de la validation de la demande et si toutes les valeurs contient le balisage ou un script, ASP.NET lève une <xref:System.Web.HttpRequestValidationException> exception.</span><span class="sxs-lookup"><span data-stu-id="3e346-466">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="3e346-467">Utilisez cette méthode si vous pensez que la demande contiendra le balisage (par exemple, vous autorisez les utilisateurs à publier du contenu qui contient le balisage) et que vous souhaitez obtenir la valeur brute d’une demande.</span><span class="sxs-lookup"><span data-stu-id="3e346-467">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3e346-468">Si vous utilisez cette propriété, vous devez vérifier manuellement les données des attaques de script entre sites potentielles.</span><span class="sxs-lookup"><span data-stu-id="3e346-468">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-469">Obtient des informations sur l'URL de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-469">Gets information about the URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-470">Objet <see cref="T:System.Uri" /> qui contient l'URL de la requête actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-470">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-471">Le code suivant exemple assigne le <xref:System.Uri> objet de la requête actuelle à une variable objet et affiche la valeur de deux propriétés de l’URL de l’objet dans la sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="3e346-471">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-472">Obtient des informations sur l'URL de la précédente requête du client qui était liée à l'URL actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-472">Gets information about the URL of the client's previous request that linked to the current URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-473">Objet <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-473">A <see cref="T:System.Uri" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-474">L’exemple de code suivant affiche la valeur de deux propriétés de l’URL faisant référence au client à l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="3e346-474">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="3e346-475">L'en-tête de demande HTTP <see langword="Referer" /> est incorrect et ne peut pas être converti en un objet <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-475">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-476">Obtient la chaîne d'agent utilisateur brute du navigateur client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-476">Gets the raw user agent string of the client browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-477">Chaîne d'agent utilisateur brute du navigateur client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-477">The raw user agent string of the client browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-478">L’exemple de code suivant affecte l’identification de type du navigateur demandeur à une variable de chaîne.</span><span class="sxs-lookup"><span data-stu-id="3e346-478">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-479">Obtient l'adresse d'hôte IP du client distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-479">Gets the IP host address of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-480">Adresse IP du client distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-480">The IP address of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-481">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.UserHostAddress%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-481">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-482">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-482">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-483">Obtient le nom DNS du client distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-483">Gets the DNS name of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-484">Nom DNS du client distant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-484">The DNS name of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-485">Le code suivant exemple utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode à encoder en HTML la valeur de la <xref:System.Web.HttpRequest.UserHostName%2A> propriété et la <xref:System.IO.TextWriter.WriteLine%2A> méthode pour écrire la valeur encodée dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="3e346-485">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="3e346-486">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.HttpRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="3e346-486">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3e346-487">Obtient un tableau de chaînes trié contenant les préférences de langue du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-487">Gets a sorted string array of client language preferences.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3e346-488">Tableau de chaînes trié contenant les préférences linguistiques du client ou <see langword="null" /> s'il est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-488">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e346-489">L’exemple de code suivant capture les multiples valeurs retournées par la <xref:System.Web.HttpRequest.UserLanguages%2A> propriété dans un tableau de chaînes et les écritures de nom de chaque langue à une ligne distincte de la sortie HTTP.</span><span class="sxs-lookup"><span data-stu-id="3e346-489">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="3e346-490">Les noms de langage sont fournis par le navigateur, et il n’existe aucune liste définitive de tous les codes possibles.</span><span class="sxs-lookup"><span data-stu-id="3e346-490">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="3e346-491">En général, il s’agit d’un codes à deux caractères pour la langue, un trait d’union et un code de deux caractères pour la culture, tels que « en-us » pour les États-Unis L’anglais et « fr-ca » pour Français du Canada.</span><span class="sxs-lookup"><span data-stu-id="3e346-491">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3e346-492">Génère la validation des collections accessibles via les propriétés <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" /> et <see cref="P:System.Web.HttpRequest.QueryString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-492">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e346-493">Le <xref:System.Web.HttpRequest> classe utilise les indicateurs de validation d’entrée pour effectuer le suivi s’il faut effectuer une validation sur les collections de demandes accédées via le <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, et <xref:System.Web.HttpRequest.QueryString%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="3e346-493">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="3e346-494">Le <xref:System.Web.HttpRequest.ValidateInput%2A> méthode définit ces indicateurs afin qu’au moment où les accesseurs get de la <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, ou <xref:System.Web.HttpRequest.QueryString%2A> propriété sont appelées, la validation des entrées est effectuée.</span><span class="sxs-lookup"><span data-stu-id="3e346-494">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="3e346-495">La validation fonctionne en vérifiant toutes les données d’entrée par rapport à une liste codée en dur des données potentiellement dangereuses.</span><span class="sxs-lookup"><span data-stu-id="3e346-495">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="3e346-496">Si la fonctionnalité de validation est activée par la directive de page ou la configuration, cette méthode est appelée au cours de la page `ProcessRequest` phase du traitement.</span><span class="sxs-lookup"><span data-stu-id="3e346-496">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="3e346-497">Le <xref:System.Web.HttpRequest.ValidateInput%2A> méthode peut être appelée par votre code si la fonctionnalité de validation n’est pas activée.</span><span class="sxs-lookup"><span data-stu-id="3e346-497">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException">
          <span data-ttu-id="3e346-498">Réception de données potentiellement dangereuses envoyées par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3e346-498">Potentially dangerous data was received from the client.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>