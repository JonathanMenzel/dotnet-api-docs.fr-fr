<Type Name="AspNetHostingPermission" FullName="System.Web.AspNetHostingPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1b5faad484bc2bd763cd3b0bd26d8600d7a1755" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39947061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AspNetHostingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AspNetHostingPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Web.AspNetHostingPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetHostingPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetHostingPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type AspNetHostingPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contrôle les autorisations d'accès dans les environnements hébergés par ASP.NET. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.AspNetHostingPermission> classe est utilisée conjointement avec la sécurité d’accès du code pour vous aider à protéger les types publics dans les espaces de noms System.Web. Code doit posséder au moins le <xref:System.Web.AspNetHostingPermissionLevel.Minimal> approbation niveau pour accéder à des classes ASP.NET protégées.  
  
 Le <xref:System.Web.AspNetHostingPermission> la classe <xref:System.Web.AspNetHostingPermission.Level%2A> propriété est définie en configurant le niveau de confiance approprié dans l’élément de configuration. Par défaut, le `level` attribut de la `trust` élément de configuration est définie sur `Full`. Autrement dit, par défaut, les applications ASP.NET s’exécutent sous le <xref:System.Web.AspNetHostingPermissionLevel.Unrestricted> niveau. Création d’un domaine d’application ASP.NET, ASP.NET lit la valeur spécifiée pour le `level` attribut de la `trust` l’élément de configuration, crée une instance de la <xref:System.Web.AspNetHostingPermission> classe avec la valeur <xref:System.Web.AspNetHostingPermission.Level%2A> attribut, et puis ajoute la classe pour la jeu d’autorisations pour le domaine d’application. Pour plus d’informations, consultez [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
 Il est recommandé de définir le `level` attribut de la `trust` élément de configuration `High` pour les sites qui sont approuvés. Pour les sites qui ne sont pas approuvés, tel qu’un serveur Web qui héberge des sites qui exécutent le code à partir d’un client externe, il est recommandé de définir le `level` attribut de la `trust` élément de configuration `Medium`.  
  
 Les jeux d’autorisations qui sont définies par défaut pour le .NET Framework (par exemple, LocalIntranet, Internet et ainsi de suite) n’incluent pas le <xref:System.Web.AspNetHostingPermission> autorisation. Autrement dit, le <xref:System.Web.AspNetHostingPermission> autorisation est attribuée uniquement, par défaut, aux applications qui s’exécutent sous `Full` approbation.  
  
   
  
## Examples  
 L’exemple de code suivant montre une classe protégée à l’aide du <xref:System.Web.AspNetHostingPermission> autorisation. Code doit être en cours d’exécution au moins <xref:System.Web.AspNetHostingPermissionLevel.Minimal> <xref:System.Web.AspNetHostingPermission> autorisation <xref:System.Web.AspNetHostingPermission.Level%2A> afin de créer une instance de la classe.  
  
 [!code-csharp[System.Web.AspNetHostingPermission#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.AspNetHostingPermission/CS/CustomAspNetClass.cs#1)]
 [!code-vb[System.Web.AspNetHostingPermission#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.AspNetHostingPermission/VB/CustomAspNetClass.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.AspNetHostingPermissionAttribute" />
    <altmember cref="T:System.Web.AspNetHostingPermissionLevel" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.AspNetHostingPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspNetHostingPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspNetHostingPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Web.AspNetHostingPermission : System.Security.Permissions.PermissionState -&gt; System.Web.AspNetHostingPermission" Usage="new System.Web.AspNetHostingPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.AspNetHostingPermission" /> avec la valeur d'énumération <see cref="T:System.Security.Permissions.PermissionState" /> spécifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Aucune des valeurs d'énumération de <see cref="T:System.Security.Permissions.PermissionState" /> n'est affectée à <paramref name="state" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspNetHostingPermission (System.Web.AspNetHostingPermissionLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.AspNetHostingPermissionLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As AspNetHostingPermissionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspNetHostingPermission(System::Web::AspNetHostingPermissionLevel level);" />
      <MemberSignature Language="F#" Value="new System.Web.AspNetHostingPermission : System.Web.AspNetHostingPermissionLevel -&gt; System.Web.AspNetHostingPermission" Usage="new System.Web.AspNetHostingPermission level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Web.AspNetHostingPermissionLevel" />
      </Parameters>
      <Docs>
        <param name="level">Valeur d'énumération de <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.AspNetHostingPermission" /> avec le niveau d'autorisation spécifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.AspNetHostingPermission.Level" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="aspNetHostingPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas d’implémentation par une classe dérivée, crée et retourne une copie identique de l’objet d’autorisation actuel.</summary>
        <returns>Copie de l’objet d’autorisation actuel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="aspNetHostingPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">
          <see cref="T:System.Security.SecurityElement" /> contenant le codage XML à utiliser pour reconstruire l'objet d'autorisation.</param>
        <summary>Reconstruit un objet d'autorisation avec un état spécifié à partir d'un codage XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur la mise en forme de la représentation XML de l’état de l’objet autorisation, consultez [implémentation d’une autorisation personnalisée](http://msdn.microsoft.com/library/e3d0416b-7a3d-4074-9263-c7d6cd815585).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.Security.SecurityElement.Tag" /> de <paramref name="securityElement" /> ne correspond pas à l'autorisation IPermission.  
  
 <see langword="-" /> - ou - 
La classe <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> de <paramref name="securityElement" /> est <see langword="null" /> ou représente une chaîne vide ("").</exception>
        <altmember cref="T:System.Security.ISecurityEncodable" />
        <altmember cref="T:System.Security.IPermission" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="aspNetHostingPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
        <summary>En cas d’implémentation par une classe dérivée, crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</summary>
        <returns>
          <see cref="T:System.Security.IPermission" /> qui représente l'intersection entre l'autorisation actuelle et l'autorisation spécifiée ; sinon, <see langword="null" /> si l'intersection est vide.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> n'est pas <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
        <altmember cref="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)" />
        <altmember cref="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="aspNetHostingPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Security.IPermission" /> à combiner à l'autorisation actuelle. Elle doit être du même type que le <see cref="T:System.Security.IPermission" /> actuel.</param>
        <summary>Retourne une valeur indiquant si l'autorisation actuelle est un sous-ensemble de l'autorisation spécifiée.</summary>
        <returns>
          <see langword="true" /> si le <see cref="T:System.Security.IPermission" /> actuel est un sous-ensemble du <see cref="T:System.Security.IPermission" /> spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> n'est pas <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
        <altmember cref="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)" />
        <altmember cref="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="aspNetHostingPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si l'accès sans restriction à la ressource protégée par l'autorisation actuelle est accordé.</summary>
        <returns>
          <see langword="true" /> si l'utilisation sans restriction de la ressource protégée par l'autorisation est autorisée ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Web.AspNetHostingPermissionLevel Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.AspNetHostingPermissionLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Web.AspNetHostingPermission.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As AspNetHostingPermissionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::AspNetHostingPermissionLevel Level { System::Web::AspNetHostingPermissionLevel get(); void set(System::Web::AspNetHostingPermissionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Web.AspNetHostingPermissionLevel with get, set" Usage="System.Web.AspNetHostingPermission.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.AspNetHostingPermissionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le niveau d'autorisation d'hébergement actuel d'une application ASP.NET.</summary>
        <value>Une des valeurs d'énumération <see cref="T:System.Web.AspNetHostingPermissionLevel" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="aspNetHostingPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un codage XML de l'objet d'autorisation et de son état actuel.</summary>
        <returns>
          <see cref="T:System.Security.SecurityElement" /> contenant le codage XML de l'objet d'autorisation avec d'éventuelles informations sur son état.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="aspNetHostingPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Autorisation à combiner avec l’autorisation actuelle. Elle doit être du même type que l’autorisation actuelle.</param>
        <summary>Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</summary>
        <returns>
          <see cref="T:System.Security.IPermission" /> qui représente l'union entre l'autorisation en cours et l'autorisation spécifiée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> n'est pas <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
        <altmember cref="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)" />
      </Docs>
    </Member>
  </Members>
</Type>