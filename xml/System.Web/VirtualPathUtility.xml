<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da53f4d1224ce310eb35fb0871d28c64a80ec367" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53395550" /></Metadata><TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes utilitaires pour les opérations de chemin d'accès virtuel communes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.VirtualPathUtility> classe fournit des méthodes utilitaires pour les opérations courantes impliquant des chemins d’accès virtuels. Pour les contrôles serveur ASP.NET et code de serveur, des chemins d’accès virtuels à l’aide de l’opérateur de racine application Web, le tilde (~), sont utilisées au lieu de chemins relatifs et absolus. Pour plus d’informations, consultez [chemins de projet Web ASP.NET](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
 Utilisez la <xref:System.Web.VirtualPathUtility> classe lorsque vous avez besoin convertir des chemins d’accès relatif à l’application des chemins d’accès virtuels absolus, comme cela peut être le cas dans le développement d’un gestionnaire de service Web personnalisé.  
  
 Un chemin d’accès virtuel absolu commence par la marque de barre oblique littérale (/). Un chemin d’accès virtuel relatif est relatif au répertoire de racine d’application, s’il s’agit simplement d’un tilde (\~) ou commence par le tilde et une double barre oblique inverse (\~\\\\) ou le tilde et une barre oblique (\~/). Rendre un chemin d’accès virtuel relatif rend le chemin d’accès indépendant de l’application.  
  
 Le répertoire virtuel pour l’application peut être obtenu à partir de la <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> et <xref:System.Web.HttpRequest.ApplicationPath%2A> propriétés.  
  
> [!NOTE]
>  Le <xref:System.Web.VirtualPathUtility> classe n’est pas destinée à des fins de sécurité ou à la canonisation. Pour plus d’informations sur la sécurité des applications Web, consultez [vue d’ensemble des menaces de sécurité des applications Web](https://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a). Pour les fonctionnalités de traitement de l’URL générique, consultez <xref:System.Uri>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility> classe et certaines de ses méthodes. Tout d’abord, le <xref:System.Web.HttpRequest.FilePath%2A> propriété génère le chemin d’accès virtuel à la page Web. Le <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, et <xref:System.Web.VirtualPathUtility.GetDirectory%2A> méthodes retournent des informations sur le chemin d’accès virtuel. Ensuite, le <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propriété génère un chemin d’accès virtuel de la requête actuelle, ce qui peut être différente de la <xref:System.Web.HttpRequest.FilePath%2A> propriété, si un <xref:System.Web.HttpResponse.Redirect%2A> méthode a été appelée. Le <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, et <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthodes retournent des informations sur le chemin d’accès virtuel.  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">Chemins d’accès du Site Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel auquel ajouter la marque de barre oblique.</param>
        <summary>Ajoute la marque de barre oblique littérale (/) à la fin du chemin d'accès virtuel, si elle n'y figure pas encore.</summary>
        <returns>Chemin d'accès virtuel modifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la marque de barre oblique littérale (/) existe à la fin du chemin d’accès virtuel, le chemin d’accès virtuel n’est pas modifié.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Chemin d'accès de base.</param>
        <param name="relativePath">Chemin d'accès relatif.</param>
        <summary>Combine un chemin d'accès de base et un chemin d'accès relatif.</summary>
        <returns><paramref name="basePath" /> et <paramref name="relativePath" /> combinés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.VirtualPathUtility.Combine%2A> méthode retourne la valeur de la <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> propriété si le chemin d’accès relatif est exactement un tilde (~).  
  
 Le <xref:System.Web.VirtualPathUtility.Combine%2A> méthode utilise le <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> valeur de propriété plutôt que le chemin d’accès de base, si le chemin d’accès relatif commence par un tilde et une barre oblique (~ /) ; sinon, le <xref:System.Web.VirtualPathUtility.Combine%2A> méthode utilise le chemin d’accès de base.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="relativePath" /> est un chemin d'accès physique.  
  
ou 
 <paramref name="relativePath" /> comprend une ou plusieurs colonnes.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relativePath" /> est soit <see langword="null" /> soit une chaîne vide.  
  
- ou - 
 <paramref name="basePath" /> est soit <see langword="null" /> soit une chaîne vide.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel.</param>
        <summary>Retourne la partie répertoire d'un chemin d'accès virtuel.</summary>
        <returns>Répertoire référencé dans le chemin d'accès virtuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `virtualPath` est associé à aucune racine ; autrement dit, il n’est pas égal l’opérateur racine (le tilde [\~]), ne commence pas par un tilde (\~), par exemple un tilde et une barre oblique (\~/) ou un tilde et une double barre oblique inverse (\~/ /), ou pas commencer par une barre oblique (/), un <xref:System.ArgumentException> exception est levée.  
  
 Si le chemin d’accès virtuel qui est passé dans le <xref:System.Web.VirtualPathUtility.GetDirectory%2A> méthode est `"/images/image1.gif"`, le répertoire retourné est `"/images"`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, et <xref:System.Web.VirtualPathUtility.GetDirectory%2A> méthodes.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> n'est pas associé à une racine.  
  
ou 
 <paramref name="virtualPath" /> est soit <see langword="null" /> soit une chaîne vide.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel.</param>
        <summary>Récupère l'extension du fichier référencé dans le chemin d'accès virtuel.</summary>
        <returns>Le littéral de chaîne d'extension de nom de fichier, y compris le point (.), une valeur <see langword="null" /> ou une chaîne vide ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le chemin d’accès virtuel qui est passé dans le <xref:System.Web.VirtualPathUtility.GetExtension%2A> méthode est `"/images/image1.gif"`, l’extension retournée est `".gif"`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, et <xref:System.Web.VirtualPathUtility.GetDirectory%2A> méthodes.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> contient un ou plusieurs caractères qui ne sont pas valides, comme défini dans <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel.</param>
        <summary>Récupère le nom du fichier référencé dans le chemin d'accès virtuel.</summary>
        <returns>Le littéral de nom de fichier placé après le dernier caractère de répertoire dans <paramref name="virtualPath" /> ; sinon, le nom du dernier répertoire si le dernier caractère de <paramref name="virtualPath" /> est un caractère de séparation de répertoire ou de volume.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le chemin d’accès virtuel qui est passé dans le <xref:System.Web.VirtualPathUtility.GetFileName%2A> méthode est `"/images/image1.gif"`, le nom de fichier retourné est `"image1.gif"`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, et <xref:System.Web.VirtualPathUtility.GetDirectory%2A> méthodes.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> contient un ou plusieurs caractères qui ne sont pas valides, comme défini dans <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à contrôler.</param>
        <summary>Retourne une valeur Boolean qui indique si le chemin d'accès virtuel spécifié est absolu, c'est-à-dire s'il commence par une marque de barre oblique littérale (/).</summary>
        <returns><see langword="true" /> si <paramref name="virtualPath" /> est un chemin d'accès absolu et n'est ni <see langword="null" />, ni une chaîne vide ("") ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un chemin d’accès virtuel est absolu si elle commence par une marque de barre oblique littérale (/). Par exemple, le <xref:System.Web.HttpRequest.Path%2A> propriété retourne un chemin d’accès virtuel absolu.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, et <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthodes.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à contrôler.</param>
        <summary>Retourne une valeur Boolean qui indique si le chemin d'accès virtuel spécifié est relatif à l'application.</summary>
        <returns><see langword="true" /> si <paramref name="virtualPath" /> est relatif à l'application ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chemin d’accès virtuel peut être simplement l’opérateur racine (le tilde [~]), ou il peut commencer par l’opérateur de racine. Si `virtualPath` est `null`, un <xref:System.ArgumentNullException> exception est levée. Si `virtualPath` est une chaîne vide (" »), la <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> retourne de la méthode `false`.  
  
> [!NOTE]
>  `"~` `filename` `"` n’est pas un chemin d’accès virtuel valide et retourne `false` pour le <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, et <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthodes.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">Chemin d'accès virtuel initial à partir duquel retourner le chemin d'accès virtuel relatif.</param>
        <param name="toPath">Chemin d'accès virtuel final auquel retourner le chemin d'accès virtuel relatif.</param>
        <summary>Retourne le chemin d'accès virtuel relatif d'un chemin d'accès virtuel qui contient l'opérateur de racine (le tilde [~]) à un autre.</summary>
        <returns>Chemin d'accès virtuel relatif de <paramref name="fromPath" /> à <paramref name="toPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `fromPath` et `toPath` paramètres ne sont pas enracinés ; autrement dit, ils ne sont pas égales l’opérateur racine (le tilde [\~]), ne commencent pas par un tilde (\~), par exemple un tilde et une barre oblique (\~/) ou un tilde et une valeur double barre oblique inverse (\~/ /), ou ne commencent pas par une barre oblique (/), un <xref:System.ArgumentException> exception est levée.  
  
 Paramètres de chaîne de requête et les points d’ancrage HTML qui sont utilisés dans l’URI ne sont pas utilisés pour déterminer le chemin d’accès relatif.  
  
 Si `fromPath` est `"/directory1/file1.aspx"` et `toPath` est `"/directory2/file2.aspx"`, le <xref:System.Web.VirtualPathUtility.MakeRelative%2A> retourne de la méthode `"../directory2/file2.aspx"`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fromPath" /> n'est pas associé à une racine.  
  
ou 
 <paramref name="toPath" /> n'est pas associé à une racine.</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel dans lequel supprimer toute marque de barre oblique de fin.</param>
        <summary>Supprime une marque de barre oblique (/) de fin dans un chemin d'accès virtuel.</summary>
        <returns>Un chemin d'accès virtuel sans marque de barre oblique de fin, si le chemin d'accès virtuel ne correspond pas au répertoire racine ("/") ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> méthode supprime une barre oblique (/) à partir de la fin du chemin d’accès virtuel. Si le chemin d’accès virtuel est déjà le répertoire racine (`"/"`), aucune action n’est effectuée. Si le chemin d’accès virtuel est `null` ou une chaîne vide (" »), la <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> méthode retourne `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Convertit un chemin d'accès virtuel en un chemin d'accès d'application absolu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à convertir en chemin d'accès relatif à l'application.</param>
        <summary>Convertit un chemin d'accès virtuel en un chemin d'accès d'application absolu.</summary>
        <returns>Représentation du chemin d'accès absolu du chemin d'accès virtuel spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un chemin d’accès absolu à l’application est un dans lequel le chemin d’accès de l’application est utilisée au lieu de l’opérateur de racine (le tilde [~]).  
  
 Si `virtualPath` est :  
  
-   Absolu, le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> méthode retourne le chemin d’accès virtuel inchangé.  
  
-   Relatif à l’application, le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> méthode ajoute le chemin d’accès du répertoire virtuel d’application actuel au début de la `virtualPath`. Par exemple, le chemin de répertoire virtuel d’application actuel est accessible à partir du <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> propriété.  
  
-   Associé à aucune racine, le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> méthode déclenche un <xref:System.ArgumentOutOfRangeException> exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="virtualPath" /> n'est pas associé à une racine.</exception>
        <exception cref="T:System.Web.HttpException">Un point double (..) de début est utilisé pour s'arrêter au-dessus du répertoire supérieur.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à convertir en chemin d'accès relatif à l'application.</param>
        <param name="applicationPath">Chemin d'accès d'application à utiliser pour convertir <paramref name="virtualPath" /> en un chemin d'accès relatif.</param>
        <summary>Convertit un chemin d'accès virtuel en un chemin d'accès d'application absolu à l'aide du chemin d'accès d'application spécifié.</summary>
        <returns>Représentation en chemin d'accès virtuel absolu de <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> surcharge de la <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> méthode utilise le chemin d’accès d’application fourni plutôt que le chemin d’accès d’application actuel.  
  
 Si `virtualPath` est :  
  
-   Absolu, le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> méthode retourne le chemin d’accès virtuel sans aucune modification.  
  
-   Relatif à l’application, le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> ajoute de la méthode `applicationPath` au début du chemin d’accès virtuel.  
  
-   Associé à aucune racine, le <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> méthode déclenche un <xref:System.ArgumentOutOfRangeException> exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="applicationPath" /> n'est pas associé à une racine.</exception>
        <exception cref="T:System.Web.HttpException">Un point double (..) de début est utilisé dans le chemin d'accès d'application pour s'arrêter au-dessus du répertoire supérieur.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Convertit un chemin d'accès virtuel en un chemin d'accès relatif à une application.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à convertir en chemin d'accès relatif à l'application.</param>
        <summary>Convertit un chemin d'accès virtuel en un chemin d'accès relatif à l'application à l'aide du chemin d'accès virtuel d'application qui figure dans la propriété <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />.</summary>
        <returns>La représentation en chemin d'accès relatif à l'application de <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le chemin d’accès virtuel de l’application est `"myapp"` et le chemin d’accès virtuel `"/myApp/sub/default.asp"` est passé dans le <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> , le chemin d’accès relatif à l’application qui en résulte est `"~/sub/default.aspx"`.  
  
 Si `virtualPath` ne commence pas par le chemin actuel de l’application, le <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthode retourne le chemin d’accès virtuel inchangé.  
  
 Si `virtualPath` est le même que le chemin d’accès de l’application, l’opérateur de racine (le tilde [~]), est retourné. Par exemple, le chemin de répertoire virtuel d’application actuel est accessible à partir du <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, et <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthodes.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à convertir en chemin d'accès relatif à l'application.</param>
        <param name="applicationPath">Chemin d'accès d'application à utiliser pour convertir <paramref name="virtualPath" /> en un chemin d'accès relatif.</param>
        <summary>Convertit un chemin d'accès virtuel en un chemin d'accès relatif à une application à l'aide du chemin d'accès d'application spécifié.</summary>
        <returns>La représentation en chemin d'accès relatif à l'application de <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> surcharge de la <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthode utilise `applicationPath` plutôt que le chemin d’accès d’application actuel. Si `virtualPath` ne commence pas par `applicationPath`, le <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> méthode retourne le chemin d’accès virtuel inchangé.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>