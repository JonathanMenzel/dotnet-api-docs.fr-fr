<Type Name="HttpWorkerRequest" FullName="System.Web.HttpWorkerRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5845ee71184920f7f3b1ee46088ee0798e1124d0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpWorkerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract HttpWorkerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpWorkerRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpWorkerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpWorkerRequest abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="07957-101">Cette classe abstraite définit les méthodes de travail et les énumérations de base utilisées par le code managé ASP.NET pour traiter les demandes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="07957-101">This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-102">Dans la plupart des cas, votre code ne traite pas avec <xref:System.Web.HttpWorkerRequest> directement, car les données de demande et de réponse sont exposées via la <xref:System.Web.HttpRequest> et <xref:System.Web.HttpResponse> classes.</span><span class="sxs-lookup"><span data-stu-id="07957-102">In most cases, your code will not deal with <xref:System.Web.HttpWorkerRequest> directly because request and response data are exposed through the <xref:System.Web.HttpRequest> and <xref:System.Web.HttpResponse> classes.</span></span> <span data-ttu-id="07957-103">Certaines classes ASP.NET internes étendent cette classe.</span><span class="sxs-lookup"><span data-stu-id="07957-103">Some internal ASP.NET classes extend this class.</span></span> <span data-ttu-id="07957-104">Si votre code implémente son propre environnement d’hébergement, elle devra étendre cette classe pour appeler le <xref:System.Web.HttpRuntime.ProcessRequest%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="07957-104">If your code implements its own hosting environment, it will need to extend this class to call the <xref:System.Web.HttpRuntime.ProcessRequest%2A> method.</span></span> <span data-ttu-id="07957-105">En outre, votre code peut créer une classe dérivée pour exécuter des demandes enfants dans une application donnée afin de passer son instance à <xref:System.Web.HttpRuntime.ProcessRequest%2A>.</span><span class="sxs-lookup"><span data-stu-id="07957-105">In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <xref:System.Web.HttpRuntime.ProcessRequest%2A>.</span></span> <span data-ttu-id="07957-106">Dans ce cas, la classe dérivée doit conserver une référence à le <xref:System.Web.HttpWorkerRequest> et déléguer la plupart des méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-106">In this case, the derived class should keep a reference to the current <xref:System.Web.HttpWorkerRequest> and delegate most of the methods to it.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWorkerRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpWorkerRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-107">Initialise une nouvelle instance de la classe <see cref="T:System.Web.HttpWorkerRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-107">Initializes a new instance of the <see cref="T:System.Web.HttpWorkerRequest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-108">Le <xref:System.Web.HttpWorkerRequest.%23ctor%2A> constructeur est le constructeur par défaut pour la <xref:System.Web.HttpWorkerRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="07957-108">The <xref:System.Web.HttpWorkerRequest.%23ctor%2A> constructor is the default constructor for the <xref:System.Web.HttpWorkerRequest> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="07957-109">Méthode à appeler lorsqu'une opération asynchrone correspondante se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-109">The method to call when a corresponding asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="07957-110">Objet fourni par l'utilisateur qui distingue cette requête de vidage asynchrone des autres requêtes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-110">A user-provided object that distinguishes this particular asynchronous flush operation from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-111">Envoie la réponse actuellement en mémoire tampon au client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-111">Sends the currently buffered response to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-112">La requête de travail place en mémoire tampon l'état, les en-têtes et le corps de la réponse jusqu'à ce qu'une opération de vidage asynchrone soit lancée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-112">The worker request buffers the status, headers, and response body until an asynchronous flush operation is initiated.</span>
          </span>
          <span data-ttu-id="07957-113">Si l'objet <see cref="T:System.Web.HttpWorkerRequest" /> sous-jacent prend en charge le vidage asynchrone et si cette méthode est appelée à partir d'un événement de module asynchrone ou d'un gestionnaire asynchrone, l'opération d'envoi est exécutée de façon asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-113">If the underlying <see cref="T:System.Web.HttpWorkerRequest" /> object supports asynchronous flush and this method is called from an asynchronous module event or asynchronous handler, the send operation is performed asynchronously.</span>
          </span>
          <span data-ttu-id="07957-114">Sinon, l'implémentation effectue une opération de vidage synchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-114">Otherwise, the implementation performs a synchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07957-115">Mémoire tampon dans laquelle lire les données.buffer</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-115">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="07957-116">Dans le tampon, décalage d'octets à partir duquel commencer l'écriture des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-116">The byte offset in the buffer at which to begin writing data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="07957-117">Nombre maximal d'octets à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-117">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="07957-118">Méthode à appeler lorsqu'une opération asynchrone correspondante se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-118">The method to call when a corresponding asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="07957-119">Objet fourni par l'utilisateur qui distingue cette lecture asynchrone des autres requêtes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-119">A user-provided object that distinguishes this particular asynchronous read from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-120">Lance une opération de lecture asynchrone du corps d'entité de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-120">Begins an asynchronous read operation of the request entity body.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public virtual void CloseConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-121">Termine la connexion avec le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-121">Terminates the connection with the client.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public virtual void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="07957-122">Référence à la requête asynchrone en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-122">A reference to the pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-123">Attend que l'opération de vidage asynchrone se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-123">Waits for the pending asynchronous flush operation to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfRequest">
      <MemberSignature Language="C#" Value="public abstract void EndOfRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOfRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndOfRequest" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndOfRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndOfRequest();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-124">Utilisé par le runtime pour avertir <see cref="T:System.Web.HttpWorkerRequest" /> que le traitement de la demande en cours est terminé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-124">Used by the runtime to notify the <see cref="T:System.Web.HttpWorkerRequest" /> that request processing for the current request is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="07957-125">Référence à la requête asynchrone en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-125">A reference to the pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-126">Attend que l'opération de lecture asynchrone en attente se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-126">Waits for the pending asynchronous read operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-127">Nombre d'octets lus dans le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-127">The number of bytes that have been read from the stream.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushResponse">
      <MemberSignature Language="C#" Value="public abstract void FlushResponse (bool finalFlush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlushResponse(bool finalFlush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FlushResponse (finalFlush As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FlushResponse(bool finalFlush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalFlush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalFlush">
          <span data-ttu-id="07957-128">
            <see langword="true" /> s'il s'agit de la dernière fois où les données de réponse seront vidées ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-128">
              <see langword="true" /> if this is the last time response data will be flushed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-129">Envoie au client toutes les données de réponse en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-129">Sends all pending response data to the client.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPath">
      <MemberSignature Language="C#" Value="public virtual string GetAppPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAppPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-130">Retourne le chemin d'accès virtuel à l'application serveur en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-130">Returns the virtual path to the currently executing server application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-131">Chemin d'accès virtuel de l'application actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-131">The virtual path of the current application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetAppPathTranslated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPathTranslated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPathTranslated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPathTranslated () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAppPathTranslated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-132">Retourne le chemin d'accès physique à l'application serveur d'exécution actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-132">Returns the physical path to the currently executing server application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-133">Chemin d'accès physique de l'application en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-133">The physical path of the current application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPoolID">
      <MemberSignature Language="C#" Value="public virtual string GetAppPoolID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPoolID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPoolID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPoolID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAppPoolID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-134">En cas de substitution dans une classe dérivée, retourne l'ID du pool d'applications pour l'URL actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-134">When overridden in a derived class, returns the application pool ID for the current URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-135">Retourne systématiquement une valeur Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-135">Always returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytesRead">
      <MemberSignature Language="C#" Value="public virtual long GetBytesRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytesRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetBytesRead" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytesRead () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetBytesRead();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-136">Obtient le nombre d'octets lus depuis le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-136">Gets the number of bytes read in from the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-137">
            <see langword="Long" /> qui contient le nombre d'octets lus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-137">A <see langword="Long" /> containing the number of bytes read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificate () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetClientCertificate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-138">En cas de substitution dans une classe dérivée, obtient les champs de certification (spécifiés dans la norme X.509) d'une demande émise par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-138">When overridden in a derived class, gets the certification fields (specified in the X.509 standard) from a request issued by the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-139">Tableau d'octets qui contient le flux de l'intégralité du contenu du certificat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-139">A byte array containing the stream of the entire certificate content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-140">Si aucun certificat n’est envoyé, le <xref:System.Web.HttpRequest.ClientCertificate%2A> collection renvoie une valeur vide.</span><span class="sxs-lookup"><span data-stu-id="07957-140">If no certificate is sent, the <xref:System.Web.HttpRequest.ClientCertificate%2A> collection returns empty.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateBinaryIssuer">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificateBinaryIssuer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificateBinaryIssuer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateBinaryIssuer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetClientCertificateBinaryIssuer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-141">Obtient l'émetteur du certificat au format binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-141">Gets the certificate issuer, in binary format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-142">Tableau d'octets qui contient l'émetteur de certificat exprimé au format binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-142">A byte array containing the certificate issuer expressed in binary format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateEncoding">
      <MemberSignature Language="C#" Value="public virtual int GetClientCertificateEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetClientCertificateEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateEncoding () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetClientCertificateEncoding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-143">En cas de substitution dans une classe dérivée, retourne l'objet <see cref="T:System.Text.Encoding" /> dans lequel le certificat client a été codé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-143">When overridden in a derived class, returns the <see cref="T:System.Text.Encoding" /> object in which the client certificate was encoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-144">Codage du certificat sous forme d'entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-144">The certificate encoding, expressed as an integer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificatePublicKey">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificatePublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificatePublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificatePublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificatePublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetClientCertificatePublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-145">En cas de substitution dans une classe dérivée, obtient un objet <see langword="PublicKey" /> associé au certificat client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-145">When overridden in a derived class, gets a <see langword="PublicKey" /> object associated with the client certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-146">Objet <see langword="PublicKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-146">A <see langword="PublicKey" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateValidFrom">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidFrom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetClientCertificateValidFrom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateValidFrom () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime GetClientCertificateValidFrom();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-147">En cas de substitution dans une classe dérivée, obtient la date à laquelle le certificat devient valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-147">When overridden in a derived class, gets the date when the certificate becomes valid.</span>
          </span>
          <span data-ttu-id="07957-148">La date varie selon les paramètres internationaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-148">The date varies with international settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-149">Objet <see cref="T:System.DateTime" /> qui représente le moment où le certificat devient valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-149">A <see cref="T:System.DateTime" /> object representing when the certificate becomes valid.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateValidUntil">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidUntil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetClientCertificateValidUntil() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateValidUntil" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateValidUntil () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime GetClientCertificateValidUntil();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-150">Obtient la date d'expiration du certificat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-150">Gets the certificate expiration date.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-151">Objet <see cref="T:System.DateTime" /> qui représente la date à laquelle le certificat expire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-151">A <see cref="T:System.DateTime" /> object representing the date that the certificate expires.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionID">
      <MemberSignature Language="C#" Value="public virtual long GetConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetConnectionID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionID () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetConnectionID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-152">En cas de substitution dans une classe dérivée, retourne l'ID de la connexion actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-152">When overridden in a derived class, returns the ID of the current connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-153">Retourne toujours 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-153">Always returns 0.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilePath">
      <MemberSignature Language="C#" Value="public virtual string GetFilePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilePath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilePath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-154">En cas de substitution dans une classe dérivée, retourne le chemin d'accès virtuel à l'URI demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-154">When overridden in a derived class, returns the virtual path to the requested URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-155">Chemin d'accès à l'URI demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-155">The path to the requested URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilePathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetFilePathTranslated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePathTranslated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetFilePathTranslated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilePathTranslated () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilePathTranslated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-156">Retourne le chemin d'accès physique à l'URI demandé (et effectue une conversion du chemin d'accès virtuel en chemin d'accès physique : par exemple « /proj1/page.aspx » devient « c:\dir\page.aspx »).</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-156">Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, "/proj1/page.aspx" to "c:\dir\page.aspx")</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-157">Chemin d'accès physique converti à l'URI demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-157">The translated physical file path to the requested URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpVerbName">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVerbName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetHttpVerbName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetHttpVerbName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHttpVerbName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetHttpVerbName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-158">Retourne le membre spécifié de l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-158">Returns the specified member of the request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-159">Verbe HTTP retourné dans l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-159">The HTTP verb returned in the request header.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpVersion">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetHttpVersion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetHttpVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHttpVersion () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetHttpVersion();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-160">Donne accès à la version HTTP de la demande (par exemple,"HTTP/1.1").</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-160">Provides access to the HTTP version of the request (for example, "HTTP/1.1").</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-161">Version HTTP retournée dans l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-161">The HTTP version returned in the request header.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetKnownRequestHeader (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKnownRequestHeader(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKnownRequestHeader (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKnownRequestHeader(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="07957-162">Index de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-162">The index of the header.</span>
          </span>
          <span data-ttu-id="07957-163">Par exemple, le champ <see cref="F:System.Web.HttpWorkerRequest.HeaderAllow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-163">For example, the <see cref="F:System.Web.HttpWorkerRequest.HeaderAllow" /> field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-164">Retourne l'en-tête de demande HTTP standard qui correspond à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-164">Returns the standard HTTP request header that corresponds to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-165">En-tête de la demande HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-165">The HTTP request header.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownRequestHeaderIndex (string header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetKnownRequestHeaderIndex(string header) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownRequestHeaderIndex (header As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetKnownRequestHeaderIndex(System::String ^ header);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">
          <span data-ttu-id="07957-166">Nom de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-166">The name of the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-167">Retourne le numéro d'index de l'en-tête de demande HTTP spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-167">Returns the index number of the specified HTTP request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-168">Numéro d'index de l'en-tête de demande HTTP spécifié dans le paramètre <paramref name="header" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-168">The index number of the HTTP request header specified in the <paramref name="header" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownRequestHeaderName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetKnownRequestHeaderName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownRequestHeaderName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetKnownRequestHeaderName(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="07957-169">Numéro d'index de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-169">The index number of the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-170">Retourne le nom de l'en-tête de demande HTTP spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-170">Returns the name of the specified HTTP request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-171">Nom de l'en-tête de demande HTTP spécifié dans le paramètre <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-171">The name of the HTTP request header specified in the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownResponseHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownResponseHeaderIndex (string header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetKnownResponseHeaderIndex(string header) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownResponseHeaderIndex (header As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetKnownResponseHeaderIndex(System::String ^ header);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">
          <span data-ttu-id="07957-172">Nom de l’en-tête HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-172">The name of the HTTP header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-173">Retourne le numéro d'index de l'en-tête de réponse HTTP spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-173">Returns the index number of the specified HTTP response header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-174">Numéro d'index de l'en-tête de réponse HTTP spécifié dans le paramètre <paramref name="header" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-174">The index number of the HTTP response header specified in the <paramref name="header" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownResponseHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownResponseHeaderName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetKnownResponseHeaderName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownResponseHeaderName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetKnownResponseHeaderName(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="07957-175">Numéro d'index de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-175">The index number of the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-176">Retourne le nom de l'en-tête de réponse HTTP spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-176">Returns the name of the specified HTTP response header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-177">Nom de l'en-tête de réponse HTTP spécifié dans le paramètre <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-177">The name of the HTTP response header specified in the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalAddress">
      <MemberSignature Language="C#" Value="public abstract string GetLocalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLocalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetLocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLocalAddress () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetLocalAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-178">Fournit un accès au membre spécifié de l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-178">Provides access to the specified member of the request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-179">Adresse IP du serveur retournée dans l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-179">The server IP address returned in the request header.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalPort">
      <MemberSignature Language="C#" Value="public abstract int GetLocalPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLocalPort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetLocalPort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLocalPort () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetLocalPort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-180">Fournit un accès au membre spécifié de l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-180">Provides access to the specified member of the request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-181">Numéro de port du serveur retourné dans l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-181">The server port number returned in the request header.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathInfo">
      <MemberSignature Language="C#" Value="public virtual string GetPathInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPathInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPathInfo () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPathInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-182">Retourne des informations supplémentaires sur le chemin d'accès pour une ressource avec une extension d'URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-182">Returns additional path information for a resource with a URL extension.</span>
          </span>
          <span data-ttu-id="07957-183">Pour le chemin "/virdir/page.html/tail", la valeur <see langword="GetPathInfo" /> est "/tail".</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-183">That is, for the path /virdir/page.html/tail, the <see langword="GetPathInfo" /> value is /tail.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-184">Informations supplémentaires sur le chemin d’accès d’une ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-184">Additional path information for a resource.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreloadedEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07957-185">Surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-185">Overloaded.</span>
          </span>
          <span data-ttu-id="07957-186">Retourne la partie qui, dans le corps de la demande HTTP, a déjà été lue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-186">Returns the portion of the HTTP request body that has currently been read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreloadedEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreloadedEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreloadedEntityBody () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreloadedEntityBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-187">Retourne la partie qui, dans le corps de la demande HTTP, a déjà été lue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-187">Returns the portion of the HTTP request body that has already been read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-188">Partie qui, dans le corps de la demande HTTP, a été lue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-188">The portion of the HTTP request body that has been read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBody (byte[] buffer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreloadedEntityBody(unsigned int8[] buffer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreloadedEntityBody (buffer As Byte(), offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreloadedEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07957-189">Données à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-189">The data to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="07957-190">Offset d'octet à partir duquel doit commencer la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-190">The byte offset at which to begin reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-191">Obtient la partie du corps de la demande HTTP qui a déjà été lue, à l'aide des données de mémoire tampon et de l'offset d'octet spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-191">Gets the portion of the HTTP request body that has currently been read by using the specified buffer data and byte offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-192">Partie qui, dans le corps de la demande HTTP, a été lue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-192">The portion of the HTTP request body that has been read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBodyLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreloadedEntityBodyLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreloadedEntityBodyLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreloadedEntityBodyLength();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-193">Obtient la longueur de la partie du corps de demande HTTP qui a déjà été lue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-193">Gets the length of the portion of the HTTP request body that has currently been read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-194">Entier qui contient la longueur du corps de la demande HTTP actuellement lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-194">An integer containing the length of the currently read HTTP request body.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProtocol">
      <MemberSignature Language="C#" Value="public virtual string GetProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProtocol () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetProtocol();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-195">En cas de substitution dans une classe dérivée, retourne le protocole HTTP (HTTP ou HTTPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-195">When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-196">HTTPS si la méthode <see cref="M:System.Web.HttpWorkerRequest.IsSecure" /> est <see langword="true" />, sinon HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-196">HTTPS if the <see cref="M:System.Web.HttpWorkerRequest.IsSecure" /> method is <see langword="true" />, otherwise HTTP.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryString">
      <MemberSignature Language="C#" Value="public abstract string GetQueryString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetQueryString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetQueryString" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetQueryString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetQueryString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-197">Retourne la chaîne de requête spécifiée dans l'URL de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-197">Returns the query string specified in the request URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-198">Chaîne de requête de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-198">The request query string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryStringRawBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetQueryStringRawBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetQueryStringRawBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetQueryStringRawBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueryStringRawBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetQueryStringRawBytes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-199">En cas de substitution dans une classe dérivée, retourne la chaîne de requête de la réponse sous forme de tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-199">When overridden in a derived class, returns the response query string as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-200">Tableau d'octets contenant la réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-200">An array of bytes containing the response.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawUrl">
      <MemberSignature Language="C#" Value="public abstract string GetRawUrl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRawUrl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRawUrl" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRawUrl () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetRawUrl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-201">Retourne le chemin d'accès de l'URL contenu dans l'en-tête de la demande, auquel est ajoutée la chaîne de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-201">Returns the URL path contained in the request header with the query string appended.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-202">Chemin d'accès de l'URL brut de l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-202">The raw URL path of the request header.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteAddress">
      <MemberSignature Language="C#" Value="public abstract string GetRemoteAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRemoteAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRemoteAddress () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetRemoteAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-203">Fournit un accès au membre spécifié de l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-203">Provides access to the specified member of the request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-204">Adresse IP du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-204">The client's IP address.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteName">
      <MemberSignature Language="C#" Value="public virtual string GetRemoteName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRemoteName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemoteName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetRemoteName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-205">En cas de substitution dans une classe dérivée, retourne le nom de l'ordinateur client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-205">When overridden in a derived class, returns the name of the client computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-206">Nom de l'ordinateur client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-206">The name of the client computer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemotePort">
      <MemberSignature Language="C#" Value="public abstract int GetRemotePort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemotePort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemotePort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRemotePort () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetRemotePort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-207">Fournit un accès au membre spécifié de l'en-tête de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-207">Provides access to the specified member of the request header.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-208">Numéro de port HTTP du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-208">The client's HTTP port number.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestReason">
      <MemberSignature Language="C#" Value="public virtual int GetRequestReason ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRequestReason() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestReason () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRequestReason();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-209">En cas de substitution dans une classe dérivée, retourne la raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-209">When overridden in a derived class, returns the reason for the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-210">Code de raison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-210">Reason code.</span>
          </span>
          <span data-ttu-id="07957-211">La valeur par défaut est <see langword="ReasonResponseCacheMiss" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-211">The default is <see langword="ReasonResponseCacheMiss" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerName">
      <MemberSignature Language="C#" Value="public virtual string GetServerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetServerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetServerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetServerName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-212">En cas de substitution dans une classe dérivée, retourne le nom du serveur local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-212">When overridden in a derived class, returns the name of the local server.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-213">Nom du serveur local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-213">The name of the local server.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVariable">
      <MemberSignature Language="C#" Value="public virtual string GetServerVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetServerVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetServerVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetServerVariable(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="07957-214">Nom de la variable serveur demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-214">The name of the requested server variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-215">Retourne une seule variable serveur à partir d'un dictionnaire de variables serveur associées à la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-215">Returns a single server variable from a dictionary of server variables associated with the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-216">Variable serveur demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-216">The requested server variable.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusDescription">
      <MemberSignature Language="C#" Value="public static string GetStatusDescription (int code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStatusDescription(int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStatusDescription (code As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStatusDescription(int code);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="07957-217">Code d'état HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-217">The HTTP status code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-218">Retourne une chaîne qui décrit le nom du code d'état HTTP spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-218">Returns a string that describes the name of the specified HTTP status code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-219">Description de l'état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-219">The status description.</span>
          </span>
          <span data-ttu-id="07957-220">Par exemple, <see cref="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" /> (404) retourne « Not Found ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-220">For example, <see cref="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" /> (404) returns "Not Found".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTotalEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetTotalEntityBodyLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTotalEntityBodyLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetTotalEntityBodyLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTotalEntityBodyLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetTotalEntityBodyLength();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-221">Obtient la longueur de la totalité du corps de la demande HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-221">Gets the length of the entire HTTP request body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-222">Entier qui contient la longueur de la totalité du corps d'une demande HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-222">An integer containing the length of the entire HTTP request body.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetUnknownRequestHeader (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUnknownRequestHeader(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnknownRequestHeader (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUnknownRequestHeader(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="07957-223">Nom de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-223">The header name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-224">Retourne une valeur d'en-tête de demande HTTP non standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-224">Returns a nonstandard HTTP request header value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-225">La valeur d’en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-225">The header value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeaders">
      <MemberSignature Language="C#" Value="public virtual string[][] GetUnknownRequestHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[][] GetUnknownRequestHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnknownRequestHeaders () As String()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;cli::array &lt;System::String ^&gt; ^&gt; ^ GetUnknownRequestHeaders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-226">Obtient toutes les paires nom-valeur d'en-tête HTTP non standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-226">Get all nonstandard HTTP header name-value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-227">Tableau de paires nom-valeur d'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-227">An array of header name-value pairs.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUriPath">
      <MemberSignature Language="C#" Value="public abstract string GetUriPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUriPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUriPath" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUriPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUriPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-228">Retourne le chemin d'accès virtuel à l'URI demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-228">Returns the virtual path to the requested URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-229">Chemin d'accès à l'URI demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-229">The path to the requested URI.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlContextID">
      <MemberSignature Language="C#" Value="public virtual long GetUrlContextID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetUrlContextID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUrlContextID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlContextID () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetUrlContextID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-230">En cas de substitution dans une classe dérivée, retourne l'ID du contexte de la connexion actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-230">When overridden in a derived class, returns the context ID of the current connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-231">Retourne toujours 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-231">Always returns 0.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetUserToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetUserToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUserToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserToken () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetUserToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-232">En cas de substitution dans une classe dérivée, retourne le jeton d'emprunt d'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-232">When overridden in a derived class, returns the client's impersonation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-233">Valeur représentant le jeton d'emprunt d'identité du client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-233">A value representing the client's impersonation token.</span>
          </span>
          <span data-ttu-id="07957-234">La valeur par défaut est 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-234">The default is 0.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPathToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetVirtualPathToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetVirtualPathToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetVirtualPathToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualPathToken () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetVirtualPathToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-235">Obtient le jeton d'emprunt d'identité pour le chemin d'accès virtuel de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-235">Gets the impersonation token for the request virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-236">Pointeur mémoire non managé pour le jeton du chemin d'accès virtuel de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-236">An unmanaged memory pointer for the token for the request virtual path.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Function HasEntityBody () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasEntityBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-237">Retourne une valeur indiquant si la demande contient des données relatives au corps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-237">Returns a value indicating whether the request contains body data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-238">
            <see langword="true" /> si la demande en contient ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-238">
              <see langword="true" /> if the request contains body data; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAccept">
      <MemberSignature Language="C#" Value="public const int HeaderAccept = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAccept = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAccept" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAccept As Integer  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAccept = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-239">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Accept" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-239">Specifies the index number for the <see langword="Accept" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-240">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-240">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptCharset">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptCharset = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptCharset = (21)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptCharset" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptCharset As Integer  = 21" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptCharset = 21;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-241">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Accept-Charset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-241">Specifies the index number for the <see langword="Accept-Charset" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-242">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-242">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptEncoding = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptEncoding = (22)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptEncoding As Integer  = 22" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptEncoding = 22;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-243">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Accept-Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-243">Specifies the index number for the <see langword="Accept-Encoding" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-244">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-244">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptLanguage = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptLanguage = (23)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptLanguage As Integer  = 23" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptLanguage = 23;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-245">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Accept-Language" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-245">Specifies the index number for the <see langword="Accept-Language" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-246">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-246">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptRanges">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptRanges = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptRanges = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptRanges" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptRanges As Integer  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptRanges = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-247">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Accept-Ranges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-247">Specifies the index number for the <see langword="Accept-Ranges" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-248">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-248">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAge">
      <MemberSignature Language="C#" Value="public const int HeaderAge = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAge = (21)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAge" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAge As Integer  = 21" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAge = 21;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-249">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Age" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-249">Specifies the index number for the <see langword="Age" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-250">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-250">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAllow">
      <MemberSignature Language="C#" Value="public const int HeaderAllow = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAllow = (10)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAllow" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAllow As Integer  = 10" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAllow = 10;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-251">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Allow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-251">Specifies the index number for the <see langword="Allow" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-252">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-252">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderAuthorization = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAuthorization = (24)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAuthorization As Integer  = 24" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAuthorization = 24;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-253">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Authorization" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-253">Specifies the index number for the <see langword="Authorization" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-254">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-254">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderCacheControl">
      <MemberSignature Language="C#" Value="public const int HeaderCacheControl = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderCacheControl = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderCacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderCacheControl As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderCacheControl = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-255">Index représentant l'en-tête HTTP <see langword="Cache-Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-255">The index that represents the HTTP <see langword="Cache-Control" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-256">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-256">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderConnection">
      <MemberSignature Language="C#" Value="public const int HeaderConnection = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderConnection = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderConnection" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderConnection As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderConnection = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-257">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Connection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-257">Specifies the index number for the <see langword="Connection" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-258">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-258">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderContentEncoding = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentEncoding = (13)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentEncoding As Integer  = 13" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentEncoding = 13;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-259">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-259">Specifies the index number for the <see langword="Content-Encoding" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-260">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-260">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderContentLanguage = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLanguage = (14)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentLanguage As Integer  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentLanguage = 14;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-261">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-Language" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-261">Specifies the index number for the <see langword="Content-Language" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-262">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-262">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLength">
      <MemberSignature Language="C#" Value="public const int HeaderContentLength = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLength = (11)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentLength As Integer  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentLength = 11;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-263">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-263">Specifies the index number for the <see langword="Content-Length" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-264">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-264">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLocation">
      <MemberSignature Language="C#" Value="public const int HeaderContentLocation = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLocation = (15)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLocation" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentLocation As Integer  = 15" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentLocation = 15;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-265">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-Location" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-265">Specifies the index number for the <see langword="Content-Location" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-266">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-266">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentMd5">
      <MemberSignature Language="C#" Value="public const int HeaderContentMd5 = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentMd5 = (16)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentMd5" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentMd5 As Integer  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentMd5 = 16;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-267">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-MD5" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-267">Specifies the index number for the <see langword="Content-MD5" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-268">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-268">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentRange">
      <MemberSignature Language="C#" Value="public const int HeaderContentRange = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentRange = (17)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentRange" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentRange As Integer  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentRange = 17;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-269">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-269">Specifies the index number for the <see langword="Content-Range" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-270">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-270">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentType">
      <MemberSignature Language="C#" Value="public const int HeaderContentType = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentType = (12)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentType" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentType As Integer  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentType = 12;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-271">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Content-Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-271">Specifies the index number for the <see langword="Content-Type" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-272">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-272">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderCookie">
      <MemberSignature Language="C#" Value="public const int HeaderCookie = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderCookie = (25)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderCookie" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderCookie As Integer  = 25" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderCookie = 25;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-273">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Cookie" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-273">Specifies the index number for the <see langword="Cookie" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-274">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-274">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderDate">
      <MemberSignature Language="C#" Value="public const int HeaderDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderDate = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderDate" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderDate As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderDate = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-275">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-275">Specifies the index number for the <see langword="Date" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-276">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-276">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEtag">
      <MemberSignature Language="C#" Value="public const int HeaderEtag = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderEtag = (22)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderEtag" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderEtag As Integer  = 22" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderEtag = 22;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-277">Spécifie le numéro d'index de l'en-tête HTTP <see langword="ETag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-277">Specifies the index number for the <see langword="ETag" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-278">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-278">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderExpect">
      <MemberSignature Language="C#" Value="public const int HeaderExpect = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderExpect = (26)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderExpect" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderExpect As Integer  = 26" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderExpect = 26;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-279">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Except" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-279">Specifies the index number for the <see langword="Except" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-280">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-280">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderExpires">
      <MemberSignature Language="C#" Value="public const int HeaderExpires = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderExpires = (18)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderExpires" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderExpires As Integer  = 18" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderExpires = 18;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-281">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Expires" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-281">Specifies the index number for the <see langword="Expires" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-282">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-282">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderFrom">
      <MemberSignature Language="C#" Value="public const int HeaderFrom = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderFrom = (27)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderFrom" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderFrom As Integer  = 27" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderFrom = 27;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-283">Spécifie le numéro d'index de l'en-tête HTTP <see langword="From" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-283">Specifies the index number for the <see langword="From" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-284">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-284">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderHost">
      <MemberSignature Language="C#" Value="public const int HeaderHost = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderHost = (28)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderHost" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderHost As Integer  = 28" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderHost = 28;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-285">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Host" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-285">Specifies the index number for the <see langword="Host" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-286">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-286">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfMatch = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfMatch = (29)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfMatch" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfMatch As Integer  = 29" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfMatch = 29;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-287">Spécifie le numéro d'index de l'en-tête HTTP <see langword="If-Match" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-287">Specifies the index number for the <see langword="If-Match" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-288">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-288">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfModifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfModifiedSince = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfModifiedSince = (30)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfModifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfModifiedSince As Integer  = 30" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfModifiedSince = 30;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-289">Spécifie le numéro d'index de l'en-tête HTTP <see langword="If-Modified-Since" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-289">Specifies the index number for the <see langword="If-Modified-Since" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-290">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-290">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfNoneMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfNoneMatch = 31;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfNoneMatch = (31)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfNoneMatch" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfNoneMatch As Integer  = 31" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfNoneMatch = 31;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-291">Spécifie le numéro d'index de l'en-tête HTTP <see langword="If-None-Match" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-291">Specifies the index number for the <see langword="If-None-Match" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-292">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-292">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfRange">
      <MemberSignature Language="C#" Value="public const int HeaderIfRange = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfRange = (32)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfRange" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfRange As Integer  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfRange = 32;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-293">Spécifie le numéro d'index de l'en-tête HTTP <see langword="If-Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-293">Specifies the index number for the <see langword="If-Range" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-294">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-294">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfUnmodifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfUnmodifiedSince = 33;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfUnmodifiedSince = (33)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfUnmodifiedSince As Integer  = 33" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfUnmodifiedSince = 33;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>33</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-295">Spécifie le numéro d'index de l'en-tête HTTP <see langword="If-Unmodified-Since" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-295">Specifies the index number for the <see langword="If-Unmodified-Since" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-296">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-296">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderKeepAlive">
      <MemberSignature Language="C#" Value="public const int HeaderKeepAlive = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderKeepAlive = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderKeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderKeepAlive As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderKeepAlive = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-297">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Keep-Alive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-297">Specifies the index number for the <see langword="Keep-Alive" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-298">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-298">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderLastModified">
      <MemberSignature Language="C#" Value="public const int HeaderLastModified = 19;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderLastModified = (19)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderLastModified" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderLastModified As Integer  = 19" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderLastModified = 19;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-299">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Last-Modified" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-299">Specifies the index number for the <see langword="Last-Modified" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-300">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-300">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderLocation">
      <MemberSignature Language="C#" Value="public const int HeaderLocation = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderLocation = (23)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderLocation" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderLocation As Integer  = 23" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderLocation = 23;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-301">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Location" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-301">Specifies the index number for the <see langword="Location" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-302">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-302">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderMaxForwards">
      <MemberSignature Language="C#" Value="public const int HeaderMaxForwards = 34;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderMaxForwards = (34)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderMaxForwards" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderMaxForwards As Integer  = 34" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderMaxForwards = 34;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>34</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-303">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Max-Forwards" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-303">Specifies the index number for the <see langword="Max-Forwards" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-304">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-304">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderPragma">
      <MemberSignature Language="C#" Value="public const int HeaderPragma = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderPragma = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderPragma" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderPragma As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderPragma = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-305">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Pragma" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-305">Specifies the index number for the <see langword="Pragma" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-306">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-306">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProxyAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthenticate = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderProxyAuthenticate = (24)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderProxyAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderProxyAuthenticate As Integer  = 24" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderProxyAuthenticate = 24;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-307">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Proxy-Authenticate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-307">Specifies the index number for the <see langword="Proxy-Authenticate" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-308">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-308">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProxyAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthorization = 35;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderProxyAuthorization = (35)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderProxyAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderProxyAuthorization As Integer  = 35" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderProxyAuthorization = 35;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-309">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Proxy-Authorization" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-309">Specifies the index number for the <see langword="Proxy-Authorization" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-310">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-310">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRange">
      <MemberSignature Language="C#" Value="public const int HeaderRange = 37;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderRange = (37)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderRange" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderRange As Integer  = 37" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderRange = 37;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-311">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-311">Specifies the index number for the <see langword="Range" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-312">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-312">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderReferer">
      <MemberSignature Language="C#" Value="public const int HeaderReferer = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderReferer = (36)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderReferer" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderReferer As Integer  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderReferer = 36;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-313">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Referer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-313">Specifies the index number for the <see langword="Referer" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-314">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-314">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRetryAfter">
      <MemberSignature Language="C#" Value="public const int HeaderRetryAfter = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderRetryAfter = (25)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderRetryAfter" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderRetryAfter As Integer  = 25" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderRetryAfter = 25;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-315">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Retry-After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-315">Specifies the index number for the <see langword="Retry-After" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-316">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-316">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderServer">
      <MemberSignature Language="C#" Value="public const int HeaderServer = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderServer = (26)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderServer" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderServer As Integer  = 26" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderServer = 26;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-317">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Server" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-317">Specifies the index number for the <see langword="Server" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-318">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-318">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSetCookie">
      <MemberSignature Language="C#" Value="public const int HeaderSetCookie = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderSetCookie = (27)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderSetCookie" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderSetCookie As Integer  = 27" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderSetCookie = 27;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-319">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Set-Cookie" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-319">Specifies the index number for the <see langword="Set-Cookie" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-320">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-320">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersSent">
      <MemberSignature Language="C#" Value="public virtual bool HeadersSent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HeadersSent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.HeadersSent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HeadersSent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HeadersSent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-321">Retourne une valeur indiquant si des en-têtes de réponse HTTP ont été envoyés au client pour la demande en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-321">Returns a value indicating whether HTTP response headers have been sent to the client for the current request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-322">
            <see langword="true" /> si des en-têtes de réponse HTTP ont été envoyés au client ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-322">
              <see langword="true" /> if HTTP response headers have been sent to the client; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTe">
      <MemberSignature Language="C#" Value="public const int HeaderTe = 38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTe = (38)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTe" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderTe As Integer  = 38" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderTe = 38;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>38</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-323">Spécifie le numéro d'index de l'en-tête HTTP <see langword="TE" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-323">Specifies the index number for the <see langword="TE" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-324">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-324">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTrailer">
      <MemberSignature Language="C#" Value="public const int HeaderTrailer = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTrailer = (5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTrailer" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderTrailer As Integer  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderTrailer = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-325">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Trailer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-325">Specifies the index number for the <see langword="Trailer" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-326">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-326">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTransferEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderTransferEncoding = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTransferEncoding = (6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderTransferEncoding As Integer  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderTransferEncoding = 6;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-327">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Transfer-Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-327">Specifies the index number for the <see langword="Transfer-Encoding" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-328">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-328">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderUpgrade">
      <MemberSignature Language="C#" Value="public const int HeaderUpgrade = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderUpgrade = (7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderUpgrade As Integer  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderUpgrade = 7;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-329">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Upgrade" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-329">Specifies the index number for the <see langword="Upgrade" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-330">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-330">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderUserAgent">
      <MemberSignature Language="C#" Value="public const int HeaderUserAgent = 39;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderUserAgent = (39)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderUserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderUserAgent As Integer  = 39" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderUserAgent = 39;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>39</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-331">Spécifie le numéro d'index de l'en-tête HTTP <see langword="User-Agent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-331">Specifies the index number for the <see langword="User-Agent" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-332">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-332">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVary">
      <MemberSignature Language="C#" Value="public const int HeaderVary = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderVary = (28)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderVary" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderVary As Integer  = 28" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderVary = 28;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-333">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Vary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-333">Specifies the index number for the <see langword="Vary" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-334">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-334">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVia">
      <MemberSignature Language="C#" Value="public const int HeaderVia = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderVia = (8)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderVia" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderVia As Integer  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderVia = 8;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-335">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Via" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-335">Specifies the index number for the <see langword="Via" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-336">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-336">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWarning">
      <MemberSignature Language="C#" Value="public const int HeaderWarning = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderWarning = (9)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderWarning As Integer  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderWarning = 9;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-337">Spécifie le numéro d'index de l'en-tête HTTP <see langword="Warning" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-337">Specifies the index number for the <see langword="Warning" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-338">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-338">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWwwAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderWwwAuthenticate = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderWwwAuthenticate = (29)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderWwwAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderWwwAuthenticate As Integer  = 29" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderWwwAuthenticate = 29;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-339">Spécifie le numéro d'index de l'en-tête HTTP <see langword="WWW-Authenticate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-339">Specifies the index number for the <see langword="WWW-Authenticate" /> HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-340">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-340">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsClientConnected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsClientConnected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsClientConnected () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsClientConnected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-341">Retourne une valeur indiquant si la connexion client est encore active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-341">Returns a value indicating whether the client connection is still active.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-342">
            <see langword="true" /> si la connexion client est encore active ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-342">
              <see langword="true" /> if the client connection is still active; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEntireEntityBodyIsPreloaded">
      <MemberSignature Language="C#" Value="public virtual bool IsEntireEntityBodyIsPreloaded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEntireEntityBodyIsPreloaded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEntireEntityBodyIsPreloaded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEntireEntityBodyIsPreloaded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-343">Retourne une valeur indiquant si toutes les données de la demande sont disponibles et si aucune autre lecture à partir du client n'est requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-343">Returns a value indicating whether all request data is available and no further reads from the client are required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-344">
            <see langword="true" /> si toutes les données de la demande sont disponibles ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-344">
              <see langword="true" /> if all request data is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsSecure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSecure () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSecure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="07957-345">Retourne une valeur indiquant si la connexion utilise SSL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-345">Returns a value indicating whether the connection uses SSL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-346">
            <see langword="true" /> s'il s'agit d'une connexion SSL ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-346">
              <see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="07957-347">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-347">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineConfigPath">
      <MemberSignature Language="C#" Value="public virtual string MachineConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineConfigPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.MachineConfigPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineConfigPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineConfigPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-348">Obtient le chemin d'accès physique complet au fichier Machine.config.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-348">Gets the full physical path to the Machine.config file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07957-349">Chemin d'accès physique au fichier Machine.config.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-349">The physical path to the Machine.config file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineInstallDirectory">
      <MemberSignature Language="C#" Value="public virtual string MachineInstallDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineInstallDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.MachineInstallDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineInstallDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineInstallDirectory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-350">Obtient le chemin d'accès physique au répertoire dans lequel sont installés les fichiers binaires ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-350">Gets the physical path to the directory where the ASP.NET binaries are installed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07957-351">Répertoire physique des fichiers binaires ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-351">The physical directory to the ASP.NET binary files.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="07957-352">Chemin d'accès virtuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-352">The virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-353">Retourne le chemin d'accès physique qui correspond au chemin d'accès virtuel spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-353">Returns the physical path corresponding to the specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-354">Chemin d'accès physique qui correspond au chemin d'accès virtuel spécifié dans le paramètre <paramref name="virtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-354">The physical path that corresponds to the virtual path specified in the <paramref name="virtualPath" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07957-355">Surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-355">Overloaded.</span>
          </span>
          <span data-ttu-id="07957-356">Lit les données de demande du client (si elles n'ont pas été pré-chargées).</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-356">Reads request data from the client (when not preloaded).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-357">Une implémentation est libre de retourner moins d’octets que demandé même si la fin du flux de données n’a pas été atteint.</span><span class="sxs-lookup"><span data-stu-id="07957-357">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="07957-358">Utilisez cette surcharge pour spécifier la réponse pour les corps de message supérieurs à 2 Go.</span><span class="sxs-lookup"><span data-stu-id="07957-358">Use this overload to specify the response for message bodies greater than 2 GB.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityBody(unsigned int8[] buffer, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEntityBody (buffer As Byte(), size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07957-359">Tableau d'octets dans lequel les données doivent être lues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-359">The byte array to read data into.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="07957-360">Nombre maximal d'octets à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-360">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-361">Lit les données de demande du client (si elles n'ont pas été pré-chargées).</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-361">Reads request data from the client (when not preloaded).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-362">Nombre d'octets lus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-362">The number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-363">Une implémentation est libre de retourner moins d’octets que demandé même si la fin du flux de données n’a pas été atteint.</span><span class="sxs-lookup"><span data-stu-id="07957-363">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="07957-364">Utilisez cette surcharge pour spécifier la réponse pour les corps de message supérieurs à 2 Go.</span><span class="sxs-lookup"><span data-stu-id="07957-364">Use this overload to specify the response for message bodies greater than 2 GB.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityBody(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEntityBody (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="07957-365">Tableau d'octets dans lequel les données doivent être lues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-365">The byte array to read data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="07957-366">Offset d'octet à partir duquel doit commencer la lecture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-366">The byte offset at which to begin reading.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="07957-367">Nombre maximal d'octets à lire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-367">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-368">Lit des données de demande émanant du client (non pré-chargées) en utilisant la mémoire tampon source de la lecture, l'offset d'octet et les octets maximum spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-368">Reads request data from the client (when not preloaded) by using the specified buffer to read from, byte offset, and maximum bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07957-369">Nombre d'octets lus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-369">The number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-370">Une implémentation est libre de retourner moins d’octets que demandé même si la fin du flux de données n’a pas été atteint.</span><span class="sxs-lookup"><span data-stu-id="07957-370">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="07957-371">Utilisez cette surcharge pour spécifier la réponse pour les corps de message supérieurs à 2 Go.</span><span class="sxs-lookup"><span data-stu-id="07957-371">Use this overload to specify the response for message bodies greater than 2 GB.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonCachePolicy">
      <MemberSignature Language="C#" Value="public const int ReasonCachePolicy = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonCachePolicy = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonCachePolicy As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonCachePolicy = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-372">Spécifie une raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-372">Specifies a reason for the request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonCacheSecurity">
      <MemberSignature Language="C#" Value="public const int ReasonCacheSecurity = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonCacheSecurity = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonCacheSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonCacheSecurity As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonCacheSecurity = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-373">Spécifie une raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-373">Specifies a reason for the request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonClientDisconnect">
      <MemberSignature Language="C#" Value="public const int ReasonClientDisconnect = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonClientDisconnect = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonClientDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonClientDisconnect As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonClientDisconnect = 4;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-374">Spécifie une raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-374">Specifies a reason for the request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonDefault">
      <MemberSignature Language="C#" Value="public const int ReasonDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonDefault As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonDefault = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-375">Spécifie une raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-375">Specifies a reason for the request.</span>
          </span>
          <span data-ttu-id="07957-376">La valeur par défaut est <see cref="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-376">The default value is <see cref="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonFileHandleCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonFileHandleCacheMiss = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonFileHandleCacheMiss = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonFileHandleCacheMiss As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonFileHandleCacheMiss = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-377">Spécifie une raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-377">Specifies a reason for the request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonResponseCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonResponseCacheMiss = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonResponseCacheMiss = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonResponseCacheMiss As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonResponseCacheMiss = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-378">Spécifie une raison de la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-378">Specifies a reason for the request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int RequestHeaderMaximum = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 RequestHeaderMaximum = (40)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.RequestHeaderMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Const RequestHeaderMaximum As Integer  = 40" />
      <MemberSignature Language="C++ CLI" Value="public: int RequestHeaderMaximum = 40;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-379">Spécifie le numéro d'index de l'en-tête de demande HTTP <see langword="Maximum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-379">Specifies the index number for the <see langword="Maximum" /> HTTP request header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-380">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-380">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public virtual Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-381">Reçoit l'ID de trace de suivi des événements pour Windows correspondant à la demande actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-381">Gets the corresponding Event Tracking for Windows trace ID for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07957-382">ID de trace pour la demande ASP.NET actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-382">A trace ID for the current ASP.NET request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-383">Demandes ASP.NET s’exécutent avec le même ID de trace que les demandes IIS correspondantes.</span><span class="sxs-lookup"><span data-stu-id="07957-383">ASP.NET requests execute with the same trace ID as the corresponding IIS request.</span></span> <span data-ttu-id="07957-384">Cela facilite le suivi d’une demande tout au long de sa durée de vie, en commençant par le protocole HTTP. SYS en mode noyau HTTP écouteur, via le service IIS et dans le système ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="07957-384">This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system.</span></span> <span data-ttu-id="07957-385">L’ID fournis par IIS diffèrent selon le niveau de plate-forme et le service pack.</span><span class="sxs-lookup"><span data-stu-id="07957-385">The IDs provided by IIS differ based on the platform and service pack level.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.CorrelationManager" />
        <altmember cref="T:System.Web.HttpRuntime" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int ResponseHeaderMaximum = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ResponseHeaderMaximum = (30)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ResponseHeaderMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Const ResponseHeaderMaximum As Integer  = 30" />
      <MemberSignature Language="C++ CLI" Value="public: int ResponseHeaderMaximum = 30;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-386">Spécifie le numéro d'index de l'en-tête de réponse HTTP <see langword="Maximum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-386">Specifies the index number for the <see langword="Maximum" /> HTTP response header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-387">Le .NET Framework assigne un numéro d’index pour chaque type d’en-tête HTTP standard, pour une utilisation dans les <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> et <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="07957-387">The .NET Framework assigns an index number to each standard HTTP header type, for use in the <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> and <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootWebConfigPath">
      <MemberSignature Language="C#" Value="public virtual string RootWebConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootWebConfigPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.RootWebConfigPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootWebConfigPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RootWebConfigPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-388">Obtient le chemin d'accès physique complet au fichier racine Web.config.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-388">Gets the full physical path to the root Web.config file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07957-389">Chemin d'accès physique au fichier racine Web.config.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-389">The physical path to the root Web.config file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-390">Si vous implémentez votre propre environnement d’hébergement, vous pouvez pour substituer cette propriété pour retourner l’emplacement du fichier de configuration racine de votre environnement.</span><span class="sxs-lookup"><span data-stu-id="07957-390">If you are implementing your own hosting environment, you may to override this property to return the location of your environment's root configuration file.</span></span> <span data-ttu-id="07957-391">Ceci est la <xref:System.Web.Hosting.SimpleWorkerRequest> classe qui fournit une implémentation simple de la <xref:System.Web.HttpWorkerRequest>.</span><span class="sxs-lookup"><span data-stu-id="07957-391">An example of this is the <xref:System.Web.Hosting.SimpleWorkerRequest> class which provides a simple implementation of the <xref:System.Web.HttpWorkerRequest>.</span></span> <span data-ttu-id="07957-392">Le <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=nameWithType> propriété du <xref:System.Web.Hosting.SimpleWorkerRequest> substitue le <xref:System.Web.HttpWorkerRequest.RootWebConfigPath%2A> propriété du <xref:System.Web.HttpWorkerRequest> classe.</span><span class="sxs-lookup"><span data-stu-id="07957-392">The <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=nameWithType> property of <xref:System.Web.Hosting.SimpleWorkerRequest> class overrides the <xref:System.Web.HttpWorkerRequest.RootWebConfigPath%2A> property of <xref:System.Web.HttpWorkerRequest> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendCalculatedContentLength">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07957-393">Ajoute un en-tête HTTP <see langword="Content-Length" /> à la réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-393">Adds a <see langword="Content-Length" /> HTTP header to the response.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (int contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCalculatedContentLength(int32 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendCalculatedContentLength (contentLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendCalculatedContentLength(int contentLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="contentLength">
          <span data-ttu-id="07957-394">Longueur de la réponse en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-394">The length of the response, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-395">Ajoute un en-tête HTTP <see langword="Content-Length" /> à la réponse pour les corps de message inférieurs ou égaux à 2 Go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-395">Adds a <see langword="Content-Length" /> HTTP header to the response for message bodies that are less than or equal to 2 GB.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-396">Lorsque la longueur du contenu n’est pas définie explicitement, cette méthode permet la <xref:System.Web.HttpWorkerRequest> instance à ajouter un `Content-Length` en-tête HTTP à la réponse.</span><span class="sxs-lookup"><span data-stu-id="07957-396">When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response.</span></span>  
  
 <span data-ttu-id="07957-397">Utilisez cette surcharge pour définir le `Content-Length` en-tête lorsque la longueur du corps du message de réponse est inférieur ou égal à 2 Go.</span><span class="sxs-lookup"><span data-stu-id="07957-397">Use this overload to set the `Content-Length` header when the length of the response message body is less than or equal to 2 GB.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (long contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCalculatedContentLength(int64 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendCalculatedContentLength (contentLength As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendCalculatedContentLength(long contentLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="contentLength">
          <span data-ttu-id="07957-398">Longueur de la réponse en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-398">The length of the response, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-399">Ajoute un en-tête HTTP <see langword="Content-Length" /> à la réponse pour les corps de message qui dépassent 2 Go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-399">Adds a <see langword="Content-Length" /> HTTP header to the response for message bodies that are greater than 2 GB.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-400">Lorsque la longueur du contenu n’est pas définie explicitement, cette méthode permet la <xref:System.Web.HttpWorkerRequest> instance à ajouter un `Content-Length` en-tête HTTP à la réponse.</span><span class="sxs-lookup"><span data-stu-id="07957-400">When the content length is not explicitly set, this method enables the <xref:System.Web.HttpWorkerRequest> instance to add a `Content-Length` HTTP header to the response.</span></span> <span data-ttu-id="07957-401">L’implémentation par défaut appelle la surcharge qui accepte un `contentLength` paramètre de type <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="07957-401">The default implementation calls the overload that takes a `contentLength` parameter of type <xref:System.Int32>.</span></span>  
  
 <span data-ttu-id="07957-402">Utilisez cette surcharge pour spécifier la réponse pour les corps de message supérieurs à 2 Go.</span><span class="sxs-lookup"><span data-stu-id="07957-402">Use this overload to specify the response for message bodies greater than 2 GB.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendKnownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendKnownResponseHeader (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKnownResponseHeader(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendKnownResponseHeader (index As Integer, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendKnownResponseHeader(int index, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="07957-403">Index de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-403">The header index.</span>
          </span>
          <span data-ttu-id="07957-404">Par exemple, <see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-404">For example, <see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="07957-405">Valeur de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-405">The value of the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-406">Ajoute un en-tête HTTP standard à la réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-406">Adds a standard HTTP header to the response.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendResponseFromFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07957-407">Ajoute le contenu d'un fichier à la réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-407">Adds the contents of a file to the response.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (IntPtr handle, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromFile(native int handle, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendResponseFromFile (handle As IntPtr, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendResponseFromFile(IntPtr handle, long offset, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="07957-408">Handle du fichier à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-408">The handle of the file to send.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="07957-409">Position de départ dans le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-409">The starting position in the file.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="07957-410">Le nombre d’octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-410">The number of bytes to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-411">Ajoute à la réponse le contenu du fichier spécifié et indique la position de départ dans le fichier et le nombre d'octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-411">Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendResponseFromFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendResponseFromFile(System::String ^ filename, long offset, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="07957-412">Nom du fichier à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-412">The name of the file to send.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="07957-413">Position de départ dans le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-413">The starting position in the file.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="07957-414">Le nombre d’octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-414">The number of bytes to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-415">Ajoute à la réponse le contenu du fichier spécifié et indique la position de départ dans le fichier et le nombre d'octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-415">Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendResponseFromMemory">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="07957-416">Ajoute le contenu d'un bloc de mémoire à la réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-416">Adds the contents of a memory block to the response.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromMemory (byte[] data, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromMemory(unsigned int8[] data, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendResponseFromMemory (data As Byte(), length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendResponseFromMemory(cli::array &lt;System::Byte&gt; ^ data, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="07957-417">Tableau d'octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-417">The byte array to send.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="07957-418">Nombre d'octets à envoyer en commençant au premier. </span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-418">The number of bytes to send, starting at the first byte.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-419">Ajoute à la réponse le nombre spécifié d'octets à partir d'un tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-419">Adds the specified number of bytes from a byte array to the response.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public virtual void SendResponseFromMemory (IntPtr data, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromMemory(native int data, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendResponseFromMemory (data As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendResponseFromMemory(IntPtr data, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="07957-420">Pointeur non managé vers le bloc de mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-420">An unmanaged pointer to the block of memory.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="07957-421">Le nombre d’octets à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-421">The number of bytes to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-422">Ajoute à la réponse le nombre spécifié d'octets à partir d'un bloc de mémoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-422">Adds the specified number of bytes from a block of memory to the response.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendStatus">
      <MemberSignature Language="C#" Value="public abstract void SendStatus (int statusCode, string statusDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStatus(int32 statusCode, string statusDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendStatus (statusCode As Integer, statusDescription As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendStatus(int statusCode, System::String ^ statusDescription);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="statusDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statusCode">
          <span data-ttu-id="07957-423">Code d'état à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-423">The status code to send</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="07957-424">Description de l'état à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-424">The status description to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-425">Spécifie le code d’état HTTP et la description d’état de la réponse, comme par exemple <c>SendStatus(200, "Ok")</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-425">Specifies the HTTP status code and status description of the response, such as <c>SendStatus(200, "Ok")</c>.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUnknownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendUnknownResponseHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendUnknownResponseHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendUnknownResponseHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendUnknownResponseHeader(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="07957-426">Nom de l'en-tête à envoyer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-426">The name of the header to send.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="07957-427">Valeur de l'en-tête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-427">The value of the header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-428">Ajoute un en-tête HTTP non standard à la réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-428">Adds a nonstandard HTTP header to the response.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndOfSendNotification">
      <MemberSignature Language="C#" Value="public virtual void SetEndOfSendNotification (System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEndOfSendNotification(class System.Web.HttpWorkerRequest/EndOfSendNotification callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEndOfSendNotification (callback As HttpWorkerRequest.EndOfSendNotification, extraData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEndOfSendNotification(System::Web::HttpWorkerRequest::EndOfSendNotification ^ callback, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpWorkerRequest+EndOfSendNotification" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="07957-429">Rappel de notification appelé lorsque toutes les données ont été envoyées (hors bande).</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-429">The notification callback that is called when all data is sent (out-of-band).</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="07957-430">Paramètre supplémentaire du rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-430">An additional parameter to the callback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07957-431">Inscription pour une notification facultative, lorsque toutes les données de réponse sont envoyées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-431">Registers for an optional notification when all the response data is sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07957-432">Cette méthode peut être utile lorsque vous implémentez le recyclage des mémoires tampon.</span><span class="sxs-lookup"><span data-stu-id="07957-432">This method might be helpful when you implement buffer recycling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAsyncFlush { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-433">Obtient une valeur qui indique si des opérations de vidage asynchrones sont prises en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-433">Gets a value that indicates whether asynchronous flush operations are supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07957-434">
            <see langword="true" /> si les opérations de vidage asynchrones sont prises en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-434">
              <see langword="true" /> if asynchronous flush operations are supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncRead">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncRead" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.SupportsAsyncRead" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAsyncRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAsyncRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07957-435">Obtient une valeur qui indique si des opérations de lecture asynchrones sont prises en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-435">Gets a value that indicates whether asynchronous read operations are supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07957-436">
            <see langword="true" /> si les opérations de lecture asynchrones sont prises en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07957-436">
              <see langword="true" /> if asynchronous read operations are supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>