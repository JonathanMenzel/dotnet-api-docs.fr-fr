<Type Name="IHttpHandlerFactory" FullName="System.Web.IHttpHandlerFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c501a0e12f6ea8ed4b38689e0b57c79ffbb5c23e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36374228" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHttpHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpHandlerFactory" />
  <TypeSignature Language="F#" Value="type IHttpHandlerFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ee144-101">Définit le contrat que les fabriques de classes doivent implémenter pour créer des objets <see cref="T:System.Web.IHttpHandler" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee144-101">Defines the contract that class factories must implement to create new <see cref="T:System.Web.IHttpHandler" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee144-102">Une classe qui implémente le <xref:System.Web.IHttpHandlerFactory> interface n’a aucun comportement que de produire dynamiquement de nouvelles instances de classes qui implémentent la <xref:System.Web.IHttpHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="ee144-102">A class that implements the <xref:System.Web.IHttpHandlerFactory> interface has no behavior except to dynamically manufacture new instances of classes that implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string url, string pathTranslated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string url, string pathTranslated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHandler (context As HttpContext, requestType As String, url As String, pathTranslated As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ url, System::String ^ pathTranslated);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler" Usage="iHttpHandlerFactory.GetHandler (context, requestType, url, pathTranslated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="pathTranslated" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ee144-103">Instance de la classe <see cref="T:System.Web.HttpContext" /> qui fournit les références à des objets serveur intrinsèques (par exemple, <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> et <see langword="Server" />) utilisés pour traiter des demandes HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-103">An instance of the <see cref="T:System.Web.HttpContext" /> class that provides references to intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />) used to service HTTP requests.</span>
          </span>
        </param>
        <param name="requestType">
          <span data-ttu-id="ee144-104">Méthode de transfert de données HTTP (<see langword="GET" /> ou <see langword="POST" />) utilisée par le client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-104">The HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) that the client uses.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="ee144-105">
            <see cref="P:System.Web.HttpRequest.RawUrl" /> de la ressource demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-105">The <see cref="P:System.Web.HttpRequest.RawUrl" /> of the requested resource.</span>
          </span>
        </param>
        <param name="pathTranslated">
          <span data-ttu-id="ee144-106">
            <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> à la ressource demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-106">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> to the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee144-107">Retourne une instance d'une classe qui implémente l'interface <see cref="T:System.Web.IHttpHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-107">Returns an instance of a class that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee144-108">Nouvel objet <see cref="T:System.Web.IHttpHandler" /> qui traite la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-108">A new <see cref="T:System.Web.IHttpHandler" /> object that processes the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee144-109">L’exemple de code suivant montre comment créer des objets gestionnaires personnalisés en réponse à une demande du client.</span><span class="sxs-lookup"><span data-stu-id="ee144-109">The following code example demonstrates how to create custom handler objects in response to a client request.</span></span> <span data-ttu-id="ee144-110">L’exemple comporte deux parties :</span><span class="sxs-lookup"><span data-stu-id="ee144-110">The example has two parts:</span></span>  
  
-   <span data-ttu-id="ee144-111">Une classe de fabrique.</span><span class="sxs-lookup"><span data-stu-id="ee144-111">A handler factory class.</span></span>  
  
-   <span data-ttu-id="ee144-112">Un extrait du fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="ee144-112">A Web.config file excerpt.</span></span>  
  
 <span data-ttu-id="ee144-113">La première partie de l’exemple montre comment créer des objets gestionnaires personnalisés en réponse à une demande client pour une page nommée abc.aspx ou xyz.aspx.</span><span class="sxs-lookup"><span data-stu-id="ee144-113">The first part of the example shows how to create custom handler objects in response to a client request for a page named either abc.aspx or xyz.aspx.</span></span> <span data-ttu-id="ee144-114">La classe de fabrique nommée `hwf` crée l’objet gestionnaire approprié selon la page demandée.</span><span class="sxs-lookup"><span data-stu-id="ee144-114">The handler factory class named `hwf` creates the appropriate handler object depending on the page requested.</span></span>  
  
 [!code-csharp[Classic IHttpHandlerFactory.GetHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandlerFactory.GetHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandlerFactory.GetHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandlerFactory.GetHandler Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ee144-115">La deuxième partie de l’exemple montre un extrait du fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="ee144-115">The second part of the example shows a Web.config file excerpt.</span></span> <span data-ttu-id="ee144-116">Pour utiliser la fabrique de gestionnaires ci-dessus, ajoutez les lignes suivantes au fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="ee144-116">To use the above handler factory, add the following lines to the Web.config file.</span></span>  
  
```  
<configuration>   
  <system.web>   
    <httpHandlers>   
      <add verb="*" path="abc.aspx" type="test.MyFactory,HandlerFactoryTest" />   
      <add verb="*" path="xyz.aspx" type="test.MyFactory,HandlerFactoryTest" />   
    </httpHandlers>   
  </system.web>  
</configuration>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandler : System.Web.IHttpHandler -&gt; unit" Usage="iHttpHandlerFactory.ReleaseHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ee144-117">Objet <see cref="T:System.Web.IHttpHandler" /> à réutiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-117">The <see cref="T:System.Web.IHttpHandler" /> object to reuse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee144-118">Permet à une fabrique de réutiliser une instance de gestionnaire existante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee144-118">Enables a factory to reuse an existing handler instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>