<Type Name="X509Certificate2Collection" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2Collection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01b3ff5ac74aa65aa5b6e64a5deaab62803fda26" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52221110" /></Metadata><TypeSignature Language="C#" Value="public class X509Certificate2Collection : System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509Certificate2Collection extends System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2Collection&#xA;Inherits X509CertificateCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2Collection : System::Security::Cryptography::X509Certificates::X509CertificateCollection" />
  <TypeSignature Language="F#" Value="type X509Certificate2Collection = class&#xA;    inherit X509CertificateCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509CertificateCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une collection d'objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> magasin est ouvert, le résultat est représenté par un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet. Si vous êtes familiarisé avec les constructions d’API de chiffrement non managées, vous pouvez considérer un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> comme magasin de mémoire de <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objets.  
  
   
  
## Examples  
 L’exemple de code suivant ouvre le magasin de certificats personnel de l’utilisateur actuel, sélectionne uniquement les certificats valides, permet à l’utilisateur à sélectionner un certificat, puis écrit les certificats et les informations de chaîne de certificat dans la console. La sortie varie selon le certificat de que l’utilisateur sélectionne.  
  
 [!code-cpp[certselect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[certselect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[certselect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> sans information <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un vide <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet, à la différence d’autres constructeurs qui utilisent des informations de certificat ou une collection pour créer l’objet.  
  
   
  
## Examples  
 L’exemple de code suivant ouvre le magasin de certificats personnel de l’utilisateur actuel, sélectionne uniquement les certificats valides, permet à l’utilisateur à sélectionner un certificat, puis écrit les certificats et les informations de chaîne de certificat dans la console. La sortie varie selon le certificat de que l’utilisateur sélectionne.  
  
 [!code-cpp[certselect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[certselect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[certselect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2Collection (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2Collection(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2Collection : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2Collection" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> auquel commencer la collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> avec un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2Collection (System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificates As X509Certificate2())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2Collection(cli::array &lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ certificates);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2Collection : System.Security.Cryptography.X509Certificates.X509Certificate2[] -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2Collection" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2[]" />
      </Parameters>
      <Docs>
        <param name="certificates">Tableau d'objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> avec un tableau d'objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant ouvre le magasin de certificats personnel de l’utilisateur actuel, sélectionne uniquement les certificats valides, permet à l’utilisateur à sélectionner un certificat, puis écrit les certificats et les informations de chaîne de certificat dans la console. La sortie varie selon le certificat que vous sélectionnez.  
  
 [!code-cpp[certselect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[certselect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[certselect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2Collection (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificates As X509Certificate2Collection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2Collection(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ certificates);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.X509Certificates.X509Certificate2Collection : System.Security.Cryptography.X509Certificates.X509Certificate2Collection -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2Collection" Usage="new System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
      </Parameters>
      <Docs>
        <param name="certificates">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> à l'aide de la collection de certificats spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant ouvre le magasin de certificats personnel de l’utilisateur actuel, sélectionne uniquement les certificats valides, permet à l’utilisateur à sélectionner un certificat, puis écrit les certificats et les informations de chaîne de certificat dans la console. La sortie varie selon le certificat de que l’utilisateur sélectionne.  
  
 [!code-cpp[certselect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[certselect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[certselect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (certificate As X509Certificate2) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; int" Usage="x509Certificate2Collection.Add certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificat X.509 représenté sous la forme d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
        <summary>Ajoute un objet à la fin de la <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <returns>Index <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> auquel <paramref name="certificate" /> a été ajouté.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objet à une collection et retourne l’emplacement d’index du certificat.  
  
   
  
## Examples  
 L’exemple de code suivant ouvre un magasin de certificats X.509, ajoute et supprime des certificats, puis ferme le magasin. Il suppose que vous avez trois certificats à ajouter à et supprimer à partir d’un magasin local.  
  
 [!code-cpp[x509store2#1](~/samples/snippets/cpp/VS_Snippets_CLR/x509store2/CPP/x509store2.cpp#1)]
 [!code-csharp[x509store2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509store2/CS/x509store2.cs#1)]
 [!code-vb[x509store2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509store2/vb/x509store2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute plusieurs objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> à l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (certificates As X509Certificate2())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ certificates);" />
      <MemberSignature Language="F#" Value="override this.AddRange : System.Security.Cryptography.X509Certificates.X509Certificate2[] -&gt; unit" Usage="x509Certificate2Collection.AddRange certificates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Method isn't transactional (like documented)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2[]" />
      </Parameters>
      <Docs>
        <param name="certificates">Tableau d'objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
        <summary>Ajoute plusieurs objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> d'un tableau à l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode si vous avez un tableau de <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objets à ajouter à un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet. Le <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange%2A> et <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange%2A> méthodes traitent les demandes au niveau transactionnel, afin que si un seul ajout ou retrait échoue, l’opération entière est abandonnée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificates" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (certificates As X509Certificate2Collection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ certificates);" />
      <MemberSignature Language="F#" Value="override this.AddRange : System.Security.Cryptography.X509Certificates.X509Certificate2Collection -&gt; unit" Usage="x509Certificate2Collection.AddRange certificates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Method isn't transactional (like documented)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
      </Parameters>
      <Docs>
        <param name="certificates">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</param>
        <summary>Ajoute plusieurs objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> à un autre objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode si vous avez des certificats dans un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet que vous souhaitez ajouter à un autre <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet. Le <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange%2A> et <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange%2A> méthodes traitent les demandes au niveau transactionnel, afin que si un seul ajout ou retrait échoue, l’opération entière est abandonnée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificates" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (certificate As X509Certificate2) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="override this.Contains : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; bool" Usage="x509Certificate2Collection.Contains certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> à placer dans la collection.</param>
        <summary>Détermine si l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> contient un certificat spécifique.</summary>
        <returns><see langword="true" /> si <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> contient le <paramref name="certificate" /> spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode effectue une recherche linéaire ; Par conséquent, la durée d’exécution moyenne est proportionnelle à la <xref:System.Collections.CollectionBase.Count%2A> propriété. Autrement dit, cette méthode est un O (`n`) opération, où `n` est <xref:System.Collections.CollectionBase.Count%2A>.  
  
 Cette méthode détermine l’égalité en appelant le <xref:System.Object.Equals%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exporte dans un tableau d'octets des informations de certificat X.509 selon le type de contenu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (contentType As X509ContentType) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Security.Cryptography.X509Certificates.X509ContentType -&gt; byte[]" Usage="x509Certificate2Collection.Export contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("only support X509ContentType.Cert")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
      </Parameters>
      <Docs>
        <param name="contentType">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> pris en charge.</param>
        <summary>Exporte des informations de certificat X.509 dans un tableau d'octets.</summary>
        <returns>Informations de certificat X.509 dans un tableau d'octets.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge les types de contenu qui ne nécessitent pas un mot de passe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Security.Cryptography.X509Certificates.X509ContentType * string -&gt; byte[]" Usage="x509Certificate2Collection.Export (contentType, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("only support X509ContentType.Cert")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> pris en charge.</param>
        <param name="password">Chaîne utilisée pour protéger le tableau d'octets.</param>
        <summary>Exporte dans un tableau d'octets des informations de certificat X.509 à l'aide d'un mot de passe.</summary>
        <returns>Informations de certificat X.509 dans un tableau d'octets.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge les éléments suivants <xref:System.Security.Cryptography.X509Certificates.X509ContentType> types :  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pfx>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Le certificat est illisible, le contenu n'est pas valide ou, dans le cas d'un certificat qui requiert un mot de passe, la clé privée n'a pas pu être exportée parce que le mot de passe fourni était inexact.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Find (System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, bool validOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2Collection Find(valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, bool validOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (findType As X509FindType, findValue As Object, validOnly As Boolean) As X509Certificate2Collection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ Find(System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, bool validOnly);" />
      <MemberSignature Language="F#" Value="member this.Find : System.Security.Cryptography.X509Certificates.X509FindType * obj * bool -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2Collection" Usage="x509Certificate2Collection.Find (findType, findValue, validOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does not support X509FindType.FindByTemplateName, FindByApplicationPolicy and FindByCertificatePolicy")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Collection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="validOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="findType">Une des valeurs de <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />.</param>
        <param name="findValue">Critères de recherche en tant qu'objet.</param>
        <param name="validOnly"><see langword="true" /> pour que la recherche ne retourne que les certificats valides ; sinon, <see langword="false" />.</param>
        <summary>Recherche un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> à l'aide des critères de recherche spécifiés par l'énumération <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> et l'objet <paramref name="findValue" />.</summary>
        <returns>Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour rechercher <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objets si aucune interaction utilisateur n’est nécessaire. Utilisez le <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find%2A> méthode pour autoriser l’utilisateur à sélectionner <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objets.  
  
 Notez que cette méthode peut être utilisée dans un style en cascade ou imbriqué, affiner les critères de recherche à chaque appel à la méthode.  
  
   
  
## Examples  
 L’exemple de code suivant ouvre le magasin de certificats personnel de l’utilisateur actuel, recherche uniquement les certificats valides, permet à l’utilisateur à sélectionner un certificat, puis écrit les certificats et les informations de chaîne de certificat dans la console. La sortie varie selon le certificat de que l’utilisateur sélectionne.  
  
 [!code-cpp[certselect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[certselect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[certselect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="findType" /> n'est pas valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As X509Certificate2Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator" Usage="x509Certificate2Collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut itérer au sein d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <returns>Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator" /> qui peut itérer au sein de l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les énumérateurs permettent un accès en lecture seule aux données dans la collection. Les énumérateurs ne peuvent pas être utilisés pour modifier la collection sous-jacente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Importe un certificat dans un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberSignature Language="F#" Value="member this.Import : byte[] -&gt; unit" Usage="x509Certificate2Collection.Import rawData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("same limitations as X509Certificate2.Import")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData">Tableau d'octets contenant les données d'un certificat X.509.</param>
        <summary>Importe un certificat, sous forme de tableau d'octets, dans un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode importe un certificat sous la forme d’un tableau d’octets dans un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet. Cette méthode prend en charge les éléments suivants <xref:System.Security.Cryptography.X509Certificates.X509ContentType> types :  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pfx>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Authenticode>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Import : string -&gt; unit" Usage="x509Certificate2Collection.Import fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("same limitations as X509Certificate2.Import")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier contenant les informations relatives au certificat.</param>
        <summary>Importe un fichier de certificat dans un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode prend en charge les éléments suivants <xref:System.Security.Cryptography.X509Certificates.X509ContentType> types :  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pfx>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Authenticode>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="member this.Import : byte[] * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2Collection.Import (rawData, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("same limitations as X509Certificate2.Import")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData">Tableau d'octets contenant les données d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
        <param name="password">Mot de passe requis pour accéder aux informations du certificat.</param>
        <param name="keyStorageFlags">Combinaison de bits des valeurs d'énumération qui contrôlent le mode et le lieu d'importation du certificat.</param>
        <summary>Importe, sous forme de tableau d'octets, un certificat qui requiert un mot de passe d'accès, dans un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée avec un PFX/PKCS12 objet binaire volumineux (BLOB) protégé par un mot de passe. Conteneurs de clé associés aux certificats dans l’objet BLOB PFX/PKCS12 peuvent être créés et <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> valeur peut être utilisée pour contrôler ce processus. Notez que si vous ne créez pas un conteneur de clé, la clé privée n’est pas persistante.  
  
 Cette méthode importe un tableau d’octets de certificat dans une collection de certificats. Cette méthode prend en charge les éléments suivants <xref:System.Security.Cryptography.X509Certificates.X509ContentType> types :  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pfx>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="F#" Value="member this.Import : string * string * System.Security.Cryptography.X509Certificates.X509KeyStorageFlags -&gt; unit" Usage="x509Certificate2Collection.Import (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("same limitations as X509Certificate2.Import")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier contenant les informations relatives au certificat.</param>
        <param name="password">Mot de passe requis pour accéder aux informations du certificat.</param>
        <param name="keyStorageFlags">Combinaison de bits des valeurs d'énumération qui contrôlent le mode et le lieu d'importation du certificat.</param>
        <summary>Importe dans un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> un fichier de certificat qui requiert un mot de passe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée avec un fichier PFX/PKCS12 ou d’autres fichiers de certificat qui nécessitent un mot de passe. Conteneurs de clé associés aux certificats dans le fichier PFX/PKCS12 peuvent être créés et <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> valeur peut être utilisée pour contrôler ce processus. Notez que si vous ne créez pas un conteneur de clé, la clé privée n’est pas persistante.  
  
 Notez qu’un fichier PFX/PKCS12 peut contenir plusieurs certificats. Cette méthode importe le premier certificat associé à la clé privée ou, si aucune clé privée n’est trouvée, le premier certificat trouvé.  
  
 Cette méthode prend en charge les éléments suivants <xref:System.Security.Cryptography.X509Certificates.X509ContentType> types :  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pfx>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7>  
  
-   <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Authenticode>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="override this.Insert : int * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; unit" Usage="x509Certificate2Collection.Insert (index, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel insérer <paramref name="certificate" />.</param>
        <param name="certificate">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> à insérer.</param>
        <summary>Insère un objet dans l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Collections.CollectionBase.Count%2A> propriété est déjà égale à la capacité de la liste, la capacité est doublée en réallouant automatiquement le tableau interne avant le nouvel élément est inséré.  
  
 Si `index` est égal à <xref:System.Collections.CollectionBase.Count%2A>, `certificate` est ajouté à la fin de la collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à zéro.  
  
- ou - 
 <paramref name="index" /> est supérieur à la propriété <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">La collection est en lecture seule.  
  
- ou - 
La taille de la collection est fixe.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ default[int] { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(int index); void set(int index, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
        <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
        <value>Élément au niveau de l'index spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet d’accéder à un élément spécifique de la collection à l’aide de la syntaxe suivante : `myCollection[index]`.  
  
   
  
## Examples  
 L’exemple de code suivant ouvre le magasin de certificats personnel de l’utilisateur actuel, sélectionne uniquement les certificats valides, permet à l’utilisateur à sélectionner un certificat, puis écrit les certificats et les informations de chaîne de certificat dans la console. La sortie varie selon le certificat de que l’utilisateur sélectionne.  
  
 [!code-cpp[certselect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[certselect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[certselect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à zéro.  
  
- ou - 
 <paramref name="index" /> est égal ou supérieur à la propriété <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="index" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; unit" Usage="x509Certificate2Collection.Remove certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> à supprimer de l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</param>
        <summary>Supprime la première occurrence d'un certificat de l'objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode supprime la première occurrence d’un certificat.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveRange">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Supprime plusieurs objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(class System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (certificates As X509Certificate2())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(cli::array &lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ certificates);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : System.Security.Cryptography.X509Certificates.X509Certificate2[] -&gt; unit" Usage="x509Certificate2Collection.RemoveRange certificates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Method isn't transactional (like documented)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2[]" />
      </Parameters>
      <Docs>
        <param name="certificates">Tableau d'objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
        <summary>Supprime d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> plusieurs objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> d'un tableau.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode si vous avez un tableau de <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> objets à supprimer à partir d’un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet. Le <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange%2A> et <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange%2A> méthodes traitent les demandes au niveau transactionnel, afin que si un seul ajout ou retrait échoue, l’opération entière est abandonnée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificates" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (certificates As X509Certificate2Collection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ certificates);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : System.Security.Cryptography.X509Certificates.X509Certificate2Collection -&gt; unit" Usage="x509Certificate2Collection.RemoveRange certificates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Method isn't transactional (like documented)")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
      </Parameters>
      <Docs>
        <param name="certificates">Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</param>
        <summary>Supprime plusieurs objets <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> d'un objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> à partir d'un autre objet <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode si vous avez des certificats dans un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet que vous souhaitez supprimer d’un autre <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> objet. Le <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange%2A> et <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange%2A> méthodes traitent les demandes au niveau transactionnel, afin que si un seul ajout ou retrait échoue, l’opération entière est abandonnée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificates" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>