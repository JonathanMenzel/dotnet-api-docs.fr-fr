<Type Name="ECDsaCertificateExtensions" FullName="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="454e71ee7faf21a0c30a299fcccf6c494197c3f4" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915124" /></Metadata><TypeSignature Language="C#" Value="public static class ECDsaCertificateExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ECDsaCertificateExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ECDsaCertificateExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCertificateExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ECDsaCertificateExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="97b82-101">Fournit des méthodes d’extension pour la récupération des implémentations de <see cref="T:System.Security.Cryptography.ECDsa" /> pour les clés publiques et privées d’un certificat <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-101">Provides extension methods for retrieving <see cref="T:System.Security.Cryptography.ECDsa" /> implementations for the     public and private keys of a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificate.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyWithPrivateKey">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509Certificate2 CopyWithPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Security.Cryptography.ECDsa privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.X509Certificates.X509Certificate2 CopyWithPrivateKey(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Security.Cryptography.ECDsa privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyWithPrivateKey (certificate As X509Certificate2, privateKey As ECDsa) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::Cryptography::X509Certificates::X509Certificate2 ^ CopyWithPrivateKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Security::Cryptography::ECDsa ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member CopyWithPrivateKey : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Security.Cryptography.ECDsa -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey (certificate, privateKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="privateKey" Type="System.Security.Cryptography.ECDsa" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="97b82-102">Certificat ECDSA.</span><span class="sxs-lookup"><span data-stu-id="97b82-102">The ECDSA certificate.</span></span></param>
        <param name="privateKey"><span data-ttu-id="97b82-103">Clé ECDSA privée.</span><span class="sxs-lookup"><span data-stu-id="97b82-103">The private ECDSA key.</span></span></param>
        <summary><span data-ttu-id="97b82-104">Combine une clé privée avec la clé publique d’un certificat <see cref="T:System.Security.Cryptography.ECDsa" /> pour générer un nouveau certificat ECDSA.</span><span class="sxs-lookup"><span data-stu-id="97b82-104">Combines a private key with the public key of an <see cref="T:System.Security.Cryptography.ECDsa" /> certificate to generate a new ECDSA certificate.</span></span></summary>
        <returns><span data-ttu-id="97b82-105">Nouveau certificat ECDSA avec la propriété <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" /> définie sur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-105">A new ECDSA certificate with the <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="97b82-106">L’objet de certificat ECDSA d’entrée n’est pas modifié.</span><span class="sxs-lookup"><span data-stu-id="97b82-106">The input ECDSA certificate object isn't modified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97b82-107"><paramref name="certificate" /> ou <paramref name="privateKey" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-107"><paramref name="certificate" /> or <paramref name="privateKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97b82-108">Le certificat est déjà associé à une clé privée.</span><span class="sxs-lookup"><span data-stu-id="97b82-108">The certificate already has an associated private key.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97b82-109">Le certificat n’a pas de clé publique.</span><span class="sxs-lookup"><span data-stu-id="97b82-109">The certificate doesn't have a public key.</span></span>  
  
<span data-ttu-id="97b82-110">ou</span><span class="sxs-lookup"><span data-stu-id="97b82-110">-or-</span></span> 
<span data-ttu-id="97b82-111">La clé privée spécifiée ne correspond pas à la clé publique du certificat spécifié.</span><span class="sxs-lookup"><span data-stu-id="97b82-111">The specified private key doesn't match the public key for the specified certificate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetECDsaPrivateKey">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECDsa GetECDsaPrivateKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ECDsa GetECDsaPrivateKey(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetECDsaPrivateKey (certificate As X509Certificate2) As ECDsa" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::Cryptography::ECDsa ^ GetECDsaPrivateKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="static member GetECDsaPrivateKey : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.ECDsa" Usage="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDsa</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" RefType="this" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="97b82-112">Certificat.</span><span class="sxs-lookup"><span data-stu-id="97b82-112">The certificate.</span></span></param>
        <summary><span data-ttu-id="97b82-113">Obtient la clé privée <see cref="T:System.Security.Cryptography.ECDsa" /> du certificat <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-113">Gets the <see cref="T:System.Security.Cryptography.ECDsa" /> private key from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificate.</span></span></summary>
        <returns><span data-ttu-id="97b82-114">Clé privée, ou <see langword="null" /> si le certificat n'a pas de clé privée ECDsa.</span><span class="sxs-lookup"><span data-stu-id="97b82-114">The private key, or <see langword="null" /> if the certificate does not have an ECDsa private key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97b82-115"><paramref name="certificate" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-115"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetECDsaPublicKey">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECDsa GetECDsaPublicKey (this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.ECDsa GetECDsaPublicKey(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetECDsaPublicKey (certificate As X509Certificate2) As ECDsa" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Security::Cryptography::ECDsa ^ GetECDsaPublicKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="static member GetECDsaPublicKey : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.ECDsa" Usage="System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDsa</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" RefType="this" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="97b82-116">Certificat.</span><span class="sxs-lookup"><span data-stu-id="97b82-116">The certificate.</span></span></param>
        <summary><span data-ttu-id="97b82-117">Obtient la clé publique <see cref="T:System.Security.Cryptography.ECDsa" /> du certificat <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-117">Gets the <see cref="T:System.Security.Cryptography.ECDsa" /> public key from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificate.</span></span></summary>
        <returns><span data-ttu-id="97b82-118">Clé publique, ou <see langword="null" /> si le certificat n'a pas de clé publique ECDsa.</span><span class="sxs-lookup"><span data-stu-id="97b82-118">The public key, or <see langword="null" /> if the certificate does not have an ECDsa public key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97b82-119"><paramref name="certificate" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97b82-119"><paramref name="certificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="97b82-120">Le handle n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="97b82-120">The handle is invalid.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>