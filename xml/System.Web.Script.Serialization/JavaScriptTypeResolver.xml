<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68b087218bcadcaee01e29ca84f4ae48fafa54b8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit la classe de base abstraite pour implémenter un programme de résolution de type personnalisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe fournit des services pour :  
  
-   Conversion d’informations de type pour une valeur de chaîne via la <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> (méthode).  
  
-   Résoudre une valeur de chaîne au approprié gérés type via le <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> (méthode).  
  
 Lorsque le <xref:System.Web.Script.Serialization.JavaScriptSerializer> objet sérialise des types personnalisés, il peut éventuellement inclure dans la chaîne de JavaScript Objet Notation (JSON) sérialisée une valeur qui contient des informations de type. Pendant la désérialisation, <xref:System.Web.Script.Serialization.JavaScriptSerializer> peut ensuite référence à cette valeur de chaîne pour déterminer les gérés de type dans lequel la chaîne JSON sera convertie.  
  
 Si vous fournissez un programme de résolution de type pour le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, le sérialiseur utilise le <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> et <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> méthodes pour mapper le type managé et la valeur de chaîne pendant le processus de sérialisation et la désérialisation, respectivement.  
  
 Le <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> est la classe de base pour le <xref:System.Web.Script.Serialization.SimpleTypeResolver> (classe), qui fournit une implémentation d’un programme de résolution de type qui utilise le nom qualifié d’assembly du type managé.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un programme de résolution de type personnalisé.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Lorsque vous implémentez un programme de résolution de type, la chaîne retournée par la <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> méthode doive mapper vers le même type managé lorsque la valeur de chaîne est passée à la <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> (méthode).</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Nom du type managé.</param>
        <summary>En cas de substitution dans une classe dérivée, retourne l'objet <see cref="T:System.Type" /> associé au nom du type spécifié.</summary>
        <returns>L'objet <see cref="T:System.Type" /> associé au nom du type spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un programme de résolution de type est associé un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, le sérialiseur utilise le <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> méthode lorsqu’il effectue une itération dans une chaîne JSON pour déterminer le spécifiques gérés type auquel le type JSON doit être converti.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Une valeur de chaîne donnée, le programme de résolution de type doit retourner un <see cref="T:System.Type" /> objet qui représente l’objet correspondant de type managé.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Le type managé à résoudre.</param>
        <summary>En cas de substitution dans une classe dérivée, retourne le nom du type pour l'objet <see cref="T:System.Type" /> spécifié.</summary>
        <returns>Nom du type managé spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> méthode retourne `null` ou <xref:System.String.Empty>, puis le programme de résolution de type ne prend pas en charge le type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>