<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JavaScriptConverter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c1e7934d8d1587adff38812ec02ac2e9499101eb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1e7934d8d1587adff38812ec02ac2e9499101eb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Provides an abstract base class for a custom type converter.</source>
          <target state="translated">Fournit une classe de base abstraite pour un convertisseur de type personnalisé.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> classe permet d’implémenter la sérialisation et désérialisation de processus pour les types managés qui ne sont pas prise en charge par la <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>You can also use <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> when you need more control over the serialization and deserialization process.</source>
          <target state="translated">Vous pouvez également utiliser <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> lorsque vous avez besoin de davantage de contrôle sur le processus de sérialisation et la désérialisation.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property indicates the types for which a custom converter provides converter services.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> propriété indique les types pour lesquels un convertisseur personnalisé fournit des services de convertisseur.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>To indicate that a custom converter must be used by the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, you must register the converter with the instance.</source>
          <target state="translated">Pour indiquer qu’un convertisseur personnalisé doit être utilisé par le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, vous devez enregistrer le convertisseur avec l’instance.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class directly, you should use the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method to register the converter.</source>
          <target state="translated">Si vous utilisez la <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> classe directement, vous devez utiliser le <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> méthode pour enregistrer le convertisseur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a <ph id="ph1">`converters`</ph> element in the configuration file.</source>
          <target state="translated">Sinon, si vous appelez des méthodes Web à partir d’ECMAScript (JavaScript) et que vous souhaitez utiliser le convertisseur personnalisé, vous pouvez l’enregistrer en ajoutant un <ph id="ph1">`converters`</ph> élément dans le fichier de configuration.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comment : configurer les Services ASP.NET dans Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which it has a custom converter registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance sérialise un type pour lequel il a un convertisseur personnalisé enregistré, le sérialiseur appelle le <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Similarly, when the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">De même, lorsque le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance désérialise une chaîne JavaScript Objet Notation (JSON) et reconnaît qu’un type à l’intérieur de la chaîne JSON a un convertisseur personnalisé associé, le sérialiseur appelle le <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>The following example shows how to create a custom converter for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> class.</source>
          <target state="translated">L’exemple suivant montre comment créer un convertisseur personnalisé pour la <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>, you must override the following members:</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>, vous devez substituer les membres suivants : </target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> provides the <ph id="ph3">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method that will be used by implementers of <ph id="ph4">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> Fournit la <ph id="ph3">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> méthode qui sera utilisé par les implémenteurs de <ph id="ph4">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Code de convertisseur doit être en mesure de prendre une valeur qui est contenue dans le dictionnaire que le sérialiseur lui passe, puis la convertir en un objet de type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Rather than re-implementing the custom conversion code to accomplish this, you can call the <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Au lieu d’implémenter le code de conversion personnalisé pour ce faire, vous pouvez appeler la <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> instance of property data stored as name/value pairs.</source>
          <target state="translated">Une instance <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> de données de propriétés stockées comme paires nom/valeur.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The type of the resulting object.</source>
          <target state="translated">Type d'objet obtenu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When overridden in a derived class, converts the provided dictionary into an object of the specified type.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, convertit le dictionnaire fourni en un objet du type spécifié.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The deserialized object.</source>
          <target state="translated">L'objet désérialisé.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> method iterates through the values in the <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph> parameter to construct an instance of the type requested in the <ph id="ph3">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> méthode parcourt les valeurs dans le <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph> paramètre pour construire une instance du type demandé dans le <ph id="ph3">&lt;paramref name="type" /&gt;</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>Although a converter can directly use values from <ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph>, we recommend that the converter implementer use the <ph id="ph2">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method instead.</source>
          <target state="translated">Bien qu’un convertisseur peut utiliser directement les valeurs de <ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph>, nous recommandons d’utiliser l’implémenteur du convertisseur le <ph id="ph2">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The converter should call this method of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance available from the <ph id="ph2">&lt;paramref name="serializer" /&gt;</ph> parameter.</source>
          <target state="translated">Le convertisseur doit appeler cette méthode pour le <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance disponible à partir de la <ph id="ph2">&lt;paramref name="serializer" /&gt;</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method enables converter to pass a property value from <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph>, and then return a value of the expected type.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> méthode permet au convertisseur de passer une valeur de propriété à partir de <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph>, puis de retourner une valeur du type attendu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</source>
          <target state="translated">Dans certains cas, un convertisseur pour un type personnalisé peut fonctionner avec des propriétés qu’ont elles-mêmes enregistré des convertisseurs (par exemple, tapez une a une propriété de type B et type B est également associé à un convertisseur personnalisé).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>In that case, invoking <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</source>
          <target state="translated">Dans ce cas, l’appel <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> permet de s’assurer que les convertisseurs personnalisés seront appelés pour les données de propriété qui sont contenues dans le dictionnaire de façon récursive.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</source>
          <target state="translated">Lorsque le convertisseur a itéré sur toutes les entrées dans le dictionnaire, il retourne une instance construite du type cible.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>If the converter encounters a problem during deserialization, it should throw an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> error that describes the problem.</source>
          <target state="translated">Si le convertisseur rencontre un problème lors de la désérialisation, il doit lever une <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> erreur qui décrit le problème.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The object to serialize.</source>
          <target state="translated">L'objet à sérialiser.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The object that is responsible for the serialization.</source>
          <target state="translated">Objet responsable de la sérialisation.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When overridden in a derived class, builds a dictionary of name/value pairs.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, génère un dictionnaire de paires nom/valeur.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>An object that contains key/value pairs that represent the object’s data.</source>
          <target state="translated">Objet qui contient des paires clé/valeur représentant les données de l'objet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When you serialize a type for which a custom converter is registered, the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance invokes the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">Lorsque vous sérialisez un type pour lequel un convertisseur personnalisé est enregistré, le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance appelle la <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The return value of <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> must be an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</source>
          <target state="translated">La valeur de retour de <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> doit être un <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> instance avec zéro ou plusieurs paires nom/valeur qui représentent les données d’un objet à convertir au format JSON.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The converter itself does not serialize data as JSON.</source>
          <target state="translated">Le convertisseur lui-même ne sérialise pas les données au format JSON.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</source>
          <target state="translated">Au lieu de cela, le convertisseur génère un dictionnaire de paires nom/valeur contenant les noms de propriété (la clé de chaîne pour le dictionnaire) et la propriété correspondante (la valeur de l’objet dans le dictionnaire) de valeurs.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance subsequently converts these to JSON.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance convertit par la suite en JSON.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>If the converter encounters an exception, it should throw an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> error that describes the problem.</source>
          <target state="translated">Si le convertisseur rencontre une exception, il doit lever une <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> erreur qui décrit le problème.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>When overridden in a derived class, gets a collection of the supported types.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient une collection des types pris en charge.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that represents the types supported by the converter.</source>
          <target state="translated">Objet qui implémente <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> qui représente les types pris en charge par le convertisseur.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property lists the types that are supported by the converter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> propriété répertorie les types qui sont pris en charge par le convertisseur.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>At run time, a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</source>
          <target state="translated">Au moment de l’exécution, un <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance utilise cette propriété pour déterminer le mappage de types managés à leurs convertisseurs personnalisés correspondants.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property in a derived class.</source>
          <target state="translated">L’exemple suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> propriété dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>In this example, the converter supports only the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> type.</source>
          <target state="translated">Dans cet exemple, le convertisseur prend uniquement en charge la <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> type.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph> must always return a collection, and the collection must contain at least one entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph> doit toujours retourner qu'une collection et la collection doivent contenir au moins une entrée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>