<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="485319f71e70d94fa0f7b64c6b311c3c41bbec72" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52604975" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe de base abstraite pour un convertisseur de type personnalisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Script.Serialization.JavaScriptConverter> classe vous permet implémentent la sérialisation et désérialisation de processus pour les types managés qui ne sont pas prise en charge par le <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe. Vous pouvez également utiliser <xref:System.Web.Script.Serialization.JavaScriptConverter> lorsque vous avez besoin de davantage de contrôle sur le processus de sérialisation et la désérialisation.  
  
 Le <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriété indique les types pour lesquels un convertisseur personnalisé fournit des services de convertisseur.  
  
 Pour indiquer qu’un convertisseur personnalisé doit être utilisé par le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, vous devez enregistrer le convertisseur avec l’instance. Si vous utilisez le <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe directement, vous devez utiliser le <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> méthode pour enregistrer le convertisseur. Sinon, si vous appelez des méthodes Web à partir d’ECMAScript (JavaScript) et que vous souhaitez utiliser le convertisseur personnalisé, vous pouvez l’enregistrer en ajoutant un `converters` élément dans le fichier de configuration. Pour plus d’informations, consultez [Comment : configurer les Services ASP.NET dans Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 Lorsque le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance sérialise un type pour lequel il a un convertisseur personnalisé enregistré, le sérialiseur appelle le <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> (méthode). De même, lorsque le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance désérialise une chaîne JavaScript Objet Notation (JSON) et reconnaît qu’un type à l’intérieur de la chaîne JSON a un convertisseur personnalisé associé, le sérialiseur appelle le <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un convertisseur personnalisé pour la <xref:System.Web.UI.WebControls.ListItemCollection> classe.  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Lorsque vous héritez de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, vous devez substituer les membres suivants :  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> fournit le <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> méthode qui sera utilisé par les implémenteurs de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Code de convertisseur doit pouvoir prendre une valeur qui est contenue dans le dictionnaire que le sérialiseur lui passe, puis la convertir en un objet de type <paramref name="T" />. Au lieu d’implémenter le code de conversion personnalisée pour ce faire, vous pouvez appeler la <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> (méthode).</para></block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Services Web dans ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">Une instance <see cref="T:System.Collections.Generic.IDictionary`2" /> de données de propriétés stockées comme paires nom/valeur.</param>
        <param name="type">Type d'objet obtenu.</param>
        <param name="serializer">Instance <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</param>
        <summary>En cas de substitution dans une classe dérivée, convertit le dictionnaire fourni en un objet du type spécifié.</summary>
        <returns>L'objet désérialisé.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Le <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> méthode effectue une itération dans les valeurs dans le <paramref name="dictionary" /> paramètre pour construire une instance du type demandé dans le <paramref name="type" /> paramètre. Bien qu’un convertisseur peut utiliser directement les valeurs de <paramref name="dictionary" />, nous recommandons d’utiliser l’implémenteur de convertisseur le <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> méthode à la place. Le convertisseur doit appeler cette méthode de la <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance disponible à partir de la <paramref name="serializer" /> paramètre.  
  
Le <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> méthode permet au convertisseur de passer une valeur de propriété à partir de <paramref name="dictionary" />et puis retourne une valeur du type attendu. Dans certains cas, un convertisseur pour un type personnalisé peut fonctionner avec des propriétés qu’ont elles-mêmes enregistré des convertisseurs (par exemple, tapez une a une propriété de type B et type B est également associé à un convertisseur personnalisé). Dans ce cas, l’appel <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> permet de s’assurer que les convertisseurs personnalisés seront appelés pour les données de propriété qui sont contenues dans le dictionnaire de façon récursive. Lorsque le convertisseur a parcouru toutes les entrées dans le dictionnaire, il retourne une instance construite du type cible.  
  
Si le convertisseur rencontre un problème pendant la désérialisation, il doit lever une <see cref="T:System.InvalidOperationException" /> erreur qui décrit le problème.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">L'objet à sérialiser.</param>
        <param name="serializer">Objet responsable de la sérialisation.</param>
        <summary>En cas de substitution dans une classe dérivée, génère un dictionnaire de paires nom/valeur.</summary>
        <returns>Objet qui contient des paires clé/valeur représentant les données de l’objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous sérialisez un type pour lequel un convertisseur personnalisé est enregistré, le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance appelle le <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>La valeur de retour de <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> doit être un <see cref="T:System.Collections.Generic.IDictionary`2" /> instance avec zéro ou plusieurs paires nom/valeur qui représentent les données d’un objet à convertir au format JSON. Le convertisseur lui-même ne sérialise pas les données au format JSON. Au lieu de cela, le convertisseur génère un dictionnaire de paires nom/valeur qui contiennent les noms de propriété (la clé de chaîne pour le dictionnaire) et la propriété correspondante valeurs (la valeur de l’objet dans le dictionnaire). Le <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance convertit par la suite en JSON.  
  
Si le convertisseur rencontre une exception, il doit lever une <see cref="T:System.InvalidOperationException" /> erreur qui décrit le problème.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, obtient une collection des types pris en charge.</summary>
        <value>Objet qui implémente <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui représente les types pris en charge par le convertisseur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriété répertorie les types qui sont pris en charge par le convertisseur. Au moment de l’exécution, un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance utilise cette propriété pour déterminer le mappage de types managés à leurs convertisseurs personnalisés correspondants.  
  
   
  
## Examples  
 L’exemple suivant montre comment substituer la <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriété dans une classe dérivée. Dans cet exemple, le convertisseur prend en charge uniquement la <xref:System.Web.UI.WebControls.ListItemCollection> type. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> doit toujours retourner qu'une collection et la collection doivent contenir au moins une entrée.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>