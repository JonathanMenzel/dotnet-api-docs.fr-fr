<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="752718b77e67b3a54f76d7c672a56001c11ffd3d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37604881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0a7b5-101">Fournit une classe de base abstraite pour un convertisseur de type personnalisé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a7b5-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7b5-102">Le <xref:System.Web.Script.Serialization.JavaScriptConverter> classe vous permet implémentent la sérialisation et désérialisation de processus pour les types managés qui ne sont pas prise en charge par le <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="0a7b5-103">Vous pouvez également utiliser <xref:System.Web.Script.Serialization.JavaScriptConverter> lorsque vous avez besoin de davantage de contrôle sur le processus de sérialisation et la désérialisation.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="0a7b5-104">Le <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriété indique les types pour lesquels un convertisseur personnalisé fournit des services de convertisseur.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="0a7b5-105">Pour indiquer qu’un convertisseur personnalisé doit être utilisé par le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, vous devez enregistrer le convertisseur avec l’instance.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="0a7b5-106">Si vous utilisez le <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe directement, vous devez utiliser le <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> méthode pour enregistrer le convertisseur.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="0a7b5-107">Sinon, si vous appelez des méthodes Web à partir d’ECMAScript (JavaScript) et que vous souhaitez utiliser le convertisseur personnalisé, vous pouvez l’enregistrer en ajoutant un `converters` élément dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="0a7b5-108">Pour plus d’informations, consultez [Comment : configurer les Services ASP.NET dans Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="0a7b5-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="0a7b5-109">Lorsque le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance sérialise un type pour lequel il a un convertisseur personnalisé enregistré, le sérialiseur appelle le <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0a7b5-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="0a7b5-110">De même, lorsque le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance désérialise une chaîne JavaScript Objet Notation (JSON) et reconnaît qu’un type à l’intérieur de la chaîne JSON a un convertisseur personnalisé associé, le sérialiseur appelle le <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0a7b5-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7b5-111">L’exemple suivant montre comment créer un convertisseur personnalisé pour la <xref:System.Web.UI.WebControls.ListItemCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="0a7b5-112">
        <para>Lorsque vous héritez de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, vous devez substituer les membres suivants :- <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> fournit le <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> méthode qui sera utilisé par les implémenteurs de <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Code de convertisseur doit pouvoir prendre une valeur qui est contenue dans le dictionnaire que le sérialiseur lui passe, puis la convertir en un objet de type <paramref name="T" />. Au lieu d’implémenter le code de conversion personnalisée pour ce faire, vous pouvez appeler la <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> (méthode).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0a7b5-112">
          <para>When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:  -   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />. Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a7b5-113">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-113">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="0a7b5-114">Une instance <see cref="T:System.Collections.Generic.IDictionary`2" /> de données de propriétés stockées comme paires nom/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-114">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="0a7b5-115">Type d'objet obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-115">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="0a7b5-116">Instance <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-116">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7b5-117">En cas de substitution dans une classe dérivée, convertit le dictionnaire fourni en un objet du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-117">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7b5-118">L'objet désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-118">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a7b5-119">
            <para>Le <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> méthode effectue une itération dans les valeurs dans le <paramref name="dictionary" /> paramètre pour construire une instance du type demandé dans le <paramref name="type" /> paramètre. Bien qu’un convertisseur peut utiliser directement les valeurs de <paramref name="dictionary" />, nous recommandons d’utiliser l’implémenteur de convertisseur le <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> méthode à la place. Le convertisseur doit appeler cette méthode de la <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance disponible à partir de la <paramref name="serializer" /> paramètre.  Le <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> méthode permet au convertisseur de passer une valeur de propriété à partir de <paramref name="dictionary" />et puis retourne une valeur du type attendu. Dans certains cas, un convertisseur pour un type personnalisé peut fonctionner avec des propriétés qu’ont elles-mêmes enregistré des convertisseurs (par exemple, tapez une a une propriété de type B et type B est également associé à un convertisseur personnalisé). Dans ce cas, l’appel <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> permet de s’assurer que les convertisseurs personnalisés seront appelés pour les données de propriété qui sont contenues dans le dictionnaire de façon récursive. Lorsque le convertisseur a parcouru toutes les entrées dans le dictionnaire, il retourne une instance construite du type cible.  Si le convertisseur rencontre un problème pendant la désérialisation, il doit lever une <see cref="T:System.InvalidOperationException" /> erreur qui décrit le problème.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-119">
              <para>The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter. Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead. The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.  The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type. In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter). In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary. When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.  If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0a7b5-120">L'objet à sérialiser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-120">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="0a7b5-121">Objet responsable de la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-121">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a7b5-122">En cas de substitution dans une classe dérivée, génère un dictionnaire de paires nom/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-122">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a7b5-123">Objet qui contient des paires clé/valeur représentant les données de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-123">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7b5-124">Lorsque vous sérialisez un type pour lequel un convertisseur personnalisé est enregistré, le <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance appelle le <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0a7b5-124">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a7b5-125">
            <para>La valeur de retour de <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> doit être un <see cref="T:System.Collections.Generic.IDictionary`2" /> instance avec zéro ou plusieurs paires nom/valeur qui représentent les données d’un objet à convertir au format JSON. Le convertisseur lui-même ne sérialise pas les données au format JSON. Au lieu de cela, le convertisseur génère un dictionnaire de paires nom/valeur qui contiennent les noms de propriété (la clé de chaîne pour le dictionnaire) et la propriété correspondante valeurs (la valeur de l’objet dans le dictionnaire). Le <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance convertit par la suite en JSON.  Si le convertisseur rencontre une exception, il doit lever une <see cref="T:System.InvalidOperationException" /> erreur qui décrit le problème.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-125">
              <para>The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON. The converter itself does not serialize data as JSON. Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary). The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.  If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a7b5-126">En cas de substitution dans une classe dérivée, obtient une collection des types pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-126">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a7b5-127">Objet qui implémente <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui représente les types pris en charge par le convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-127">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7b5-128">Le <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriété répertorie les types qui sont pris en charge par le convertisseur.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-128">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="0a7b5-129">Au moment de l’exécution, un <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance utilise cette propriété pour déterminer le mappage de types managés à leurs convertisseurs personnalisés correspondants.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-129">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a7b5-130">L’exemple suivant montre comment substituer la <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriété dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-130">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="0a7b5-131">Dans cet exemple, le convertisseur prend en charge uniquement la <xref:System.Web.UI.WebControls.ListItemCollection> type.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-131">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="0a7b5-132">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0a7b5-132">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a7b5-133">
            <para>
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> doit toujours retourner qu'une collection et la collection doivent contenir au moins une entrée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a7b5-133">
              <para>
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>