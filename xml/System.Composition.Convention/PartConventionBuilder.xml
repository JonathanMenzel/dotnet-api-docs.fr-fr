<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PartConventionBuilder.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52db64a21b17114b95f902965178ad7d89ff87da1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2db64a21b17114b95f902965178ad7d89ff87da1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Composition.Convention.PartConventionBuilder">
          <source>Configures a type as a Managed Extensibility Framework (MEF) part.</source>
          <target state="translated">Configure un type en tant que composant MEF (Managed Extensibility Framework).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})">
          <source>The name of the metadata to add.</source>
          <target state="translated">Nom des métadonnées à ajouter.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})">
          <source>A function that returns the metadata value on the part type.</source>
          <target state="translated">Fonction qui retourne la valeur des métadonnées sur le type de composant.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})">
          <source>Adds metadata that has the specified name and value to the part.</source>
          <target state="translated">Ajoute des métadonnées avec le nom et la valeur indiqués au composant.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})">
          <source>The value is returned by a function that maps the part type to the metadata value.</source>
          <target state="translated">La valeur est retournée par une fonction qui mappe le type de composant à la valeur des métadonnées.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)">
          <source>The metadata name.</source>
          <target state="translated">Nom des métadonnées.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)">
          <source>The metadata value.</source>
          <target state="translated">Valeur des métadonnées.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)">
          <source>Adds metadata that has the specified name and value to the part.</source>
          <target state="translated">Ajoute des métadonnées avec le nom et la valeur indiqués au composant.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export">
          <source>Exports the part with its concrete type as the contract type.</source>
          <target state="translated">Exporte le composant avec son type concret comme type de contrat.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the part.</source>
          <target state="translated">Action qui configure le composant.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>Exports the part that has the specified configuration.</source>
          <target state="translated">Exporte le composant avec la configuration spécifiée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1">
          <source>The contract type.</source>
          <target state="translated">Type de contrat.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1">
          <source>Exports the part that has the specified contract type.</source>
          <target state="translated">Exporte le composant qui a le type de contrat spécifié.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>The contract type.</source>
          <target state="translated">Type de contrat.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the part.</source>
          <target state="translated">Action qui configure le composant.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>Exports the part that has the specified contract type by using the specified configuration.</source>
          <target state="translated">Exporte le composant qui a le type de contrat spécifié en utilisant la configuration spécifiée.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces">
          <source>Selects all interfaces on the part type to be exported.</source>
          <target state="translated">Sélectionne toutes les interfaces sur le type de composant à exporter.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})">
          <source>A predicate that specifies the interfaces to be selected.</source>
          <target state="translated">Prédicat qui spécifie les interfaces à sélectionner.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})">
          <source>Selects interfaces on the part type to be exported according to the specified filter.</source>
          <target state="translated">Sélectionne les interfaces sur le type de composant à exporter selon le filtre spécifié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})">
          <source>A predicate that specifies the interfaces to be selected.</source>
          <target state="translated">Prédicat qui spécifie les interfaces à sélectionner.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the exports.</source>
          <target state="translated">Action qui configure les exportations.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})">
          <source>Selects interfaces on the part type to be exported according to the specified filter, using the specified export configuration.</source>
          <target state="translated">Sélectionne les interfaces sur le type de composant à exporter selon le filtre spécifié, à l'aide de la configuration d'exportation spécifiée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A predicate that specifies the properites to export.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à exporter.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})">
          <source>Selects the properties on the part to export according to the specified predicate.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à exporter en fonction du prédicat spécifié.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>A predicate that specifies the properites to export.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à exporter.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the exports.</source>
          <target state="translated">Action qui configure les exportations.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>Selects the properties on the part to export according to the specified predicate, using the specified export configuration.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à exporter en fonction du prédicat spécifié, à l’aide de la configuration d’exportation spécifiée.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>The contract type.</source>
          <target state="translated">Type de contrat.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A predicate that specifies the properites to export.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à exporter.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>Selects the properties on the part to export according to the specified predicate, using the specified contract type.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à exporter en fonction du prédicat spécifié, à l’aide du type de contrat spécifié.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>The contract type.</source>
          <target state="translated">Type de contrat.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>A predicate that specifies the properites to export.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à exporter.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>An action that configures the exports.</source>
          <target state="translated">Action qui configure les exportations.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>Selects the properties on the part to export according to the specified predicate, using the specified contract type and export configuration.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à exporter en fonction du prédicat spécifié, à l’aide du type de contrat et de la configuration d’exportation spécifiés.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A predicate that specifies the properites to import.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à importer.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})">
          <source>Selects the properties on the part to import according to the specified predicate.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à importer selon le prédicat spécifié.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A predicate that specifies the properites to import.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à importer.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>An action that configures the imports.</source>
          <target state="translated">Action qui configure les importations.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>Selects the properties on the part to import according to the specified predicate, using the specified import configuration.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à importer en fonction du prédicat spécifié, à l’aide de la configuration d’importation spécifiée.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>The contract type.</source>
          <target state="translated">Type de contrat.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A predicate that specifies the properties to import.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à importer.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>Selects the properties on the part to import according to the specified predicate, using the specified contract type.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à importer en fonction du prédicat spécifié, à l’aide du type de contrat spécifié.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>The contract type.</source>
          <target state="translated">Type de contrat.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A predicate that specifies the properties to import.</source>
          <target state="translated">Prédicat qui spécifie les propriétés à importer.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>An action that configures the imports.</source>
          <target state="translated">Action qui configure les importations.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>Selects the properties on the part to import according to the specified predicate, using the specified contract type and import configuration.</source>
          <target state="translated">Sélectionne les propriétés sur le composant à importer en fonction du prédicat spécifié, à l’aide du type de contrat et de la configuration d’importation spécifiés.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})">
          <source>A predicate that selects the methods.</source>
          <target state="translated">Prédicat qui sélectionne les méthodes.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})">
          <source>Select methods to be used as a notification when composition is complete.</source>
          <target state="translated">Sélectionne les méthodes à utiliser comme notification quand la composition est terminée.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})">
          <source>A function that returns a single constructor.</source>
          <target state="translated">Fonction retournant un constructeur unique.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})">
          <source>Selects the constructor used to initialize the part by using the specified function.</source>
          <target state="translated">Sélectionne le constructeur utilisé pour initialiser le composant à l'aide de la fonction spécifiée.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A function that returns a single constructor.</source>
          <target state="translated">Fonction retournant un constructeur unique.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A method that configures the constructor's imports.</source>
          <target state="translated">Méthode qui configure les importations du constructeur.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>Selects the constructor used to initialize the part by using the specified function and import configuration.</source>
          <target state="translated">Sélectionne le constructeur utilisé pour initialiser le composant à l'aide de la fonction et de la configuration d'importation spécifiées.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Shared">
          <source>Marks the part as being shared throughout the entire composition.</source>
          <target state="translated">Marque le composant comme étant partagé dans la composition entière.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Shared">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)">
          <source>The boundary.</source>
          <target state="translated">Limite.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)">
          <source>Marks the part as being shared within the specified boundary.</source>
          <target state="translated">Marque le composant comme étant partagé dans la limite spécifiée.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)">
          <source>A part builder that can be used to further configure the part.</source>
          <target state="translated">Générateur de composant qui peut être utilisé pour configurer davantage le composant.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>