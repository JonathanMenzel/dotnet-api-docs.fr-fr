<Type Name="ImportConventionBuilder" FullName="System.Composition.Convention.ImportConventionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a95b5d513df023208617f2aa0bde0fff87415146" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36700086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.ImportConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportConventionBuilder sealed" />
  <TypeSignature Language="F#" Value="type ImportConventionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="631f9-101">Configure une importation qui est associée à un composant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="631f9-101">Configures an import that is associated with a part.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMetadataConstraint">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint (string name, Func&lt;Type,object&gt; getConstraintValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint(string name, class System.Func`2&lt;class System.Type, object&gt; getConstraintValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AddMetadataConstraint(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataConstraint (name As String, getConstraintValueFromPartType As Func(Of Type, Object)) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AddMetadataConstraint(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getConstraintValueFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AddMetadataConstraint : string * Func&lt;Type, obj&gt; -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AddMetadataConstraint (name, getConstraintValueFromPartType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getConstraintValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="631f9-102">Nom des métadonnées requis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-102">The required metadata name.</span>
          </span>
        </param>
        <param name="getConstraintValueFromPartType">
          <span data-ttu-id="631f9-103">Fonction qui fournit la valeur des métadonnées requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-103">A function that provides the required metadata value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631f9-104">Ajoute une contrainte à l'importation requérant le nom des métadonnées spécifiées et la valeur fournie par la fonction spécifiée sur le type de composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-104">Adds a constraint to the import requiring the specified metadata name and the value provided by the specified function on the part type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-105">Générateur d’importation contenant la contrainte qui permet d’effectuer une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-105">An import builder containing the constraint that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataConstraint">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AddMetadataConstraint(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataConstraint (name As String, value As Object) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AddMetadataConstraint(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadataConstraint : string * obj -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AddMetadataConstraint (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="631f9-106">Nom des métadonnées requis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-106">The required metadata name.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="631f9-107">Valeur des métadonnées requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-107">The required metadata value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631f9-108">Ajoute une contrainte à l'importation requérant le nom et la valeur des métadonnées spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-108">Adds a constraint to the import requiring the specified metadata name and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-109">Générateur d’importation contenant la contrainte qui permet d’effectuer une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-109">An import builder containing the constraint that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AllowDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AllowDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function AllowDefault () As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AllowDefault();" />
      <MemberSignature Language="F#" Value="member this.AllowDefault : unit -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AllowDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="631f9-110">Permet à l’importation de recevoir la valeur par défaut pour son type si le contrat ne peut pas être fourni par un autre composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-110">Allows the import to receive the default value for its type if the contract cannot be supplied by another part.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-111">Générateur d’importation qui autorise les valeurs par défaut et une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-111">An import builder that allows default values and can be further configured.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsContractName (Func&lt;Type,string&gt; getContractNameFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsContractName(class System.Func`2&lt;class System.Type, string&gt; getContractNameFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsContractName(System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (getContractNameFromPartType As Func(Of Type, String)) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsContractName(Func&lt;Type ^, System::String ^&gt; ^ getContractNameFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : Func&lt;Type, string&gt; -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsContractName getContractNameFromPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getContractNameFromPartType" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="getContractNameFromPartType">
          <span data-ttu-id="631f9-112">Fonction qui fournit le nom de contrat de l'importation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-112">A function that provides the contract name of the import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631f9-113">Définit le nom de contrat de l'importation sur la valeur fournie par la fonction spécifiée sur le type de composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-113">Sets the contract name of the import to the value provided by the specified function on the part type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-114">Générateur d’importation contenant le nom de contrat qui autorise une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-114">An import builder containing the contract name that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsContractName (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsContractName(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsContractName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (contractName As String) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsContractName(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : string -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsContractName contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="631f9-115">Nom de contrat de l'importation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-115">The contract name of the import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631f9-116">Définit le nom de contrat de l'importation sur la chaîne spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-116">Sets the contract name of the import to the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-117">Générateur d’importation contenant le nom de contrat qui autorise une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-117">An import builder containing the contract name that allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsMany" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany () As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsMany();" />
      <MemberSignature Language="F#" Value="member this.AsMany : unit -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsMany " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="631f9-118">Configure l’importation pour recevoir une collection d’exportations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-118">Configures the import to receive a collection of exports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-119">Générateur d’importation qui peut recevoir une collection d’exportations et autorise une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-119">An import builder that can receive a collection of exports and allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsMany (bool isMany);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsMany(bool isMany) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsMany(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany (isMany As Boolean) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsMany(bool isMany);" />
      <MemberSignature Language="F#" Value="member this.AsMany : bool -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsMany isMany" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isMany" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isMany">
          <span data-ttu-id="631f9-120">
            <see langword="true" /> pour fournir toutes les exportations correspondantes disponibles ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-120">
              <see langword="true" /> to provide all available matching exports; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="631f9-121">Configure l’importation pour recevoir une collection d’exportations, représentant éventuellement toutes les exportations disponibles correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-121">Configures the import to receive a collection of exports, possibly representing all available matching exports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="631f9-122">Générateur d’importation qui peut recevoir une collection d’exportations et autorise une configuration supplémentaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="631f9-122">An import builder that can receive a collection of exports and allows for further configuration.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>