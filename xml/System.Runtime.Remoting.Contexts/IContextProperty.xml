<Type Name="IContextProperty" FullName="System.Runtime.Remoting.Contexts.IContextProperty">
  <TypeSignature Language="C#" Value="public interface IContextProperty" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextProperty" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContextProperty" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextProperty" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContextProperty" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="63a99-101">Collecte des informations de dénomination à partir de la propriété de contexte et détermine si le nouveau contexte est correct pour cette dernière.</span><span class="sxs-lookup"><span data-stu-id="63a99-101">Gathers naming information from the context property and determines whether the new context is ok for the context property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a99-102">Le <xref:System.Runtime.Remoting.Contexts.IContextProperty> interface est exposée par la propriété fournie à un contexte par un attribut.</span><span class="sxs-lookup"><span data-stu-id="63a99-102">The <xref:System.Runtime.Remoting.Contexts.IContextProperty> interface is exposed by the property contributed to a context by an attribute.</span></span> <span data-ttu-id="63a99-103">Par défaut, il est également implémentée par le <xref:System.Runtime.Remoting.Contexts.ContextAttribute> classe de base, à partir de laquelle <xref:System.Runtime.Remoting.Contexts.Context> peuvent d’étendre les classes d’attributs.</span><span class="sxs-lookup"><span data-stu-id="63a99-103">By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze (System.Runtime.Remoting.Contexts.Context newContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Freeze(class System.Runtime.Remoting.Contexts.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze (newContext As Context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze(System::Runtime::Remoting::Contexts::Context ^ newContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContext" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newContext"><span data-ttu-id="63a99-104">Contexte à figer.</span><span class="sxs-lookup"><span data-stu-id="63a99-104">The context to freeze.</span></span></param>
        <summary><span data-ttu-id="63a99-105">Appelé lorsque le contexte est figé.</span><span class="sxs-lookup"><span data-stu-id="63a99-105">Called when the context is frozen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a99-106">Propriétés de contexte ne peut pas être ajoutées après que le contexte a été figé.</span><span class="sxs-lookup"><span data-stu-id="63a99-106">Context properties cannot be added after the context has been frozen.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsNewContextOK">
      <MemberSignature Language="C#" Value="public bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNewContextOK(class System.Runtime.Remoting.Contexts.Context newCtx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNewContextOK (newCtx As Context) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNewContextOK(System::Runtime::Remoting::Contexts::Context ^ newCtx);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCtx" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newCtx"><span data-ttu-id="63a99-107">Nouveau contexte dans lequel <see cref="T:System.Runtime.Remoting.Contexts.ContextProperty" /> a été créé.</span><span class="sxs-lookup"><span data-stu-id="63a99-107">The new context in which the <see cref="T:System.Runtime.Remoting.Contexts.ContextProperty" /> has been created.</span></span></param>
        <summary><span data-ttu-id="63a99-108">Retourne une valeur booléenne indiquant si la propriété de contexte est compatible avec le nouveau contexte.</span><span class="sxs-lookup"><span data-stu-id="63a99-108">Returns a Boolean value indicating whether the context property is compatible with the new context.</span></span></summary>
        <returns>
          <span data-ttu-id="63a99-109"><see langword="true" /> si la propriété de contexte peut coexister avec les autres propriétés de contexte dans le contexte donné ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63a99-109"><see langword="true" /> if the context property can coexist with the other context properties in the given context; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63a99-110">Après ont ajouté toutes les propriétés de contexte pour le nouveau contexte, elles sont toutes interrogées afin qu’ils soient OK dans le nouveau contexte.</span><span class="sxs-lookup"><span data-stu-id="63a99-110">Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context.</span></span> <span data-ttu-id="63a99-111">La propriété de contexte peut observer les autres propriétés de contexte à partir de `newCtx` et déterminer s’il est compatible avec ces autres propriétés de contexte.</span><span class="sxs-lookup"><span data-stu-id="63a99-111">The context property could look at the other context properties from `newCtx` and determine whether it is compatible with these other context properties.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Contexts.IContextProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63a99-112">Obtient le nom de la propriété sous laquelle elle sera ajoutée au contexte.</span><span class="sxs-lookup"><span data-stu-id="63a99-112">Gets the name of the property under which it will be added to the context.</span></span></summary>
        <value><span data-ttu-id="63a99-113">Nom de la propriété.</span><span class="sxs-lookup"><span data-stu-id="63a99-113">The name of the property.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>