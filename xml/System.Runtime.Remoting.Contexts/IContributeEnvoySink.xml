<Type Name="IContributeEnvoySink" FullName="System.Runtime.Remoting.Contexts.IContributeEnvoySink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1495c1eceefedd7225791c6eea26c1be6a09cedb" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48738027" /></Metadata><TypeSignature Language="C#" Value="public interface IContributeEnvoySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContributeEnvoySink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContributeEnvoySink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContributeEnvoySink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContributeEnvoySink" />
  <TypeSignature Language="F#" Value="type IContributeEnvoySink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bc65a-101">Fournit un récepteur de messages d'envoi à l'extrémité cliente.</span><span class="sxs-lookup"><span data-stu-id="bc65a-101">Contributes an envoy message sink on the client end.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc65a-102">Le <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink> interface est implémentée par les propriétés de contexte dans le serveur <xref:System.Runtime.Remoting.Contexts.Context> classe qui souhaitent fournir un récepteur de message d’envoi sur le client.</span><span class="sxs-lookup"><span data-stu-id="bc65a-102">The <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink> interface is implemented by context properties in the server <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an envoy message sink on the client end.</span></span> <span data-ttu-id="bc65a-103">La chaîne de l’envoi serveur se compose des propriétés de contexte qui implémentent <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink>.</span><span class="sxs-lookup"><span data-stu-id="bc65a-103">The server envoy chain is composed from those context properties that implement <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink>.</span></span> <span data-ttu-id="bc65a-104">La chaîne de l’envoi se trouve sur le client et agit en tant que récepteurs par un représentant du message correspondant à partir des propriétés de contexte de serveur.</span><span class="sxs-lookup"><span data-stu-id="bc65a-104">The envoy chain resides on the client end and acts as a representative of the corresponding message sinks from the server context properties.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="GetEnvoySink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink (MarshalByRefObject obj, System.Runtime.Remoting.Messaging.IMessageSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink(class System.MarshalByRefObject obj, class System.Runtime.Remoting.Messaging.IMessageSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvoySink (obj As MarshalByRefObject, nextSink As IMessageSink) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageSink ^ GetEnvoySink(MarshalByRefObject ^ obj, System::Runtime::Remoting::Messaging::IMessageSink ^ nextSink);" />
      <MemberSignature Language="F#" Value="abstract member GetEnvoySink : MarshalByRefObject * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="iContributeEnvoySink.GetEnvoySink (obj, nextSink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="bc65a-105">Objet serveur pour lequel la chaîne est créée.</span><span class="sxs-lookup"><span data-stu-id="bc65a-105">The server object for which the chain is being created.</span></span></param>
        <param name="nextSink"><span data-ttu-id="bc65a-106">Chaîne de récepteurs composée jusqu'ici.</span><span class="sxs-lookup"><span data-stu-id="bc65a-106">The chain of sinks composed so far.</span></span></param>
        <summary><span data-ttu-id="bc65a-107">Prend le premier récepteur dans la chaîne de récepteurs composée jusqu'ici, puis chaîne son récepteur de messages devant la chaîne déjà formée.</span><span class="sxs-lookup"><span data-stu-id="bc65a-107">Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.</span></span></summary>
        <returns><span data-ttu-id="bc65a-108">Chaîne de récepteurs composée.</span><span class="sxs-lookup"><span data-stu-id="bc65a-108">The composite sink chain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc65a-109">Le <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink%2A> méthode est utilisée en guise d’optimisation pour créer un récepteur d’envoi lorsque la destination est un contexte différent dans le même domaine d’application et est utilisée par l’opération de type Wrap.</span><span class="sxs-lookup"><span data-stu-id="bc65a-109">The <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink%2A> method is used as an optimization to create an envoy sink when the destination is a different context in the same application domain and is used by the Wrap operation.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>