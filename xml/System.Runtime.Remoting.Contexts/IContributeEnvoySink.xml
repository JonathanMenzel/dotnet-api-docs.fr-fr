<Type Name="IContributeEnvoySink" FullName="System.Runtime.Remoting.Contexts.IContributeEnvoySink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ddd2b8277a7caa0969209344157faf0644b8a59b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30484913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContributeEnvoySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContributeEnvoySink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContributeEnvoySink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContributeEnvoySink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContributeEnvoySink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un récepteur de messages d'envoi à l'extrémité cliente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink> interface est implémentée par les propriétés de contexte dans le serveur <xref:System.Runtime.Remoting.Contexts.Context> classe qui souhaitent fournir un récepteur de message d’envoi sur le client. La chaîne de l’envoi serveur se compose des propriétés de contexte qui implémentent <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink>. La chaîne de l’envoi réside sur le client et agit en tant que les récepteurs d’un représentant du message correspondant à partir des propriétés de contexte de serveur.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="GetEnvoySink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink (MarshalByRefObject obj, System.Runtime.Remoting.Messaging.IMessageSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink(class System.MarshalByRefObject obj, class System.Runtime.Remoting.Messaging.IMessageSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvoySink (obj As MarshalByRefObject, nextSink As IMessageSink) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageSink ^ GetEnvoySink(MarshalByRefObject ^ obj, System::Runtime::Remoting::Messaging::IMessageSink ^ nextSink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.MarshalByRefObject" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="obj">Objet serveur pour lequel la chaîne est créée.</param>
        <param name="nextSink">Chaîne de récepteurs composée jusqu'ici.</param>
        <summary>Prend le premier récepteur dans la chaîne de récepteurs composée jusqu'ici, puis chaîne son récepteur de messages devant la chaîne déjà formée.</summary>
        <returns>Chaîne de récepteurs composée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink%2A> méthode est utilisée en guise d’optimisation pour créer un récepteur d’envoi lorsque la destination est un contexte différent dans le même domaine d’application et est utilisée par l’opération de type Wrap.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>