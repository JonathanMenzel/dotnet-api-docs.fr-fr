<Type Name="Dispatcher" FullName="System.Windows.Threading.Dispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ad9e62b91662435080a893038a5962630437e09" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39942339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Dispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Dispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.Dispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Dispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dispatcher sealed" />
  <TypeSignature Language="F#" Value="type Dispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ff596-101">Fournit des services pour la gestion de la file d'attente des éléments de travail d'un thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff596-101">Provides services for managing the queue of work items for a thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-102">Le <xref:System.Windows.Threading.Dispatcher> maintient une file d’attente prioritaire d’éléments de travail pour un thread spécifique.</span><span class="sxs-lookup"><span data-stu-id="ff596-102">The <xref:System.Windows.Threading.Dispatcher> maintains a prioritized queue of work items for a specific thread.</span></span>  
  
 <span data-ttu-id="ff596-103">Quand un <xref:System.Windows.Threading.Dispatcher> est créé sur un thread, il devient le seul <xref:System.Windows.Threading.Dispatcher> qui peut être associé au thread, même si le <xref:System.Windows.Threading.Dispatcher> est arrêté.</span><span class="sxs-lookup"><span data-stu-id="ff596-103">When a <xref:System.Windows.Threading.Dispatcher> is created on a thread, it becomes the only <xref:System.Windows.Threading.Dispatcher> that can be associated with the thread, even if the <xref:System.Windows.Threading.Dispatcher> is shut down.</span></span>  
  
 <span data-ttu-id="ff596-104">Si vous tentez d’obtenir le <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> pour le thread actuel et un <xref:System.Windows.Threading.Dispatcher> n’est pas associé au thread, un <xref:System.Windows.Threading.Dispatcher> sera créé.</span><span class="sxs-lookup"><span data-stu-id="ff596-104">If you attempt to get the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> for the current thread and a <xref:System.Windows.Threading.Dispatcher> is not associated with the thread, a <xref:System.Windows.Threading.Dispatcher> will be created.</span></span> <span data-ttu-id="ff596-105">Un <xref:System.Windows.Threading.Dispatcher> est également créée lorsque vous créez un <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ff596-105">A <xref:System.Windows.Threading.Dispatcher> is also created when you create a <xref:System.Windows.Threading.DispatcherObject>.</span></span> <span data-ttu-id="ff596-106">Si vous créez un <xref:System.Windows.Threading.Dispatcher> sur un thread d’arrière-plan, veillez à arrêter le répartiteur avant de quitter le thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-106">If you create a <xref:System.Windows.Threading.Dispatcher> on a background thread, be sure to shut down the dispatcher before exiting the thread.</span></span>  
  
 <span data-ttu-id="ff596-107">Si un <xref:System.Windows.Threading.Dispatcher> est arrêté, il ne peut pas être redémarré.</span><span class="sxs-lookup"><span data-stu-id="ff596-107">If a <xref:System.Windows.Threading.Dispatcher> is shut down, it cannot be restarted.</span></span>  
  
 <span data-ttu-id="ff596-108">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], un <xref:System.Windows.Threading.DispatcherObject> est uniquement accessible par le <xref:System.Windows.Threading.Dispatcher> lui est associée.</span><span class="sxs-lookup"><span data-stu-id="ff596-108">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], a <xref:System.Windows.Threading.DispatcherObject> can only be accessed by the <xref:System.Windows.Threading.Dispatcher> it is associated with.</span></span>  <span data-ttu-id="ff596-109">Par exemple, un thread d’arrière-plan ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui est associé le <xref:System.Windows.Threading.Dispatcher> sur la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-109">For example, a background thread cannot update the contents of a <xref:System.Windows.Controls.Button> that is associated with the <xref:System.Windows.Threading.Dispatcher> on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="ff596-110">Afin que le thread d’arrière-plan pour accéder à la <xref:System.Windows.Controls.ContentControl.Content%2A> propriété de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé à la [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-110">In order for the background thread to access the <xref:System.Windows.Controls.ContentControl.Content%2A> property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="ff596-111">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-111">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-112"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-113">L’opération est ajoutée à la file d’attente de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-113">The operation is added to the queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-114">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-114">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 <span data-ttu-id="ff596-115">Toutes les méthodes sur <xref:System.Windows.Threading.Dispatcher>, à l’exception de <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, sont libres de threads.</span><span class="sxs-lookup"><span data-stu-id="ff596-115">All of the methods on <xref:System.Windows.Threading.Dispatcher>, with the exception of <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A>, are free-threaded.</span></span>  
  
 <span data-ttu-id="ff596-116">Objets qui dérivent de <xref:System.Windows.Threading.DispatcherObject> ont une affinité de thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-116">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="ff596-117">Objets qui dérivent de <xref:System.Windows.Freezable> sont libres de threads lorsqu’ils sont figés.</span><span class="sxs-lookup"><span data-stu-id="ff596-117">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="ff596-118">Pour plus d’informations, consultez [Vue d’ensemble des objets Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ff596-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-119">L’exemple suivant montre comment placer une opération sur un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-119">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ff596-120">Pour le code source complet de cet exemple, consultez [Single-Threaded Application avec Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="ff596-120">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="ff596-121">Tout d’abord, un délégué est créé qui n’accepte aucun argument.</span><span class="sxs-lookup"><span data-stu-id="ff596-121">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="ff596-122">Ensuite, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-122">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="ff596-123">Cet appel à <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> accepte deux paramètres : la priorité, qui est définie sur <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>et le rappel, qui est passé dans une instance du délégué `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="ff596-123">This call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-124">Exécute de façon asynchrone un délégué sur le thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-124">Executes a delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-125">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-125">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-126">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-126">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-127">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-127">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-128">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-128">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-129"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-130">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-130">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone ; Par conséquent, contrôle immédiat à l’objet appelant après que qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-131"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ff596-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Retourne un <xref:System.Windows.Threading.DispatcherOperation> objet qui peut être utilisé pour interagir avec le délégué lorsque le délégué est dans cette file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-132"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ff596-133">Le <xref:System.Windows.Threading.DispatcherOperation> objet retourné par <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> peut être utilisé de plusieurs façons d’interagir avec le délégué spécifié, tel que :</span><span class="sxs-lookup"><span data-stu-id="ff596-133">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ff596-134">Modification de la <xref:System.Windows.Threading.DispatcherPriority> du délégué en attente l’exécution de l’événement de file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-134">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-135">Suppression du délégué de la file d’attente de l’événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-135">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-136">En attente de délégué à retourner.</span><span class="sxs-lookup"><span data-stu-id="ff596-136">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ff596-137">Obtention de la valeur retournée par le délégué après qu’il est exécuté.</span><span class="sxs-lookup"><span data-stu-id="ff596-137">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ff596-138">Si plusieurs <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> appels sont effectués au même <xref:System.Windows.Threading.DispatcherPriority>, elles sont exécutées dans l’ordre les appels ont été apportées.</span><span class="sxs-lookup"><span data-stu-id="ff596-138">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ff596-139">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-139">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ff596-140">Délégué d’une méthode qui prend les paramètres spécifiés dans <c>args</c>, qui fait l’objet d’un envoi (push) dans la file d’attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-140">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-141">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-141">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ff596-142">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-142">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-143">Exécute de façon asynchrone le délégué spécifié avec les arguments spécifiés sur le thread sur lequel le <see cref="T:System.Windows.Threading.Dispatcher" /> spécifié a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-143">Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-144">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-144">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-145">Le <xref:System.Windows.Threading.DispatcherOperation> objet retourné par <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> peut être utilisé de plusieurs façons d’interagir avec le délégué spécifié, tel que :</span><span class="sxs-lookup"><span data-stu-id="ff596-145">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ff596-146">Modification de la <xref:System.Windows.Threading.DispatcherPriority> du délégué en attente l’exécution de l’événement de file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-146">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-147">Suppression du délégué de la file d’attente de l’événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-147">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-148">En attente de délégué à retourner.</span><span class="sxs-lookup"><span data-stu-id="ff596-148">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ff596-149">Obtention de la valeur retournée par le délégué après qu’il est exécuté.</span><span class="sxs-lookup"><span data-stu-id="ff596-149">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ff596-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone ; Par conséquent, contrôle immédiat à l’objet appelant après que qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-150"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ff596-151">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-151">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ff596-152">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-152">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ff596-153">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-153">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ff596-154">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-154">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-155"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ff596-156">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-156">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-157">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-157">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-158">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-158">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-159">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-159">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-160">Exécute le délégué spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-160">Executes the specified delegate asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-161">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-161">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-162">Si plusieurs <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> appels sont effectués au même <xref:System.Windows.Threading.DispatcherPriority>, elles sont exécutées dans l’ordre les appels ont été apportées.</span><span class="sxs-lookup"><span data-stu-id="ff596-162">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ff596-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Retourne un <xref:System.Windows.Threading.DispatcherOperation> objet qui peut être utilisé pour interagir avec le délégué lorsque le délégué est dans cette file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-163"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ff596-164">Le <xref:System.Windows.Threading.DispatcherOperation> objet retourné par <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> peut être utilisé de plusieurs façons d’interagir avec le délégué spécifié, tel que :</span><span class="sxs-lookup"><span data-stu-id="ff596-164">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ff596-165">Modification de la <xref:System.Windows.Threading.DispatcherPriority> du délégué en attente l’exécution de l’événement de file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-165">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-166">Suppression du délégué de la file d’attente de l’événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-166">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-167">En attente de délégué à retourner.</span><span class="sxs-lookup"><span data-stu-id="ff596-167">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ff596-168">Obtention de la valeur retournée par le délégué après qu’il est exécuté.</span><span class="sxs-lookup"><span data-stu-id="ff596-168">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ff596-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone ; Par conséquent, contrôle immédiat à l’objet appelant après que qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-169"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ff596-170">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-170">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-171">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-171">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-172">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-172">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-173">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-173">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-174"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-175">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-175">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-176">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-176">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-177">L’exemple suivant montre comment placer une opération sur un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-177">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ff596-178">Pour le code source complet de cet exemple, consultez [Single-Threaded Application avec Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span><span class="sxs-lookup"><span data-stu-id="ff596-178">For the full source code of this example, see [Single-Threaded Application with Long-Running Calculation Sample](http://go.microsoft.com/fwlink/?LinkID=160038).</span></span>  
  
 <span data-ttu-id="ff596-179">Tout d’abord, un délégué est créé qui n’accepte aucun argument.</span><span class="sxs-lookup"><span data-stu-id="ff596-179">First, a delegate is created that accepts no arguments.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberinit)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberinit)]   
  
 <span data-ttu-id="ff596-180">Ensuite, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-180">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> is called.</span></span>  <span data-ttu-id="ff596-181">Étant donné que chaque <xref:System.Windows.Threading.DispatcherObject> a une propriété qui retourne le <xref:System.Windows.Threading.Dispatcher> il est associé, souhaité <xref:System.Windows.Threading.Dispatcher> est obtenu en interrogeant le <xref:System.Windows.Threading.DispatcherObject>, dans ce cas un <xref:System.Windows.Controls.Button> nommé `startStopButton`.</span><span class="sxs-lookup"><span data-stu-id="ff596-181">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Button> named `startStopButton`.</span></span>   <span data-ttu-id="ff596-182">L’appel à <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> accepte deux paramètres : la priorité, qui est définie sur <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>et le rappel, qui est passé dans une instance du délégué `NextPrimeDelegate`.</span><span class="sxs-lookup"><span data-stu-id="ff596-182">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%29> takes two parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>, and the callback, which is passed in through an instance of the delegate `NextPrimeDelegate`.</span></span>  
  
 [!code-csharp[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingPrimeNumbers/CSharp/Window1.xaml.cs#threadingprimenumberbegininvoke)] 
 [!code-vb[ThreadingPrimeNumbers#ThreadingPrimeNumberBeginInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingPrimeNumbers/visualbasic/mainwindow.xaml.vb#threadingprimenumberbegininvoke)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-183">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-183">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-184">
            <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-184">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ff596-185">Délégué d’une méthode qui prend les paramètres spécifiés dans <c>args</c>, qui fait l’objet d’un envoi (push) dans la file d’attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-185">The delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-186">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-186">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-187">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-187">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ff596-188">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-188">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-189">Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec les arguments définis, sur le  thread sur lequel <see cref="T:System.Windows.Threading.Dispatcher" /> a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-189">Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-190">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-190">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-191">Le <xref:System.Windows.Threading.DispatcherOperation> objet retourné par <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> peut être utilisé de plusieurs façons d’interagir avec le délégué spécifié, tel que :</span><span class="sxs-lookup"><span data-stu-id="ff596-191">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ff596-192">Modification de la <xref:System.Windows.Threading.DispatcherPriority> du délégué en attente l’exécution de l’événement de file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-192">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-193">Suppression du délégué de la file d’attente de l’événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-193">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-194">En attente de délégué à retourner.</span><span class="sxs-lookup"><span data-stu-id="ff596-194">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ff596-195">Obtention de la valeur retournée par le délégué après qu’il est exécuté.</span><span class="sxs-lookup"><span data-stu-id="ff596-195">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ff596-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone ; Par conséquent, contrôle immédiat à l’objet appelant après que qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-196"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ff596-197">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-197">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ff596-198">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-198">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ff596-199">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-199">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ff596-200">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-200">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-201"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ff596-202">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-202">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-203">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-203">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-204">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-204">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-205">Délégué vers une méthode qui prend un argument, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-205">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ff596-206">Objet à passer comme argument à la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-206">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-207">Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-207">Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-208">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-208">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-209">`Arg` peut être `null` si aucun argument n’est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ff596-209">`Arg` can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="ff596-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Retourne un <xref:System.Windows.Threading.DispatcherOperation> objet qui peut être utilisé pour interagir avec le délégué lorsque le délégué est dans cette file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-210"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ff596-211">Le <xref:System.Windows.Threading.DispatcherOperation> objet retourné par <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> peut être utilisé de plusieurs façons d’interagir avec le délégué spécifié, tel que :</span><span class="sxs-lookup"><span data-stu-id="ff596-211">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ff596-212">Modification de la <xref:System.Windows.Threading.DispatcherPriority> du délégué en attente l’exécution de l’événement de file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-212">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-213">Suppression du délégué de la file d’attente de l’événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-213">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-214">En attente de délégué à retourner.</span><span class="sxs-lookup"><span data-stu-id="ff596-214">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ff596-215">Obtention de la valeur retournée par le délégué après qu’il est exécuté.</span><span class="sxs-lookup"><span data-stu-id="ff596-215">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ff596-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone ; Par conséquent, contrôle immédiat à l’objet appelant après que qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-216"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ff596-217">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-217">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-218">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-218">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-219">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-219">In order for the background thread to access the content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-220">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-220">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-221"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-222">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-222">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-223">Si plusieurs <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> appels sont effectués au même <xref:System.Windows.Threading.DispatcherPriority>, elles sont exécutées dans l’ordre les appels ont été apportées.</span><span class="sxs-lookup"><span data-stu-id="ff596-223">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ff596-224">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-224">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-225">L’exemple suivant montre comment placer une opération sur un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-225">The following example shows how to place an operation onto a <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="ff596-226">Tout d’abord, un délégué est créé qui accepte un seul argument, dans ce cas une chaîne.</span><span class="sxs-lookup"><span data-stu-id="ff596-226">First, a delegate is created that accepts one argument, in this case a string.</span></span>  
  
 [!code-csharp[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdelegates)]
 [!code-vb[ThreadingWeatherForecast#ThreadingWeatherDelegates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdelegates)]  
  
 <span data-ttu-id="ff596-227">Ensuite, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-227">Next, <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> is called.</span></span>  <span data-ttu-id="ff596-228">Étant donné que chaque <xref:System.Windows.Threading.DispatcherObject> a une propriété qui retourne le <xref:System.Windows.Threading.Dispatcher> il est associé, souhaité <xref:System.Windows.Threading.Dispatcher> est obtenu en interrogeant le <xref:System.Windows.Threading.DispatcherObject>, dans ce cas un <xref:System.Windows.Controls.Grid> nommé `tomorrowsWeather`.</span><span class="sxs-lookup"><span data-stu-id="ff596-228">Because every <xref:System.Windows.Threading.DispatcherObject> has a property that returns the <xref:System.Windows.Threading.Dispatcher> it is associated with, the desired <xref:System.Windows.Threading.Dispatcher> is obtained by querying the <xref:System.Windows.Threading.DispatcherObject>, in this case a <xref:System.Windows.Controls.Grid> named `tomorrowsWeather`.</span></span> <span data-ttu-id="ff596-229">L’appel à <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> accepte trois paramètres : la priorité, qui est définie sur <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; le rappel, qui est passé dans une instance du délégué `OneArgDelegate`; et une chaîne nommée `weather`, qui est l’argument pour le rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-229">The call to <xref:System.Windows.Threading.Dispatcher.BeginInvoke%28System.Windows.Threading.DispatcherPriority%2CSystem.Delegate%2CSystem.Object%29> takes three parameters: the priority, which is set to <xref:System.Windows.Threading.DispatcherPriority.Normal?displayProperty=nameWithType>; the callback, which is passed in through an instance of the delegate `OneArgDelegate`; and a string named `weather`, which is the argument for the callback.</span></span>  
  
 [!code-csharp[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/csharp/VS_Snippets_Wpf/ThreadingWeatherForecast/CSharp/Window1.xaml.cs#threadingweatherdispatcheronearge)]
 [!code-vb[threadingweatherforecast#ThreadingWeatherDispatcherOneArge](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThreadingWeatherForecast/visualbasic/window1.xaml.vb#threadingweatherdispatcheronearge)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-230">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-230">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-231">
            <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-231">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation BeginInvoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation BeginInvoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ BeginInvoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.BeginInvoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-232">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-232">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-233">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-233">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ff596-234">Objet à passer comme argument à la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-234">The object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-235">Tableau d'objets à passer comme arguments à la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-235">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-236">Exécute le délégué spécifié de façon asynchrone selon la priorité indiquée et avec le tableau d'arguments défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-236">Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-237">Objet qui est retourné immédiatement après l'appel de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-237">An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-238">Le `arg` paramètre peut être `null` si aucun argument n’est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ff596-238">The `arg` parameter can be `null` if no arguments are needed.</span></span>  
  
 <span data-ttu-id="ff596-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Retourne un <xref:System.Windows.Threading.DispatcherOperation> objet qui peut être utilisé pour interagir avec le délégué lorsque le délégué est dans cette file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-239"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object that can be used to interact with the delegate when the delegate is in the event queue.</span></span>  
  
 <span data-ttu-id="ff596-240">Le <xref:System.Windows.Threading.DispatcherOperation> objet retourné par <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> peut être utilisé de plusieurs façons d’interagir avec le délégué spécifié, tel que :</span><span class="sxs-lookup"><span data-stu-id="ff596-240">The <xref:System.Windows.Threading.DispatcherOperation> object returned by <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> can be used in several ways to interact with the specified delegate, such as:</span></span>  
  
-   <span data-ttu-id="ff596-241">Modification de la <xref:System.Windows.Threading.DispatcherPriority> du délégué en attente l’exécution de l’événement de file d’attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-241">Changing the <xref:System.Windows.Threading.DispatcherPriority> of the delegate as it is pending execution in the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-242">Suppression du délégué de la file d’attente de l’événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-242">Removing the delegate from the event queue.</span></span>  
  
-   <span data-ttu-id="ff596-243">En attente de délégué à retourner.</span><span class="sxs-lookup"><span data-stu-id="ff596-243">Waiting for the delegate to return.</span></span>  
  
-   <span data-ttu-id="ff596-244">Obtention de la valeur retournée par le délégué après qu’il est exécuté.</span><span class="sxs-lookup"><span data-stu-id="ff596-244">Obtaining the value that the delegate returns after it is executed.</span></span>  
  
 <span data-ttu-id="ff596-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone ; Par conséquent, contrôle immédiat à l’objet appelant après que qu’elle est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-245"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous; therefore, control returns immediately to the calling object after it is called.</span></span>  
  
 <span data-ttu-id="ff596-246">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-246">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-247">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-247">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-248">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-248">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-249">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-249">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-250"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-251">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-251">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-252">Si plusieurs <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> appels sont effectués au même <xref:System.Windows.Threading.DispatcherPriority>, elles sont exécutées dans l’ordre les appels ont été apportées.</span><span class="sxs-lookup"><span data-stu-id="ff596-252">If multiple <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> calls are made at the same <xref:System.Windows.Threading.DispatcherPriority>, they will be executed in the order the calls were made.</span></span>  
  
 <span data-ttu-id="ff596-253">Si <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est appelée sur un <xref:System.Windows.Threading.Dispatcher> qui s’est arrêté, la propriété status de retourné <xref:System.Windows.Threading.DispatcherOperation> est défini sur <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="ff596-253">If <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is called on a <xref:System.Windows.Threading.Dispatcher> that has shut down, the status property of the returned <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-254">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-254">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-255">
            <see cref="T:System.Windows.Threading.DispatcherPriority" /> n'est pas une priorité valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-255">
              <see cref="T:System.Windows.Threading.DispatcherPriority" /> is not a valid priority.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeShutdown">
      <MemberSignature Language="C#" Value="public void BeginInvokeShutdown (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginInvokeShutdown(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInvokeShutdown (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInvokeShutdown(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.BeginInvokeShutdown : System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.BeginInvokeShutdown priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-256">Priorité à laquelle l'arrêt du répartiteur doit commencer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-256">The priority at which to begin shutting down the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-257">Initialise de façon asynchrone l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-257">Initiates shutdown of the <see cref="T:System.Windows.Threading.Dispatcher" /> asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> les demandes sans restriction des autorisations de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-258"><xref:System.Windows.Threading.Dispatcher.BeginInvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="ff596-259">Lorsque le <xref:System.Windows.Threading.Dispatcher> commence à arrêter, le <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> événement est déclenché et <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-259">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-260">Le <xref:System.Windows.Threading.Dispatcher> n’arrête pas complètement jusqu'à ce que la file d’attente de l’événement se déroule.</span><span class="sxs-lookup"><span data-stu-id="ff596-260">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ff596-261">Lorsque le répartiteur termine en cours d’arrêt, le <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> événement est déclenché et le <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-261">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-262">Une fois que le processus d’arrêt commence, toutes les tâches en attente, les éléments dans la file d’attente sont abandonnées.</span><span class="sxs-lookup"><span data-stu-id="ff596-262">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ff596-263">Pour arrêter le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-263">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="ff596-264">Énumérations associées :  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-264">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcher.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-265">Détermine si le thread appelant est le thread associé à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-265">Determines whether the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-266">
            <see langword="true" /> si le thread appelant est le thread associé à ce <see cref="T:System.Windows.Threading.Dispatcher" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-266">
              <see langword="true" /> if the calling thread is the thread associated with this <see cref="T:System.Windows.Threading.Dispatcher" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-267">Uniquement les <xref:System.Windows.Threading.Dispatcher> qui un <xref:System.Windows.Threading.DispatcherObject> est créé peut accéder l’objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-267">Only the <xref:System.Windows.Threading.Dispatcher> that a <xref:System.Windows.Threading.DispatcherObject> is created on may access the object.</span></span>  <span data-ttu-id="ff596-268">Utilisez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> pour accéder à l’objet d’un thread différent.</span><span class="sxs-lookup"><span data-stu-id="ff596-268">Use <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> to access the object from a different thread.</span></span>  
  
 <span data-ttu-id="ff596-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> peut être appelée à partir de n’importe quel thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-269"><xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> can be called from any thread.</span></span>  
  
 <span data-ttu-id="ff596-270">La différence entre <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> et <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> est <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> retourne une valeur booléenne indiquant si le thread appelant a accès à la <xref:System.Windows.Threading.Dispatcher> et <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ff596-270">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean indicating whether the calling thread has access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-271">L’exemple suivant utilise <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> pour déterminer si un thread a accès à un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ff596-271">The following example uses <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> to determine whether a thread has access to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="ff596-272">Le <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> méthode sur le <xref:System.Windows.Threading.Dispatcher> associé à la <xref:System.Windows.Controls.Button> est appelée pour vérifier l’accès au thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-272">The <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> associated with the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="ff596-273">Si le thread appelant a accès à la <xref:System.Windows.Threading.Dispatcher>, le <xref:System.Windows.Controls.Button> est mis à jour en accédant aux membres de la <xref:System.Windows.Controls.Button>; sinon, un délégué qui accepte un <xref:System.Windows.Controls.Button> en tant qu’argument, est placé sur le <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-273">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is placed onto the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ff596-274">Le <xref:System.Windows.Threading.Dispatcher> délègue le travail de mise à jour le <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ff596-274">The <xref:System.Windows.Threading.Dispatcher> will delegate the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccesscheckaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccesscheckaccess)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDispatcher">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher CurrentDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Threading.Dispatcher CurrentDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Threading::Dispatcher ^ CurrentDispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.CurrentDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-275">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> pour le thread en cours d'exécution et crée un nouveau <see cref="T:System.Windows.Threading.Dispatcher" /> si aucun n'est déjà associé au thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-275">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the thread currently executing and creates a new <see cref="T:System.Windows.Threading.Dispatcher" /> if one is not already associated with the thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff596-276">Répartiteur associé au thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-276">The dispatcher associated with the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-277">Si un <xref:System.Windows.Threading.Dispatcher> n’est pas associé au thread actuel, un nouveau <xref:System.Windows.Threading.Dispatcher> sera créé.</span><span class="sxs-lookup"><span data-stu-id="ff596-277">If a <xref:System.Windows.Threading.Dispatcher> is not associated with the current thread, a new <xref:System.Windows.Threading.Dispatcher> will be created.</span></span>  <span data-ttu-id="ff596-278">Ce n'est pas le cas avec la méthode <xref:System.Windows.Threading.Dispatcher.FromThread%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-278">This is not the case with the <xref:System.Windows.Threading.Dispatcher.FromThread%2A> method.</span></span>  <span data-ttu-id="ff596-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> retournera `null` si il n’existe pas de répartiteur associé au thread spécifié.</span><span class="sxs-lookup"><span data-stu-id="ff596-279"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> will return `null` if there is not a dispatcher associated with the specified thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableProcessing">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherProcessingDisabled DisableProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.DisableProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableProcessing () As DispatcherProcessingDisabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherProcessingDisabled DisableProcessing();" />
      <MemberSignature Language="F#" Value="member this.DisableProcessing : unit -&gt; System.Windows.Threading.DispatcherProcessingDisabled" Usage="dispatcher.DisableProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherProcessingDisabled</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-280">Désactive le traitement de la file d'attente du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-280">Disables processing of the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-281">Structure utilisée pour réactiver le traitement du répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-281">A structure used to re-enable dispatcher processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-282">Désactiver le traitement du répartiteur est une méthode avancée qui vise à éliminer le risque de réentrance non associée.</span><span class="sxs-lookup"><span data-stu-id="ff596-282">Disabling dispatcher processing is an advanced method that is intended to eliminate the chance of unrelated reentrancy.</span></span>  
  
 <span data-ttu-id="ff596-283">Les effets de la désactivation de traitement sont les suivantes :</span><span class="sxs-lookup"><span data-stu-id="ff596-283">The effects of disabling processing are as follows:</span></span>  
  
-   <span data-ttu-id="ff596-284">Verrous CLR ne seront pas pompe pas les messages en interne.</span><span class="sxs-lookup"><span data-stu-id="ff596-284">CLR locks will not pump messages internally.</span></span>  
  
-   <span data-ttu-id="ff596-285"><xref:System.Windows.Threading.DispatcherFrame> objets ne sont pas autorisés à être envoyées.</span><span class="sxs-lookup"><span data-stu-id="ff596-285"><xref:System.Windows.Threading.DispatcherFrame> objects are not allowed to be pushed.</span></span>  
  
-   <span data-ttu-id="ff596-286">Traitement des messages n’est pas autorisé.</span><span class="sxs-lookup"><span data-stu-id="ff596-286">Message processing is not permitted.</span></span>  
  
 <span data-ttu-id="ff596-287">Le <xref:System.Windows.Threading.DispatcherProcessingDisabled> qui structure <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> retourne lorsqu’elle est appelée peut être utilisé pour réactiver le traitement du répartiteur.</span><span class="sxs-lookup"><span data-stu-id="ff596-287">The <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that <xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns when it is called can be used to re-enable dispatcher processing.</span></span>  <span data-ttu-id="ff596-288">Appel <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> sur la <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure réactive le traitement.</span><span class="sxs-lookup"><span data-stu-id="ff596-288">Calling <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure re-enables processing.</span></span>  
  
 <span data-ttu-id="ff596-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> peut uniquement être appelée sur le thread du <xref:System.Windows.Threading.Dispatcher> est associé.</span><span class="sxs-lookup"><span data-stu-id="ff596-289"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> can only be called on the thread the <xref:System.Windows.Threading.Dispatcher> is associated with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-290">L’exemple suivant montre comment désactiver et réactiver le traitement du répartiteur.</span><span class="sxs-lookup"><span data-stu-id="ff596-290">The following example shows how to disable dispatcher processing and re-enable dispatcher processing.</span></span>  <span data-ttu-id="ff596-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> est appelé dans un **à l’aide de** instruction.</span><span class="sxs-lookup"><span data-stu-id="ff596-291"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> is called in a **using** statement.</span></span>  <span data-ttu-id="ff596-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> Retourne un <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure qui est utilisé en tant que l’objet à supprimer après la **à l’aide de** exécution du bloc.</span><span class="sxs-lookup"><span data-stu-id="ff596-292"><xref:System.Windows.Threading.Dispatcher.DisableProcessing%2A> returns a <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure that is used as the object to be disposed when the **using** block finishes.</span></span>  <span data-ttu-id="ff596-293">Lorsque <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> est appelée sur le <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, le traitement du répartiteur est réactivé.</span><span class="sxs-lookup"><span data-stu-id="ff596-293">When <xref:System.Windows.Threading.DispatcherProcessingDisabled.Dispose%2A> is called on the <xref:System.Windows.Threading.DispatcherProcessingDisabled> structure, dispatcher processing is re-enabled.</span></span>  
  
 [!code-csharp[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdisableprocessing)]
 [!code-vb[DispatcherSnippets#DispatcherDisableProcessing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdisableprocessing)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAllFrames">
      <MemberSignature Language="C#" Value="public static void ExitAllFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitAllFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitAllFrames ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitAllFrames();" />
      <MemberSignature Language="F#" Value="static member ExitAllFrames : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ExitAllFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-294">Demande la fermeture de tous les frames, y compris les frames imbriqués.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-294">Requests that all frames exit, including nested frames.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ff596-295">pour appeler cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-295">for calling this method.</span>
          </span>
          <span data-ttu-id="ff596-296">Énumérations associées :  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-296">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
        <altmember cref="T:System.Windows.Threading.DispatcherFrame" />
      </Docs>
    </Member>
    <Member MemberName="FromThread">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.Dispatcher FromThread (System.Threading.Thread thread);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Threading.Dispatcher FromThread(class System.Threading.Thread thread) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::Dispatcher ^ FromThread(System::Threading::Thread ^ thread);" />
      <MemberSignature Language="F#" Value="static member FromThread : System.Threading.Thread -&gt; System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.Dispatcher.FromThread thread" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thread" Type="System.Threading.Thread" />
      </Parameters>
      <Docs>
        <param name="thread">
          <span data-ttu-id="ff596-297">Thread à partir duquel obtenir le <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-297">The thread to obtain the <see cref="T:System.Windows.Threading.Dispatcher" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-298">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> pour le thread spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-298">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> for the specified thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-299">Répartiteur de <paramref name="thread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-299">The dispatcher for <paramref name="thread" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-300">Si un répartiteur n’est pas disponible pour le thread spécifié, `null` sera retourné.</span><span class="sxs-lookup"><span data-stu-id="ff596-300">If a dispatcher is not available for the specified thread, `null` will be returned.</span></span>  
  
 <span data-ttu-id="ff596-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> ne crée pas un <xref:System.Windows.Threading.Dispatcher> sur un thread qui n’a pas un <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-301"><xref:System.Windows.Threading.Dispatcher.FromThread%2A> does not create a <xref:System.Windows.Threading.Dispatcher> on a thread that does not have a <xref:System.Windows.Threading.Dispatcher>.</span></span>   <span data-ttu-id="ff596-302">Un nouveau <xref:System.Windows.Threading.Dispatcher> est créé sur un thread qui n’a pas déjà un <xref:System.Windows.Threading.Dispatcher> lorsque vous tentez d’obtenir le <xref:System.Windows.Threading.Dispatcher> à l’aide de la <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="ff596-302">A new <xref:System.Windows.Threading.Dispatcher> is created on a thread that does not already have a <xref:System.Windows.Threading.Dispatcher> when attempting to get the <xref:System.Windows.Threading.Dispatcher> by using the <xref:System.Windows.Threading.Dispatcher.CurrentDispatcher%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownFinished">
      <MemberSignature Language="C#" Value="public bool HasShutdownFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownFinished" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownFinished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownFinished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownFinished : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-303">Détermine si l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> a abouti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-303">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> has finished shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff596-304">
            <see langword="true" /> si l'arrêt du répartiteur a abouti ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-304">
              <see langword="true" /> if the dispatcher has finished shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-305">Lorsque le <xref:System.Windows.Threading.Dispatcher> commence à arrêter, le <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> événement est déclenché et <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-305">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-306">Le <xref:System.Windows.Threading.Dispatcher> ne s’arrête pas complètement jusqu'à ce que la file d’attente de l’événement se déroule.</span><span class="sxs-lookup"><span data-stu-id="ff596-306">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ff596-307">Lorsque le répartiteur termine en cours d’arrêt, le <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> événement est déclenché et le <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-307">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-308">Une fois que le processus d’arrêt commence, toutes les tâches en attente, les éléments dans la file d’attente sont abandonnées.</span><span class="sxs-lookup"><span data-stu-id="ff596-308">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Windows.Threading.Dispatcher.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-309">Détermine si le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-309">Determines whether the <see cref="T:System.Windows.Threading.Dispatcher" /> is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff596-310">
            <see langword="true" /> si le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> a commencé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-310">
              <see langword="true" /> if the <see cref="T:System.Windows.Threading.Dispatcher" /> has started shutting down; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-311">Lorsque le <xref:System.Windows.Threading.Dispatcher> commence à arrêter, le <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> événement est déclenché et <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-311">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-312">Le <xref:System.Windows.Threading.Dispatcher> n’arrête pas complètement jusqu'à ce que la file d’attente de l’événement se déroule.</span><span class="sxs-lookup"><span data-stu-id="ff596-312">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ff596-313">Lorsque le répartiteur termine en cours d’arrêt, le <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> événement est déclenché et le <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-313">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-314">Une fois que le processus d’arrêt commence, toutes les tâches en attente, les éléments dans la file d’attente sont abandonnées.</span><span class="sxs-lookup"><span data-stu-id="ff596-314">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hooks">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherHooks Hooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.DispatcherHooks Hooks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Hooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hooks As DispatcherHooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherHooks ^ Hooks { System::Windows::Threading::DispatcherHooks ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Hooks : System.Windows.Threading.DispatcherHooks" Usage="System.Windows.Threading.Dispatcher.Hooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherHooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-315">Obtient la collection de raccordements qui fournissent des informations d'événement supplémentaires sur le <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-315">Gets the collection of hooks that provide additional event information about the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff596-316">Raccordements associés à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-316">The hooks associated with this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-317">Le <xref:System.Windows.Threading.DispatcherHooks> classe fournit des informations d’événement supplémentaires sur le <xref:System.Windows.Threading.Dispatcher>, par exemple lorsque le <xref:System.Windows.Threading.Dispatcher> est inactif ou quand une opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="ff596-317">The <xref:System.Windows.Threading.DispatcherHooks> class provides additional event information about the <xref:System.Windows.Threading.Dispatcher>, such as when the <xref:System.Windows.Threading.Dispatcher> is inactive or when an operation has competed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ff596-318">Pour obtenir cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-318">for getting this property.</span>
          </span>
          <span data-ttu-id="ff596-319">Énumérations associées :  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-319">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-320">Exécute le délégué spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-320">Executes the specified delegate synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-321">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-321">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-322">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-322">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-323">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-323">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-324">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-324">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-325"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-326">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-326">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-327"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-328">L’exemple suivant place un délégué sur un <xref:System.Windows.Threading.Dispatcher> à <xref:System.Windows.Threading.DispatcherPriority.Normal> à l’aide de <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-328">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action -&gt; unit" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-329">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-329">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-330">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-330">Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (callback As Action, priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority -&gt; unit" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-331">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-331">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-332">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-332">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-333">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-333">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ff596-334">Délégué d’une méthode qui prend les paramètres spécifiés dans <c>args</c>, qui fait l’objet d’un envoi (push) dans la file d’attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-334">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-335">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-335">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ff596-336">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-336">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-337">Exécute le délégué spécifié de façon synchrone avec les arguments spécifiés, sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-337">Executes the specified delegate with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-338">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-338">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-339">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-339">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ff596-340">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-340">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ff596-341">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-341">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ff596-342">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-342">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-343"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ff596-344">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-344">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-345"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-346">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-346">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-347">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-347">A delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-348">Exécute le délégué spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-348">Executes the specified delegate synchronously at the specified priority on the thread on which the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-349">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-349">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-350">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-350">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-351">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-351">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-352">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-352">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-353">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-353">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-354"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-355">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-355">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-356"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-357">L’exemple suivant place un délégué sur un <xref:System.Windows.Threading.Dispatcher> à <xref:System.Windows.Threading.DispatcherPriority.Normal> à l’aide de <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-357">The following example places a delegate onto a <xref:System.Windows.Threading.Dispatcher> at <xref:System.Windows.Threading.DispatcherPriority.Normal> using <xref:System.Windows.Threading.Dispatcher.Invoke%2A>.</span></span>  
  
 [!code-csharp[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/CSharp/Window1.xaml.cs#systemtimerdispatcherinvoke)]
 [!code-vb[invalidaterequerywithsystemtimer#SystemTimerDispatcherInvoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithSystemTimer/visualbasic/window1.xaml.vb#systemtimerdispatcherinvoke)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff596-358">
            <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-358">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-359">
            <paramref name="priority" /> n'est pas une priorité valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-359">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-360">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-360">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-361">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-361">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-362">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-362">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ff596-363">Objet qui indique s'il est nécessaire d'annuler l'action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-363">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-364">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-364">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ff596-365">Délégué d’une méthode qui prend les paramètres spécifiés dans <c>args</c>, qui fait l’objet d’un envoi (push) dans la file d’attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-365">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-366">Durée maximale d'attente d'achèvement de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-366">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-367">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-367">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ff596-368">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-368">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-369">Exécute le délégué spécifié de façon synchrone, dans l'intervalle de temps spécifié, selon la priorité indiquée et avec les arguments définis sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-369">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-370">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-370">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-371">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-371">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ff596-372">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-372">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ff596-373">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-373">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ff596-374">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-374">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-375"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ff596-376">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-376">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-377"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ff596-378">Délégué d’une méthode qui prend les paramètres spécifiés dans <c>args</c>, qui fait l’objet d’un envoi (push) dans la file d’attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-378">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-379">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-379">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-380">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-380">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ff596-381">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-381">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-382">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-382">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-383">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-383">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-384">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-384">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ff596-385">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-385">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ff596-386">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-386">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ff596-387">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-387">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-388"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ff596-389">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-389">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-390"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-391">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-391">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-392">Délégué vers une méthode qui prend un argument, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-392">A delegate to a method that takes one argument, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ff596-393">Objet à passer comme argument à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-393">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-394">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-394">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-395">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-395">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-396">`Arg` peut être `null` si un argument n’est pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ff596-396">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="ff596-397">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-397">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-398">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-398">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-399">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-399">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-400">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-400">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-401"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-402">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-402">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-403"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff596-404">
            <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-404">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-405">
            <paramref name="priority" /> n'est pas une priorité valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-405">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-406">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-406">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-407">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-407">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-408">Temps d'attente maximal pour l'aboutissement de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-408">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-409">Délégué vers une méthode qui ne prend pas d'arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-409">The delegate to a method that takes no arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-410">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec la valeur de délai d'attente définie au niveau du thread sur lequel le <see cref="T:System.Windows.Threading.Dispatcher" /> a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-410">Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-411">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-411">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-412">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-412">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-413">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-413">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-414">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-414">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-415">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-415">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-416"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-417">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-417">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-418"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; unit" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-419">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-419">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-420">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-420">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ff596-421">Objet qui indique s'il est nécessaire d'annuler l'action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-421">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-422">Durée minimale d'attente de démarrage de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-422">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-423">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-423">Executes the specified <see cref="T:System.Action" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, TimeSpan timeout, System.Windows.Threading.DispatcherPriority priority, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method, valuetype System.TimeSpan timeout, valuetype System.Windows.Threading.DispatcherPriority priority, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, timeout As TimeSpan, priority As DispatcherPriority, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, TimeSpan timeout, System::Windows::Threading::DispatcherPriority priority, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate * TimeSpan * System.Windows.Threading.DispatcherPriority * obj[] -&gt; obj" Usage="dispatcher.Invoke (method, timeout, priority, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="ff596-424">Délégué d’une méthode qui prend les paramètres spécifiés dans <c>args</c>, qui fait l’objet d’un envoi (push) dans la file d’attente des événements de <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-424">A delegate to a method that takes parameters specified in <c>args</c>, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-425">Durée maximale d'attente d'achèvement de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-425">The maximum amount of time to wait for the operation to complete.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-426">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-426">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-427">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-427">An array of objects to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="ff596-428">Peut être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-428">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-429">Exécute le délégué spécifié de façon synchrone, dans l'intervalle de temps spécifié, selon la priorité indiquée et avec les arguments définis sur le thread auquel <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-429">Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-430">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-430">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-431">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-431">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span> <span data-ttu-id="ff596-432">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-432">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span> <span data-ttu-id="ff596-433">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-433">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span> <span data-ttu-id="ff596-434">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-434">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="ff596-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-435"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span> <span data-ttu-id="ff596-436">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-436">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-437"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-438">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-438">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-439">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-439">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ff596-440">Objet à passer comme argument à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-440">An object to pass as an argument to the given method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-441">Tableau d’objets à passer comme arguments à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-441">An array of objects to pass as arguments to the given method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-442">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-442">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-443">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-443">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-444">`Arg` peut être `null` si un argument n’est pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ff596-444">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="ff596-445">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-445">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-446">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-446">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-447">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-447">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-448">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-448">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-449"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-450">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-450">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-451"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff596-452">
            <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-452">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-453">
            <paramref name="priority" /> n'est pas une priorité valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-453">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-454">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-454">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-455">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-455">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-456">Temps d'attente maximal pour l'aboutissement de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-456">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-457">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-457">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ff596-458">Objet à passer comme argument à la méthode donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-458">An object to pass as an argument to the given method.</span>
          </span>
          <span data-ttu-id="ff596-459">Peut être <see langword="null" /> si aucun argument n'est nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-459">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-460">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec l'argument défini au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-460">Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-461">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-461">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-462">`Arg` peut être `null` si un argument n’est pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ff596-462">`Arg` can be `null` if an argument is not needed</span></span>  
  
 <span data-ttu-id="ff596-463">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-463">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-464">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-464">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-465">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-465">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-466">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-466">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-467"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-468">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-468">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-469"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff596-470">
            <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-470">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-471">
            <paramref name="priority" /> n'est pas une priorité valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-471">
              <paramref name="priority" /> is not a valid priority.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-472">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-472">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (System.Windows.Threading.DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.TimeSpan timeout, class System.Delegate method, object arg, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (priority As DispatcherPriority, timeout As TimeSpan, method As Delegate, arg As Object, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Windows::Threading::DispatcherPriority priority, TimeSpan timeout, Delegate ^ method, System::Object ^ arg, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.Invoke : System.Windows.Threading.DispatcherPriority * TimeSpan * Delegate * obj * obj[] -&gt; obj" Usage="dispatcher.Invoke (priority, timeout, method, arg, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="arg" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-473">Priorité, par rapport aux autres opérations en attente dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />, à laquelle la méthode spécifiée est appelée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-473">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-474">Temps d'attente maximal pour l'aboutissement de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-474">The maximum time to wait for the operation to finish.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ff596-475">Délégué vers une méthode qui prend plusieurs arguments, qui fait l'objet d'un push dans la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-475">A delegate to a method that takes multiple arguments, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ff596-476">Objet à passer comme argument à la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-476">An object to pass as an argument to the specified method.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ff596-477">Tableau d'objets à passer comme arguments à la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-477">An array of objects to pass as arguments to the specified method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-478">Exécute le délégué spécifié de façon synchrone selon la priorité indiquée et avec les arguments définis au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-478">Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-479">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-479">The return value from the delegate being invoked or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-480">`Arg` peut être `null` si un argument n’est pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="ff596-480">`Arg` can be `null` if an argument is not needed.</span></span>  
  
 <span data-ttu-id="ff596-481">Dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], uniquement le thread qui a créé un <xref:System.Windows.Threading.DispatcherObject> peuvent accéder à cet objet.</span><span class="sxs-lookup"><span data-stu-id="ff596-481">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], only the thread that created a <xref:System.Windows.Threading.DispatcherObject> may access that object.</span></span>  <span data-ttu-id="ff596-482">Par exemple, un thread d’arrière-plan qui est lancé à partir du thread d’interface utilisateur ne peut pas mettre à jour le contenu d’un <xref:System.Windows.Controls.Button> qui a été créé sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-482">For example, a background thread that is spun off from the main UI thread cannot update the contents of a <xref:System.Windows.Controls.Button> that was created on the UI thread.</span></span>  <span data-ttu-id="ff596-483">Afin que le thread d’arrière-plan accéder à la propriété de contenu de la <xref:System.Windows.Controls.Button>, le thread d’arrière-plan doit déléguer le travail à la <xref:System.Windows.Threading.Dispatcher> associé au thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-483">In order for the background thread to access the Content property of the <xref:System.Windows.Controls.Button>, the background thread must delegate the work to the <xref:System.Windows.Threading.Dispatcher> associated with the UI thread.</span></span>  <span data-ttu-id="ff596-484">Cela est accompli en utilisant soit <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-484">This is accomplished by using either <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span>  <span data-ttu-id="ff596-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est synchrone et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> est asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ff596-485"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is synchronous and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is asynchronous.</span></span>  <span data-ttu-id="ff596-486">L’opération est ajoutée à la file d’attente des événements de la <xref:System.Windows.Threading.Dispatcher> à l’emplacement spécifié <xref:System.Windows.Threading.DispatcherPriority>.</span><span class="sxs-lookup"><span data-stu-id="ff596-486">The operation is added to the event queue of the <xref:System.Windows.Threading.Dispatcher> at the specified <xref:System.Windows.Threading.DispatcherPriority>.</span></span>  
  
 <span data-ttu-id="ff596-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> est une opération synchrone ; Par conséquent, contrôle ne retourne pas à l’objet appelant jusqu'à ce qu’après le retour du rappel.</span><span class="sxs-lookup"><span data-stu-id="ff596-487"><xref:System.Windows.Threading.Dispatcher.Invoke%2A> is a synchronous operation; therefore, control will not return to the calling object until after the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ff596-488">
            <paramref name="priority" /> est égal à <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-488">
              <paramref name="priority" /> is equal to <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-489">
            <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-489">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-490">
            <paramref name="method" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-490">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; -&gt; 'Result" Usage="dispatcher.Invoke callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-491">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-491">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-492">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-492">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-493">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-493">Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-494">La valeur retournée par `callback`.</span><span class="sxs-lookup"><span data-stu-id="ff596-494">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-495">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-495">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-496">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-496">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-497">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-497">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-498">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-498">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-499">La valeur retournée par `callback`.</span><span class="sxs-lookup"><span data-stu-id="ff596-499">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-500">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-500">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-501">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-501">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-502">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-502">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ff596-503">Objet qui indique s'il est nécessaire d'annuler l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-503">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-504">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-504">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-505">La valeur retournée par `callback`.</span><span class="sxs-lookup"><span data-stu-id="ff596-505">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Invoke&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TResult Invoke&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; TResult Invoke(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken * TimeSpan -&gt; 'Result" Usage="dispatcher.Invoke (callback, priority, cancellationToken, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-506">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-506">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-507">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-507">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-508">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-508">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ff596-509">Objet qui indique s'il est nécessaire d'annuler l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-509">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="ff596-510">Durée minimale d'attente de démarrage de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-510">The minimum amount of time to wait for the operation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-511">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-511">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-512">La valeur retournée par `callback`.</span><span class="sxs-lookup"><span data-stu-id="ff596-512">The value returned by `callback`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-513">Exécute le délégué spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-513">Executes the specified delegate asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-514">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-514">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-515">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-515">Executes the specified <see cref="T:System.Action" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-516">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-516">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync (callback As Action, priority As DispatcherPriority) As DispatcherOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-517">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-517">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-518">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-518">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-519">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-519">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-520">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-520">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation InvokeAsync (Action callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation InvokeAsync(class System.Action callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperation ^ InvokeAsync(Action ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Action * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ff596-521">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-521">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-522">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-522">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ff596-523">Objet qui indique s'il est nécessaire d'annuler l'action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-523">An object that indicates whether to cancel the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-524">Exécute l'objet <see cref="T:System.Action" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-524">Executes the specified <see cref="T:System.Action" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-525">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-525">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult)) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-526">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-526">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-527">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-527">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-528">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-528">Executes the specified <see cref="T:System.Func`1" /> asynchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-529">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-529">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TResult) (callback As Func(Of TResult), priority As DispatcherPriority) As DispatcherOperation(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-530">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-530">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-531">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-531">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-532">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-532">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-533">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon asynchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-533">Executes the specified <see cref="T:System.Func`1" /> asynchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-534">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-534">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperation&lt;TResult&gt; InvokeAsync&lt;TResult&gt; (Func&lt;TResult&gt; callback, System.Windows.Threading.DispatcherPriority priority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Threading.DispatcherOperation`1&lt;!!TResult&gt; InvokeAsync&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; callback, valuetype System.Windows.Threading.DispatcherPriority priority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Windows::Threading::DispatcherOperation&lt;TResult&gt; ^ InvokeAsync(Func&lt;TResult&gt; ^ callback, System::Windows::Threading::DispatcherPriority priority, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : Func&lt;'Result&gt; * System.Windows.Threading.DispatcherPriority * System.Threading.CancellationToken -&gt; System.Windows.Threading.DispatcherOperation&lt;'Result&gt;" Usage="dispatcher.InvokeAsync (callback, priority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperation&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="ff596-535">Type de valeur de retour du délégué spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-535">The return value type of the specified delegate.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ff596-536">Délégué permettant d'appeler via le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-536">A delegate to invoke through the dispatcher.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="ff596-537">La priorité qui détermine l'ordre d'exécution du rappel spécifié, est appelée par rapport aux autres opérations en attente dans <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-537">The priority that determines in what order the specified callback is invoked relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ff596-538">Objet qui indique s'il est nécessaire d'annuler l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-538">An object that indicates whether to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-539">Exécute l'objet <see cref="T:System.Func`1" /> spécifié de façon synchrone selon la priorité spécifiée au niveau du thread auquel le <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-539">Executes the specified <see cref="T:System.Func`1" /> synchronously at the specified priority on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-540">Objet qui est retourné immédiatement après l'appel de <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> et qui peut être utilisé pour interagir avec le délégué en attente d'exécution dans la file d'attente des événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-540">An object, which is returned immediately after <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeShutdown">
      <MemberSignature Language="C#" Value="public void InvokeShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvokeShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvokeShutdown();" />
      <MemberSignature Language="F#" Value="member this.InvokeShutdown : unit -&gt; unit" Usage="dispatcher.InvokeShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-541">Initialise de façon synchrone le processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-541">Initiates the shutdown process of the <see cref="T:System.Windows.Threading.Dispatcher" /> synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> les demandes sans restriction des autorisations de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-542"><xref:System.Windows.Threading.Dispatcher.InvokeShutdown%2A> demands unrestricted UI Permissions.</span></span>  
  
 <span data-ttu-id="ff596-543">Lorsque le <xref:System.Windows.Threading.Dispatcher> commence à arrêter, le <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> événement est déclenché et <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-543">When the <xref:System.Windows.Threading.Dispatcher> starts to shut down, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-544">Le <xref:System.Windows.Threading.Dispatcher> n’arrête pas complètement jusqu'à ce que la file d’attente de l’événement se déroule.</span><span class="sxs-lookup"><span data-stu-id="ff596-544">The <xref:System.Windows.Threading.Dispatcher> does not shut down completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ff596-545">Lorsque le répartiteur termine en cours d’arrêt, le <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> événement est déclenché et le <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-545">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-546">Une fois que le processus d’arrêt commence, toutes les tâches en attente, les éléments dans la file d’attente sont abandonnées.</span><span class="sxs-lookup"><span data-stu-id="ff596-546">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ff596-547">Pour arrêter le répartiteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-547">for shutting down the dispatcher.</span>
          </span>
          <span data-ttu-id="ff596-548">Énumérations associées :  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-548">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PushFrame">
      <MemberSignature Language="C#" Value="public static void PushFrame (System.Windows.Threading.DispatcherFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushFrame(class System.Windows.Threading.DispatcherFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushFrame (frame As DispatcherFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushFrame(System::Windows::Threading::DispatcherFrame ^ frame);" />
      <MemberSignature Language="F#" Value="static member PushFrame : System.Windows.Threading.DispatcherFrame -&gt; unit" Usage="System.Windows.Threading.Dispatcher.PushFrame frame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Windows.Threading.DispatcherFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="ff596-549">Frame que le répartiteur doit traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-549">The frame for the dispatcher to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-550">Entame une boucle d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-550">Enters an execute loop.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-551">Un <xref:System.Windows.Threading.DispatcherFrame> représente une boucle qui traite les éléments de travail en attente.</span><span class="sxs-lookup"><span data-stu-id="ff596-551">A <xref:System.Windows.Threading.DispatcherFrame> represents a loop that processes pending work items.</span></span>  
  
 <span data-ttu-id="ff596-552">Le répartiteur traite la file d’attente des éléments de travail dans une boucle.</span><span class="sxs-lookup"><span data-stu-id="ff596-552">The Dispatcher processes the work item queue in a loop.</span></span>  <span data-ttu-id="ff596-553">La boucle est appelée un frame.</span><span class="sxs-lookup"><span data-stu-id="ff596-553">The loop is referred to as a frame.</span></span>  <span data-ttu-id="ff596-554">La boucle initiale est généralement créée par l’application en appelant <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-554">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="ff596-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> entame une boucle représentée par le paramètre `frame`.</span><span class="sxs-lookup"><span data-stu-id="ff596-555"><xref:System.Windows.Threading.Dispatcher.PushFrame%2A> enters a loop represented by the parameter `frame`.</span></span>  <span data-ttu-id="ff596-556">À chaque itération de la boucle, le <xref:System.Windows.Threading.Dispatcher> vérifiera la <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> propriété sur le <xref:System.Windows.Threading.DispatcherFrame> classe pour déterminer si la boucle doit continuer ou si elle doit s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="ff596-556">At each iteration of the loop, the <xref:System.Windows.Threading.Dispatcher> will check the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property on the <xref:System.Windows.Threading.DispatcherFrame> class to determine whether the loop should continue or if it should stop.</span></span>  
  
 <span data-ttu-id="ff596-557"><xref:System.Windows.Threading.DispatcherFrame> permet la <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> propriété à définir explicitement et respecte le <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> propriété sur le <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-557"><xref:System.Windows.Threading.DispatcherFrame> allows for the <xref:System.Windows.Threading.DispatcherFrame.Continue%2A> property to be set explicitly and it respects the <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> property on the <xref:System.Windows.Threading.Dispatcher>.</span></span>  <span data-ttu-id="ff596-558">Cela signifie que, lorsque le <xref:System.Windows.Threading.Dispatcher> commence à arrêter, les frames qui utilisent la valeur par défaut <xref:System.Windows.Threading.DispatcherFrame> implémentation s’arrête, ce qui permet à tous les frames imbriqués quitter.</span><span class="sxs-lookup"><span data-stu-id="ff596-558">This means when the <xref:System.Windows.Threading.Dispatcher> starts to shut down, frames that use the default <xref:System.Windows.Threading.DispatcherFrame> implementation will exit, which enables all nested frames to exit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-559">L’exemple suivant montre comment utiliser un <xref:System.Windows.Threading.DispatcherFrame> pour obtenir des résultats similaires en tant que le [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ff596-559">The following example shows how to use a <xref:System.Windows.Threading.DispatcherFrame> to achieve similar results as the [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ff596-560">
            <paramref name="frame" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-560">
              <paramref name="frame" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ff596-561">
            <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> a la valeur <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-561">
              <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> is <see langword="true" /></span>
          </span>
          <span data-ttu-id="ff596-562">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-562">-or-</span>
          </span>
          <span data-ttu-id="ff596-563">
            <paramref name="frame" /> s'exécute sur un <see cref="T:System.Windows.Threading.Dispatcher" /> différent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-563">
              <paramref name="frame" /> is running on a different <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
          <span data-ttu-id="ff596-564">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-564">-or-</span>
          </span>
          <span data-ttu-id="ff596-565">Le traitement du répartiteur a été désactivé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-565">Dispatcher processing has been disabled.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ff596-566">pour pousser un frame d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-566">for pushing an execution frame.</span>
          </span>
          <span data-ttu-id="ff596-567">Énumérations associées :  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-567">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Threading.Dispatcher.ExitAllFrames" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberSignature Language="F#" Value="static member Run : unit -&gt; unit" Usage="System.Windows.Threading.Dispatcher.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-568">Exécute un push du frame d'exécution principal au niveau de la file d'attente des événements du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-568">Pushes the main execution frame on the event queue of the <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-569">Le <xref:System.Windows.Threading.Dispatcher> traite la file d’attente d’événement dans une boucle.</span><span class="sxs-lookup"><span data-stu-id="ff596-569">The <xref:System.Windows.Threading.Dispatcher> processes the event queue in a loop.</span></span>  <span data-ttu-id="ff596-570">La boucle est appelée un frame.</span><span class="sxs-lookup"><span data-stu-id="ff596-570">The loop is referred to as a frame.</span></span>  <span data-ttu-id="ff596-571">La boucle initiale est généralement créée par l’application en appelant <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="ff596-571">The initial loop is typically initiated by the application by calling <xref:System.Windows.Threading.Dispatcher.Run%2A>.</span></span>  
  
 <span data-ttu-id="ff596-572">Le frame d’exécution principal continue jusqu'à ce que le <xref:System.Windows.Threading.Dispatcher> est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="ff596-572">The main execution frame will continue until the <xref:System.Windows.Threading.Dispatcher> is shutdown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownFinished">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownFinished" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownFinished As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownFinished;" />
      <MemberSignature Language="F#" Value="member this.ShutdownFinished : EventHandler " Usage="member this.ShutdownFinished : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-573">Se produit une fois l'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" /> accompli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-573">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> finishes shutting down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-574">Lorsque le processus d’arrêt d’un <xref:System.Windows.Threading.Dispatcher> est démarré, le <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> événement est déclenché et <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-574">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-575">Le <xref:System.Windows.Threading.Dispatcher> ne s’arrête pas complètement jusqu'à ce que la file d’attente de l’événement se déroule.</span><span class="sxs-lookup"><span data-stu-id="ff596-575">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ff596-576">Lorsque le répartiteur termine en cours d’arrêt, le <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> événement est déclenché et le <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-576">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-577">Une fois que le processus d’arrêt commence, toutes les tâches en attente, les éléments dans la file d’attente sont abandonnées.</span><span class="sxs-lookup"><span data-stu-id="ff596-577">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" />
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownStarted">
      <MemberSignature Language="C#" Value="public event EventHandler ShutdownStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ShutdownStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.ShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event ShutdownStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ShutdownStarted;" />
      <MemberSignature Language="F#" Value="member this.ShutdownStarted : EventHandler " Usage="member this.ShutdownStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-578">Se produit au début du processus d'arrêt du <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-578">Occurs when the <see cref="T:System.Windows.Threading.Dispatcher" /> begins to shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-579">Lorsque le processus d’arrêt d’un <xref:System.Windows.Threading.Dispatcher> est démarré, le <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> événement est déclenché et <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-579">When the shutdown process of a <xref:System.Windows.Threading.Dispatcher> is started, the <xref:System.Windows.Threading.Dispatcher.ShutdownStarted> event is raised and <xref:System.Windows.Threading.Dispatcher.HasShutdownStarted%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-580">Le <xref:System.Windows.Threading.Dispatcher> ne s’arrête pas complètement jusqu'à ce que la file d’attente de l’événement se déroule.</span><span class="sxs-lookup"><span data-stu-id="ff596-580">The <xref:System.Windows.Threading.Dispatcher> does not shutdown completely until the event queue unwinds.</span></span>  
  
 <span data-ttu-id="ff596-581">Lorsque le répartiteur termine en cours d’arrêt, le <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> événement est déclenché et le <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ff596-581">When the Dispatcher finishes shutting down, the <xref:System.Windows.Threading.Dispatcher.ShutdownFinished> event is raised and the <xref:System.Windows.Threading.Dispatcher.HasShutdownFinished%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="ff596-582">Une fois que le processus d’arrêt commence, toutes les tâches en attente, les éléments dans la file d’attente sont abandonnées.</span><span class="sxs-lookup"><span data-stu-id="ff596-582">Once the shutdown process begins, all pending work items in the queue are aborted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Threading.Dispatcher.HasShutdownStarted" />
        <altmember cref="E:System.Windows.Threading.Dispatcher.ShutdownFinished" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)" />
        <altmember cref="M:System.Windows.Threading.Dispatcher.InvokeShutdown" />
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public System.Threading.Thread Thread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Thread Thread" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.Dispatcher.Thread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Thread ^ Thread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Thread : System.Threading.Thread" Usage="System.Windows.Threading.Dispatcher.Thread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-583">Obtient le thread auquel ce <see cref="T:System.Windows.Threading.Dispatcher" /> est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-583">Gets the thread this <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff596-584">Thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-584">The thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Event UnhandledException As DispatcherUnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " Usage="member this.UnhandledException : System.Windows.Threading.DispatcherUnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-585">Se produit lorsqu'une exception de thread est levée et non interceptée pendant l'exécution d'un délégué au moyen de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-585">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-586">Cet événement est déclenché lorsqu’une exception a été levée pendant l’exécution d’un délégué au moyen de <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> n’est pas interceptée.</span><span class="sxs-lookup"><span data-stu-id="ff596-586">This event is raised when an exception that was thrown during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> is uncaught.</span></span>  
  
 <span data-ttu-id="ff596-587">Un gestionnaire peut marquer l’exception comme étant géré, ce qui empêche le Gestionnaire d’exceptions interne qui est appelée.</span><span class="sxs-lookup"><span data-stu-id="ff596-587">A handler can mark the exception as handled, which will prevent the internal exception handler from being called.</span></span>  
  
 <span data-ttu-id="ff596-588">Gestionnaires d’événements pour cet événement doivent être écrite avec précaution pour éviter de créer des exceptions secondaire et intercepter celles qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="ff596-588">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span> <span data-ttu-id="ff596-589">Il est recommandé d’éviter d’allocation de mémoire ou pour effectuer des opérations intensives dans le Gestionnaire de n’importe quelle ressource.</span><span class="sxs-lookup"><span data-stu-id="ff596-589">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="ff596-590">Le <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> événement permet de ne pas déclencher la <xref:System.Windows.Threading.Dispatcher.UnhandledException> événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-590">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="ff596-591">Le <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> événement est déclenché en premier et si <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> sur le <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> a la valeur `false`, le <xref:System.Windows.Threading.Dispatcher.UnhandledException> événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="ff596-591">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="UnhandledExceptionFilter">
      <MemberSignature Language="C#" Value="public event System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler UnhandledExceptionFilter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledExceptionFilter As DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Threading::DispatcherUnhandledExceptionFilterEventHandler ^ UnhandledExceptionFilter;" />
      <MemberSignature Language="F#" Value="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " Usage="member this.UnhandledExceptionFilter : System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-592">Se produit lorsqu'une exception de thread est levée et non interceptée pendant l'exécution d'un délégué au moyen de <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> ou de <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> lors de l'étape de filtrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-592">Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> or <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> when in the filter stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-593">Cet événement est déclenché pendant l’étape de filtrage pour une exception est levée pendant l’exécution d’un délégué au moyen de <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> et n’est pas interceptée.</span><span class="sxs-lookup"><span data-stu-id="ff596-593">This event is raised during the filter stage for an exception that is raised during execution of a delegate by way of <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> and is uncaught.</span></span>  
  
 <span data-ttu-id="ff596-594">La pile des appels n’est pas déroulée à ce stade (exception de première chance).</span><span class="sxs-lookup"><span data-stu-id="ff596-594">The call stack is not unwound at this point (first-chance exception).</span></span>  
  
 <span data-ttu-id="ff596-595">Gestionnaires d’événements pour cet événement doivent être écrite avec précaution pour éviter de créer des exceptions secondaire et intercepter celles qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="ff596-595">Event handlers for this event must be written with care to avoid creating secondary exceptions and to catch any that occur.</span></span>  <span data-ttu-id="ff596-596">Il est recommandé d’éviter d’allocation de mémoire ou pour effectuer des opérations intensives dans le Gestionnaire de n’importe quelle ressource.</span><span class="sxs-lookup"><span data-stu-id="ff596-596">It is recommended to avoid allocating memory or doing any resource intensive operations in the handler.</span></span>  
  
 <span data-ttu-id="ff596-597">Le <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> événement permet de ne pas déclencher la <xref:System.Windows.Threading.Dispatcher.UnhandledException> événement.</span><span class="sxs-lookup"><span data-stu-id="ff596-597">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="ff596-598">Le <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> événement est déclenché en premier et si <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> sur le <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> a la valeur `false`, le <xref:System.Windows.Threading.Dispatcher.UnhandledException> événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="ff596-598">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ff596-599">Pour ajouter ou supprimer un gestionnaire pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-599">for adding or removing a handler for this event.</span>
          </span>
          <span data-ttu-id="ff596-600">Énumérations associées :  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-600">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
        <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ValidatePriority">
      <MemberSignature Language="C#" Value="public static void ValidatePriority (System.Windows.Threading.DispatcherPriority priority, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidatePriority(valuetype System.Windows.Threading.DispatcherPriority priority, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidatePriority (priority As DispatcherPriority, parameterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidatePriority(System::Windows::Threading::DispatcherPriority priority, System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="static member ValidatePriority : System.Windows.Threading.DispatcherPriority * string -&gt; unit" Usage="System.Windows.Threading.Dispatcher.ValidatePriority (priority, parameterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-601">Priorité à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-601">The priority to check.</span>
          </span>
        </param>
        <param name="parameterName">
          <span data-ttu-id="ff596-602">Chaîne qui sera retournée par l'exception qui se produira si la priorité n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-602">A string that will be returned by the exception that occurs if the priority is invalid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-603">Détermine si la priorité <see cref="T:System.Windows.Threading.DispatcherPriority" /> spécifiée est une priorité valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-603">Determines whether the specified <see cref="T:System.Windows.Threading.DispatcherPriority" /> is a valid priority.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ff596-604">
            <paramref name="priority" /> n’est pas un <see cref="T:System.Windows.Threading.DispatcherPriority" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-604">
              <paramref name="priority" /> is not a valid <see cref="T:System.Windows.Threading.DispatcherPriority" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcher.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-605">Détermine si le thread appelant a accès à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-605">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-606">Seul le thread le <xref:System.Windows.Threading.Dispatcher> est créé peut accéder le <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-606">Only the thread the <xref:System.Windows.Threading.Dispatcher> is created on may access the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="ff596-607">Cette méthode est publique ; Par conséquent, n’importe quel thread peut vérifier s’il a accès à la <xref:System.Windows.Threading.Dispatcher>.</span><span class="sxs-lookup"><span data-stu-id="ff596-607">This method is public; therefore, any thread can check to see whether it has access to the <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="ff596-608">La différence entre <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> et <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> est <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> retourne une valeur booléenne si le thread appelant n’a pas accès à la <xref:System.Windows.Threading.Dispatcher> et <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="ff596-608">The difference between <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> is <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> returns a Boolean if the calling thread does not have access to the <xref:System.Windows.Threading.Dispatcher> and <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff596-609">L’exemple suivant utilise <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> pour déterminer si un thread a accès au thread qui un <xref:System.Windows.Controls.Button> a été créé.</span><span class="sxs-lookup"><span data-stu-id="ff596-609">The following example uses <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="ff596-610">La méthode prend un objet en tant qu’argument, qui est casté en un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ff596-610">The method takes an object as an argument, which is cast to a <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="ff596-611">Le <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> méthode sur le <xref:System.Windows.Threading.Dispatcher> de la <xref:System.Windows.Controls.Button> est appelée pour vérifier l’accès au thread.</span><span class="sxs-lookup"><span data-stu-id="ff596-611">The <xref:System.Windows.Threading.Dispatcher.VerifyAccess%2A> method on the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  
  
 <span data-ttu-id="ff596-612">Si le thread appelant a accès à la <xref:System.Windows.Threading.Dispatcher>, le <xref:System.Windows.Controls.Button> est mis à jour par les membres de l’accès à la <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ff596-612">If the calling thread has access to the <xref:System.Windows.Threading.Dispatcher>, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="ff596-613">Si le thread appelant n’a pas accès, un <xref:System.InvalidOperationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="ff596-613">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  <span data-ttu-id="ff596-614">Cet exemple intercepte l’exception et exécute un push d’un délégué qui accepte un <xref:System.Windows.Controls.Button> en tant qu’argument, sur le <xref:System.Windows.Threading.Dispatcher> de la <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ff596-614">This example catches the exception and pushes a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  <span data-ttu-id="ff596-615">Cela <xref:System.Windows.Threading.Dispatcher> effectuent l’opération de mise à jour le <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ff596-615">This <xref:System.Windows.Threading.Dispatcher> will do the work of updating the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherAccessSample/CSharp/Window1.xaml.cs#dispatcheraccessverifyaccess)]
 [!code-vb[DispatcherAccessSample#DispatcherAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherAccessSample/visualbasic/window1.xaml.vb#dispatcheraccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ff596-616">Le thread appelant n'a pas accès à ce <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-616">The calling thread does not have access to this <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Threading.Dispatcher.CheckAccess" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Yield">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff596-617">Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-617">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff596-618">Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-618">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-619">Objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-619">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-620">Cette méthode fournit un moyen pour vous permettre de libérer temporairement de contrôle d’exécution au répartiteur actuel afin qu’il peut effectuer d’autres tâches, telles que gérer d’autres événements.</span><span class="sxs-lookup"><span data-stu-id="ff596-620">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="ff596-621">Utilisez le `await`, ou `Await` en Visual Basic, l’opérateur sur la valeur de retour pour retourner le contrôle au répartiteur actuel.</span><span class="sxs-lookup"><span data-stu-id="ff596-621">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="ff596-622">Utilisez cette méthode si souhaitez permettre à votre application pour traiter des événements pendant que votre application effectue beaucoup de travail sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-622">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="ff596-623">Par exemple, vous pouvez utiliser cette méthode dans une boucle d’exécution longue qui met à jour d’un contrôle.</span><span class="sxs-lookup"><span data-stu-id="ff596-623">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 <span data-ttu-id="ff596-624">Cette méthode équivaut à appeler le <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> (méthode) et en passant <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ff596-624">This method is equivalent to calling the <xref:System.Windows.Threading.Dispatcher.Yield%28System.Windows.Threading.DispatcherPriority%29> method and passing in <xref:System.Windows.Threading.DispatcherPriority.Background?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static System.Windows.Threading.DispatcherPriorityAwaitable Yield (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Threading.DispatcherPriorityAwaitable Yield(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield (priority As DispatcherPriority) As DispatcherPriorityAwaitable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Threading::DispatcherPriorityAwaitable Yield(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="static member Yield : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherPriorityAwaitable" Usage="System.Windows.Threading.Dispatcher.Yield priority" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriorityAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority">
          <span data-ttu-id="ff596-625">Priorité avec laquelle planifier la suite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-625">The priority at which to schedule the continuation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff596-626">Crée un objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-626">Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
          <span data-ttu-id="ff596-627">Travail qui se produit lorsqu'un contrôle retourne au code qui attend le résultat de cette méthode est planifiés avec la priorité spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-627">The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff596-628">Objet awaitable qui renvoie de façon asynchrone le contrôle au répartiteur actuel et offre la possibilité au répartiteur de gérer d'autres événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff596-628">An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff596-629">Cette méthode fournit un moyen pour vous permettre de libérer temporairement de contrôle d’exécution au répartiteur actuel afin qu’il peut effectuer d’autres tâches, telles que gérer d’autres événements.</span><span class="sxs-lookup"><span data-stu-id="ff596-629">This method provides a way for you to temporarily release execution control to the current dispatcher so it can do other work, such as process other events.</span></span> <span data-ttu-id="ff596-630">Utilisez le `await`, ou `Await` en Visual Basic, l’opérateur sur la valeur de retour pour retourner le contrôle au répartiteur actuel.</span><span class="sxs-lookup"><span data-stu-id="ff596-630">Use the `await`, or `Await` in Visual Basic, operator on the return value to return control to the current dispatcher.</span></span> <span data-ttu-id="ff596-631">Utilisez cette méthode si souhaitez permettre à votre application pour traiter des événements pendant que votre application effectue beaucoup de travail sur le thread d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ff596-631">Use this method if want to give your app a chance to process events while you app is doing a lot of work on the UI thread.</span></span> <span data-ttu-id="ff596-632">Par exemple, vous pouvez utiliser cette méthode dans une boucle d’exécution longue qui met à jour d’un contrôle.</span><span class="sxs-lookup"><span data-stu-id="ff596-632">For example, you can use this method in a long-running loop that updates a control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>