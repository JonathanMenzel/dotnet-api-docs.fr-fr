<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DispatcherOperation.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac554502a8f5ae244cc3dede305da9b15034b6d0233.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54502a8f5ae244cc3dede305da9b15034b6d0233</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherOperation">
          <source>Represents an object that is used to interact with an operation that has been posted to the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> queue.</source>
          <target state="translated">Représente un objet utilisé pour interagir avec une opération qui a été publiée dans la file d'attente <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherOperation">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> object when it is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> Retourne un <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> de l’objet lorsqu’elle est appelée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherOperation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> object can be used to interact with the delegate on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue, such as changing the priority of the operation or aborting the operation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> objet peut être utilisé pour interagir avec le délégué sur le <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> file d’attente, telles que la modification de la priorité de l’opération ou abandonner l’opération.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherOperation">
          <source>To obtain the return value of the invoked delegate, use the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> property.</source>
          <target state="translated">Pour obtenir la valeur de retour du délégué appelé, utilisez la <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherOperation">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> is not an exception handling boundary.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> n’est pas une limite de la gestion des exceptions.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherOperation">
          <source>This means that exceptions are handled by the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> and are not preserved by the operation.</source>
          <target state="translated">Cela signifie que les exceptions sont gérées par le <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> et ne sont pas conservées par l’opération.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Abort">
          <source>Aborts the operation.</source>
          <target state="translated">Abandonne l'opération.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Abort">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation was aborted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'opération a été abandonnée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherOperation.Abort">
          <source>If an operation is already in progress, this method will return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Si une opération est déjà en cours d’exécution, cette méthode retournera <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherOperation.Abort">
          <source>When an operation is aborted, the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Status%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Aborted&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherOperation.Aborted&gt;</ph> event is raised.</source>
          <target state="translated">Lorsqu’une opération est abandonnée, le <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Status%2A&gt;</ph> de la <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> a la valeur <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Aborted&gt;</ph> et <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherOperation.Aborted&gt;</ph> événement est déclenché.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="E:System.Windows.Threading.DispatcherOperation.Aborted">
          <source>Occurs when the operation is aborted.</source>
          <target state="translated">Se produit lorsque l'opération est abandonnée.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="E:System.Windows.Threading.DispatcherOperation.Completed">
          <source>Occurs when the operation has completed.</source>
          <target state="translated">Se produit lorsque l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> that the operation was posted to.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> sur lequel l'opération a été publiée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
          <source>The dispatcher.</source>
          <target state="translated">Répartiteur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
          <source>Returns an object that is notified when the asynchronous operation is finished.</source>
          <target state="translated">Retourne un objet qui est notifié lorsque l'opération asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
          <source>An object that is notified when the asynchronous operation is finished.</source>
          <target state="translated">Objet notifié lorsque l'opération asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
          <source>Begins the operation that is associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated">Commence l'opération associée à cette <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> in all cases.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> dans tous les cas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherOperation.Priority">
          <source>Gets or sets the priority of the operation in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> queue.</source>
          <target state="translated">Obtient ou définit la priorité de l'opération dans la file d'attente <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Priority">
          <source>The priority of the delegate on the queue.</source>
          <target state="translated">Priorité du délégué dans la file d'attente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherOperation.Result">
          <source>Gets the result of the operation after it has completed.</source>
          <target state="translated">Obtient le résultat de l'opération après son exécution.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Result">
          <source>The result of the operation -or- <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the operation has not completed.</source>
          <target state="translated">Résultat de l'opération ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si l'opération n'a pas abouti.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherOperation.Status">
          <source>Gets the current status of the operation..</source>
          <target state="translated">Obtient l'état actuel de l'opération.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Status">
          <source>The status of the operation.</source>
          <target state="translated">État de l'opération.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Status">
          <source>The stages of a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> are <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Pending&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Executing&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Completed&gt;</ph>.</source>
          <target state="translated">Les étapes d’un <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> sont <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Pending&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Executing&gt;</ph>, et <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Completed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Status">
          <source>At any point before the operation has completed, the status can be set to <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Aborted&gt;</ph>.</source>
          <target state="translated">À tout moment avant l’opération est terminée, l’état peut être défini sur <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Aborted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherOperation.Task">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the current operation.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> qui représente l'opération active.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherOperation.Task">
          <source>An object that represents the current operation.</source>
          <target state="translated">Objet représentant l'opération en cours.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherOperation">
          <source>Waits for the operation to finish.</source>
          <target state="translated">Attend la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait">
          <source>Waits for the operation to complete</source>
          <target state="translated">Attend la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait">
          <source>The status of the operation.</source>
          <target state="translated">État de l'opération.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherOperation.Wait">
          <source>To obtain the return value of the invoked delegate, use the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> property.</source>
          <target state="translated">Pour obtenir la valeur de retour du délégué appelé, utilisez la <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Threading.DispatcherOperation.Status" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Threading.DispatcherOperation.Status" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait">
          <source>This can occur when waiting for an operation that is already executing on the same thread.</source>
          <target state="translated">Cela peut se produire en attendant une opération qui est déjà en cours d'exécution sur le même thread.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
          <source>The maximum period of time to wait.</source>
          <target state="translated">Durée maximale à attendre.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
          <source>Waits for the operation to complete in the specified period of time.</source>
          <target state="translated">Attend que l'opération se termine pendant la durée spécifiée.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
          <source>The status of the operation.</source>
          <target state="translated">État de l'opération.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
          <source>To obtain the return value of the invoked delegate, use the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> property.</source>
          <target state="translated">Pour obtenir la valeur de retour du délégué appelé, utilisez la <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Threading.DispatcherOperation.Status" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Threading.DispatcherOperation.Status" /&gt;</ph> est égal à <ph id="ph2">&lt;see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
          <source>This can occur when waiting for an operation that is already executing on the same thread.</source>
          <target state="translated">Cela peut se produire en attendant une opération qui est déjà en cours d'exécution sur le même thread.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>