<Type Name="BerConverter" FullName="System.DirectoryServices.Protocols.BerConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6de50bbdeb4de978898fad054192a257e25c80e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30407283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BerConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BerConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.BerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BerConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BerConverter sealed" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe <see cref="T:System.DirectoryServices.Protocols.BerConverter" /> encode et décode des données structurées à l'aide de règles d'encodage de base (BER, Basic Encoding Rules).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static object[] Decode (string format, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] Decode(string format, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (format As String, value As Byte()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ Decode(System::String ^ format, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne de format.</param>
        <param name="value">Tableau de données BER.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> décode une représentation binaire des données, à l'aide de règles BER, afin de récupérer des données structurées.</summary>
        <returns>Données décodées.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="format" /> contient une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="format" /> contient un caractère non défini.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.BerConversionException">Le décodage sous-jacent échoue. Les règles de décodage incluent les éléments suivants.  
  
 <list type="table"><listheader><term> Code  
  
 </term><description> Résultat correspondant  
  
 </description></listheader><item><term> '{' '}' '[' ']' 'n' 'x'  
  
 </term><description> Aucun résultat correspondant  
  
 </description></item><item><term> 'i' 'e'  
  
 </term><description> int  
  
 </description></item><item><term> 'b'  
  
 </term><description> bool  
  
 </description></item><item><term> 'a'  
  
 </term><description> string  
  
 </description></item><item><term> 'O'  
  
 </term><description> byte[]  
  
 </description></item><item><term> 'B'  
  
 </term><description> byte[] contenant des chaînes de bits  
  
 </description></item><item><term> 'v'  
  
 </term><description> string[]  
  
 </description></item><item><term> 'V'  
  
 </term><description> byte[][]  
  
 </description></item></list></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static byte[] Encode (string format, params object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Encode(string format, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (format As String, ParamArray value As Object()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Encode(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Chaîne de format.</param>
        <param name="value">Tableau de données mises en forme.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> encode des données structurées, à l'aide de règles BER, afin de récupérer une représentation binaire des données.</summary>
        <returns>Tableau de données encodées BER.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les éléments suivants sont des caractères de format valide.  
  
 Règles de codage :  
  
|Code|Argument correspondant|  
|----------|----------------------------|  
|« {' '}' ' [' ']' « n »|Aucun argument correspondant|  
|' t ' 'i', 'e'|int|  
|'a'|Chaîne d’octets|  
|'b'|bool|  
|de '|chaîne|  
|' o ' de 'X'|byte[]|  
|'v'|string[]|  
|'V'|byte[][]|  
  
> [!NOTE]
>  « v » et « V » sont spéciaux car un double {} est requis. Par exemple, utilisez {{v}} et {{V}}.  
  
## <a name="exceptions"></a>Exceptions  
  
|Exception|Condition|  
|---------------|---------------|  
|ArgumentNullException|`format` est une référence Null (`Nothing` en Visual Basic).|  
|ArgumentException|Cette exception se produit dans l’une des conditions suivantes :<br /><br /> -Il ne sont pas assez d’arguments pour la chaîne de format.<br />-L’argument de chaîne de format est incorrect.<br />-La chaîne de format contient un caractère non défini.|  
|BerConversionException|Valeur de retour de traitement des erreurs.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>