<Type Name="DsmlSoapConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c029d15db3e2e54ac483f694e424542913b2a809" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37660610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlSoapConnection extends System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DsmlSoapConnection&#xA;Inherits DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapConnection abstract : System::DirectoryServices::Protocols::DirectoryConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapConnection = class&#xA;    inherit DirectoryConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La classe <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> est une classe abstraite qui ne peut pas être instanciée. Elle permet aux protocoles sans état et avec état d'être gérés de la même façon en fournissant des fonctionnalités orientées session.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlSoapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DsmlSoapConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Le constructeur <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" /> initialise une nouvelle instance d'une classe <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public abstract void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginSession();" />
      <MemberSignature Language="F#" Value="abstract member BeginSession : unit -&gt; unit" Usage="dsmlSoapConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" /> fait en sorte que le serveur DSML démarre une nouvelle session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode sera bloquée en attendant une réponse du serveur DSML et délai d’attente en fonction de la <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Levée lorsqu'une session est déjà ouverte sur la connexion.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Levée lorsque le code XML retourné à partir du serveur en réponse à BeginSession n'est pas bien formé.</exception>
        <exception cref="T:System.Net.WebException">Levée lorsqu'il y a un échec de communication avec le serveur DSML.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public abstract void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndSession();" />
      <MemberSignature Language="F#" Value="abstract member EndSession : unit -&gt; unit" Usage="dsmlSoapConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" /> termine la session avec le serveur DSML et efface la propriété <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode sera bloquée en attendant une réponse du serveur DSML et délai d’attente en fonction de la <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> propriété.  
  
 Si le serveur DSML termine la session, un <xref:System.Net.WebException>  
  
 est levée. Si <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> est toujours valide une fois l’exception est levée, la demande n’a jamais atteint le serveur et la connexion est toujours considéré comme valide.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Levée lorsqu'un échec de communication se produit avec le serveur DSML.</exception>
        <exception cref="T:System.InvalidOperationException">Levée lorsqu'il n'y a pas de session ouverte.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public abstract string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> contient l'ID de session active.</summary>
        <value>ID de session active.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une valeur null ne signifie aucune session active.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapRequestHeader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SoapRequestHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode SoapRequestHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapRequestHeader As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNode ^ SoapRequestHeader { System::Xml::XmlNode ^ get(); void set(System::Xml::XmlNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapRequestHeader : System.Xml.XmlNode with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" /> contient l'en-tête SOAP joint aux demandes sortantes.</summary>
        <value>En-tête SOAP joint aux demandes sortantes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’API utilise <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> et <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> pour effectuer le suivi de la durée de vie d’une session.  
  
 **Attention** de joindre un en-tête EndSession pour le <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader%2A> rend l’API incohérente avec la connexion et doit être évitée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>