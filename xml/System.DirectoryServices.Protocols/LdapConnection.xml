<Type Name="LdapConnection" FullName="System.DirectoryServices.Protocols.LdapConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3b62fcf21727334ccaf79380133c61e73d241b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LdapConnection : System.DirectoryServices.Protocols.DirectoryConnection, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi LdapConnection extends System.DirectoryServices.Protocols.DirectoryConnection implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.LdapConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class LdapConnection&#xA;Inherits DirectoryConnection&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LdapConnection : System::DirectoryServices::Protocols::DirectoryConnection, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>La classe <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> crée une connexion LDAP TCP/IP ou UDP aux services de domaine Microsoft Active Directory ou à un serveur LDAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> propriété sur le <xref:System.DirectoryServices.Protocols.LdapConnection> objet et <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> propriété sur le <xref:System.DirectoryServices.Protocols.LdapSessionOptions> de l’objet sont toutes deux définies, le certificat spécifié dans le <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> propriété est ignorée.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Exception levée en cas d'échec de création d'un bloc de connexion ou d'échec d'ouverture d'une connexion au serveur.</exception>
        <summary>Crée une instance de la classe <see cref="T:System.DirectoryServices.Protocols.LdapConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As LdapDirectoryIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
      </Parameters>
      <Docs>
        <param name="identifier">Objet <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> qui spécifie le serveur.</param>
        <summary>Le constructeur <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" /> crée une instance de la classe <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> à l'aide de l'identificateur d'annuaire spécifié. Les informations d'identification d'ouverture de session et l'authentification de négociation sont utilisées pour se connecter au serveur LDAP.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Exception levée en cas d'échec de création d'un bloc de connexion ou d'échec d'ouverture d'une connexion au serveur.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (string server);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (server As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::String ^ server);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="server">Une chaîne spécifiant le serveur qui peut être un nom de domaine, un nom de serveur LDAP ou des chaînes de pointillés représentant l’adresse IP du serveur LDAP. Ce paramètre peut éventuellement inclure également un numéro de port, séparé du côté droit de la chaîne par un signe deux-points (:).</param>
        <summary>Le constructeur <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" /> crée une instance de la classe <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> en utilisant le serveur spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Exception levée en cas d'échec de création d'un bloc de connexion ou d'échec d'ouverture d'une connexion au serveur.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As LdapDirectoryIdentifier, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="identifier">Objet <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> qui spécifie le serveur.</param>
        <param name="credential">Objet <see cref="T:System.Net.NetworkCredential" /> qui spécifie les informations d'identification à utiliser.</param>
        <summary>Le constructeur <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" /> crée une instance de la classe <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> à l'aide de l'identificateur d'annuaire et des informations d'identification réseau spécifiés. L'authentification de négociation est utilisée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Exception levée en cas d'échec de création d'un bloc de connexion ou d'échec d'ouverture d'une connexion au serveur.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, class System.Net.NetworkCredential credential, valuetype System.DirectoryServices.Protocols.AuthType authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential, System::DirectoryServices::Protocols::AuthType authType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authType" Type="System.DirectoryServices.Protocols.AuthType" />
      </Parameters>
      <Docs>
        <param name="identifier">Objet <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> qui spécifie le serveur.</param>
        <param name="credential">Objet <see cref="T:System.Net.NetworkCredential" /> qui spécifie les informations d'identification à utiliser.</param>
        <param name="authType">Valeur <see cref="T:System.DirectoryServices.Protocols.AuthType" /> qui spécifie le type d'authentification à utiliser.</param>
        <summary>Le constructeur <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> crée une instance de la classe <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> à l'aide de l'identificateur d'annuaire, des informations d'identification réseau et du type d'authentification spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Exception levée en cas d'échec de création d'un bloc de connexion ou d'échec d'ouverture d'une connexion au serveur.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Levée lorsque <paramref name="authType" /> est hors limites.</exception>
        <exception cref="T:System.ArgumentException">Levée lorsque <paramref name="authType" /> est spécifié comme Anonyme mais que <paramref name="credential" /> spécifiait des informations d'identification.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la demande asynchrone.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" /> annule la demande asynchrone.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> est null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Levée si <paramref name="asyncResult" /> n'a pas été retourné par l'appel correspondant à <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /></exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.AuthType AuthType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthType As AuthType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::AuthType AuthType { System::DirectoryServices::Protocols::AuthType get(); void set(System::DirectoryServices::Protocols::AuthType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.AuthType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> contient les types d'authentification pris en charge.</summary>
        <value>Type d'authentification pris en charge.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Levée lorsque <paramref name="authType" /> est hors limites.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoBind">
      <MemberSignature Language="C#" Value="public bool AutoBind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoBind" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoBind As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoBind { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" /> spécifie si une liaison automatique est autorisée.</summary>
        <value>
          <see langword="true" /> si la liaison automatique est autorisée ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie des données de façon asynchrone au serveur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.DirectoryServices.Protocols.PartialResultProcessing partialMode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DirectoryRequest, partialMode As PartialResultProcessing, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, System::DirectoryServices::Protocols::PartialResultProcessing partialMode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="partialMode" Type="System.DirectoryServices.Protocols.PartialResultProcessing" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />.</param>
        <param name="partialMode">Valeur d'énumération <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> qui spécifie le niveau de résultat partiel à retourner.</param>
        <param name="callback">Fonction <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">
          <see cref="T:System.Object" /> qui contient les données d'état pour cette demande.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" /> envoie les données de manière asynchrone au serveur.</summary>
        <returns>Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.NotSupportedException">Les résultats partiels ne sont pas pris en charge.</exception>
        <exception cref="T:System.ArgumentException">Une fonction de rappel doit être spécifiée si <paramref name="partialMode" /> est égal à <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.TimeSpan requestTimeout, valuetype System.DirectoryServices.Protocols.PartialResultProcessing partialMode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DirectoryRequest, requestTimeout As TimeSpan, partialMode As PartialResultProcessing, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, TimeSpan requestTimeout, System::DirectoryServices::Protocols::PartialResultProcessing partialMode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="requestTimeout" Type="System.TimeSpan" />
        <Parameter Name="partialMode" Type="System.DirectoryServices.Protocols.PartialResultProcessing" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />.</param>
        <param name="requestTimeout">Durée, en secondes, avant l'expiration de la demande.</param>
        <param name="partialMode">Valeur d'énumération <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> qui spécifie le niveau de résultat partiel à retourner.</param>
        <param name="callback">Fonction <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">
          <see cref="T:System.Object" /> qui contient les données d'état pour cette demande.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" /> envoie les données de manière asynchrone au serveur.</summary>
        <returns>Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.NotSupportedException">Les résultats partiels ne sont pas pris en charge.</exception>
        <exception cref="T:System.ArgumentException">Une fonction de rappel doit être spécifiée si <paramref name="partialMode" /> est égal à <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Bind">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie une liaison LDAP.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Bind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind" /> envoie une liaison LDAP à l'aide des informations d'identification actuelles.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Le code d'erreur retourné par LDAP ne mappe pas à l'un des codes d'erreur d'énumération <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</exception>
        <exception cref="T:System.InvalidOperationException">Soit la propriété <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> spécifie plusieurs certificats clients à envoyer pour l'authentification, soit la propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> est Anonyme et un ou plusieurs jeux d'informations d'identification sont fournis.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Net.NetworkCredential newCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Net.NetworkCredential newCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (newCredential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Net::NetworkCredential ^ newCredential);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCredential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="newCredential">Objet <see cref="T:System.Net.NetworkCredential" /> qui spécifie les informations d'identification à utiliser.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" /> envoie une liaison LDAP à l'aide du <see cref="T:System.Net.NetworkCredential" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Le code d'erreur retourné par LDAP ne mappe pas à un code d'erreur d'énumération <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</exception>
        <exception cref="T:System.InvalidOperationException">Soit la propriété <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> spécifie plusieurs certificats clients à envoyer pour l'authentification, soit la propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> est Anonyme et un ou plusieurs jeux d'informations d'identification sont fournis.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public override System.Net.NetworkCredential Credential { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkCredential ^ Credential {  void set(System::Net::NetworkCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.Credential" /> contient les informations d'identification réseau pour l'objet.</summary>
        <value>Informations d'identification réseau pour l'objet.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ferme et éventuellement libère le handle LDAP.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" /> ferme et libère le handle LDAP.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> si le handle est libéré lorsque la connexion est fermée ou <see langword="false" /> si la connexion est fermée sans libération du handle.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" /> ferme la connexion et éventuellement libère le handle LDAP.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendRequest (asyncResult As IAsyncResult) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DirectoryResponse ^ EndSendRequest(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Objet <see cref="T:System.IAsyncResult" /> qui contient des données d'état pour cette demande.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" /> effectue une demande asynchrone.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> qui contient les résultats de la demande.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Levée si l'objet est déjà supprimé.  Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> est null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> ne correspond pas au <paramref name="asyncResult" /> retourné dans l'appel <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" />.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Le code d’erreur retourné par LDAP ne mappe pas à un code d’erreur d’énumération <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Levée si le serveur a retourné un objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> avec une erreur.</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LdapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LdapConnection ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" /> permet à un objet <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> de tenter de libérer des ressources et d'exécuter d'autres opérations de nettoyage avant que l'objet <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> ne soit récupéré par l'opération garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartialResults">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartialResults (asyncResult As IAsyncResult) As PartialResultsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::PartialResultsCollection ^ GetPartialResults(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.PartialResultsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Objet <see cref="T:System.IAsyncResult" /> qui contient des données d'état pour cette demande.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" /> récupère des résultats partiels d'une opération asynchrone.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> qui contient les résultats partiels.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet est déjà supprimé. Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> est null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> ne correspond pas au <paramref name="asyncResult" /> retourné dans l'appel <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" />.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Le code d’erreur retourné par LDAP ne mappe pas à un code d’erreur d’énumération <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Levée si le serveur a retourné un objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> avec une erreur.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie un <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> unique en tant qu'opération v3 LDAP.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request">Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> qui contient la demande.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> envoie un <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> unique en tant qu'opération v3 LDAP.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> qui contient la réponse du serveur.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet est déjà supprimé. Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> est null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.NotSupportedException">La demande est de type DsmlAuthRequest.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Le code d'erreur retourné par LDAP ne mappe pas à un code d'erreur d'énumération <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Levée si le serveur a retourné un objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> avec une erreur.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.TimeSpan requestTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As DirectoryRequest, requestTimeout As TimeSpan) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, TimeSpan requestTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="requestTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="request">Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> qui contient la demande.</param>
        <param name="requestTimeout">Durée (en secondes) avant expiration de la demande.</param>
        <summary>La méthode <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" /> envoie un <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> unique en tant qu'opération v3 LDAP.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> qui contient la réponse du serveur.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet est déjà supprimé. Le handle de l'objet n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> est null (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.NotSupportedException">La demande est de type DsmlAuthRequest.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">Le code d’erreur retourné par LDAP ne mappe pas à un code d’erreur d’énumération <see cref="T:System.DirectoryServices.Protocols.ResultCode" />.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Levée si le serveur a retourné un objet <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> avec une erreur.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SessionOptions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionOptions As LdapSessionOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::LdapSessionOptions ^ SessionOptions { System::DirectoryServices::Protocols::LdapSessionOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.LdapSessionOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" /> contient un objet <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> qui spécifie les options de session.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> qui spécifie les options de session.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> propriété sur le <xref:System.DirectoryServices.Protocols.LdapConnection> objet et <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> propriété sur le <xref:System.DirectoryServices.Protocols.LdapSessionOptions> de l’objet sont toutes deux définies, le certificat spécifié dans le <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> propriété est ignorée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" /> contient la durée (en secondes) avant expiration de <see cref="T:System.DirectoryServices.Protocols.LdapConnection" />.</summary>
        <value>Durée (en secondes) avant expiration de <see cref="T:System.DirectoryServices.Protocols.LdapConnection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>