<Type Name="NodeAffinity" FullName="Microsoft.Build.Execution.NodeAffinity">
  <TypeSignature Language="C#" Value="public enum NodeAffinity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NodeAffinity extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.NodeAffinity" />
  <TypeSignature Language="VB.NET" Value="Public Enum NodeAffinity" />
  <TypeSignature Language="C++ CLI" Value="public enum class NodeAffinity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="2c816-101">Type de données énuméré qui détermine où les projets sont générés.</span><span class="sxs-lookup"><span data-stu-id="2c816-101">An enumerated data type that determines where projects are built.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="Any" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity Any = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.Any" />
      <MemberSignature Language="VB.NET" Value="Any" />
      <MemberSignature Language="C++ CLI" Value="Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2c816-102">Le projet peut être planifié n'importe où.</span><span class="sxs-lookup"><span data-stu-id="2c816-102">The project may be scheduled anywhere.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InProc">
      <MemberSignature Language="C#" Value="InProc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity InProc = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.InProc" />
      <MemberSignature Language="VB.NET" Value="InProc" />
      <MemberSignature Language="C++ CLI" Value="InProc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2c816-103">Le projet peut être planifié uniquement sur le nœud in-process.</span><span class="sxs-lookup"><span data-stu-id="2c816-103">The project may only be scheduled on the in-proc node.</span></span> <span data-ttu-id="2c816-104">Cela se produit automatiquement s'il y a un objet hôte ou si un ProjectInstance a été spécifié.</span><span class="sxs-lookup"><span data-stu-id="2c816-104">This happens automatically if there is a host object or if a ProjectInstance was specified.</span></span> <span data-ttu-id="2c816-105">Un hôte peut vouloir le spécifier s'il sait qu'une tâche dépend explicitement de données statiques partagées ou d'autres objets fournis par l'hôte.</span><span class="sxs-lookup"><span data-stu-id="2c816-105">A host may wish to specify it if they know a task depends explicitly on shared static data or other host-provided objects.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OutOfProc">
      <MemberSignature Language="C#" Value="OutOfProc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity OutOfProc = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.OutOfProc" />
      <MemberSignature Language="VB.NET" Value="OutOfProc" />
      <MemberSignature Language="C++ CLI" Value="OutOfProc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2c816-106">Le projet peut être planifié uniquement sur un nœud hors processus.</span><span class="sxs-lookup"><span data-stu-id="2c816-106">The project may only be scheduled on an out-of-proc node.</span></span> <span data-ttu-id="2c816-107">Un hôte peut vouloir le spécifier si l'on sait que le projet en cours de génération pourrait contaminer l'environnement d'hôte (ou que l'hôte contamine l'environnement pendant qu'une génération se poursuit.)</span><span class="sxs-lookup"><span data-stu-id="2c816-107">A host may wish to specify this if it is known the project being built could contaminate the host environment (or the host contaminates the environment while a build is proceeding.)</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>