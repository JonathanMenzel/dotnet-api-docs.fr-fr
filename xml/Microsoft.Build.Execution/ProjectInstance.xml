<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b87719892e16ee64ada05e11bec0bea9437b387d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30331103" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="52a02-101">Représente une instance de projet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52a02-101">Represents a project instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-102">Instances de ce résultat de classe lorsqu’un projet est cloné.</span><span class="sxs-lookup"><span data-stu-id="52a02-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="52a02-103">Les constructeurs sont internes afin de demander aux utilisateurs de créer des instances de projet à partir de projets existants.</span><span class="sxs-lookup"><span data-stu-id="52a02-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="52a02-104">Nouvelles instances de projet sont immuables, sauf que les éléments d’instance peuvent être ajoutés et définir des propriétés de l’instance dessus.</span><span class="sxs-lookup"><span data-stu-id="52a02-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="52a02-105">Les instances de projet sont utiles car ils peuvent être modifiés et créées plusieurs fois sans perturber le projet d’origine.</span><span class="sxs-lookup"><span data-stu-id="52a02-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="52a02-106">Cette classe ni chacun de ses composants est autorisé à avoir des références à <xref:Microsoft.Build.Construction> ou <xref:Microsoft.Build.Evaluation> objets.</span><span class="sxs-lookup"><span data-stu-id="52a02-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="52a02-107">Projet instance cible, les services de l’hôte et le Registre de la tâche ne sont pas exposés.</span><span class="sxs-lookup"><span data-stu-id="52a02-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-108">Crée une nouvelle instance de projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-108">Creates a new project instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="52a02-109">Élément racine du projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-109">The project root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-110">Crée une nouvelle instance de projet et l'initialise à partir de la racine de projet spécifiée, à l'aide de la collection de projets par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-111">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-112">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="52a02-113">Nom du fichier projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-113">The name of the project file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-114">Crée une nouvelle instance de projet et l'initialise à partir du fichier projet spécifié, à l'aide de la collection de projets par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-115">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-116">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="52a02-117">Nom du fichier projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-117">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="52a02-118">Propriétés globales à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-118">The global properties to use.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="52a02-119">Version des outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-119">The tools version.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-120">Crée une nouvelle instance de projet et l'initialise à partir du fichier projet spécifié, à l'aide des propriétés globales spécifiées, de la version des outils spécifiée et de la collection de projets par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-121">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-122">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="52a02-123">Élément racine du projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-123">The project root element</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="52a02-124">Propriétés globales à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-124">The global properties to use.</span>
          </span>
          <span data-ttu-id="52a02-125">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-125">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="52a02-126">Version des outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-126">The tools version.</span>
          </span>
          <span data-ttu-id="52a02-127">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-127">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="52a02-128">Collection de projets</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-128">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-129">Crée une nouvelle instance de projet et l'initialise à partir de la racine de projet spécifiée, à l'aide des propriétés globales, de la version des outils et de la collection de projets spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-130">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-131">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="52a02-132">Nom du fichier projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-132">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="52a02-133">Propriétés globales à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-133">The global properties to use.</span>
          </span>
          <span data-ttu-id="52a02-134">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-134">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="52a02-135">Version des outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-135">The tools version.</span>
          </span>
          <span data-ttu-id="52a02-136">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-136">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="52a02-137">Collection de projets</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-137">Project collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-138">Crée une nouvelle instance de projet et l'initialise à partir du fichier projet spécifié, à l'aide des propriétés globales, de la version des outils et de la collection de projets spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-139">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-140">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="52a02-141">Élément racine du projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-141">The project root element.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="52a02-142">Propriétés globales à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-142">The global properties to use.</span>
          </span>
          <span data-ttu-id="52a02-143">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-143">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="52a02-144">Version des outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-144">The tools version.</span>
          </span>
          <span data-ttu-id="52a02-145">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-145">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="52a02-146">Version du sous-ensemble d'outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-146">The sub toolset version.</span>
          </span>
          <span data-ttu-id="52a02-147">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-147">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="52a02-148">Collection de projets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-148">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-149">Crée une nouvelle instance de projet et l'initialise à partir de la racine de projet spécifiée, à l'aide des propriétés globales, de la version des outils et de la collection de projets spécifiées</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-150">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-151">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile">
          <span data-ttu-id="52a02-152">Nom du fichier projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-152">The name of the project file.</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="52a02-153">Propriétés globales à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-153">The global properties to use.</span>
          </span>
          <span data-ttu-id="52a02-154">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-154">May be null.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="52a02-155">Version des outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-155">The tools version.</span>
          </span>
          <span data-ttu-id="52a02-156">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-156">May be null.</span>
          </span>
        </param>
        <param name="subToolsetVersion">
          <span data-ttu-id="52a02-157">Version du sous-ensemble d'outils.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-157">The sub toolset version.</span>
          </span>
          <span data-ttu-id="52a02-158">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-158">May be null.</span>
          </span>
        </param>
        <param name="projectCollection">
          <span data-ttu-id="52a02-159">Collection de projets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-159">Project collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-160">Crée une nouvelle instance de projet et l'initialise à partir du fichier projet spécifié, à l'aide des propriétés globales, de la version des outils, de la version du sous-ensemble d'outils et de la collection de projets spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-161">Aucun intermédiaire <xref:Microsoft.Build.Evaluation.Project> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="52a02-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="52a02-162">Cela est utile si un projet va être créé, mais ne pas affiché ou modifié.</span><span class="sxs-lookup"><span data-stu-id="52a02-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-163">Ajoute un élément sans métadonnées au projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-163">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="52a02-164">Type de l'élément à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-164">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="52a02-165">Attribut Include évalué de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-165">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-166">Ajoute un élément sans métadonnées au projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-166">Adds an item with no metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-167">Retourne le nouvel élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-167">Returns the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-168">Nous ne prenons pas ProjectItemInstance afin de s’assurer que nous n’avons pas celle qui est déjà en cours d’utilisation par un autre ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="52a02-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="52a02-169">Type de l'élément à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-169">The item type of the item to be added.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="52a02-170">Attribut Include évalué de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-170">The evaluated Include attribute of the item.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="52a02-171">Métadonnées de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-171">The metadata of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-172">Ajoute un élément avec les métadonnées spécifiées au projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-172">Adds an item with the given metadata to the project.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-173">Retourne le nouvel élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-173">Return the new item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-174">Nous ne prenons pas ProjectItemInstance afin de s’assurer que nous n’avons pas celle qui est déjà en cours d’utilisation par un autre ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="52a02-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-175">Génère les cibles par défaut du projet avec les enregistreurs d'événements de la collection de projets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-175">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52a02-176">Génère les cibles par défaut du projet avec les enregistreurs d'événements de la collection de projets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-176">Builds the default targets of the project with loggers of the project collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-177">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-177">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="52a02-178">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-178">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-179">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-179">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-180">Génère les cibles par défaut du projet avec les enregistreurs d'événements spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-180">Builds the default targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-181">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-181">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-182">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers">
          <span data-ttu-id="52a02-183">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-183">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-184">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-184">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="52a02-185">Enregistreurs d'événements distants à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-185">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-186">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-186">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-187">Génère les cibles par défaut du projet avec les enregistreurs d'événements et enregistreurs d'événements distants spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-187">Builds the default targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-188">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-188">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-189">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="52a02-190">Cible à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-190">The target to build.</span>
          </span>
          <span data-ttu-id="52a02-191">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-191">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="52a02-192">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-192">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-193">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-193">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-194">Génère la cible spécifiée du projet avec les enregistreurs d'événements spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-194">Builds the given target of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-195">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-195">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-196">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="52a02-197">Cibles à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-197">The targets to build.</span>
          </span>
          <span data-ttu-id="52a02-198">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-198">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="52a02-199">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-199">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-200">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-200">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-201">Génère les cibles spécifiées du projet avec les enregistreurs d'événements spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-201">Builds the given targets of the project with the given loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-202">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-202">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-203">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="52a02-204">Cible à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-204">The target to build.</span>
          </span>
          <span data-ttu-id="52a02-205">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-205">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="52a02-206">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-206">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-207">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-207">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="52a02-208">Enregistreurs d'événements distants à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-208">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-209">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-209">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-210">Génère la cible spécifiée du projet avec les enregistreurs d'événements et enregistreurs d'événements distants spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-210">Builds the given target of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-211">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-211">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-212">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="52a02-213">Liste des cibles à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-213">List of targets to build.</span>
          </span>
          <span data-ttu-id="52a02-214">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-214">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="52a02-215">Liste énumérée des enregistreurs d'événements à utiliser pour la génération de cibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-215">Enumerated list of loggers to use for building targets.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="52a02-216">Sorties de générations cibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-216">Outputs of target builds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-217">Génère la liste des cibles avec les enregistreurs d'événements spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-217">Build a list of targets with specified loggers.</span>
          </span>
          <span data-ttu-id="52a02-218">Les cibles peuvent être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-218">Targets may be null.</span>
          </span>
          <span data-ttu-id="52a02-219">Les enregistreurs d'événements peuvent être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-219">Loggers may be null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-220">Retourne la valeur true en cas de réussite, false en cas d'échec.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-220">Returns true on success, false on failure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-221">Si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation que nous a été passé, lève l’exception InvalidOperationException.</span><span class="sxs-lookup"><span data-stu-id="52a02-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="52a02-222">Cibles à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-222">The targets to build.</span>
          </span>
          <span data-ttu-id="52a02-223">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-223">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="52a02-224">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-224">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-225">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-225">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="52a02-226">Enregistreurs d'événements distants à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-226">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-227">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-227">May be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-228">Génère les cibles spécifiées du projet avec les enregistreurs d'événements et enregistreurs d'événements distants spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-228">Builds the given targets of the project with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-229">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-229">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-230">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets">
          <span data-ttu-id="52a02-231">Cibles à générer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-231">The targets to build.</span>
          </span>
          <span data-ttu-id="52a02-232">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-232">May be null.</span>
          </span>
        </param>
        <param name="loggers">
          <span data-ttu-id="52a02-233">Enregistreurs d'événements à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-233">The loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-234">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-234">May be null.</span>
          </span>
        </param>
        <param name="remoteLoggers">
          <span data-ttu-id="52a02-235">Enregistreurs d'événements distants à utiliser pour la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-235">The remote loggers to use for the build.</span>
          </span>
          <span data-ttu-id="52a02-236">Ce paramètre peut être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-236">May be null.</span>
          </span>
        </param>
        <param name="targetOutputs">
          <span data-ttu-id="52a02-237">Sorties cibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-237">The target outputs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-238">Génère les cibles spécifiées avec les sorties cibles spécifiées, ainsi qu'avec les enregistreurs d'événements et enregistreurs d'événements distants spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-239">Retourne true si la génération réussit ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-239">Returns true if the build succeeds; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-240">Lève l’exception InvalidOperationException si un des enregistreurs d’événements fournis sont déjà attaché au service de journalisation.</span><span class="sxs-lookup"><span data-stu-id="52a02-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-241">Crée un clone complet indépendant de ce projet et de tout ce qu'il contient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-241">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="52a02-242">Utile pour la compilation d'un fichier unique ou pour conserver les résultats de build entre les builds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-242">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52a02-243">Crée un clone complet indépendant de ce projet et de tout ce qu'il contient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-243">Creates an independent, deep clone of this project and everything in it.</span>
          </span>
          <span data-ttu-id="52a02-244">Le clone a la même mutabilité que l'élément d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-244">Clone has the same mutability as the original.</span>
          </span>
          <span data-ttu-id="52a02-245">Utile pour la compilation d'un fichier unique ou pour conserver les résultats de build entre les builds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-245">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-246">Crée un clone complet indépendant de ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-246">Creates an independent, deep clone of this project.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable">
          <span data-ttu-id="52a02-247">Indicateur spécifiant la mutabilité de clones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-247">Flag indicating clone mutability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-248">Crée un clone complet indépendant de ce projet et de tout ce qu'il contient, avec la mutabilité spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span>
          </span>
          <span data-ttu-id="52a02-249">Utile pour la compilation d'un fichier unique ou pour conserver les résultats de build entre les builds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-249">Useful for compiling a single file or for keeping build results between builds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-250">Retourne un clone indépendant et profond de ce projet, avec la mutabilité spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-250">Returns an independent, deep clone of this project, with specified mutability.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-251">Obtient ou définit la liste des cibles par défaut pour ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-251">Gets or sets the list of default targets for this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-252">Retourne la liste des cibles par défaut pour ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-252">Returns the list of default targets for this project.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-253">Cibles par défaut sont générées si aucune cible n’est explicitement spécifiés.</span><span class="sxs-lookup"><span data-stu-id="52a02-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-254">Obtient le répertoire racine du projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-254">Gets the project root directory.</span>
          </span>
          <span data-ttu-id="52a02-255">Utilisé pour l'évaluation des chemins d'accès relatifs et la définition du répertoire actif pendant la génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-255">Used for evaluation of relative paths and setting the current directory during build.</span>
          </span>
          <span data-ttu-id="52a02-256">Ce paramètre n'est jamais null : les projets qui ne sont pas chargés à partir du disque utilisent le répertoire actif à partir du moment où la génération démarre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-257">Retourne le répertoire racine du projet, lequel n'est jamais null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-257">Returns the project root directory, which is never null.</span>
          </span>
          <span data-ttu-id="52a02-258">Les projets qui ne sont pas chargés à partir du disque utilisent le répertoire actif au moment où la génération démarre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-258">Projects not loaded from disk return the current directory at the time the build was started.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="52a02-259">Chaîne à développer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-259">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-260">Évalue la chaîne fournie comme une condition en développant les éléments et les propriétés, à l'aide des éléments et propriétés actuels disponibles, puis en effectuant une évaluation logique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-261">Retourne la valeur true si la chaîne a la valeur true ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-261">Returns true if the string evaluates to true; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-262">Cela est utile pour la fenêtre exécution.</span><span class="sxs-lookup"><span data-stu-id="52a02-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="52a02-263">Ne développe pas les expressions de récupération de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="52a02-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue">
          <span data-ttu-id="52a02-264">Chaîne à développer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-264">The string to be expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-265">Évalue la chaîne fournie en développant les éléments et les propriétés, à l'aide des éléments et propriétés actuels disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-266">Retourne la valeur de la chaîne développée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-266">Returns the expanded string value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-267">Cela est utile pour certains hôtes ou pour la fenêtre exécution du débogueur.</span><span class="sxs-lookup"><span data-stu-id="52a02-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="52a02-268">Ne développe pas les expressions de récupération de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="52a02-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-269">Obtient le chemin d'accès complet au fichier projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-269">Gets the full path to the project file.</span>
          </span>
          <span data-ttu-id="52a02-270">Utilisé pour la journalisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-270">Used for logging.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-271">Retourne le chemin d'accès complet au fichier projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-271">Returns the full path to the project file.</span>
          </span>
          <span data-ttu-id="52a02-272">Si le projet n'a jamais été nommé, retourne la valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-272">Returns null if the project was never named.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-273">Obtient la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include de la définition d'élément fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-273">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="52a02-274">Définition d'élément à évaluer et à placer dans une séquence d'échappement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-274">The item definition to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-275">Obtient la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include de la définition d'élément fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-275">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-276">Retourne la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include de la définition d'élément fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-276">Returns the evaluated, escaped value of the Include attribute of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="52a02-277">Élément à évaluer et à placer dans une séquence d'échappement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-277">The item to be evaluated and escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-278">Obtient la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include de l'élément fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-278">Gets the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-279">Retourne la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include de l'élément fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-279">Returns the evaluated, escaped value of the Include attribute of the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="52a02-280">Type des éléments à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-280">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-281">Obtient tous les éléments présents dans ce projet qui sont du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-281">Gets all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="52a02-282">Il s'agit d'une liste en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-282">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-283">Retourne tous les éléments présents dans ce projet qui sont du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-283">Returns all the items in this project of the specified type.</span>
          </span>
          <span data-ttu-id="52a02-284">S'il n'y en a pas, retourne une liste vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-284">Returns an empty list if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="52a02-285">Type des éléments à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-285">The item type of the items to be retrieved.</span>
          </span>
        </param>
        <param name="evaluatedInclude">
          <span data-ttu-id="52a02-286">Valeur Include évaluée des éléments à récupérer</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-286">The evaluated include value of the items to be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-287">Obtient tous les éléments de ce projet du type spécifié et de la valeur Include évaluée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-287">Gets all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="52a02-288">Il s'agit d'une liste en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-288">This is a read-only list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-289">Retourne tous les éléments de ce projet du type spécifié et de la valeur Include évaluée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-289">Returns all the items in this project of the specified type and evaluated include value.</span>
          </span>
          <span data-ttu-id="52a02-290">S'il n'y en a pas, retourne une collection vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-290">Returns an empty collection if there are none.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-291">Obtient la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni de la définition d'élément fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-291">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum">
          <span data-ttu-id="52a02-292">Métadonnée à placer dans une séquence d'échappement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-292">The metadatum to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-293">Obtient la valeur placée dans une séquence d'échappement de la métadonnée fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-293">Gets the escaped value of the provided metadatum.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-294">Retourne la valeur placée dans une séquence d'échappement de la métadonnée fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-294">Returns the escaped value of the provided metadatum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="52a02-295">Définition d'élément servant à fournir la valeur de la métadonnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-295">The item definition to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="52a02-296">Nom de la métadonnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-296">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-297">Obtient la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni de la définition d'élément fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-297">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-298">Retourne la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni de la définition d'élément fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-298">Returns the escaped value of the metadatum with the provided name of the provided item definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="52a02-299">Élément servant à fournir la valeur de la métadonnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-299">The item to provide the metadatum value.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="52a02-300">Nom de la métadonnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-300">The name of the metadatum.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-301">Obtient la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni sur l'élément fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-301">Gets the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-302">Retourne la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni sur l'élément fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-302">Returns the escaped value of the metadatum with the provided name on the provided item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="52a02-303">Nom de la propriété à récupérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-303">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-304">Obtient la propriété portant le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-304">Get the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-305">Retourne la propriété avec le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-305">Returns the property with the given name.</span>
          </span>
          <span data-ttu-id="52a02-306">Retourne la valeur null s'il n'existe aucune propriété portant ce nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-306">Returns null if no property exists with that name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="52a02-307">Nom de la propriété dont la valeur doit être extraite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-307">The name of the property whose value is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-308">Obtient la valeur de la propriété portant le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-308">Get the value of the property with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-309">Retourne la valeur de la propriété portant le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-309">Returns the value of the property with the given name.</span>
          </span>
          <span data-ttu-id="52a02-310">Retourne une chaîne vide s'il n'existe aucune propriété portant ce nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-310">Returns an empty string if no property exists with that name.</span>
          </span>
          <span data-ttu-id="52a02-311">La valeur retournée n'a pas de séquences de caractères d'échappement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-311">The value returned has no escaped character sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-312">Cette méthode ne distingue pas une propriété avec une valeur de chaîne vide et qu’aucune propriété portant le nom donné.</span><span class="sxs-lookup"><span data-stu-id="52a02-312">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="52a02-313">Propriété à placer dans une séquence d'échappement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-313">The property to be escaped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-314">Obtient la valeur placée dans une séquence d'échappement de la propriété fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-314">Get the escaped value of the provided property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-315">Retourne la valeur placée dans une séquence d'échappement de la propriété fournie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-315">Returns the escaped value of the provided property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-316">Obtient le dictionnaire des propriétés globales avec lesquelles ce projet a été évalué, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-316">Gets the dictionary of global properties this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-317">Retourne le dictionnaire des propriétés globales avec lesquelles ce projet a été évalué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-317">Returns the dictionary of global properties this project was evaluated with.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-318">Collection en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="52a02-318">Read only collection.</span></span>  
  
 <span data-ttu-id="52a02-319">Parcourt les références de projet.</span><span class="sxs-lookup"><span data-stu-id="52a02-319">Traverses project references.</span></span>  
  
 <span data-ttu-id="52a02-320">Il s’agit de la méthode getter exposée publiquement, ce qui se traduit par un IDictionary mort en lecture seule\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="52a02-320">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-321">Obtient la liste des cibles initiales à profondeur prioritaire du projet et toutes ses importations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-321">Gets the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
          <span data-ttu-id="52a02-322">Ces cibles sont générées avant toute autre cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-322">These targets are built before any other targets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-323">Retourne la liste des cibles initiales à profondeur prioritaire du projet et toutes ses importations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-323">Returns the list of initial targets for the project and all its imports, depth-first.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-324">Obtient un indicateur qui spécifie que l'instance de projet est immuable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-324">Gets a flag indicating that the project instance is immutable.</span>
          </span>
          <span data-ttu-id="52a02-325">Cet indicateur est défini définitivement lorsque l'instance est créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-325">This flag is set permanently when the instance is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-326">Retourne l'indicateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-326">Returns the flag.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-327">Obtient un dictionnaire en lecture seule des définitions d'élément du projet, indexées par type d'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-327">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-328">Retourne un dictionnaire en lecture seule des définitions d'élément du projet, indexées par type d'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-328">Returns a read-only dictionary of the item definitions in the project, keyed by item type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-329">Obtient tous les éléments présents dans ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-329">Gets all items in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-330">Retourne tous les éléments présents dans ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-330">Returns all items in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-331">Obtient tous les types d'éléments présents dans ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-331">Gets all item types in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-332">Retourne tous les types d'éléments présents dans ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-332">Returns all item types in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-333">Obtient l'emplacement du fichier d'origine proprement dit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-333">Gets the location of the originating file itself.</span>
          </span>
          <span data-ttu-id="52a02-334">Jamais null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-334">Never null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-335">Retourne l'emplacement du fichier d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-335">Returns the location of the originating file.</span>
          </span>
          <span data-ttu-id="52a02-336">Ne retourne jamais la valeur Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-336">Never returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-337">Obtient toutes les propriétés présentes dans ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-337">Gets all properties in this project.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-338">Retourne toutes les propriétés présentes dans ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-338">Returns all properties in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="52a02-339">Élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-339">The item to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-340">Supprime un élément du projet, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-340">Removes an item from the project, if present.</span>
          </span>
          <span data-ttu-id="52a02-341">Retourne la valeur true s'il était présent ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-341">Returns true if it was present, false otherwise.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-342">Retourne la valeur true si l'élément était présent avant la suppression ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-342">Returns true if the item was present before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="52a02-343">Nom de la propriété à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-343">The name of the property to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-344">Supprime une propriété portant le nom spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-344">Removes a property with the given name.</span>
          </span>
          <span data-ttu-id="52a02-345">Retourne la valeur true si la propriété avait une valeur (éventuellement une chaîne vide) ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-345">Returns true if the property had a value (possibly empty string), otherwise false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-346">Retourne la valeur true si la propriété avait une valeur (éventuellement une chaîne vide) avant la suppression ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-346">Returns true if the property had a value (possibly an empty string) before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="52a02-347">Nom de la propriété à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-347">The name of the property to add.</span>
          </span>
        </param>
        <param name="evaluatedValue">
          <span data-ttu-id="52a02-348">Valeur évaluée de la propriété à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-348">The evaluated value of the property to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-349">Ajoute une propriété ayant le nom et la valeur spécifiés au projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-349">Add a property with the specified name and value to the project.</span>
          </span>
          <span data-ttu-id="52a02-350">Remplace toute propriété du même nom se trouvant déjà dans la collection de propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-350">Overwrites any property with the same name already in the property collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-351">Retourne la nouvelle propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-351">Returns the new property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-352">Nous ne prenons un ProjectPropertyInstance afin de s’assurer que nous n’avons pas celle qui est déjà en cours d’utilisation par un autre ProjectPropertyInstance.</span><span class="sxs-lookup"><span data-stu-id="52a02-352">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-353">Obtient un énumérateur sur toutes les cibles de ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-353">Gets an enumerator over all targets in this project.</span>
          </span>
          <span data-ttu-id="52a02-354">Cette collection est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-354">This collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-355">Retourne un énumérateur sur toutes les cibles de ce projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-355">Returns an enumerator over all targets in this project.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52a02-356">Obtient la version des outils avec laquelle ce projet a été évalué, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-356">Gets the tools version this project was evaluated with, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52a02-357">Retourne la version des outils avec laquelle ce projet a été évalué, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-357">Returns the tools version this project was evaluated with, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52a02-358">Le résultat n’est pas nécessairement identique à la version des outils sur la balise de projet, le cas échéant ; Il peut avoir été spécifié extérieurement, par exemple avec un commutateur /tv.</span><span class="sxs-lookup"><span data-stu-id="52a02-358">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52a02-359">Crée un ProjectRootElement à partir du contenu de ce ProjectInstance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-359">Creates a ProjectRootElement from the contents of this ProjectInstance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52a02-360">Retourne un ProjectRootElement qui représente cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-360">Returns a ProjectRootElement which represents this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState">
          <span data-ttu-id="52a02-361">
            <see langword="ProjectInstance" /> à partir de laquelle effectuer la mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-361">The <see langword="ProjectInstance" /> to update from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52a02-362">Remplace l'état du projet <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> et <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> par ceux de l'objet <see cref="T:Microsoft.Build.Execution.ProjectInstance" />spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52a02-362">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>