<Namespace Name="System.Windows.Forms">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de3d7b337699f794b1d27959727821d8e228cf48" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30737223" />
  </Metadata>
  <Docs>
    <summary>L'espace de noms <see cref="N:System.Windows.Forms" /> contient des classes permettant la création d'applications Windows qui tirent parti des fonctionnalités d'interface utilisateur évoluées disponibles dans le système d'exploitation Microsoft Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les classes de <xref:System.Windows.Forms> espace de noms regroupés en catégories.  
  
|Catégorie de classe|Détails|  
|--------------------|-------------|  
|-Contrôle, contrôle utilisateur et le formulaire|La plupart des classes dans le <xref:System.Windows.Forms> dérivent de l’espace de noms la <xref:System.Windows.Forms.Control> classe. Le <xref:System.Windows.Forms.Control> classe fournit les fonctionnalités de base pour tous les contrôles qui sont affichés sur un <xref:System.Windows.Forms.Form>. La <xref:System.Windows.Forms.Form> classe représente une fenêtre dans une application. Cela inclut les boîtes de dialogue non modales windows et windows client et le parent d’Interface multidocument (MDI, Multiple Document Interface). Vous pouvez également créer vos propres contrôles en dérivant de la <xref:System.Windows.Forms.UserControl> classe.|  
|-Les menus et barres d’outils|Windows Forms contient un ensemble complet de classes pour la création de vos propres barres d’outils personnalisées et les menus avec une apparence moderne et comportement (apparence). <xref:System.Windows.Forms.ToolStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ContextMenuStrip>, et <xref:System.Windows.Forms.StatusStrip> peut être utilisé pour créer des barres d’outils, les barres de menus, les menus contextuels et les barres d’état, respectivement.|  
|-Contrôles|Le <xref:System.Windows.Forms> espace de noms fournit diverses classes de contrôle que vous pouvez utiliser pour créer des interfaces utilisateur riches dotées de. Certains contrôles sont conçus pour l’entrée de données dans l’application, telles que <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.ComboBox> contrôles. Autres contrôles affichent des données d’application, telles que <xref:System.Windows.Forms.Label> et <xref:System.Windows.Forms.ListView>. L’espace de noms fournit également des contrôles permettant d’appeler des commandes dans l’application, telles que <xref:System.Windows.Forms.Button>. Le <xref:System.Windows.Forms.WebBrowser> contrôle et gérés comme des classes HTML, <xref:System.Windows.Forms.HtmlDocument>, laissez afficher et de manipuler des pages HTML dans votre application Windows Forms managée. Le <xref:System.Windows.Forms.MaskedTextBox> contrôle est un contrôle d’entrée avancée des données qui vous permet de définir automatiquement les masques accepter ou rejeter l’entrée d’utilisateur. En outre, vous pouvez utiliser la <xref:System.Windows.Forms.PropertyGrid> contrôle à créer votre propre concepteur Windows Forms qui affiche les propriétés visible par le Concepteur de contrôles.|  
|-La disposition|Plusieurs classes importants dans les Windows Forms permettent de contrôler la disposition des contrôles sur une surface d’affichage, tel qu’un formulaire ou contrôle. <xref:System.Windows.Forms.FlowLayoutPanel> tous les contrôles qu’il contient en série, est disposé et <xref:System.Windows.Forms.TableLayoutPanel> vous permet de définir des cellules et des lignes pour la disposition des contrôles dans une grille fixe. <xref:System.Windows.Forms.SplitContainer> divise votre surface d’affichage en deux parties ou plus réglables.|  
|-Les données et la liaison de données|Windows Forms définit une architecture complète pour la liaison à des données sources telles que les bases de données et les fichiers XML. Le <xref:System.Windows.Forms.DataGridView> contrôle fournit une table personnalisable pour l’affichage des données et vous permet de personnaliser des cellules, lignes, colonnes et les bordures. Le <xref:System.Windows.Forms.BindingNavigator> contrôle représente une méthode normalisée pour accéder et utiliser les données sur un formulaire ; <xref:System.Windows.Forms.BindingNavigator> est souvent associée à la <xref:System.Windows.Forms.BindingSource> contrôle pour parcourir les enregistrements de données sur un formulaire et interagir avec eux.|  
|-Les composants|Outre les contrôles, les <xref:System.Windows.Forms> espace de noms fournit d’autres classes qui ne dérivent pas de la <xref:System.Windows.Forms.Control> classe mais fournissent des fonctionnalités visuelles à une application Windows. Certaines classes, telles que <xref:System.Windows.Forms.ToolTip> et <xref:System.Windows.Forms.ErrorProvider>, étendent les possibilités ou fournissent des informations à l’utilisateur. Avec la <xref:System.Windows.Forms.Help> et <xref:System.Windows.Forms.HelpProvider> classes, vous pouvez afficher des informations d’aide pour un utilisateur de vos applications.|  
|-Boîtes de dialogue communes|Windows fournit plusieurs boîtes de dialogue communes que vous pouvez utiliser pour permettre à votre application une interface utilisateur cohérente lors de l’exécution des tâches telles que l’ouverture et de l’enregistrement de fichiers, de manipulation de la couleur de police ou du texte ou de l’impression. Le <xref:System.Windows.Forms.OpenFileDialog> et <xref:System.Windows.Forms.SaveFileDialog> classes fournissent les fonctionnalités pour afficher une boîte de dialogue qui permet à l’utilisateur localiser et entrez le nom d’un fichier à ouvrir ou enregistrer. Le <xref:System.Windows.Forms.FontDialog> classe affiche une boîte de dialogue pour modifier les éléments de la <xref:System.Drawing.Font> utilisé par votre application. Le <xref:System.Windows.Forms.PageSetupDialog>, <xref:System.Windows.Forms.PrintPreviewDialog>, et <xref:System.Windows.Forms.PrintDialog> classes affichent des boîtes de dialogue qui permettent aux utilisateurs de contrôler divers aspects de l’impression de documents. Pour plus d’informations sur l’impression à partir d’une application Windows, consultez le <xref:System.Drawing.Printing> espace de noms. Outre les boîtes de dialogue communes, la <xref:System.Windows.Forms> espace de noms fournit la <xref:System.Windows.Forms.MessageBox> classe pour l’affichage d’une boîte de message qui peut afficher et récupérer des données à partir de l’utilisateur.|  
  
 Il existe plusieurs classes dans le <xref:System.Windows.Forms> espace de noms qui prennent en charge pour les classes mentionnées dans le résumé précédent. Parmi les classes de prise en charge est les énumérations, les classes d’argument d’événement et les délégués utilisés par les événements dans les contrôles et composants.  
  
> [!CAUTION]
>  Les classes dans l’espace de noms Windows Forms ne sont pas pris en charge pour une utilisation dans un service Windows. Essaie d’utiliser ces classes à partir d’un service peut générer des problèmes inattendus, tels que les exceptions de performances et d’exécution du service diminué.  
>   
>  Si vous utilisez la version 1.1 du .NET Framework ou .NET Framework 1.0 et que vous devez apporter votre application Windows Forms prennent en charge les styles visuels Windows XP, assurez-vous que vous définissez la `FlatStyle` propriété de vos contrôles <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> et incluez un manifeste avec votre fichier exécutable. Un manifeste est un fichier XML qui est inclus en tant que ressource dans le fichier exécutable de votre application ou dans un fichier séparé qui réside dans le même répertoire que le fichier exécutable. Pour obtenir un exemple de manifeste, consultez la section exemple de la <xref:System.Windows.Forms.FlatStyle> énumération. Pour plus d’informations sur l’utilisation des styles visuels disponibles dans Windows XP, consultez « À l’aide de Windows XP Visual Styles dans l’utilisateur Interface conception et développement » dans MSDN Library. Par défaut, les styles visuels sont activés pour les versions de .NET Framework 1.1, 1.2 et 2.0.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>