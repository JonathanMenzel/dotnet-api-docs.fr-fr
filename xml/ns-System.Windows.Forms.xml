<Namespace Name="System.Windows.Forms">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de3d7b337699f794b1d27959727821d8e228cf48" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30737223" /></Metadata><Docs>
    <summary>L'espace de noms <see cref="N:System.Windows.Forms" /> contient des classes permettant la création d'applications Windows qui tirent parti des fonctionnalités d'interface utilisateur évoluées disponibles dans le système d'exploitation Microsoft Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant présente les classes de <xref:System.Windows.Forms> espace de noms regroupées en catégories.  
  
|Catégorie de classe|Détails|  
|--------------------|-------------|  
|-Contrôle, contrôle utilisateur et le formulaire|La plupart des classes dans le <xref:System.Windows.Forms> dérivent de l’espace de noms le <xref:System.Windows.Forms.Control> classe. Le <xref:System.Windows.Forms.Control> classe fournit les fonctionnalités de base pour tous les contrôles qui sont affichés sur un <xref:System.Windows.Forms.Form>. Le <xref:System.Windows.Forms.Form> classe représente une fenêtre dans une application. Cela inclut les boîtes de dialogue non modales windows et windows client et le parent d’Interface multidocument (MDI, Multiple Document Interface). Vous pouvez également créer vos propres contrôles en dérivant la <xref:System.Windows.Forms.UserControl> classe.|  
|-Menus et barres d’outils|Windows Forms contient un ensemble rich de classes pour créer vos propres barres d’outils personnalisées et les menus avec apparence moderne et le comportement (aspect). <xref:System.Windows.Forms.ToolStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ContextMenuStrip>, et <xref:System.Windows.Forms.StatusStrip> peut être utilisé pour créer des barres d’outils, des barres de menus, des menus contextuels et des barres d’état, respectivement.|  
|-Contrôles|Le <xref:System.Windows.Forms> espace de noms fournit une variété de classes de contrôle que vous pouvez utiliser pour créer des interfaces utilisateur riches. Certains contrôles sont conçus pour l’entrée de données dans l’application, tel que <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.ComboBox> contrôles. Autres contrôles affichent des données d’application, tel que <xref:System.Windows.Forms.Label> et <xref:System.Windows.Forms.ListView>. L’espace de noms fournit également des contrôles pour appeler des commandes dans l’application, tel que <xref:System.Windows.Forms.Button>. Le <xref:System.Windows.Forms.WebBrowser> contrôle et gérés comme des classes HTML, <xref:System.Windows.Forms.HtmlDocument>, laissez afficher et de manipuler des pages HTML dans votre application Windows Forms managée. Le <xref:System.Windows.Forms.MaskedTextBox> contrôle est un contrôle d’entrée avancée des données qui vous permet de définir automatiquement les masques d’accepter ou rejeter l’entrée d’utilisateur. En outre, vous pouvez utiliser la <xref:System.Windows.Forms.PropertyGrid> contrôle à créer votre propre concepteur de formulaires Windows qui affiche les propriétés visible par le Concepteur de contrôles.|  
|-Mise en page|Plusieurs classes importantes dans les Windows Forms permettent le contrôle la disposition des contrôles sur une surface d’affichage, tel qu’un formulaire ou contrôle. <xref:System.Windows.Forms.FlowLayoutPanel> dispose de tous les contrôles qu’il contient en série, et <xref:System.Windows.Forms.TableLayoutPanel> vous permet de définir des cellules et des lignes pour la disposition des contrôles dans une grille fixe. <xref:System.Windows.Forms.SplitContainer> divise votre surface d’affichage en deux ou plusieurs parties réglables.|  
|-Les données et la liaison de données|Windows Forms définit une architecture complète pour la liaison aux données de sources telles que les bases de données et des fichiers XML. Le <xref:System.Windows.Forms.DataGridView> contrôle fournit une table personnalisable pour l’affichage des données et vous permet de personnaliser des cellules, lignes, colonnes et les bordures. Le <xref:System.Windows.Forms.BindingNavigator> contrôle représente une méthode normalisée pour accéder et utiliser les données dans un formulaire. <xref:System.Windows.Forms.BindingNavigator> est souvent associée à la <xref:System.Windows.Forms.BindingSource> contrôle pour parcourir les enregistrements de données sur un formulaire et interagir avec eux.|  
|-Composants|Outre les contrôles, le <xref:System.Windows.Forms> espace de noms fournit d’autres classes qui ne dérivent pas de la <xref:System.Windows.Forms.Control> classe mais fournissent des fonctionnalités visuelles à une application basée sur Windows. Certaines classes, telles que <xref:System.Windows.Forms.ToolTip> et <xref:System.Windows.Forms.ErrorProvider>, étendre les fonctionnalités ou fournir des informations à l’utilisateur. Avec le <xref:System.Windows.Forms.Help> et <xref:System.Windows.Forms.HelpProvider> classes, vous pouvez afficher des informations d’aide pour un utilisateur de vos applications.|  
|-Boîtes de dialogue communes|Windows fournit plusieurs boîtes de dialogue communes que vous pouvez utiliser pour donner à votre application une interface utilisateur cohérente lors de l’exécution des tâches telles que l’ouverture et de l’enregistrement de fichiers, de manipulation de la couleur de police ou du texte ou de l’impression. Le <xref:System.Windows.Forms.OpenFileDialog> et <xref:System.Windows.Forms.SaveFileDialog> classes fournissent des fonctionnalités pour afficher une boîte de dialogue qui permet à l’utilisateur de localiser et entrez le nom d’un fichier à ouvrir ou enregistrer. Le <xref:System.Windows.Forms.FontDialog> classe affiche une boîte de dialogue pour modifier les éléments de la <xref:System.Drawing.Font> utilisé par votre application. Le <xref:System.Windows.Forms.PageSetupDialog>, <xref:System.Windows.Forms.PrintPreviewDialog>, et <xref:System.Windows.Forms.PrintDialog> classes affichent des boîtes de dialogue qui permettent aux utilisateurs de contrôler divers aspects de l’impression de documents. Pour plus d’informations sur l’impression à partir d’une application basée sur Windows, consultez le <xref:System.Drawing.Printing> espace de noms. Outre les boîtes de dialogue courantes, le <xref:System.Windows.Forms> espace de noms fournit la <xref:System.Windows.Forms.MessageBox> classe pour l’affichage d’une boîte de message qui peut afficher et récupérer des données à partir de l’utilisateur.|  
  
 Il existe plusieurs classes dans le <xref:System.Windows.Forms> espace de noms qui prennent en charge pour les classes mentionnées dans le résumé précédent. Exemples des classes de prise en charge sont les énumérations, les classes d’arguments d’événement et les délégués utilisés par les événements dans les contrôles et composants.  
  
> [!CAUTION]
>  Classes dans l’espace de noms Windows Forms ne sont pas prises en charge pour une utilisation dans un service Windows. Essaie d’utiliser ces classes à partir d’un service peut produire des problèmes inattendus, tels que les exceptions de performances et d’exécution du service diminuée.  
>   
>  Si vous utilisez .NET Framework version 1.1 ou .NET Framework 1.0 et que vous devez apporter votre application Windows Forms prennent en charge les styles visuels Windows XP, assurez-vous que vous avez défini le `FlatStyle` propriété de vos contrôles à <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> et inclure un manifeste avec votre fichier exécutable. Un manifeste est un fichier XML qui est inclus en tant que ressource dans votre fichier exécutable d’application ou dans un fichier distinct qui réside dans le même répertoire que le fichier exécutable. Pour obtenir un exemple de manifeste, consultez la section exemple pour le <xref:System.Windows.Forms.FlatStyle> énumération. Pour plus d’informations sur l’utilisation des styles visuels disponibles dans Windows XP, consultez « À l’aide de Windows XP Visual Styles dans l’utilisateur Interface conception et développement » dans MSDN Library. Par défaut, les styles visuels sont activés pour les versions de .NET Framework 1.1, 1.2 et 2.0.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>