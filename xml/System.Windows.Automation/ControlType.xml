<Type Name="ControlType" FullName="System.Windows.Automation.ControlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5aea99bc74e436c26b653799aebaa535acd5d042" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51929773" /></Metadata><TypeSignature Language="C#" Value="public class ControlType : System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlType extends System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ControlType" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlType&#xA;Inherits AutomationIdentifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlType : System::Windows::Automation::AutomationIdentifier" />
  <TypeSignature Language="F#" Value="type ControlType = class&#xA;    inherit AutomationIdentifier" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.AutomationIdentifier</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Identifie le type d’un contrôle d’interface utilisateur (IU).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType> hérite de <xref:System.Windows.Automation.AutomationIdentifier> et est utilisé pour identifier le type d’un contrôle représenté par un <xref:System.Windows.Automation.AutomationElement>. Le type de contrôle est déterminé par le développeur du fournisseur UI Automation.  
  
 Cette classe contient des champs statiques, qui sont eux-mêmes <xref:System.Windows.Automation.ControlType> objets, pour identifier les types standards de contrôles. Il existe également un <xref:System.Windows.Automation.ControlType.Custom> type pour les contrôles qui ne correspondent pas à un des types définis.  
  
 Le seul cas où le type de contrôle d’un contrôle peut changer au moment de l’exécution est où le contrôle prend en charge <xref:System.Windows.Automation.MultipleViewPattern>. Par exemple, le [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] liste vue, ce qui peut être un <xref:System.Windows.Automation.ControlType.DataGrid> ou <xref:System.Windows.Automation.ControlType.List>, en fonction de la vue actuelle.  
  
 Types de contrôle n’ont pas d’équivalence-à-un avec les modèles de contrôle. Un contrôle peut être de type qu’un seul, mais il peut prendre en charge plusieurs modèles ou aucun modèle du tout, en fonction de ses fonctionnalités spécifiques.  
  
 Pour plus d’informations sur les différents types de contrôles, consultez [UI Automation Control Types](~/docs/framework/ui-automation/ui-automation-control-types.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/75159ef8-bd43-4d13-acb7-1f1fe9253160">Vue d'ensemble des types de contrôle UI Automation</related>
  </Docs>
  <Members>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Button;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Button" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Button" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Button As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Button;" />
      <MemberSignature Language="F#" Value=" staticval mutable Button : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Button" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle bouton.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Boutons effectuent une action unique d’un clic.  
  
 Un bouton peut être utilisé comme contrôle autonome ou en tant que sous-contrôle dans un autre type de contrôle. Par exemple, la flèche de déroulement dans un contrôle de zone de liste déroulante est un bouton. Lorsqu’il est utilisé en tant que sous-contrôle, un bouton est dans l’affichage de contrôle de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] arborescence (pas dans l’affichage de contenu).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/057c983a-da83-4c50-86c7-26fe381076a6">Prise en charge d'UI Automation pour le type de contrôle Button</related>
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Calendar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Calendar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Calendar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Calendar;" />
      <MemberSignature Language="F#" Value=" staticval mutable Calendar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Calendar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle calendrier, tel qu'un sélecteur de dates.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e91a7393-a7f9-4838-a1a6-857438b24bc9">Prise en charge d'UI Automation pour le type de contrôle Calendar</related>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType CheckBox;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType CheckBox" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.CheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckBox As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ CheckBox;" />
      <MemberSignature Language="F#" Value=" staticval mutable CheckBox : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.CheckBox" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle case à cocher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une case à cocher peut être utilisé comme contrôle autonome ou en tant que sous-contrôle dans un autre type de contrôle.  Par exemple, une case à cocher au début d’une ligne dans un contrôle de grille qui permet de sélectionner la ligne (utilisée pour manipuler le contenu) apparaît dans l’affichage de contrôle mais pas dans l’affichage du contenu. Toutefois, une case à cocher étiquetée dans un formulaire qui représente des données est dans les vues de contenu et le contrôle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9c2a0e70-3a39-4ba9-96ea-a7fe531fae9f">Prise en charge d'UI Automation pour le type de contrôle CheckBox</related>
      </Docs>
    </Member>
    <Member MemberName="ComboBox">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ComboBox;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ComboBox" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ComboBox" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ComboBox As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ComboBox;" />
      <MemberSignature Language="F#" Value=" staticval mutable ComboBox : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ComboBox" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle zone de liste déroulante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il existe deux variantes de contrôles de zone de liste déroulante. Une zone de liste déroulante simple présente une liste à partir de l’utilisateur peut sélectionner. Une zone de liste déroulante modifiable présente une liste de choix et possède également une zone de texte modifiable dans laquelle un utilisateur peut taper un choix au lieu d’être limité à la sélection parmi les choix dans la liste.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bb321126-4770-41da-983a-67b7b89d45dd">Prise en charge d'UI Automation pour le type de contrôle ComboBox</related>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Custom;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Custom" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Custom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Custom As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Custom;" />
      <MemberSignature Language="F#" Value=" staticval mutable Custom : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle qui n’est pas l’un des types de contrôles définis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Automation.ControlType.Custom> type de contrôle indique un contrôle qui n’est pas identifié comme l’un des types de contrôles prédéfinis (tels que <xref:System.Windows.Automation.ControlType.Button> ou <xref:System.Windows.Automation.ControlType.Calendar>).  
  
 Les développeurs de contrôles doivent vérifier les autres types de contrôle avant de désigner leur contrôle comme un <xref:System.Windows.Automation.ControlType.Custom> contrôlent le type de s’assurer que leur contrôle ne fournit pas les mêmes fonctionnalités qu’un des types de contrôles définis.  
  
 Un <xref:System.Windows.Automation.ControlType.Custom> type de contrôle nécessite un travail supplémentaire pour le fournisseur implémenter [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]. En outre, les produits du client UI Automation ne sera pas en mesure d’anticiper la structure de contrôle, interaction du clavier et les modèles de contrôle possibles en fonction du type de contrôle du contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataGrid">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType DataGrid;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType DataGrid" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.DataGrid" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataGrid As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ DataGrid;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataGrid : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.DataGrid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de grille de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque les cellules contiennent uniquement du texte, le type de contrôle doit être <xref:System.Windows.Automation.ControlType.Table>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a3db4a3f-feb5-4e5f-9b42-aae7fa816e8a">Prise en charge d'UI Automation pour le type de contrôle DataGrid</related>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType DataItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType DataItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ DataItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.DataItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'élément de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.DataItem> est un élément complex qui peut contenir de nombreux autres contrôles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/181708fd-2595-4c43-9abd-75811627d64c">Prise en charge d'UI Automation pour le type de contrôle DataItem</related>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Document;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Document" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Document" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Document As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Document;" />
      <MemberSignature Language="F#" Value=" staticval mutable Document : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Document" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle document.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un document contient le contenu de texte de plusieurs lignes.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a79d594b-1ca0-4543-8dac-afd2c645201d">Prise en charge d'UI Automation pour le type de contrôle Document</related>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Edit;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Edit" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Edit As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Edit;" />
      <MemberSignature Language="F#" Value=" staticval mutable Edit : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Edit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'édition, tel qu'une zone de texte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Edit> contrôle peut être utilisé comme contrôle autonome ou en tant que sous-contrôle dans un autre type de contrôle.  Par exemple, la zone dans laquelle un utilisateur peut taper une valeur dans un contrôle combo box est une <xref:System.Windows.Automation.ControlType.Edit> contrôle, et dans ce cas le contrôle n’est pas partie de l’affichage du contenu.  
  
 <xref:System.Windows.Automation.ControlType.Edit> contrôles peuvent également représenter des contrôles qui contiennent les mots de passe. Le <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword%2A> propriété permet à des produits tels que les lecteurs d’écran de savoir s’il faut afficher le contenu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6db9d231-c0a0-4e17-910e-ac80357f774f">Prise en charge d'UI Automation pour le type de contrôle Edit</related>
      </Docs>
    </Member>
    <Member MemberName="GetNeverSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetNeverSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetNeverSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetNeverSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNeverSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetNeverSupportedPatterns();" />
      <MemberSignature Language="F#" Value="member this.GetNeverSupportedPatterns : unit -&gt; System.Windows.Automation.AutomationPattern[]" Usage="controlType.GetNeverSupportedPatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les identificateurs de modèle qui ne sont pas pris en charge par le type de contrôle.</summary>
        <returns>Tableau d’identificateurs de modèle [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile pour les clients UI Automation telles que des infrastructures de tests pour une implémentation de fournisseur qui doivent rechercher tous les modèles de contrôle qui ne sont pas autorisées sur ce type de contrôle.  
  
   
  
## Examples  
 L’exemple suivant appelle <xref:System.Windows.Automation.ControlType.GetNeverSupportedPatterns%2A> sur tous les types de <xref:System.Windows.Automation.ControlType> contenus sous la forme d’un champ statique dans la <xref:System.Windows.Automation.ControlType> classe.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredPatternSets">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[][] GetRequiredPatternSets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[][] GetRequiredPatternSets() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetRequiredPatternSets" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredPatternSets () As AutomationPattern()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^&gt; ^ GetRequiredPatternSets();" />
      <MemberSignature Language="F#" Value="member this.GetRequiredPatternSets : unit -&gt; System.Windows.Automation.AutomationPattern[][]" Usage="controlType.GetRequiredPatternSets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un tableau d’ensembles de modèles requis.</summary>
        <returns>Tableau d’ensembles de modèles requis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque élément du tableau contient un tableau de modèles, et chaque élément qui possède ce type de contrôle doit prendre en charge au moins un de ces tableaux.  
  
 Cette méthode est utile pour les clients UI Automation doivent se trouver tous les modèles possibles, telles que le test des infrastructures pour l’implémentation d’un fournisseur.  
  
   
  
## Examples  
 L’exemple suivant appelle <xref:System.Windows.Automation.ControlType.GetRequiredPatternSets%2A> sur tous les types de <xref:System.Windows.Automation.ControlType> contenus sous la forme d’un champ statique dans la <xref:System.Windows.Automation.ControlType> classe.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetRequiredProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetRequiredProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetRequiredProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetRequiredProperties();" />
      <MemberSignature Language="F#" Value="member this.GetRequiredProperties : unit -&gt; System.Windows.Automation.AutomationProperty[]" Usage="controlType.GetRequiredProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un tableau d’[!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)] de propriété obligatoires pour ce type de contrôle.</summary>
        <returns>Tableau d’[!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)] de propriété.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile pour les clients UI Automation doivent se trouver toutes les propriétés possibles, telles que le test des infrastructures pour l’implémentation d’un fournisseur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Group;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Group" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Group" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Group As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Group;" />
      <MemberSignature Language="F#" Value=" staticval mutable Group : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Group" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de groupe, qui joue le rôle de conteneur pour d'autres contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un groupe est un contrôle conteneur qui contient différents types de contrôle et est utilisé pour associer ces contrôles de façon logique.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/18e01bab-01f8-4567-b867-88dce9c4a435">Prise en charge d'UI Automation pour le type de contrôle Group</related>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Header;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Header" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Header" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Header As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Header;" />
      <MemberSignature Language="F#" Value=" staticval mutable Header : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Header" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle header, qui est un conteneur pour les étiquettes des lignes et des colonnes d'informations.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2e48891-2dbe-409e-8655-2f753908e29b">Prise en charge d'UI Automation pour le type de contrôle Header</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType HeaderItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType HeaderItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.HeaderItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ HeaderItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.HeaderItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un élément d'en-tête, qui est l'étiquette pour une ligne ou une colonne d'informations.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/09ce1310-ee31-493c-a71e-010bafc42fcf">Prise en charge d'UI Automation pour le type de contrôle HeaderItem</related>
      </Docs>
    </Member>
    <Member MemberName="Hyperlink">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Hyperlink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Hyperlink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Hyperlink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Hyperlink As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Hyperlink;" />
      <MemberSignature Language="F#" Value=" staticval mutable Hyperlink : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Hyperlink" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de lien hypertexte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle de lien hypertexte accède à une certaine [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] lorsqu’un utilisateur clique sur le contrôle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/110cceea-5932-4955-a1a6-13afc51422b2">Prise en charge d'UI Automation pour le type de contrôle Hyperlink</related>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Image;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Image" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Image" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Image As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Image;" />
      <MemberSignature Language="F#" Value=" staticval mutable Image : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Image" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle Image.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Image> type de contrôle peut être utilisé comme contrôle autonome ou en tant que sous-contrôle dans un autre type de contrôle.  Par exemple, un bouton peut utiliser une image plutôt que du texte pour indiquer ses fonctionnalités à l’utilisateur.  
  
 Lorsqu’il est utilisé uniquement à des fins décoratives, une image apparaît dans l’affichage de contrôle de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] arborescence (pas dans l’affichage de contenu).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/4e0eeefb-e09b-46d2-b83b-0a7e35543ab8">Prise en charge d'UI Automation pour le type de contrôle Image</related>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType List;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType List" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.List" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly List As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ List;" />
      <MemberSignature Language="F#" Value=" staticval mutable List : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.List" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle liste, tel qu'une zone de liste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.List> est un type de contrôle qui contient <xref:System.Windows.Automation.ControlType.ListItem> et (éventuellement) <xref:System.Windows.Automation.ControlType.Group> types de contrôle.  
  
 Un <xref:System.Windows.Automation.ControlType.List> contrôle peut être utilisé comme contrôle autonome ou en tant que sous-contrôle dans un autre type de contrôle. Par exemple, une zone de liste modifiable a un <xref:System.Windows.Automation.ControlType.List> contrôle qui contient des choix qui apparaissent lorsque l’utilisateur clique sur le bouton de liste déroulante. Lorsqu’il est utilisé en tant que sous-contrôle, un <xref:System.Windows.Automation.ControlType.List> est uniquement dans l’affichage de contrôle de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] arborescence (et non dans l’affichage de contenu).  
  
 Lorsqu’il est utilisé en tant que sous-contrôle, un <xref:System.Windows.Automation.ControlType.List> n’a pas un `Name` propriété affectée.  
  
 Un <xref:System.Windows.Automation.ControlType.List> peut contenir <xref:System.Windows.Automation.ControlType.DataItem> contrôles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0e959fcb-50f2-413b-948d-7167d279bc11">Prise en charge d'UI Automation pour le type de contrôle List</related>
      </Docs>
    </Member>
    <Member MemberName="ListItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ListItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ListItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ListItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ListItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ListItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable ListItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ListItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'élément de liste, qui est un élément enfant d'un contrôle liste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Header> peut également être un enfant d’un contrôle de liste.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/34f533bf-fc14-4e78-8fee-fb7107345fab">Prise en charge d'UI Automation pour le type de contrôle ListItem</related>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ControlType.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalizedControlType : string" Usage="System.Windows.Automation.ControlType.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une description du type de contrôle.</summary>
        <value>Description localisée du type de contrôle, par exemple “bouton”.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dans l’exemple suivant, tous les types de contrôle sont recherchés par réflexion et leurs <xref:System.Windows.Automation.ControlType.LocalizedControlType%2A> propriétés sont générées, ainsi que d’autres informations.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupById">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.ControlType LookupById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.ControlType LookupById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.LookupById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LookupById (id As Integer) As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::ControlType ^ LookupById(int id);" />
      <MemberSignature Language="F#" Value="static member LookupById : int -&gt; System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.LookupById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Identificateur du type de contrôle.</param>
        <summary>Récupère un <see cref="T:System.Windows.Automation.ControlType" /> qui encapsule un identificateur numérique spécifié.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalement, le type d’un contrôle est identifié par un <xref:System.Windows.Automation.ControlType> objet. Cette méthode vous permet de construire un tel objet lorsque seul l’identificateur numérique est connu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Menu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Menu" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Menu As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Menu;" />
      <MemberSignature Language="F#" Value=" staticval mutable Menu : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Menu" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de menu, tel qu'un menu du niveau supérieur dans une fenêtre d'application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un menu est un conteneur pour une collection d’éléments de menu ; par exemple, le contrôle qui apparaît sous **fichier** lorsque vous cliquez dessus et qui contient **New**, **Open**, et ainsi de suite.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/016323cb-f800-4938-b77b-2eb25d646090">Prise en charge d'UI Automation pour le type de contrôle Menu</related>
      </Docs>
    </Member>
    <Member MemberName="MenuBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType MenuBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType MenuBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.MenuBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ MenuBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.MenuBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de barre de menus, qui contient généralement un ensemble de menus de niveau supérieur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.MenuBar> type de contrôle représente le conteneur de l’ensemble des menus de niveau supérieur d’une application.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c1202b21-c1f0-4560-853c-7b99bd73ad97">Prise en charge d'UI Automation pour le type de contrôle MenuBar</related>
      </Docs>
    </Member>
    <Member MemberName="MenuItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType MenuItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType MenuItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.MenuItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ MenuItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.MenuItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'élément de menu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.MenuItem> est un enfant d’un <xref:System.Windows.Automation.ControlType.Menu> ou <xref:System.Windows.Automation.ControlType.MenuBar> contrôle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/54bce311-3d23-40b9-ba90-1bdbdaf8fbba">Prise en charge d'UI Automation pour le type de contrôle MenuItem</related>
      </Docs>
    </Member>
    <Member MemberName="Pane">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Pane;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Pane" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Pane" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pane As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Pane;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pane : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Pane" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de volet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Pane> est utilisé pour séparer visuellement du contenu dans un <xref:System.Windows.Automation.ControlType.Window>. En règle générale, l’utilisateur navigue entre les volets en appuyant sur TAB, F6 ou CTRL + TAB, en fonction du contexte.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79761191-4449-4630-899c-9cbdb8867d3f">Prise en charge d'UI Automation pour le type de contrôle Pane</related>
      </Docs>
    </Member>
    <Member MemberName="ProgressBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ProgressBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ProgressBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ProgressBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ProgressBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ProgressBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de barre de progression, qui indique visuellement la progression d'une longue opération.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/302e778c-24b0-4789-814a-c8d37cf53a5f">Prise en charge d'UI Automation pour le type de contrôle ProgressBar</related>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType RadioButton;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType RadioButton" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.RadioButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RadioButton As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ RadioButton;" />
      <MemberSignature Language="F#" Value=" staticval mutable RadioButton : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.RadioButton" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle case d'option, qui est un mécanisme de sélection autorisant la sélection d'un seul élément dans un groupe.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/87170464-7857-41f1-bcf7-bb41be31cb53">Prise en charge d'UI Automation pour le type de contrôle RadioButton</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ScrollBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ScrollBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScrollBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ScrollBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScrollBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ScrollBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de barre de défilement, tel qu'une barre de défilement dans une fenêtre d'application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.ScrollBar> type de contrôle contient un ensemble de boutons et un contrôle thumb qui permettent à un utilisateur à l’aide de la souris pour faire défiler le contenu d’un conteneur de fenêtre ou un élément.  
  
 Utilisez le <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> propriété faire la distinction entre les <xref:System.Windows.Automation.ControlType.Button> éléments qui correspondent aux boutons grand incrément, de grand décrément, de petit incrément et de petit décrément.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/329891d7-b609-49e6-920a-09ea8a627d07">Prise en charge d'UI Automation pour le type de contrôle ScrollBar</related>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Separator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Separator" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Separator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Separator As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Separator;" />
      <MemberSignature Language="F#" Value=" staticval mutable Separator : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Separator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un séparateur, qui crée une séparation visuelle dans des contrôles tels que des menus et des barres d'outils.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89f42247-c699-4afa-91e1-2baaf0d86c9d">Prise en charge d'UI Automation pour le type de contrôle Separator</related>
      </Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Slider;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Slider" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Slider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Slider As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Slider;" />
      <MemberSignature Language="F#" Value=" staticval mutable Slider : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Slider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle Slider.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Slider> type de contrôle se compose d’un ensemble de boutons associés à un <xref:System.Windows.Automation.ControlType.Edit> contrôle qui permettent à un utilisateur de sélectionner à partir d’un ensemble d’éléments ou de définir une valeur numérique à partir d’une plage.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/045ea62f-7b50-46cf-a5a9-8eb97704355f">Prise en charge d'UI Automation pour le type de contrôle Slider</related>
      </Docs>
    </Member>
    <Member MemberName="Spinner">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Spinner;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Spinner" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Spinner" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Spinner As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Spinner;" />
      <MemberSignature Language="F#" Value=" staticval mutable Spinner : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Spinner" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle Spinner.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Spinner> type de contrôle se compose d’un ensemble de boutons qui permettent aux utilisateurs de sélectionner un jeu d’éléments ou de définir une valeur numérique à partir d’une plage.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/3a29d185-65d8-42e3-bcc3-7f43e96f40c5">Prise en charge d'UI Automation pour le type de contrôle Spinner</related>
      </Docs>
    </Member>
    <Member MemberName="SplitButton">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType SplitButton;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType SplitButton" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.SplitButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SplitButton As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ SplitButton;" />
      <MemberSignature Language="F#" Value=" staticval mutable SplitButton : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.SplitButton" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un bouton partagé, qui est un bouton qui exécute une action par défaut et qui peut également se développer pour afficher une liste d'autres actions possibles.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/14b05ccf-bcd8-4045-9bae-f7679cd98711">Prise en charge d'UI Automation pour le type de contrôle SplitButton</related>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType StatusBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType StatusBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StatusBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ StatusBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable StatusBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.StatusBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle de barre d'état.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType.StatusBar> types de contrôle sont généralement sous-contrôles de <xref:System.Windows.Automation.ControlType.Window> type de contrôle [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] éléments.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/48dee94a-5119-4939-a4c7-ffeaf794c732">Prise en charge d'UI Automation pour le type de contrôle StatusBar</related>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Tab;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Tab" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Tab" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tab As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Tab;" />
      <MemberSignature Language="F#" Value=" staticval mutable Tab : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Tab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle onglet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Tab> est un type de contrôle qui contient au moins un <xref:System.Windows.Automation.ControlType.TabItem> contrôle enfant.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f8be2732-836d-4e4d-85e2-73aa39479bf4">Prise en charge d'UI Automation pour le type de contrôle Tab</related>
      </Docs>
    </Member>
    <Member MemberName="TabItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TabItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TabItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TabItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TabItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TabItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable TabItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.TabItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'élément d'onglet, qui représente une page d'un contrôle onglet.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9b21160d-e1c2-468b-9275-26e4369ae40d">Prise en charge d'UI Automation pour le type de contrôle TabItem</related>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Table;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Table" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Table" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Table As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Table;" />
      <MemberSignature Language="F#" Value=" staticval mutable Table : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie une table.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Table> type de contrôle est similaire à un <xref:System.Windows.Automation.ControlType.DataGrid> mais contient uniquement du texte. Peuvent également contenir des tables <xref:System.Windows.Automation.ControlType.Header> types de contrôle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9050dde5-6469-4c83-abb7-f861c24ff985">Prise en charge d'UI Automation pour le type de contrôle Table</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Text;" />
      <MemberSignature Language="F#" Value=" staticval mutable Text : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Text" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'édition, tel qu'une zone de texte ou une zone de texte enrichi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Automation.ControlType.Text> contrôle peut être utilisé comme contrôle autonome, comme un <xref:System.Windows.Automation.ControlType.Edit> contrôle, ou en tant que sous-composant, telles que la zone d’un <xref:System.Windows.Automation.ControlType.ComboBox> dans laquelle un utilisateur peut taper une valeur.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab0d0ada-8a71-4547-9c03-aadf675938f2">Prise en charge d'UI Automation pour le type de contrôle Text</related>
      </Docs>
    </Member>
    <Member MemberName="Thumb">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Thumb;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Thumb" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Thumb" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Thumb As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Thumb;" />
      <MemberSignature Language="F#" Value=" staticval mutable Thumb : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Thumb" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie le contrôle d'une barre de défilement qui peut être glissé vers un emplacement différent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Thumb> contrôle est utilisé en tant que sous-contrôle dans un <xref:System.Windows.Automation.ControlType.ScrollBar> type de contrôle. En tant que sous-contrôle, un <xref:System.Windows.Automation.ControlType.Thumb> n’a pas un <xref:System.Windows.Automation.AutomationElement.NameProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/13636338-e320-4355-b071-ede20a3fb1de">Prise en charge d'UI Automation pour le type de contrôle Thumb</related>
      </Docs>
    </Member>
    <Member MemberName="TitleBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TitleBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TitleBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TitleBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TitleBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.TitleBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la barre de légende sur une fenêtre.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/3b7a4e13-0305-45d5-bc33-1f4133c50782">Prise en charge d'UI Automation pour le type de contrôle TitleBar</related>
      </Docs>
    </Member>
    <Member MemberName="ToolBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ToolBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ToolBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ToolBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ToolBar;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolBar : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ToolBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie une barre d'outils, telle que le contrôle qui contient un ensemble de boutons de commande dans une fenêtre d'application.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/85152efd-f4c5-430c-8878-3371cc598616">Prise en charge d'UI Automation pour le type de contrôle ToolBar</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ToolTip;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ToolTip" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTip As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ToolTip;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTip : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.ToolTip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'info-bulle, une fenêtre informationnelle qui apparaît en déplaçant le pointeur sur un contrôle ou quelquefois lorsque tabuler à un contrôle à l'aide du clavier.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c3779d78-3164-43ae-8dae-bfaeafffdd65">Prise en charge d'UI Automation pour le type de contrôle ToolTip</related>
      </Docs>
    </Member>
    <Member MemberName="Tree">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Tree;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Tree" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Tree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tree As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Tree;" />
      <MemberSignature Language="F#" Value=" staticval mutable Tree : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Tree" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un contrôle d'arborescence.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.Tree> type de contrôle est un conteneur pour une organisation hiérarchique de <xref:System.Windows.Automation.ControlType.TreeItem> ou <xref:System.Windows.Automation.ControlType.DataItem> types de contrôle.  
  
 Chaque nœud d’une arborescence peut contenir d’autres nœuds.  Un nœud qui contient des enfants nœuds peuvent être affichées comme développé ou réduit.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/312dd04d-a86b-4072-8b12-2beeabdff5e3">Prise en charge d’UI Automation pour le type de contrôle Tree</related>
      </Docs>
    </Member>
    <Member MemberName="TreeItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TreeItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TreeItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TreeItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TreeItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TreeItem;" />
      <MemberSignature Language="F#" Value=" staticval mutable TreeItem : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.TreeItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un nœud dans un contrôle <see cref="F:System.Windows.Automation.ControlType.TreeItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Automation.ControlType.TreeItem> type de contrôle peut être utilisé uniquement en tant que sous-contrôle d’un <xref:System.Windows.Automation.ControlType.Tree> contrôle.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/229f341a-477f-434e-b877-4db9973068eb">Prise en charge d’UI Automation pour le type de contrôle TreeItem</related>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Window;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Window" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Window" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Window As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Window;" />
      <MemberSignature Language="F#" Value=" staticval mutable Window : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.ControlType.Window" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie un frame de bordure, qui contient des objets enfants.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrôles de ce type sont toujours prendre en charge <xref:System.Windows.Automation.WindowPattern>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/53be78a6-cdcc-4af3-a464-5927d19c54e8">Prise en charge d'UI Automation pour le type de contrôle Window</related>
      </Docs>
    </Member>
  </Members>
</Type>