<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98e48264be5e4450ff222a82cc4499e0996df303" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39785731" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <TypeSignature Language="F#" Value="type CacheRequest = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2bacc-101">Spécifie les propriétés et les modèles que l’infrastructure UI Automation met en cache quand un <see cref="T:System.Windows.Automation.AutomationElement" /> est obtenu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bacc-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-102">Récupération des propriétés et des modèles via [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requiert des appels interprocessus qui peuvent ralentir les performances.</span><span class="sxs-lookup"><span data-stu-id="2bacc-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="2bacc-103">En mettant en cache les valeurs des propriétés et des modèles dans une opération par lot, vous pouvez améliorer les performances de votre application.</span><span class="sxs-lookup"><span data-stu-id="2bacc-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="2bacc-104">Créer une nouvelle demande de cache en appelant le constructeur de classe.</span><span class="sxs-lookup"><span data-stu-id="2bacc-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="2bacc-105">La requête est remplie par des appels répétés à la <xref:System.Windows.Automation.CacheRequest.Add%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2bacc-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="2bacc-106">Un seul <xref:System.Windows.Automation.CacheRequest> peut être active.</span><span class="sxs-lookup"><span data-stu-id="2bacc-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="2bacc-107">Il existe deux façons d’activer une demande :</span><span class="sxs-lookup"><span data-stu-id="2bacc-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="2bacc-108">Appeler <xref:System.Windows.Automation.CacheRequest.Activate%2A> sur la demande.</span><span class="sxs-lookup"><span data-stu-id="2bacc-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="2bacc-109">Cela envoie la requête dans la pile, et la demande est dépilée lorsque l’objet est supprimé.</span><span class="sxs-lookup"><span data-stu-id="2bacc-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="2bacc-110">Pour garantir la suppression même si une exception est levée, utilisez la valeur de retour à partir de <xref:System.Windows.Automation.CacheRequest.Activate%2A> au sein d’un `using` bloc (`Using` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2bacc-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="2bacc-111">Mettez la requête sur la pile interne en appelant <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="2bacc-112">Seule la requête située sur la pile est active et il doit être la prochaine supprimée de la pile par <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="2bacc-113">Éclatement de la demande le désactive.</span><span class="sxs-lookup"><span data-stu-id="2bacc-113">Popping the request deactivates it.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="2bacc-114"> éléments obtenus pendant que la demande est active seront ont mis en cache les valeurs pour les propriétés et les modèles spécifiés.</span><span class="sxs-lookup"><span data-stu-id="2bacc-114"> elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-115">L’exemple suivant montre comment utiliser <xref:System.Windows.Automation.CacheRequest.Activate%2A> au cache des modèles et des propriétés.</span><span class="sxs-lookup"><span data-stu-id="2bacc-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="2bacc-116">L’exemple suivant montre comment utiliser <xref:System.Windows.Automation.CacheRequest.Push%2A> et <xref:System.Windows.Automation.CacheRequest.Pop%2A> au cache des modèles et des propriétés.</span><span class="sxs-lookup"><span data-stu-id="2bacc-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-117">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-117">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-118">Quand un <xref:System.Windows.Automation.CacheRequest> est créé, le <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identificateur est ajouté en tant qu’une propriété par défaut au cache.</span><span class="sxs-lookup"><span data-stu-id="2bacc-118">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; IDisposable" Usage="cacheRequest.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-119">Définit ce <see cref="T:System.Windows.Automation.CacheRequest" /> comme spécification active pour les éléments qui sont retournés lorsqu'un <see cref="T:System.Windows.Automation.AutomationElement" /> est demandé sur le même thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-119">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bacc-120">Objet qui peut être utilisé pour supprimer <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-120">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-121">À l’aide de cette méthode est généralement préférable à l’utilisation <xref:System.Windows.Automation.CacheRequest.Push%2A> et <xref:System.Windows.Automation.CacheRequest.Pop%2A> comme un moyen de l’activation du <xref:System.Windows.Automation.CacheRequest>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-121">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="2bacc-122">L’objet est placé sur la pile lorsque <xref:System.Windows.Automation.CacheRequest.Activate%2A> est appelée et puis dépilés quand elle est supprimée.</span><span class="sxs-lookup"><span data-stu-id="2bacc-122">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="2bacc-123">Pour garantir la suppression, placez la valeur de retournée dans une `using` bloc (`Using` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2bacc-123">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-124">L’exemple suivant montre comment utiliser <xref:System.Windows.Automation.CacheRequest.Activate%2A> au cache des modèles et des propriétés.</span><span class="sxs-lookup"><span data-stu-id="2bacc-124">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-125">Ajoute un identificateur de propriété ou de modèle à un <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-125">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-126">Quand un <xref:System.Windows.Automation.CacheRequest> objet est créé, le <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identificateur est ajouté en tant qu’une propriété par défaut au cache.</span><span class="sxs-lookup"><span data-stu-id="2bacc-126">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="2bacc-127">Ajout d’un objet qui se trouve déjà dans la requête de cache n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="2bacc-127">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationPattern -&gt; unit" Usage="cacheRequest.Add pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="2bacc-128">Identificateur spécifiant un modèle à mettre en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-128">An identifier specifying a pattern to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bacc-129">Ajoute l'identificateur <see cref="T:System.Windows.Automation.AutomationPattern" /> à ce <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-129">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-130">Ajout d’un modèle qui se trouve déjà dans la requête de cache n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="2bacc-130">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-131">L’exemple suivant montre comment construire un <xref:System.Windows.Automation.CacheRequest> et ajouter un modèle à mettre en cache.</span><span class="sxs-lookup"><span data-stu-id="2bacc-131">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bacc-132">
            <see cref="T:System.Windows.Automation.CacheRequest" /> est actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-132">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationProperty -&gt; unit" Usage="cacheRequest.Add property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="2bacc-133">Identificateur spécifiant une valeur de propriété à mettre en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-133">An identifier specifying a property value to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bacc-134">Ajoute l'identificateur <see cref="T:System.Windows.Automation.AutomationProperty" /> à ce <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-134">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-135">Quand un <xref:System.Windows.Automation.CacheRequest> est créé, le <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identificateur est ajouté en tant qu’une propriété par défaut au cache.</span><span class="sxs-lookup"><span data-stu-id="2bacc-135">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="2bacc-136">Ajout d’une propriété qui se trouve déjà dans la requête de cache n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="2bacc-136">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-137">L’exemple suivant montre comment construire un <xref:System.Windows.Automation.CacheRequest> et ajoutez une propriété doit être mis en cache.</span><span class="sxs-lookup"><span data-stu-id="2bacc-137">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bacc-138">
            <see cref="T:System.Windows.Automation.CacheRequest" /> est actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-138">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationElementMode : System.Windows.Automation.AutomationElementMode with get, set" Usage="System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-139">Obtient ou définit une valeur qui spécifie si des éléments retournés doivent contenir des références complètes à l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] sous-jacente, ou uniquement des informations mises en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-139">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bacc-140">
            <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> si les éléments retournés ont une référence complète à l'[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] sous-jacente ; sinon, <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-140">
              <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-141"><xref:System.Windows.Automation.AutomationElementMode.Full> est la valeur par défaut et spécifie que les éléments retournés contiennent une référence complète à sous-jacent [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="2bacc-141"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="2bacc-142"><xref:System.Windows.Automation.AutomationElementMode.None> Spécifie que les éléments retournés n’ont aucune référence à sous-jacent [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]et contiennent uniquement des informations mises en cache.</span><span class="sxs-lookup"><span data-stu-id="2bacc-142"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="2bacc-143">Certaines opérations sur les éléments, y compris <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, et <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, requièrent une référence complète ; tente d’exécuter ces opérations sur un élément qui n’en a pas entraîne un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-143">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2bacc-144">À l’aide de <xref:System.Windows.Automation.AutomationElementMode.None> peut être plus efficace lorsque seules des propriétés sont nécessaires, car il évite les surcharges impliquées dans la configuration de références complètes.</span><span class="sxs-lookup"><span data-stu-id="2bacc-144">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-145">Dans l’exemple suivant, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> est défini sur <xref:System.Windows.Automation.AutomationElementMode.None>, avec le résultat qui uniquement propriétés mises en cache et les modèles sont disponibles pour l’objet récupéré.</span><span class="sxs-lookup"><span data-stu-id="2bacc-145">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.CacheRequest" Usage="cacheRequest.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-146">Crée une copie de ce <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-146">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bacc-147">Copie modifiable de l'objet en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-147">A modifiable copy of the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.CacheRequest" Usage="System.Windows.Automation.CacheRequest.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-148">Obtient le <see cref="T:System.Windows.Automation.CacheRequest" /> qui est actif sur le thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-148">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bacc-149">
            <see cref="T:System.Windows.Automation.CacheRequest" /> actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-149">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; unit" Usage="cacheRequest.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-150">Supprime le <see cref="T:System.Windows.Automation.CacheRequest" /> actif de la pile interne pour le thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-150">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-151">Seule la requête actuellement active peut être supprimée à l’aide de la <xref:System.Windows.Automation.CacheRequest.Pop%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2bacc-151">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="2bacc-152">Tente de supprimer une requête qui n’est pas l’actuel une lève une exception.</span><span class="sxs-lookup"><span data-stu-id="2bacc-152">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="2bacc-153">Sauf si vous imbriquez des requêtes de cache, il est préférable d’utiliser <xref:System.Windows.Automation.CacheRequest.Activate%2A> pour placer la requête sur la pile.</span><span class="sxs-lookup"><span data-stu-id="2bacc-153">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="2bacc-154">La raison est que vous pouvez utiliser <xref:System.Windows.Automation.CacheRequest.Activate%2A> au sein d’un `using` bloc (`Using` en Visual Basic), en garantissant que la requête est dépilée même si une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2bacc-154">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-155">L’exemple suivant montre comment désactiver un <xref:System.Windows.Automation.CacheRequest> à l’aide de <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-155">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bacc-156">Une tentative a été faite pour supprimer une requête de cache qui n'était pas la dernière à faire l'objet d'un push sur la pile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-156">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberSignature Language="F#" Value="member this.Push : unit -&gt; unit" Usage="cacheRequest.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-157">Place <see cref="T:System.Windows.Automation.CacheRequest" /> sur la pile d'état interne, en en faisant la requête active sur le thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-157">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-158">Plusieurs <xref:System.Windows.Automation.CacheRequest> des objets peuvent être placés dans la pile d’état.</span><span class="sxs-lookup"><span data-stu-id="2bacc-158">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="2bacc-159">Demandes de cache doivent être supprimés de la pile dans l’ordre qu’ils ont été envoyés sur ; Sinon, un <xref:System.InvalidOperationException> exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2bacc-159">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="2bacc-160">Sauf si vous imbriquez des requêtes de cache, il est préférable d’utiliser <xref:System.Windows.Automation.CacheRequest.Activate%2A> pour placer la requête sur la pile.</span><span class="sxs-lookup"><span data-stu-id="2bacc-160">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="2bacc-161">La raison est que vous pouvez utiliser <xref:System.Windows.Automation.CacheRequest.Activate%2A> au sein d’un `using` bloc (`Using` en Visual Basic), en garantissant que la requête est dépilée même si une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2bacc-161">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-162">L’exemple suivant montre comment activer un <xref:System.Windows.Automation.CacheRequest> à l’aide de <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-162">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeFilter : System.Windows.Automation.Condition with get, set" Usage="System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-163">Obtient ou définit une valeur qui spécifie l'affichage de l'arborescence des éléments [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] à utiliser lors de la mise en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-163">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bacc-164">Affichage de l'arborescence des éléments [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-164">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span>
          </span>
          <span data-ttu-id="2bacc-165">L'affichage par défaut est <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-165">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-166">Pour plus d’informations sur les vues de la [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] arborescence d’éléments, consultez [UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2bacc-166">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-167">Dans l’exemple suivant, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> a la valeur <xref:System.Windows.Automation.Automation.RawViewCondition> afin que la mise en cache est effectuée pour tous les éléments qu’il s’agisse de partie de l’affichage du contenu ou l’affichage de contrôle.</span><span class="sxs-lookup"><span data-stu-id="2bacc-167">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberSignature Language="F#" Value="member this.TreeScope : System.Windows.Automation.TreeScope with get, set" Usage="System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bacc-168">Obtient ou définit une valeur qui spécifie si la mise en cache s'effectue uniquement pour la racine du sous-arbre ou également pour ses enfants ou descendants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-168">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bacc-169">Une ou plusieurs des valeurs <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" /> ou <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-169">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          </span>
          <span data-ttu-id="2bacc-170">La valeur par défaut est <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-170">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bacc-171">L’étendue de la mise en cache est en relation avec l’ou les objets en cours d’extraction, pas par rapport à l’objet sur lequel <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> ou <xref:System.Windows.Automation.AutomationElement.FindAll%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="2bacc-171">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="2bacc-172">Consultez l’exemple.</span><span class="sxs-lookup"><span data-stu-id="2bacc-172">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bacc-173">Dans l’exemple suivant, un élément de zone de liste est obtenu à partir de l’élément de la fenêtre parent pendant un <xref:System.Windows.Automation.CacheRequest> est actif et <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> est <xref:System.Windows.Automation.TreeScope.Children>.</span><span class="sxs-lookup"><span data-stu-id="2bacc-173">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="2bacc-174">Les propriétés spécifiées des éléments enfants (autrement dit, les éléments de liste) sont stockées dans le cache et peuvent être récupérées à partir de la <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> de la zone de liste.</span><span class="sxs-lookup"><span data-stu-id="2bacc-174">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bacc-175">Une tentative a été faite d'affecter <see cref="F:System.Windows.Automation.TreeScope.Parent" /> ou <see cref="F:System.Windows.Automation.TreeScope.Ancestors" /> à la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bacc-175">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>