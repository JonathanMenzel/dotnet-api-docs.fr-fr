<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheRequest.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cba79b367856f83c772f8c7971dde04e0ee956e6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba79b367856f83c772f8c7971dde04e0ee956e6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.CacheRequest">
          <source>Specifies properties and patterns that the UI Automation framework caches when an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> is obtained.</source>
          <target state="translated">Spécifie les propriétés et les modèles que l’infrastructure UI Automation met en cache quand un <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> est obtenu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Retrieving properties and patterns through <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> requires cross-process calls that can slow down performance.</source>
          <target state="translated">La récupération des propriétés et des modèles via <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> requiert des appels interprocessus qui peuvent ralentir les performances.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</source>
          <target state="translated">En mettant en cache les valeurs des propriétés et des modèles dans un traitement par lots, vous pouvez améliorer les performances de votre application.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Create a new cache request by calling the class constructor.</source>
          <target state="translated">Créer une nouvelle demande de cache en appelant le constructeur de classe.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The request is populated by repeated calls to the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph> method.</source>
          <target state="translated">La requête est remplie par des appels à la <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Only a single <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> can be active.</source>
          <target state="translated">Un seul <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> peut être active.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>There are two ways to activate a request:</source>
          <target state="translated">Il existe deux façons d’activer une demande :</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> on the request.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> dans la demande.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>This pushes the request onto the stack, and the request is popped when the object is disposed.</source>
          <target state="translated">Cela transmet la demande dans la pile, et la requête est dépilée lorsque l’objet est supprimé.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>To ensure disposal even if an exception is raised, use the return value from <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in Visual Basic).</source>
          <target state="translated">Pour garantir la suppression même si une exception est levée, utilisez la valeur de retour à partir de <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> au sein d’un <ph id="ph2">`using`</ph> bloc (<ph id="ph3">`Using`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Put the request onto the internal stack by calling <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
          <target state="translated">Mettez la requête sur la pile interne en appelant <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Only the topmost request on the stack is active, and it must be the next one removed from the stack by <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
          <target state="translated">Seule la requête située sur la pile est active, et elle doit être la prochaine supprimée de la pile par <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Popping the request deactivates it.</source>
          <target state="translated">L’affichage de la demande le désactive.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements obtained while the request is active will have cached values for the properties and patterns specified.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> éléments obtenus pendant que la demande est active seront ont mis en cache les valeurs pour les propriétés et les modèles spécifiés.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">L’exemple suivant montre comment utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> au cache des modèles et des propriétés.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">L’exemple suivant montre comment utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> au cache des modèles et des propriétés.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.#ctor">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">Lorsqu’un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> est créé, le <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identificateur est ajouté comme propriété par défaut à mettre en cache.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>Sets this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> as the active specification for the items that are returned when an <ph id="ph2">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> is requested on the same thread.</source>
          <target state="translated">Définit ce <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> comme spécification active pour les éléments qui sont retournés lorsqu'un <ph id="ph2">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> est demandé sur le même thread.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The object that can be used to dispose the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">Objet qui peut être utilisé pour supprimer <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>Using this method is usually preferable to using <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> as a means of activating the <ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">À l’aide de cette méthode est généralement préférable d’utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> comme un moyen d’activer la <ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The object is pushed onto the stack when <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> is called, and then popped off when it is disposed.</source>
          <target state="translated">L’objet est placé sur la pile lorsque <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> est appelé et puis dépilés lorsqu’elle est supprimée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>To ensure disposal, place the return value within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in Visual Basic).</source>
          <target state="translated">Pour garantir la suppression, placez la valeur de retournée dans une <ph id="ph1">`using`</ph> bloc (<ph id="ph2">`Using`</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">L’exemple suivant montre comment utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> au cache des modèles et des propriétés.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.CacheRequest">
          <source>Adds a property or pattern identifier to a <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">Ajoute un identificateur de propriété ou de modèle à un <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> object is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">Lorsqu’un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> objet est créé, le <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identificateur est ajouté comme propriété par défaut à mettre en cache.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Adding an object that is already in the cache request has no effect.</source>
          <target state="translated">Ajout d’un objet qui existe déjà dans la requête de cache n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>An identifier specifying a pattern to cache.</source>
          <target state="translated">Identificateur spécifiant un modèle à mettre en cache.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationPattern" /&gt;</ph> identifier to this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">Ajoute l'identificateur <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationPattern" /&gt;</ph> à ce <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>Adding a pattern that is already in the cache request has no effect.</source>
          <target state="translated">Ajout d’un modèle qui se trouve déjà dans la requête de cache n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> and add a pattern to be cached.</source>
          <target state="translated">L’exemple suivant montre comment construire un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> et ajouter un modèle à mettre en cache.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> is active.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> est actif.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>An identifier specifying a property value to cache.</source>
          <target state="translated">Identificateur spécifiant une valeur de propriété à mettre en cache.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationProperty" /&gt;</ph> identifier to this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">Ajoute l'identificateur <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationProperty" /&gt;</ph> à ce <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">Lorsqu’un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> est créé, le <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identificateur est ajouté comme propriété par défaut à mettre en cache.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>Adding a property that is already in the cache request has no effect.</source>
          <target state="translated">Ajout d’une propriété qui existe déjà dans la requête de cache n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> and add a property to be cached.</source>
          <target state="translated">L’exemple suivant montre comment construire un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> et ajouter une propriété à mettre en cache.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> is active.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> est actif.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Gets or sets a value that specifies whether returned elements should contain full references to the underlying <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>, or only cached information.</source>
          <target state="translated">Obtient ou définit une valeur qui spécifie si des éléments retournés doivent contenir des références complètes à l'<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> sous-jacente, ou uniquement des informations mises en cache.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.Full" /&gt;</ph> if the returned elements have a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>; otherwise <ph id="ph3">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.Full" /&gt;</ph> si les éléments retournés ont une référence complète à l'<ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> sous-jacente ; sinon, <ph id="ph3">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> is the default value, and specifies that returned elements contain a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> est la valeur par défaut et spécifie que les éléments retournés contiennent une référence complète à sous-jacent <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> specifies that the returned elements have no reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>, and contain only cached information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> Spécifie que les éléments retournés n’ont aucune référence à l’objet sous-jacent <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>et contiennent uniquement des informations mises en cache.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Certain operations on elements, including <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>, require a full reference; attempting to perform these on an element that has none results in an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Certaines opérations sur les éléments, y compris <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>, requièrent une référence complète ; essayez d’exécuter ces opérations sur un élément qui n’en a pas entraîne une <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</source>
          <target state="translated">À l’aide de <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> peut être plus efficace lorsque seules des propriétés sont nécessaires, car cela évite la surcharge impliquée dans la définition de références complètes.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, with the result that only cached properties and patterns are available for the retrieved object.</source>
          <target state="translated">Dans l’exemple suivant, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A&gt;</ph> a la valeur <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, avec le résultat qui uniquement propriétés mises en cache et modèles sont disponibles pour l’objet récupéré.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">Crée une copie de ce <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Clone">
          <source>A modifiable copy of the current object.</source>
          <target state="translated">Copie modifiable de l'objet en cours.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.Current">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> that is active on the current thread.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> qui est actif sur le thread actuel.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.Current">
          <source>The active <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Removes the active <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> from the internal stack for the current thread.</source>
          <target state="translated">Supprime le <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> actif de la pile interne pour le thread actuel.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Only the currently active request can be removed using the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> method.</source>
          <target state="translated">Seule la requête actuellement active peut être supprimée à l’aide de la <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Attempting to remove a request that is not the current one results in an exception.</source>
          <target state="translated">Tentative de suppression d’une demande qui n’est pas l’en cours entraîne une exception.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
          <target state="translated">Sauf si vous imbriquez des requêtes de cache, il est préférable d’utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> pour placer la requête sur la pile.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">La raison est que vous pouvez utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> au sein d’un <ph id="ph2">`using`</ph> bloc (<ph id="ph3">`Using`</ph> en Visual Basic), s’assurer que la requête est dépilée même si une exception est levée.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>The following example shows how to deactivate a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> by using <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment désactiver un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> à l’aide de <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>An attempt was made to remove a cache request that was not the last one pushed onto the stack.</source>
          <target state="translated">Une tentative a été faite pour supprimer une requête de cache qui n'était pas la dernière à faire l'objet d'un push sur la pile.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Places the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> on the internal state stack, making it the active request on the current thread.</source>
          <target state="translated">Place <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> sur la pile d'état interne, en en faisant la requête active sur le thread actuel.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Multiple <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> objects can be placed onto the state stack.</source>
          <target state="translated">Plusieurs <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> objets peuvent être placés sur la pile d’état.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is raised.</source>
          <target state="translated">Demandes de cache doivent être supprimés de la pile dans l’ordre, qu'elles ont été appliquées. Sinon, un <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception est levée.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
          <target state="translated">Sauf si vous imbriquez des requêtes de cache, il est préférable d’utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> pour placer la requête sur la pile.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">La raison est que vous pouvez utiliser <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> au sein d’un <ph id="ph2">`using`</ph> bloc (<ph id="ph3">`Using`</ph> en Visual Basic), s’assurer que la requête est dépilée même si une exception est levée.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>The following example shows how to activate a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> by using <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment activer un <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> à l’aide de <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>Gets or sets a value specifying the view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree to use when caching.</source>
          <target state="translated">Obtient ou définit une valeur qui spécifie l'affichage de l'arborescence des éléments <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> à utiliser lors de la mise en cache.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>The view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree.</source>
          <target state="translated">Affichage de l'arborescence des éléments <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>The default view is <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /&gt;</ph>.</source>
          <target state="translated">L'affichage par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>For additional information on views of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree, see <bpt id="p1">[</bpt>UI Automation Tree Overview<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les vues de la <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> arborescence d’éléments, consultez <bpt id="p1">[</bpt>UI Automation Tree Overview<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.TreeFilter%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.RawViewCondition&gt;</ph> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</source>
          <target state="translated">Dans l’exemple suivant, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.TreeFilter%2A&gt;</ph> a la valeur <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.RawViewCondition&gt;</ph> afin que la mise en cache est effectuée pour tous les éléments qu’ils fassent partie de l’affichage du contenu ou l’affichage de contrôle.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</source>
          <target state="translated">Obtient ou définit une valeur qui spécifie si la mise en cache s'effectue uniquement pour la racine du sous-arbre ou également pour ses enfants ou descendants.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>One or more of <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Children" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Automation.TreeScope.Descendants" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Windows.Automation.TreeScope.Subtree" /&gt;</ph>.</source>
          <target state="translated">Une ou plusieurs des valeurs <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Children" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Automation.TreeScope.Descendants" /&gt;</ph> ou <ph id="ph4">&lt;see cref="F:System.Windows.Automation.TreeScope.Subtree" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph> is called.</source>
          <target state="translated">L’étendue de la mise en cache est en relation avec l’ou les objets qui sont extraits, pas par rapport à l’objet sur lequel <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>See the example.</source>
          <target state="translated">Consultez l’exemple.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>In the following example, a list box element is obtained from the parent window element while a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is active and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.TreeScope%2A&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Automation.TreeScope.Children&gt;</ph>.</source>
          <target state="translated">Dans l’exemple suivant, un élément de zone de liste est obtenu à partir de l’élément de la fenêtre parente lors une <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> est actif et <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.TreeScope%2A&gt;</ph> est <ph id="ph3">&lt;xref:System.Windows.Automation.TreeScope.Children&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.CachedChildren%2A&gt;</ph> of the list box.</source>
          <target state="translated">Les propriétés spécifiées des éléments enfants (autrement dit, les éléments de liste) sont stockées dans le cache et peuvent être récupérées à partir de la <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.CachedChildren%2A&gt;</ph> de la zone de liste.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>An attempt was made to set the property to <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Parent" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Ancestors" /&gt;</ph>.</source>
          <target state="translated">Une tentative a été faite d'affecter <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Parent" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Ancestors" /&gt;</ph> à la propriété.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>