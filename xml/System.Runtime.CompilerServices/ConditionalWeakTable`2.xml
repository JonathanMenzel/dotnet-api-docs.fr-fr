<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02c733ea9cf442ef3946e06cdf60d559321c5457" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52195591" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="0242f-101">Type référence auquel le champ est attaché.</span><span class="sxs-lookup"><span data-stu-id="0242f-101">The reference type to which the field is attached.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="0242f-102">Type du champ.</span><span class="sxs-lookup"><span data-stu-id="0242f-102">The field's type.</span></span> <span data-ttu-id="0242f-103">Il doit s'agir d'un type référence.</span><span class="sxs-lookup"><span data-stu-id="0242f-103">This must be a reference type.</span></span></typeparam>
    <summary><span data-ttu-id="0242f-104">Permet aux compilateurs d'attacher dynamiquement des champs objet aux objets managés.</span><span class="sxs-lookup"><span data-stu-id="0242f-104">Enables compilers to dynamically attach object fields to managed objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-105">Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe permet aux compilateurs de langage d’attacher des propriétés arbitraires aux objets managés en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="0242f-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="0242f-106">Un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objet est un dictionnaire qui lie un objet managé, qui est représenté par une clé, à sa propriété jointe, qui est représentée par une valeur.</span><span class="sxs-lookup"><span data-stu-id="0242f-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="0242f-107">Les clés de l’objet sont les instances individuelles de la `TKey` classe à laquelle la propriété est attachée, et ses valeurs sont les valeurs de propriété qui sont affectés aux objets correspondants.</span><span class="sxs-lookup"><span data-stu-id="0242f-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="0242f-108">Clés doivent être uniques ; en d’autres termes, la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe prend en charge une valeur attachée par objet managé.</span><span class="sxs-lookup"><span data-stu-id="0242f-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="0242f-109">Deux clés sont égales si les transmettre à la <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> retourne de la méthode `true`.</span><span class="sxs-lookup"><span data-stu-id="0242f-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0242f-110">Vous ne pouvez pas contrôler les comparaisons d’égalité en substituant <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> pour définir explicitement le code de hachage pour une clé.</span><span class="sxs-lookup"><span data-stu-id="0242f-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="0242f-111">Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe n’utilise pas le <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> méthode pour calculer les codes de hachage et par conséquent n’appelle pas <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> remplace.</span><span class="sxs-lookup"><span data-stu-id="0242f-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="0242f-112">Bien que le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe contienne une collection de paires clé/valeur, il est plus considéré comme une table plutôt qu’un objet de dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="0242f-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="0242f-113">Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe diffère d’un dictionnaire de plusieurs façons :</span><span class="sxs-lookup"><span data-stu-id="0242f-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="0242f-114">Il ne conserve pas les clés.</span><span class="sxs-lookup"><span data-stu-id="0242f-114">It does not persist keys.</span></span> <span data-ttu-id="0242f-115">Autrement dit, une clé n’est pas maintenue active uniquement, car il est membre de la collection.</span><span class="sxs-lookup"><span data-stu-id="0242f-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="0242f-116">Il n’inclut pas toutes les méthodes (telles que `GetEnumerator` ou `Contains`) qu’un dictionnaire possède généralement.</span><span class="sxs-lookup"><span data-stu-id="0242f-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="0242f-117">Il n’implémente pas le <xref:System.Collections.Generic.IDictionary%602> interface.</span><span class="sxs-lookup"><span data-stu-id="0242f-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="0242f-118">Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> classe diffère d’autres objets de collection dans sa gestion de la durée de vie des clés stockées dans la collection.</span><span class="sxs-lookup"><span data-stu-id="0242f-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="0242f-119">En règle générale, lorsqu’un objet est stocké dans une collection, sa durée de vie dure jusqu'à ce qu’il est supprimé (et il n’existe aucune référence supplémentaire à l’objet) ou jusqu'à ce que l’objet de collection lui-même est détruit.</span><span class="sxs-lookup"><span data-stu-id="0242f-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="0242f-120">Toutefois, dans le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> (classe), ajout d’une paire clé/valeur à la table ne garantit pas que la clé sera persistante, même si elle est accessible directement à partir d’une valeur stockée dans la table (par exemple, si la table contient une clé, A, avec une valeur V1 et une deuxième clé, B, avec une valeur P2 qui contient une référence à A).</span><span class="sxs-lookup"><span data-stu-id="0242f-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="0242f-121">Au lieu de cela, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> supprime automatiquement l’entrée de clé/valeur dès qu’aucune autre référence à une clé n’existe en dehors de la table.</span><span class="sxs-lookup"><span data-stu-id="0242f-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="0242f-122">Cet exemple en fournit une illustration.</span><span class="sxs-lookup"><span data-stu-id="0242f-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0242f-123">L’exemple suivant illustre qu’une clé stockée dans le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table n’est pas persistante une fois que les références à celle-ci en dehors de la table sont détruits.</span><span class="sxs-lookup"><span data-stu-id="0242f-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="0242f-124">L’exemple définit deux classes : `ManagedClass`, qui représente la clé dans la table, et `ClassData`, qui représente la valeur de clé.</span><span class="sxs-lookup"><span data-stu-id="0242f-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="0242f-125">L’exemple instancie trois objets de chaque type.</span><span class="sxs-lookup"><span data-stu-id="0242f-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="0242f-126">Elle instancie également un <xref:System.WeakReference> objet qui représente la seconde `ManagedClass`et détruit la seconde `ManagedClass` instance.</span><span class="sxs-lookup"><span data-stu-id="0242f-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="0242f-127">La tentative d’extraction de la seconde `ManagedClass` de l’objet à partir de la <xref:System.WeakReference.Target%2A> propriété indique qu’aucune référence à l’objet ne reste.</span><span class="sxs-lookup"><span data-stu-id="0242f-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="0242f-128">Instances de la <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> classe sont thread-safe.</span><span class="sxs-lookup"><span data-stu-id="0242f-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span></span> <span data-ttu-id="0242f-129">Ils ne nécessitent pas les appelants à effectuer aucun verrouillage supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="0242f-129">They do not require callers to do any additional locking.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0242f-130">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-131">Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructeur instancie vide <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table ; autrement dit, la table ne contient aucun paires clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="0242f-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="0242f-132">Vous pouvez ajouter des paires clé/valeur en appelant le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, ou <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0242f-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="0242f-133">Chaque clé dans un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objet doit être unique.</span><span class="sxs-lookup"><span data-stu-id="0242f-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="0242f-134">Les clés ne sont pas uniques si elles font référence au même objet (autrement dit, si les transmettre en tant qu’arguments à la <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> retourne de la méthode `true`).</span><span class="sxs-lookup"><span data-stu-id="0242f-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0242f-135">Clé à ajouter.</span><span class="sxs-lookup"><span data-stu-id="0242f-135">The key to add.</span></span> <span data-ttu-id="0242f-136"><paramref name="key" /> représente l’objet auquel la propriété est jointe.</span><span class="sxs-lookup"><span data-stu-id="0242f-136"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <param name="value"><span data-ttu-id="0242f-137">Valeur de la propriété de la clé.</span><span class="sxs-lookup"><span data-stu-id="0242f-137">The key's property value.</span></span></param>
        <summary><span data-ttu-id="0242f-138">Ajoute une clé à la table.</span><span class="sxs-lookup"><span data-stu-id="0242f-138">Adds a key to the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-139">Chaque clé dans un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objet doit être unique.</span><span class="sxs-lookup"><span data-stu-id="0242f-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="0242f-140">Les clés ne sont pas uniques si elles font référence au même objet (autrement dit, si les transmettre en tant qu’arguments à la <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> retourne de la méthode `true`).</span><span class="sxs-lookup"><span data-stu-id="0242f-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="0242f-141">Si la clé est une opération de garbage collection pendant l’opération d’addition, la paire clé/valeur existante est supprimée et la nouvelle paire clé/valeur est ajoutée sans une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="0242f-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0242f-142">L’exemple suivant définit un `MainClass` classe et un `MainInfo` (classe), qui fournit des informations sur la `MainClass` instance.</span><span class="sxs-lookup"><span data-stu-id="0242f-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="0242f-143">L’exemple appelle ensuite la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> méthode pour ajouter un `MainClass` objet et ses attachées `MainInfo` de l’objet à un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span><span class="sxs-lookup"><span data-stu-id="0242f-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="0242f-144">L’exemple illustre également les appels à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> et <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> méthodes pour ajouter des paires clé/valeur à la table et à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> méthode pour récupérer la valeur d’une clé existante.</span><span class="sxs-lookup"><span data-stu-id="0242f-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0242f-145"><paramref name="key" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-145"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0242f-146"><paramref name="key" /> existe déjà.</span><span class="sxs-lookup"><span data-stu-id="0242f-146"><paramref name="key" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0242f-147">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="0242f-147">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0242f-148">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="0242f-148">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.AddOrUpdate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="conditionalWeakTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="conditionalWeakTable.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0242f-149">Vérifie que les ressources sont libérées et que toute autre opération de nettoyage est effectuée quand le garbage collector récupère l'objet <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-149">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-150">Le garbage collector appelle <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> lorsque l’objet actuel est prêt à être finalisé.</span><span class="sxs-lookup"><span data-stu-id="0242f-150">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateValue : 'Key -&gt; 'Value" Usage="conditionalWeakTable.GetOrCreateValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0242f-151">Clé à rechercher.</span><span class="sxs-lookup"><span data-stu-id="0242f-151">The key to search for.</span></span> <span data-ttu-id="0242f-152"><paramref name="key" /> représente l’objet auquel la propriété est jointe.</span><span class="sxs-lookup"><span data-stu-id="0242f-152"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <summary><span data-ttu-id="0242f-153">Effectue une recherche atomique de la clé spécifiée dans la table et retourne la valeur correspondante.</span><span class="sxs-lookup"><span data-stu-id="0242f-153">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="0242f-154">Si la clé n'existe pas dans la table, la méthode appelle le constructeur par défaut de la classe qui représente la valeur de la table pour créer une valeur liée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0242f-154">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="0242f-155">Valeur qui correspond à <paramref name="key" />, si <paramref name="key" /> existe déjà dans la table ; sinon, nouvelle valeur créée par le constructeur par défaut de la classe définie par le paramètre de type générique <paramref name="TValue" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-155">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-156">Si `key` n’existe pas dans la table, la méthode ajoute, ainsi que l’objet est instancié en appelant le constructeur par défaut de la classe définie par le `TValue` paramètre de type générique.</span><span class="sxs-lookup"><span data-stu-id="0242f-156">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="0242f-157">Si le `TValue` classe n’a aucun constructeur par défaut, un <xref:System.MissingMethodException> est levée.</span><span class="sxs-lookup"><span data-stu-id="0242f-157">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="0242f-158">C’est la méthode recommandée de la récupération d’une valeur existante ou en ajoutant une nouvelle valeur à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table si la classe de valeur de la table définit un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="0242f-158">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="0242f-159">Si elle ne définit pas un constructeur par défaut, vous pouvez appeler à la place le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> (méthode), qui s’appuie sur une méthode de rappel fournie pour instancier l’objet représentant la valeur de la table</span><span class="sxs-lookup"><span data-stu-id="0242f-159">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="0242f-160">Pour récupérer la valeur d’une clé existante sans ajouter la paire clé/valeur si la clé est introuvable dans la table, appelez le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0242f-160">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0242f-161">L’exemple suivant définit un `MainClass` classe et un `MainInfo` (classe), qui fournit des informations sur la `MainClass` instance.</span><span class="sxs-lookup"><span data-stu-id="0242f-161">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="0242f-162">L’exemple appelle la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> méthode pour ajouter un `MainClass` objet et ses attachées `MainInfo` de l’objet à un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span><span class="sxs-lookup"><span data-stu-id="0242f-162">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="0242f-163">L’exemple illustre également les appels à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> et <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> méthodes pour ajouter des paires clé/valeur à la table et à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> méthode pour récupérer la valeur d’une clé existante.</span><span class="sxs-lookup"><span data-stu-id="0242f-163">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0242f-164"><paramref name="key" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-164"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="0242f-165">Dans <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET pour les applications du Windows Store</see> ou la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Bibliothèque de classes portable</see>, interceptez l’exception de la classe de base, <see cref="T:System.MissingMemberException" />, à la place.</span><span class="sxs-lookup"><span data-stu-id="0242f-165">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="0242f-166">La classe qui représente la valeur de la table ne définit pas de constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="0242f-166">The class that represents the table's value does not define a default constructor.</span></span></exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberSignature Language="F#" Value="member this.GetValue : 'Key * System.Runtime.CompilerServices.ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback -&gt; 'Value" Usage="conditionalWeakTable.GetValue (key, createValueCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0242f-167">Clé à rechercher.</span><span class="sxs-lookup"><span data-stu-id="0242f-167">The key to search for.</span></span> <span data-ttu-id="0242f-168"><paramref name="key" /> représente l’objet auquel la propriété est attachée.</span><span class="sxs-lookup"><span data-stu-id="0242f-168"><paramref name="key" /> represents the object to which the property is attached.</span></span></param>
        <param name="createValueCallback"><span data-ttu-id="0242f-169">Délégué d'une méthode qui peut créer une valeur pour le <paramref name="key" /> donné.</span><span class="sxs-lookup"><span data-stu-id="0242f-169">A delegate to a method that can create a value for the given <paramref name="key" />.</span></span> <span data-ttu-id="0242f-170">Il comporte un paramètre unique de type <c>TKey</c> et retourne une valeur de type <c>TValue</c>.</span><span class="sxs-lookup"><span data-stu-id="0242f-170">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span></span></param>
        <summary><span data-ttu-id="0242f-171">Effectue une recherche atomique de la clé spécifiée dans la table et retourne la valeur correspondante.</span><span class="sxs-lookup"><span data-stu-id="0242f-171">Atomically searches for a specified key in the table and returns the corresponding value.</span></span> <span data-ttu-id="0242f-172">Si la clé n'existe pas dans la table, la méthode appelle une méthode de rappel pour créer une valeur liée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0242f-172">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span></span></summary>
        <returns><span data-ttu-id="0242f-173">Valeur attachée à <paramref name="key" />, si <paramref name="key" /> existe déjà dans la table ; sinon, nouvelle valeur retournée par le délégué <paramref name="createValueCallback" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-173">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-174">Si `key` n’existe pas dans la table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> appelle la méthode qui est définie par le `createValueCallback` paramètre et lui passe la clé.</span><span class="sxs-lookup"><span data-stu-id="0242f-174">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="0242f-175">Une nouvelle valeur est liée à la clé dans la table et retournée comme résultat.</span><span class="sxs-lookup"><span data-stu-id="0242f-175">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="0242f-176">Utilisez cette méthode uniquement lorsque la classe qui représente la valeur de la table ne définit pas un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="0242f-176">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="0242f-177">Si elle ne définit pas un constructeur par défaut, utilisez le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> méthode à la place.</span><span class="sxs-lookup"><span data-stu-id="0242f-177">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="0242f-178">Pour récupérer la valeur d’une clé existante sans ajouter la paire clé/valeur si la clé est introuvable dans la table, appelez le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0242f-178">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="0242f-179">Si plusieurs threads essaient de créer la même clé, `createValueCallback` peut être appelée plusieurs fois avec la même clé.</span><span class="sxs-lookup"><span data-stu-id="0242f-179">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="0242f-180">Seul l’un des ces appels réussira, et sa valeur retournée sera ajoutée à la table.</span><span class="sxs-lookup"><span data-stu-id="0242f-180">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="0242f-181">Le thread qui réussit à créer la valeur est indéterminé.</span><span class="sxs-lookup"><span data-stu-id="0242f-181">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="0242f-182">Cette règle permet à la table d’appeler `createValueCallback` hors du verrou de table interne pour éviter les interblocages.</span><span class="sxs-lookup"><span data-stu-id="0242f-182">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0242f-183">L’exemple suivant définit un `MainClass` classe et un `MainInfo` (classe), qui fournit des informations sur la `MainClass` instance.</span><span class="sxs-lookup"><span data-stu-id="0242f-183">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="0242f-184">Il définit également un statique (`Shared` en Visual Basic) `CreateAttachedValue` méthode qui peut être affectée à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> délégué et passée à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0242f-184">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="0242f-185">L’exemple appelle la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> méthode pour ajouter un `MainClass` objet et ses attachées `MainInfo` de l’objet à un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span><span class="sxs-lookup"><span data-stu-id="0242f-185">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="0242f-186">L’exemple illustre également les appels à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> et <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> méthodes pour ajouter des paires clé/valeur à la table et à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> méthode pour récupérer la valeur d’une clé existante.</span><span class="sxs-lookup"><span data-stu-id="0242f-186">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0242f-187"><paramref name="key" /> ou <paramref name="createValueCallback" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-187"><paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0242f-188">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="0242f-188">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0242f-189">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="0242f-189">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'Key -&gt; bool" Usage="conditionalWeakTable.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0242f-190">Clé à supprimer.</span><span class="sxs-lookup"><span data-stu-id="0242f-190">The key to remove.</span></span></param>
        <summary><span data-ttu-id="0242f-191">Supprime une clé et sa valeur de la table.</span><span class="sxs-lookup"><span data-stu-id="0242f-191">Removes a key and its value from the table.</span></span></summary>
        <returns><span data-ttu-id="0242f-192"><see langword="true" /> si la recherche et la suppression de la clé réussissent ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-192"><see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-193">Si la clé est le garbage collector pendant cette opération, la méthode ne lève pas d’exception et la valeur de retour n’est pas définie.</span><span class="sxs-lookup"><span data-stu-id="0242f-193">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0242f-194"><paramref name="key" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-194"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0242f-195">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="0242f-195">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0242f-196">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="0242f-196">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="conditionalWeakTable.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0242f-197">Clé qui représente un objet avec une propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="0242f-197">The key that represents an object with an attached property.</span></span></param>
        <param name="value"><span data-ttu-id="0242f-198">Quand cette méthode est retournée, contient la valeur de la propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="0242f-198">When this method returns, contains the attached property value.</span></span> <span data-ttu-id="0242f-199">Si <paramref name="key" /> est introuvable, <paramref name="value" /> contient la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="0242f-199">If <paramref name="key" /> is not found, <paramref name="value" /> contains the default value.</span></span></param>
        <summary><span data-ttu-id="0242f-200">Obtient la valeur de la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0242f-200">Gets the value of the specified key.</span></span></summary>
        <returns><span data-ttu-id="0242f-201"><see langword="true" /> si la valeur <paramref name="key" /> est trouvée, sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-201"><see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0242f-202">Si la clé est le garbage collector pendant cette opération, la méthode peut retourner `false` et définissez `value` à la valeur par défaut de valeur (comme si la clé n’était pas présente).</span><span class="sxs-lookup"><span data-stu-id="0242f-202">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0242f-203">L’exemple suivant définit un `MainClass` classe et un `MainInfo` (classe), qui fournit des informations sur la `MainClass` instance.</span><span class="sxs-lookup"><span data-stu-id="0242f-203">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="0242f-204">L’exemple appelle la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, et <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> méthodes pour ajouter des paires clé/valeur à un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span><span class="sxs-lookup"><span data-stu-id="0242f-204">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="0242f-205">Dans chaque cas, l’exemple appelle la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> méthode pour vérifier que la paire clé/valeur a été ajoutée à la table.</span><span class="sxs-lookup"><span data-stu-id="0242f-205">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0242f-206"><paramref name="key" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0242f-206"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="0242f-207">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="0242f-207">requires full trust for the immediate caller.</span></span> <span data-ttu-id="0242f-208">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="0242f-208">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>