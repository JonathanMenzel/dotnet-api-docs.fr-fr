<Type Name="IsCopyConstructed" FullName="System.Runtime.CompilerServices.IsCopyConstructed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e545101fc12d45cd9a3e82cb0bb0adc2fa51f06c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39754268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsCopyConstructed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsCopyConstructed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsCopyConstructed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsCopyConstructed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsCopyConstructed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsCopyConstructed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indique que toute copie de valeurs de ce type doit utiliser le constructeur de copie fourni par le type.  Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tout type modifié par la <xref:System.Runtime.CompilerServices.IsCopyConstructed> classe doit implémenter une méthode nommée `MarshalCopy` qui appelle le constructeur de copie natif.  
  
 Tout type C++ natif qui est émis dans des métadonnées avec des constructeurs de copie doit disposer de ces méthodes appelées par le marshaleur lors de la copie des valeurs au-delà de la limite de marshaling.  Le compilateur Microsoft C++ modifie tous les types C++ natifs dans les paramètres de méthode et retourner des types qui ont ce modificateur pour déclencher ce comportement dans le code de marshaling.  
  
 Les compilateurs émettre des modificateurs personnalisés dans les métadonnées pour modifier la façon dont compilateur juste-à-temps (JIT) gère les valeurs lorsque le comportement par défaut n’est pas approprié.  Lorsque le compilateur JIT rencontre un modificateur personnalisé, il gère la valeur de la façon qui spécifie le modificateur.  Les compilateurs peuvent appliquer des modificateurs personnalisés pour les méthodes, les paramètres et valeurs de retour.  Le compilateur JIT doit répondre aux modificateurs obligatoires, mais peut ignorer les modificateurs facultatifs.  
  
 Vous pouvez émettre des modificateurs personnalisés dans les métadonnées à l’aide d’une des techniques suivantes :  
  
-   À l’aide de méthodes dans le <xref:System.Reflection.Emit.TypeBuilder> classe telle que <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, et <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Génération d’un fichier d’instructions Microsoft intermediate language (MSIL) qui contient des appels de `modopt` et `modreq`et en assemblant le fichier avec le [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   À l’aide de l’API de réflexion non managée.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>