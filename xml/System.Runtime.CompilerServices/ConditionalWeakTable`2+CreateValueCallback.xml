<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46abe19aea8376a990307ff0ed9a404e52a57119" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637481" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Clé qui appartient à la valeur à créer.</param>
    <summary>Représente une méthode qui crée une valeur, autre qu’une valeur par défaut, à ajouter à un objet <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> dans le cadre d’une paire clé/valeur.</summary>
    <returns>Instance d’un type référence qui représente la valeur à associer à la clé spécifiée.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> délégué encapsule une méthode de rappel appelée par le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> méthode lorsque la clé passée à la méthode est introuvable dans le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> objet. Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> méthode passe à la méthode de rappel la clé qui représente un objet managé auquel une valeur de propriété doit être dynamiquement jointe. La méthode est chargée de retourner la valeur de propriété à son appelant, qui, à son tour, ajoute la paire clé/valeur à la table.  
  
 Le <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> méthode est utilisée pour retourner une instance d’un type référence qui peut être associée à la clé spécifiée. Il permet à cette instance à initialiser à l’aide de valeurs non définies par défaut. Si la clé est introuvable dans la table, la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> méthode ajoute une paire clé/valeur dans laquelle la valeur est initialisée à l’aide des valeurs par défaut.  
  
   
  
## Examples  
 L’exemple suivant définit un `MainClass` classe et un `MainInfo` classe. `MainInfo` Fournit des informations sur la `MainClass` instance. Il définit également un statique (`Shared` en Visual Basic) `CreateAttachedValue` méthode qui peut être affectée à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> déléguer et passé à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> (méthode). L’exemple appelle la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> méthode pour ajouter un `MainClass` objet et son `MainInfo` de l’objet à un <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table. L’exemple illustre également les appels à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> et <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> méthodes pour ajouter des paires clé/valeur à la table et un appel à la <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> méthode pour récupérer la valeur qui appartient à une clé existante.  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>