<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Unsafe.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50ccc5cb47c6abfb58ca98a1419b6a1547438294f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ccc5cb47c6abfb58ca98a1419b6a1547438294f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.Unsafe">
          <source>Contains generic, low-level functionality for manipulating pointers.</source>
          <target state="translated">Contient des fonctionnalités secondaires génériques pour la manipulation des pointeurs.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>The reference to add the offset to.</source>
          <target state="translated">Référence à laquelle ajouter le décalage.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">Offset à ajouter.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>Adds an element offset to the given reference.</source>
          <target state="translated">Ajoute un décalage d’élément à la référence donnée.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
          <source>A new reference that reflects the addition of offset to pointer.</source>
          <target state="translated">Nouvelle référence qui reflète l’ajout du décalage au pointeur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>The reference to add the offset to.</source>
          <target state="translated">Référence à laquelle ajouter le décalage.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>The offset to add.</source>
          <target state="translated">Offset à ajouter.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>Adds an element offset to the given reference.</source>
          <target state="translated">Ajoute un décalage d’élément à la référence donnée.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the addition of offset to pointer.</source>
          <target state="translated">Nouvelle référence qui reflète l’ajout du décalage au pointeur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>The reference to add the offset to.</source>
          <target state="translated">Référence à laquelle ajouter le décalage.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>The offset to add.</source>
          <target state="translated">Offset à ajouter.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>Adds a byte offset to the given reference.</source>
          <target state="translated">Ajoute un décalage d’octet à la référence donnée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the addition of byte offset to pointer.</source>
          <target state="translated">Nouvelle référence qui reflète l’ajout du décalage d’octet au pointeur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>The first reference to compare.</source>
          <target state="translated">Première référence à comparer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>The second reference to compare.</source>
          <target state="translated">Seconde référence à comparer.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source>Determines whether the specified references point to the same location.</source>
          <target state="translated">Détermine si les références spécifiées pointent vers le même emplacement.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> point to the same location; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="left" /&gt;</ph> et <ph id="ph3">&lt;paramref name="right" /&gt;</ph> pointent vers le même emplacement ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>The type which the object will be cast to.</source>
          <target state="translated">Le type qui est converti dans l’objet.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>The object to cast.</source>
          <target state="translated">Objet à caster.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>Casts the given object to the specified type.</source>
          <target state="translated">Caste l’objet donné dans le type spécifié.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
          <source>The original object, casted to the given type.</source>
          <target state="translated">L’objet d’origine, casté dans le type donné.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>The type of reference to reinterpret..</source>
          <target state="translated">Le type de référence à réinterpréter...</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>The desired type of the reference.</source>
          <target state="translated">Le type souhaité de la référence.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>The reference to reinterpret.</source>
          <target state="translated">Référence à réinterpréter.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>Reinterprets the given reference as a reference to a value of type <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</source>
          <target state="translated">Réinterprète la référence donnée comme une référence à une valeur de type <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
          <source>A reference to a value of type <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</source>
          <target state="translated">Référence à une valeur de type <ph id="ph1">&lt;typeparamref name="TTo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>The type of object.</source>
          <target state="translated">Type d'objet.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>The object whose pointer is obtained.</source>
          <target state="translated">Objet dont le pointeur est obtenu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>Returns a pointer to the given by-ref parameter.</source>
          <target state="translated">Retourne un pointeur au paramètre by-ref donné.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
          <source>A pointer to the given value.</source>
          <target state="translated">Pointeur vers la valeur donnée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>The type of the interpreted location.</source>
          <target state="translated">Le type de l’emplacement interprété.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>The location of the value to reference.</source>
          <target state="translated">Emplacement de la valeur à référencer.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>Reinterprets the given location as a reference to a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">Réinterprète l’emplacement donné comme une référence à une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
          <source>A reference to a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">Référence à une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>The reference to origin.</source>
          <target state="translated">Référence à l’origine.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>The reference to target.</source>
          <target state="translated">Référence à la cible.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>Determines the byte offset from origin to target from the given references.</source>
          <target state="translated">Détermine le décalage d’octet entre l’origine et la cible à partir des références données.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
          <source>Byte offset from origin to target i.e. <ph id="ph1">&lt;paramref name="target" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;paramref name="origin" /&gt;</ph>.</source>
          <target state="translated">Décalage d’octet entre l’origine et la cible, c’est-à-dire <ph id="ph1">&lt;paramref name="target" /&gt;</ph> <ph id="ph2"> - </ph> <ph id="ph3">&lt;paramref name="origin" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>The type of value to copy.</source>
          <target state="translated">Le type de valeur à copier.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>The location to copy to.</source>
          <target state="translated">Emplacement vers lequel effectuer la copie.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>A reference to the value to copy.</source>
          <target state="translated">Référence à la valeur à copier.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
          <source>Copies a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location.</source>
          <target state="translated">Copie une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>The type of value to copy.</source>
          <target state="translated">Le type de valeur à copier.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>The location to copy to.</source>
          <target state="translated">Emplacement vers lequel effectuer la copie.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>A pointer to the value to copy.</source>
          <target state="translated">Pointeur vers la valeur à copier.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
          <source>Copies a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location.</source>
          <target state="translated">Copie une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Adresse de destination vers laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Adresse source depuis laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Nombre d'octets à copier.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
          <source>Copies bytes from the source address to the destination address.</source>
          <target state="translated">Copie les octets de l’adresse source vers l’adresse de destination.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Adresse de destination vers laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Adresse source depuis laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Nombre d'octets à copier.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
          <source>Copies bytes from the source address to the destination address.</source>
          <target state="translated">Copie les octets de l’adresse source vers l’adresse de destination.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Adresse de destination vers laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Adresse source depuis laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Nombre d'octets à copier.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
          <source>Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Copie les octets de l’adresse source vers l’adresse de destination sans supposer de l’alignement dépendant de l’architecture des adresses.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>The destination address to copy to.</source>
          <target state="translated">Adresse de destination vers laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>The source address to copy from.</source>
          <target state="translated">Adresse source depuis laquelle effectuer la copie.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>The number of bytes to copy.</source>
          <target state="translated">Nombre d'octets à copier.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
          <source>Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Copie les octets de l’adresse source vers l’adresse de destination sans supposer de l’alignement dépendant de l’architecture des adresses.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Adresse du début du bloc de mémoire à initialiser.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valeur sur laquelle initialiser le bloc.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Nombre d’octets à initialiser.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value.</source>
          <target state="translated">Initialise un bloc de mémoire à l’emplacement spécifié avec une valeur initiale donnée.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Adresse du début du bloc de mémoire à initialiser.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valeur sur laquelle initialiser le bloc.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Nombre d’octets à initialiser.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value.</source>
          <target state="translated">Initialise un bloc de mémoire à l’emplacement spécifié avec une valeur initiale donnée.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Adresse du début du bloc de mémoire à initialiser.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valeur sur laquelle initialiser le bloc.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Nombre d’octets à initialiser.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</source>
          <target state="translated">Initialise un bloc de mémoire à l’emplacement spécifié avec une valeur initiale donnée sans supposer de l’alignement dépendant de l’architecture de l’adresse.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>The address of the start of the memory block to initialize.</source>
          <target state="translated">Adresse du début du bloc de mémoire à initialiser.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>The value to initialize the block to.</source>
          <target state="translated">Valeur sur laquelle initialiser le bloc.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>The number of bytes to initialize.</source>
          <target state="translated">Nombre d’octets à initialiser.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
          <source>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</source>
          <target state="translated">Initialise un bloc de mémoire à l’emplacement spécifié avec une valeur initiale donnée sans supposer de l’alignement dépendant de l’architecture de l’adresse.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>The type to read.</source>
          <target state="translated">Type à lire.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>The location to read from.</source>
          <target state="translated">Emplacement à partir duquel effectuer la lecture.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>Reads a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> from the given location.</source>
          <target state="translated">Lit une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à partir de l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
          <source>An object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> read from the given location.</source>
          <target state="translated">Objet de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> lu à partir de l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>The type to read.</source>
          <target state="translated">Type à lire.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>The location to read from.</source>
          <target state="translated">Emplacement à partir duquel effectuer la lecture.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>Reads a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> from the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Lit une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à partir de l’emplacement donné sans supposer de l’alignement dépendant de l’architecture des adresses.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
          <source>An object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> read from the given location.</source>
          <target state="translated">Objet de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> lu à partir de l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>The type to read.</source>
          <target state="translated">Type à lire.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>The location to read from.</source>
          <target state="translated">Emplacement à partir duquel effectuer la lecture.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>Reads a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> from the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Lit une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à partir de l’emplacement donné sans supposer de l’alignement dépendant de l’architecture des adresses.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
          <source>An object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> read from the given location.</source>
          <target state="translated">Objet de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> lu à partir de l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
          <source>The type of object whose size is retrieved.</source>
          <target state="translated">Le type d’objet dont la taille est récupérée.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
          <source>Returns the size of an object of the given type parameter.</source>
          <target state="translated">Retourne la taille d’un objet du paramètre de type donné.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
          <source>The size of an object of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</source>
          <target state="translated">Taille d’un objet de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>The reference to subtract the offset from.</source>
          <target state="translated">Référence de laquelle soustraire le décalage.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">Offset à soustraire.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>Subtracts an element offset from the given reference.</source>
          <target state="translated">Soustrait un décalage d’élément de la référence donnée.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
          <source>A new reference that reflects the subraction of offset from pointer.</source>
          <target state="translated">Nouvelle référence qui reflète la soustraction du décalage du pointeur.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>The reference to subtract the offset from.</source>
          <target state="translated">Référence de laquelle soustraire le décalage.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>The offset to subtract.</source>
          <target state="translated">Offset à soustraire.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>Subtracts an element offset from the given reference.</source>
          <target state="translated">Soustrait un décalage d’élément de la référence donnée.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the subraction of offset from pointer.</source>
          <target state="translated">Nouvelle référence qui reflète la soustraction du décalage du pointeur.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>The type of reference.</source>
          <target state="translated">Le type de référence.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>The reference to subtract the offset from.</source>
          <target state="translated">Référence de laquelle soustraire le décalage.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>The offset to subtract.</source>
          <target state="translated">Offset à soustraire.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>Subtracts a byte offset from the given reference.</source>
          <target state="translated">Soustrait un décalage d’octet de la référence donnée.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
          <source>A new reference that reflects the subraction of byte offset from pointer.</source>
          <target state="translated">Nouvelle référence qui reflète la soustraction du décalage d’octet du pointeur.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>The type of value to write.</source>
          <target state="translated">Le type de valeur à écrire.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>The location to write to.</source>
          <target state="translated">Emplacement dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
          <source>Writes a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location.</source>
          <target state="translated">Écrit une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à l’emplacement donné.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>The type of value to write.</source>
          <target state="translated">Le type de valeur à écrire.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>The location to write to.</source>
          <target state="translated">Emplacement dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
          <source>Writes a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Écrit une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à l’emplacement donné sans supposer de l’alignement dépendant de l’architecture des adresses.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>The type of value to write.</source>
          <target state="translated">Le type de valeur à écrire.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>The location to write to.</source>
          <target state="translated">Emplacement dans lequel écrire.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
          <source>Writes a value of type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> to the given location without assuming architecture dependent alignment of the addresses.</source>
          <target state="translated">Écrit une valeur de type <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> à l’emplacement donné sans supposer de l’alignement dépendant de l’architecture des adresses.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>