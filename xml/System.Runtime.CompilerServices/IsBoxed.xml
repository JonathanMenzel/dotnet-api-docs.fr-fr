<Type Name="IsBoxed" FullName="System.Runtime.CompilerServices.IsBoxed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4ca81144795e035e6af6d919562501b55ac1375" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37472084" /></Metadata><TypeSignature Language="C#" Value="public static class IsBoxed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsBoxed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsBoxed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsBoxed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsBoxed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsBoxed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="91d1c-101">Indique que le type référence modifié est un type valeur boxed.</span><span class="sxs-lookup"><span data-stu-id="91d1c-101">Indicates that the modified reference type is a boxed value type.</span></span> <span data-ttu-id="91d1c-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="91d1c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d1c-103">Le compilateur Microsoft C++ prend en charge les types valeur boxed directement dans le langage.</span><span class="sxs-lookup"><span data-stu-id="91d1c-103">The Microsoft C++ compiler supports boxed value types directly in the language.</span></span>  <span data-ttu-id="91d1c-104">Pour plus d’informations sur les types valeur boxed est émis dans des métadonnées en tant que modificateur personnalisé, où le modificateur décore une référence au type valeur est boxed.</span><span class="sxs-lookup"><span data-stu-id="91d1c-104">Information about boxed value types is emitted into metadata as a custom modifier, where the modifier decorates a reference to the value type being boxed.</span></span>  
  
 <span data-ttu-id="91d1c-105">Les compilateurs émettre des modificateurs personnalisés dans les métadonnées pour modifier la façon dont compilateur juste-à-temps (JIT) gère les valeurs lorsque le comportement par défaut n’est pas approprié.</span><span class="sxs-lookup"><span data-stu-id="91d1c-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="91d1c-106">Lorsque le compilateur JIT rencontre un modificateur personnalisé, il gère la valeur de la façon qui spécifie le modificateur.</span><span class="sxs-lookup"><span data-stu-id="91d1c-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="91d1c-107">Les compilateurs peuvent appliquer des modificateurs personnalisés pour les méthodes, les paramètres et valeurs de retour.</span><span class="sxs-lookup"><span data-stu-id="91d1c-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="91d1c-108">Le compilateur JIT doit répondre aux modificateurs obligatoires, mais peut ignorer les modificateurs facultatifs.</span><span class="sxs-lookup"><span data-stu-id="91d1c-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="91d1c-109">Vous pouvez émettre des modificateurs personnalisés dans les métadonnées à l’aide d’une des techniques suivantes :</span><span class="sxs-lookup"><span data-stu-id="91d1c-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="91d1c-110">À l’aide de méthodes dans le <xref:System.Reflection.Emit.TypeBuilder> classe telle que <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, et <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="91d1c-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="91d1c-111">Génération d’un fichier d’instructions Microsoft intermediate language (MSIL) qui contient des appels de `modopt` et `modreq`et en assemblant le fichier avec le [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="91d1c-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="91d1c-112">À l’aide de l’API de réflexion non managée.</span><span class="sxs-lookup"><span data-stu-id="91d1c-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91d1c-113">L’exemple suivant montre comment émettre une <xref:System.Runtime.CompilerServices.IsBoxed> objet dans un assembly à l’aide de la réflexion.</span><span class="sxs-lookup"><span data-stu-id="91d1c-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsBoxed> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsBoxed#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsBoxed/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>