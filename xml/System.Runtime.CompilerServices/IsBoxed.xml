<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IsBoxed.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5470527176f784c70eb2fd8524e483d2cb7966b3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">470527176f784c70eb2fd8524e483d2cb7966b3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Indicates that the modified reference type is a boxed value type.</source>
          <target state="translated">Indique que le type référence modifié est un type valeur boxed.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>The Microsoft C++ compiler supports boxed value types directly in the language.</source>
          <target state="translated">Le compilateur Microsoft C++ prend en charge les types valeur boxed directement dans le langage.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Information about boxed value types is emitted into metadata as a custom modifier, where the modifier decorates a reference to the value type being boxed.</source>
          <target state="translated">Pour plus d’informations sur les types valeur boxed est émis dans des métadonnées en tant que modificateur personnalisé, où le modificateur décore une référence au type valeur convertie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">Les compilateurs émettent des modificateurs personnalisés dans les métadonnées pour modifier la façon dont le compilateur (JIT) juste-à-temps gère les valeurs lorsque le comportement par défaut n’est pas approprié.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">Lorsque le compilateur JIT rencontre un modificateur personnalisé, il gère la valeur de la façon dont le modificateur.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">Compilateurs peuvent appliquer des modificateurs personnalisés aux méthodes, aux paramètres et valeurs de retour.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">Le compilateur JIT doit répondre aux modificateurs obligatoires, mais peut ignorer les modificateurs facultatifs.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>You can emit custom modifiers into metadata using one of the following techniques:</source>
          <target state="translated">Vous pouvez émettre des modificateurs personnalisés dans les métadonnées à l’aide d’une des techniques suivantes :</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Using methods in the <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> class such as <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</source>
          <target state="translated">À l’aide de méthodes dans les <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> classe telles que <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</source>
          <target state="translated">Génération d’un fichier d’instructions Microsoft intermediate language (MSIL) qui contient des appels de <ph id="ph1">`modopt`</ph> et <ph id="ph2">`modreq`</ph>et en assemblant le fichier avec le <bpt id="p1">[</bpt>Ilasm.exe (assembleur IL)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>Using the unmanaged reflection API.</source>
          <target state="translated">À l’aide de l’API de réflexion non managée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.IsBoxed">
          <source>The following example demonstrates how to emit an <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.IsBoxed&gt;</ph> object into an assembly using reflection.</source>
          <target state="translated">L’exemple suivant montre comment émettre une <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.IsBoxed&gt;</ph> objet dans un assembly à l’aide de la réflexion.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>