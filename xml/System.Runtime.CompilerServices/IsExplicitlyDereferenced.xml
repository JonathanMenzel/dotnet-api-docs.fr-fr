<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5dfb56441ba068e0bd34d3bde92ef7a41f6a8665" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36541018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsExplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Indique qu'un pointeur managé représente un paramètre pointeur dans une signature de méthode. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En C++, les pointeurs managés et les références managées sont émis dans des métadonnées en tant que pointeurs.  Pour faire la distinction entre les deux types dans les métadonnées, le compilateur Microsoft C++ applique ce modificateur aux pointeurs managés.  Il n’émet aucun modificateur sur les types référence managée.  Les compilateurs doivent connaître la syntaxe d’appel correcte lors de l’importation d’une méthode à partir de la portée de métadonnées.  Le <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> classe et à son partenaire, le <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> de classe, de lever l’ambiguïté entre les paramètres de référence à partir des paramètres de pointeur.  
  
 Les compilateurs émettent des modificateurs personnalisés dans les métadonnées pour modifier la façon dont le compilateur (JIT) juste-à-temps gère les valeurs lorsque le comportement par défaut n’est pas approprié.  Lorsque le compilateur JIT rencontre un modificateur personnalisé, il gère la valeur de la façon dont le modificateur.  Compilateurs peuvent appliquer des modificateurs personnalisés aux méthodes, aux paramètres et valeurs de retour.  Le compilateur JIT doit répondre aux modificateurs obligatoires, mais peut ignorer les modificateurs facultatifs.  
  
 Vous pouvez émettre des modificateurs personnalisés dans les métadonnées à l’aide d’une des techniques suivantes :  
  
-   À l’aide de méthodes dans les <xref:System.Reflection.Emit.TypeBuilder> classe telles que <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, et <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  
  
-   Génération d’un fichier d’instructions Microsoft intermediate language (MSIL) qui contient des appels de `modopt` et `modreq`et en assemblant le fichier avec le [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).  
  
-   À l’aide de l’API de réflexion non managée.  
  
   
  
## Examples  
 L’exemple suivant montre comment émettre une <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> objet dans un assembly à l’aide de la réflexion.  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>