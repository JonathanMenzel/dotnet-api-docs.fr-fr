<Type Name="MenuAdapter" FullName="System.Web.UI.WebControls.Adapters.MenuAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5499eea392ecdf75756f2f53c5e0ad25697ab2b1" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51900900" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuAdapter&#xA;Inherits WebControlAdapter&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type MenuAdapter = class&#xA;    inherit WebControlAdapter&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit le moyen de modifier le comportement du contrôle <see cref="T:System.Web.UI.WebControls.Menu" /> pour des navigateurs spécifiques.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> modifie le balisage ou le comportement d’un <xref:System.Web.UI.WebControls.Menu> contrôle pour un navigateur spécifique ou d’une classe de navigateurs, ou agit comme un filtre sur certaines fonctions.  
  
 Par défaut, le <xref:System.Web.UI.WebControls.MenuItem> des objets dans le <xref:System.Web.UI.WebControls.Menu> contrôle sont rendus sous forme de liens hypertexte pour permettre la navigation de menu. Le <xref:System.Web.UI.WebControls.Menu> classe gère l’état en implémentant le <xref:System.Web.UI.IPostBackEventHandler> afin qu’il peut y répondre et déclencher des événements spécifiques pendant la publication de l’interface. Vous pouvez étendre le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe pour personnaliser davantage le rendu ou le comportement de la <xref:System.Web.UI.WebControls.Menu> contrôle.  
  
 La demande initiale pour un adaptateur entraîne le .NET Framework à rechercher pour un adaptateur mappé pour le contrôle, étant donné les caractéristiques du navigateur demandeur. Le <xref:System.Web.HttpBrowserCapabilities> classe utilise les fichiers de définition de navigateur pour identifier les caractéristiques du navigateur client et mapper l’adaptateur au type de navigateur.  
  
 Pour plus d’informations sur le rendu adaptatif dans ASP.NET, consultez [Architectural Overview of Adaptive Control Behavior](https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.AspNetHostingPermission" />
    <altmember cref="T:System.Web.HttpBrowserCapabilities" />
    <related type="Article" href="https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)">Présentation de l’architecture du comportement de contrôle adaptatif</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La demande initiale pour un adaptateur entraîne le .NET Framework à rechercher pour un adaptateur mappé pour le contrôle, étant donné les caractéristiques du navigateur demandeur. Une fois que l’adaptateur est trouvé, le contrôle conserve une référence à l’instance de l’adaptateur mappé dans son <xref:System.Web.UI.Control.Adapter%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.Menu Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Menu Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Menu" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::Menu ^ Control { System::Web::UI::WebControls::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.Menu" Usage="System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Récupère une référence fortement typée vers le contrôle <see cref="T:System.Web.UI.WebControls.Menu" /> associé à cet objet <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />.</summary>
        <value>Contrôle <see cref="T:System.Web.UI.WebControls.Menu" /> associé à l'objet <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> actif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> propriété offre un moyen pour référencer le contrôle correspondant de la carte. Lorsqu’un adaptateur est associé à un contrôle particulier, le .NET Framework appelle les méthodes de cycle de vie de l’adaptateur à la place d’ou en plus des méthodes de cycle de vie du contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> propriété à récupérer le <xref:System.Web.UI.WebControls.Menu> contrôle de la classe parente. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe.  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/CS/contosomenuadapter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/VB/contosomenuadapter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadAdapterControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadAdapterControlState : obj -&gt; unit" Usage="menuAdapter.LoadAdapterControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> dans le formulaire d'un dictionnaire qui contient les informations d'état de l'adaptateur.</param>
        <summary>Charge toutes les informations d'état du contrôle qui ont été enregistrées par la méthode <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" /> lors d'une demande précédente adressée à la page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un adaptateur doit gérer des informations d’état privé, il peut remplacer le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> et <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> méthodes. Dans le cas de la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> (classe), où la hiérarchie des menus affichée dépend sélectionné précédemment <xref:System.Web.UI.WebControls.MenuItem> objet, `state` fournit un dictionnaire de paires nom/valeur contenant le chemin d’accès de l’élément sélectionné dans la hiérarchie des menus. Le `state` paramètre est un <xref:System.Web.UI.Pair> objet enregistré par le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> pendant une demande précédente à la page.  
  
 Si le contrôle n’est pas inscrit pour participer à l’état du contrôle, l’adaptateur doit inscrire l’état du contrôle. État de contrôle de carte est conservé en plus de l’état du contrôle, contrairement aux autres méthodes de cycle de vie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">État du contrôle vs. Exemple de l’état d’affichage</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menuAdapter.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données <see cref="T:System.EventArgs" /> associées à cet événement.</param>
        <summary>Inscrit le contrôle <see cref="T:System.Web.UI.WebControls.Menu" /> associé en tant que contrôle exigeant l'état du contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> méthode inscrit le contrôle associé en tant que requiert que l’état du contrôle. Par défaut, le .NET Framework appelle le contrôle serveur Web propre <xref:System.Web.UI.Control.OnInit%2A> (méthode). Toutefois, après le <xref:System.Web.UI.Control.Adapter%2A> du contrôle serveur est définie, le .NET Framework appelle l’implémentation de l’adaptateur de la <xref:System.Web.UI.Control.OnInit%2A> méthode au lieu de l’implémentation du contrôle.  
  
 Utilisez le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> méthode pour initialiser les paramètres dans le contrôle. Pendant une publication (postback), il s’agit d’une phase importante de la gestion de l’interaction avec les données d’état d’affichage existantes. Pour plus d’informations, consultez [Architectural Overview of Adaptive Control Behavior](https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si l’adaptateur remplace le <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" /> (méthode), il doit appeler la méthode correspondante sur la classe de base. Sinon, du contrôle propre <see cref="E:System.Web.UI.Control.Init" /> événement n’est pas déclenché.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menuAdapter.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données <see cref="T:System.EventArgs" /> associées à cet événement.</param>
        <summary>Gère la méthode <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> pour le contrôle <see cref="T:System.Web.UI.WebControls.Menu" /> associé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> méthode appelle en interne `OnPreRender` méthode dans la <xref:System.Web.UI.WebControls.Menu> classe. Toutes les autres fonctions de préaffichage des classes parent, telles que la liaison de données, application de styles et les assignations d’événements effectuent comme prévu.  
  
 Par défaut, le .NET Framework appelle la <xref:System.Web.UI.WebControls.Menu> du contrôle <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> (méthode). Toutefois, après le <xref:System.Web.UI.Control.Adapter%2A> de ce contrôle est définie, le .NET Framework appelle l’implémentation de l’adaptateur de la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> méthode au lieu de l’implémentation du contrôle.  
  
 Utilisez le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> méthode pour finaliser tous les paramètres dans le contrôle. Modifications apportées aux propriétés du contrôle dans cette phase seront enregistrées pour l’état d’affichage, mais les modifications apportées dans le <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> méthode ne sont pas enregistrées. Pour plus d’informations, consultez [Architectural Overview of Adaptive Control Behavior](https://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si l’adaptateur remplace le <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" /> (méthode), il doit appeler la méthode correspondante sur la classe de base. Sinon, du contrôle propre <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> méthode n’est pas déclenchée.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menuAdapter.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> qui représente le chemin d'accès du nœud en cours dans la hiérarchie des menus.</param>
        <summary>Permet de gérer le chemin d'accès du menu lorsqu'un événement de publication (postback) est déclenché.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent%2A> méthode est appelée lorsque le <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> événement est déclenché et est utilisé pour conserver le chemin d’accès de navigation du menu. Le `eventArgument` paramètre contient une chaîne délimitée d’éléments de menu qui identifient l’emplacement actuel dans la hiérarchie des menus.  
  
 La page passe la valeur de `eventArgument` pour le contrôle associé <xref:System.Web.UI.WebControls.Menu.RaisePostBackEvent%2A> (méthode). Associé <xref:System.Web.UI.WebControls.Menu> contrôle rend également l’élément de balisage qui déclenche la publication. Si le contrôle restitue un script côté client pour la publication (postback), l’argument du script est passé dans le `eventArgument` paramètre. Si la publication est provoquée par un simple envoi `eventArgument` est `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La profondeur du nœud actuel dépasse la valeur autorisée. Cela peut être provoqué par une déclaration non valide, une modification depuis la dernière demande ou une fausse demande (demande falsifiée).</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant des méthodes qui permettent de générer et de restituer la sortie spécifique à l'appareil.</param>
        <summary>Ajoute des attributs d’étiquette et écrit le balisage de l’étiquette d’ouverture du contrôle dans le flux de sortie émis vers le navigateur ou l’appareil.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> méthode ajoute des attributs de balise et écrit le balisage de la balise d’ouverture du contrôle dans le flux de sortie émis vers le flux de réponse du navigateur client. Le <xref:System.Web.UI.WebControls.MenuItem> objets rendus individuellement dans le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> (méthode) et le contrôle seront fermés avec un appel à la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> (méthode).  
  
 Substituer <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> lorsque vous souhaitez implémenter un comportement personnalisé. Par exemple, substituez la méthode pour écrire plusieurs balises dans le flux de réponse avant tout contenu de contrôle, tel que `<table><tr><td>`. Utilisez le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> méthode conjointement avec la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> méthode afin d’assurer une ouverture et fermeture de la cohérence des balises dans votre sortie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant des méthodes permettant de générer et de restituer la sortie propre à l'appareil.</param>
        <summary>Écrit les éléments de menu associés dans le contrôle <see cref="T:System.Web.UI.WebControls.Menu" /> associé au flux de sortie sous forme d'une série de liens hypertexte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> méthode écrit le <xref:System.Web.UI.WebControls.MenuItem> objets associé <xref:System.Web.UI.WebControls.Menu> contrôle dans le flux de sortie en tant que liens hypertexte. Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> méthode est appelée à partir de la <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> (méthode) et est utilisé pour effectuer des modifications dans le code de balisage qui est restitué dans un navigateur de périphérique.  
  
 Propriétés de contrôle doivent être définies avant cette phase de la durée de vie et uniquement la création du balisage pour le contrôle fait ici. Modifications apportées au contrôle dans cette étape du cycle de vie ne sont pas enregistrées pour l’état d’affichage. Pour enregistrer les modifications apportées au contrôle, substituez le <xref:System.Web.UI.Control.OnPreRender%2A> événement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La profondeur de l'élément actuel dépasse la valeur autorisée.  
  
- ou - 
L'élément actuel est désactivé.</exception>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant des méthodes qui permettent de générer et de restituer la sortie spécifique à l'appareil.</param>
        <summary>Crée le balisage final et écrit le code de la balise de fermeture du contrôle dans le flux de sortie émis vers le navigateur ou l'appareil.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> méthode écrit le balisage de la balise de fermeture du contrôle dans le flux de sortie émis vers le flux de réponse du navigateur client. Les attributs, attributs de style et balise d’ouverture sont rendus dans le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> (méthode). Le <xref:System.Web.UI.WebControls.MenuItem> les objets sont affichés individuellement dans le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> (méthode).  
  
 Substituer <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> lorsque vous souhaitez implémenter un comportement personnalisé. Par exemple, substituez la méthode pour écrire plusieurs balises de fermeture dans le flux de réponse après n’importe quel contrôle de contenu, tel que `</td></tr></table>`. Utilisez le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> méthode conjointement avec la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> méthode afin d’assurer une ouverture et fermeture de la cohérence des balises dans votre sortie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderItem">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderItem (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderItem(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.MenuItem item, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderItem (writer As HtmlTextWriter, item As MenuItem, position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderItem(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::MenuItem ^ item, int position);" />
      <MemberSignature Language="F#" Value="abstract member RenderItem : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.MenuItem * int -&gt; unit&#xA;override this.RenderItem : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.MenuItem * int -&gt; unit" Usage="menuAdapter.RenderItem (writer, item, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="writer">Instance de <see cref="T:System.Web.UI.HtmlTextWriter" /> contenant des méthodes qui permettent de générer et de restituer la sortie spécifique à l'appareil.</param>
        <param name="item">Objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> contenant les propriétés à écrire dans le flux de réponse.</param>
        <param name="position">Position de l'objet <see cref="T:System.Web.UI.WebControls.MenuItem" /> spécifié dans la hiérarchie des menus.</param>
        <summary>Génère le rendu d'un élément de menu unique sous forme de lien hypertexte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> méthode est appelée à partir la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> méthode pour récupérer les styles et les attributs de l’espacement à partir de la <xref:System.Web.UI.WebControls.MenuItem> de l’objet et les appliquer à un élément de lien hypertexte nouvellement créé. La hiérarchie des menus est parcourue dans la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> méthode et appelle le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> méthode pour afficher chaque élément. Chaque élément est restitué sous la forme d’un lien hypertexte et hérite des propriétés et des styles de spécifié <xref:System.Web.UI.WebControls.MenuItem> contrôle. Le lien hypertexte rendu sur la page est une des opérations suivantes :  
  
-   Un événement de publication (postback) pour ouvrir ou sélectionnez l’élément.  
  
-   Un lien pour accéder à la cible spécifiée dans le <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> propriété de la <xref:System.Web.UI.WebControls.MenuItem> contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveAdapterControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveAdapterControlState : unit -&gt; obj" Usage="menuAdapter.SaveAdapterControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications éventuellement apportées à l'état du contrôle privé de l'adaptateur depuis la publication de la page sur le serveur.</summary>
        <returns>
          <see cref="T:System.Object" /> contenant les informations d'état du contrôle de la carte sous forme de <see cref="T:System.Web.UI.StateBag" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> méthode utilise la <xref:System.Web.UI.WebControls.Menu> état pour conserver le chemin de navigation actuel du menu du contrôle. Lorsqu’un adaptateur doit gérer des informations d’état privé, il peut remplacer le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> et <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> méthodes. Un adaptateur peut préserver l’état du contrôle privé lorsqu’il existe des fonctionnalités complexes dont avez besoin pour maintenir l’état entre les demandes, indépendamment de l’état du contrôle associé. L’adaptateur doit inscrire l’état de contrôle pendant le <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> appel de méthode dans chaque demande.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> qui contient un argument d'événement facultatif à passer au gestionnaire d'événements.</param>
        <summary>Permet à la classe <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> de traiter un événement déclenché lorsqu'une page est publiée sur le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> méthode permet la <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> classe pour traiter un événement qui est déclenché lorsqu’une page est publiée sur le serveur. La page passe `eventArgument` à la <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
      </Docs>
    </Member>
  </Members>
</Type>