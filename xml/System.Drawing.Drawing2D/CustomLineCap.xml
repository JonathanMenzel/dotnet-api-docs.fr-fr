<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8096d00e8659044745b1cedd1f7d22fab79529a9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36738825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomLineCap&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type CustomLineCap = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a480b-101">Encapsule un embout de ligne personnalisé défini par l'utilisateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a480b-101">Encapsulates a custom user-defined line cap.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-102">Embouts de ligne sont utilisés au début et fin de lignes ou de courbes, dessinées par GDI + <xref:System.Drawing.Pen> objets.</span><span class="sxs-lookup"><span data-stu-id="a480b-102">Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <xref:System.Drawing.Pen> objects.</span></span> <span data-ttu-id="a480b-103">GDI + prend en charge plusieurs styles d’extrémité prédéfinis et permet également aux utilisateurs de définir leurs propres styles d’extrémité.</span><span class="sxs-lookup"><span data-stu-id="a480b-103">GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</span></span> <span data-ttu-id="a480b-104">Cette classe est utilisée pour créer des styles d’extrémité personnalisée.</span><span class="sxs-lookup"><span data-stu-id="a480b-104">This class is used to create custom cap styles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a480b-105">L'exemple suivant montre comment utiliser la classe <xref:System.Drawing.Drawing2D.CustomLineCap>.</span><span class="sxs-lookup"><span data-stu-id="a480b-105">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap> class.</span></span> <span data-ttu-id="a480b-106">Pour exécuter cet exemple, collez, le code dans un Windows Form.</span><span class="sxs-lookup"><span data-stu-id="a480b-106">To run this example paste, the code into a Windows Form.</span></span> <span data-ttu-id="a480b-107">Gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels `DrawCaps` à partir du formulaire <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a480b-107">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a480b-108">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> avec le contour et le remplissage spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-108">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="a480b-109">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le remplissage pour l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-109">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="a480b-110">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le contour de l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-110">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a480b-111">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> avec le contour et le remplissage spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-111">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-112"><xref:System.Drawing.Drawing2D.CustomLineCap> utilise un mode de remplissage de « enroulement », quelle que soit le mode de remplissage spécifié pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a480b-112"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="a480b-113">Le `fillPath` et `strokePath` paramètres ne peut pas être utilisés en même temps.</span><span class="sxs-lookup"><span data-stu-id="a480b-113">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="a480b-114">Un paramètre doit être passé à une valeur null.</span><span class="sxs-lookup"><span data-stu-id="a480b-114">One parameter must be passed a null value.</span></span> <span data-ttu-id="a480b-115">Si la valeur null est passée à aucun paramètre `fillPath` sera ignoré.</span><span class="sxs-lookup"><span data-stu-id="a480b-115">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="a480b-116">Si `strokePath` est `null`, `fillPath` doit intercepter l’axe y négatif.</span><span class="sxs-lookup"><span data-stu-id="a480b-116">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a480b-117">L’exemple suivant montre comment utiliser le <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="a480b-117">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructor.</span></span> <span data-ttu-id="a480b-118">Pour exécuter cet exemple, collez le code dans un Windows Form.</span><span class="sxs-lookup"><span data-stu-id="a480b-118">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="a480b-119">Gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels `DrawCaps` à partir du formulaire <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a480b-119">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="a480b-120">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le remplissage pour l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-120">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="a480b-121">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le contour de l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-121">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <param name="baseCap">
          <span data-ttu-id="a480b-122">Embout de ligne à partir duquel créer l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-122">The line cap from which to create the custom cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a480b-123">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> à partir de l'énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> existante spécifiée avec le contour et le remplissage donnés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-124"><xref:System.Drawing.Drawing2D.CustomLineCap> utilise un mode de remplissage de « enroulement », quelle que soit le mode de remplissage spécifié pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a480b-124"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="a480b-125">Le `fillPath` et `strokePath` paramètres ne peut pas être utilisés en même temps.</span><span class="sxs-lookup"><span data-stu-id="a480b-125">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="a480b-126">Un paramètre doit être passé à une valeur null.</span><span class="sxs-lookup"><span data-stu-id="a480b-126">One parameter must be passed a null value.</span></span> <span data-ttu-id="a480b-127">Si la valeur null est passée à aucun paramètre `fillPath` sera ignoré.</span><span class="sxs-lookup"><span data-stu-id="a480b-127">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="a480b-128">Si `strokePath` est `null`, `fillPath` doit intercepter l’axe y négatif.</span><span class="sxs-lookup"><span data-stu-id="a480b-128">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap, baseInset As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap, float baseInset);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap * single -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap, baseInset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="a480b-129">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le remplissage pour l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-129">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="a480b-130">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le contour de l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-130">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <param name="baseCap">
          <span data-ttu-id="a480b-131">Embout de ligne à partir duquel créer l'embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-131">The line cap from which to create the custom cap.</span>
          </span>
        </param>
        <param name="baseInset">
          <span data-ttu-id="a480b-132">Distance entre l'embout et la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-132">The distance between the cap and the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a480b-133">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> à partir de l'énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> existante spécifiée avec le contour, le remplissage et l'incrustation donnés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-133">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-134"><xref:System.Drawing.Drawing2D.CustomLineCap> utilise un mode de remplissage de « enroulement », quelle que soit le mode de remplissage spécifié pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a480b-134"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="a480b-135">Le `fillPath` et `strokePath` paramètres ne peut pas être utilisés en même temps.</span><span class="sxs-lookup"><span data-stu-id="a480b-135">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="a480b-136">Un paramètre doit être passé à une valeur null.</span><span class="sxs-lookup"><span data-stu-id="a480b-136">One parameter must be passed a null value.</span></span> <span data-ttu-id="a480b-137">Si la valeur null est passée à aucun paramètre `fillPath` sera ignoré.</span><span class="sxs-lookup"><span data-stu-id="a480b-137">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="a480b-138">Si `strokePath` est `null`, `fillPath` doit intercepter l’axe y négatif.</span><span class="sxs-lookup"><span data-stu-id="a480b-138">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap BaseCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.BaseCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a480b-139">Obtient ou définit l'énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> sur laquelle se base ce <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-139">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a480b-140">Énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> sur laquelle se base ce <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-140">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BaseInset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.BaseInset : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a480b-141">Obtient ou définit la distance entre l'embout et la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-141">Gets or sets the distance between the cap and the line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a480b-142">Distance entre le début de l'embout et la fin de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-142">The distance between the beginning of the cap and the end of the line.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="customLineCap.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a480b-143">Crée une copie exacte de <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-143">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a480b-144">
            <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> créé par cette méthode et casté en un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-144">The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a480b-145">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="a480b-145">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="a480b-146">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="a480b-146">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a480b-147">Crée un embout de ligne personnalisé à l’aide de la <xref:System.Drawing.Drawing2D.GraphicsPath> objet.</span><span class="sxs-lookup"><span data-stu-id="a480b-147">Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="a480b-148">Crée un <xref:System.Drawing.Drawing2D.CustomLineCap> objet, `firstCap`, à l’aide du <xref:System.Drawing.Drawing2D.GraphicsPath> objet venez de créer.</span><span class="sxs-lookup"><span data-stu-id="a480b-148">Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.</span></span>  
  
-   <span data-ttu-id="a480b-149">Crée un clone de `firstCap` à l’aide de la <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a480b-149">Creates a clone of `firstCap` by using the <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> method.</span></span>  
  
-   <span data-ttu-id="a480b-150">Configure le <xref:System.Drawing.Pen.CustomStartCap%2A> et <xref:System.Drawing.Pen.CustomEndCap%2A> propriétés de la <xref:System.Drawing.Pen> objet et utilise ce stylet pour dessiner une ligne et les points d’accès clients personnalisés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="a480b-150">Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.</span></span>  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="customLineCap.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a480b-151">Libère toutes les ressources utilisées par cet objet <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-151">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-152">Appel de <xref:System.IDisposable.Dispose%2A> autorise les ressources utilisées par ce <xref:System.Drawing.Drawing2D.CustomLineCap> objet à être réaffectés à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="a480b-152">Calling <xref:System.IDisposable.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.CustomLineCap> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="customLineCap.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a480b-153">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a480b-154">Libère les ressources non managées utilisées par <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-154">Releases the unmanaged resources used by the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CustomLineCap ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="customLineCap.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a480b-155">Autorise <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> à tenter de libérer des ressources et d'exécuter d'autres opérations de nettoyage avant que <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> soit récupéré par l'opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-155">Allows an <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps([out] valuetype System.Drawing.Drawing2D.LineCap&amp; startCap, [out] valuetype System.Drawing.Drawing2D.LineCap&amp; endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetStrokeCaps (ByRef startCap As LineCap, ByRef endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetStrokeCaps([Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % startCap, [Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % endCap);" />
      <MemberSignature Language="F#" Value="member this.GetStrokeCaps :  *  -&gt; unit" Usage="customLineCap.GetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="a480b-156">Énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> utilisée au début d'une ligne dans cet embout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-156">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="a480b-157">Énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> utilisée à la fin d'une ligne dans cet embout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-157">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a480b-158">Obtient les embouts utilisés au début et à la fin des lignes qui constituent cet embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-158">Gets the caps used to start and end lines that make up this custom cap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a480b-159">L'exemple suivant décrit comment utiliser la méthode <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A>.</span><span class="sxs-lookup"><span data-stu-id="a480b-159">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> method.</span></span> <span data-ttu-id="a480b-160">Pour exécuter cet exemple, collez le code dans un Windows Form.</span><span class="sxs-lookup"><span data-stu-id="a480b-160">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="a480b-161">Gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels `DrawCaps` à partir du formulaire <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a480b-161">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStrokeCaps (startCap As LineCap, endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStrokeCaps(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap);" />
      <MemberSignature Language="F#" Value="member this.SetStrokeCaps : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap -&gt; unit" Usage="customLineCap.SetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="a480b-162">Énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> utilisée au début d'une ligne dans cet embout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-162">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="a480b-163">Énumération <see cref="T:System.Drawing.Drawing2D.LineCap" /> utilisée à la fin d'une ligne dans cet embout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-163">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a480b-164">Définit les embouts utilisés au début et à la fin des lignes qui constituent cet embout personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-164">Sets the caps used to start and end lines that make up this custom cap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a480b-165">L'exemple suivant décrit comment utiliser la méthode <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A>.</span><span class="sxs-lookup"><span data-stu-id="a480b-165">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> method.</span></span> <span data-ttu-id="a480b-166">Pour exécuter cet exemple, collez le code dans un Windows Form.</span><span class="sxs-lookup"><span data-stu-id="a480b-166">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="a480b-167">Gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels `DrawCaps` à partir du formulaire <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a480b-167">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property StrokeJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin StrokeJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.StrokeJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a480b-168">Obtient ou définit l'énumération <see cref="T:System.Drawing.Drawing2D.LineJoin" /> qui détermine la manière dont les lignes qui composent cet objet <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> sont jointes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-168">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a480b-169">Énumération <see cref="T:System.Drawing.Drawing2D.LineJoin" /> utilisée par cet objet <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> pour joindre des lignes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-169">The <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object uses to join lines.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-170">Cette propriété spécifie un <xref:System.Drawing.Drawing2D.LineJoin> énumération est utilisée pour joindre des lignes et des courbes qui constituent le tracé rayé de cet <xref:System.Drawing.Drawing2D.CustomLineCap> objet.</span><span class="sxs-lookup"><span data-stu-id="a480b-170">This property specifies a <xref:System.Drawing.Drawing2D.LineJoin> enumeration that is used to join lines and curves that make up the stroked path of this <xref:System.Drawing.Drawing2D.CustomLineCap> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float WidthScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.WidthScale : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a480b-171">Obtient ou définit la proportion selon laquelle ajuster cet objet Class <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> par rapport à la largeur de l'objet <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-171">Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a480b-172">Proportion selon laquelle ajuster l'embout</span>
          <span class="sxs-lookup">
            <span data-stu-id="a480b-172">The amount by which to scale the cap.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a480b-173">Cette propriété spécifie le multiple de la largeur du stylet par lequel multiplier la taille de l’embout personnalisé.</span><span class="sxs-lookup"><span data-stu-id="a480b-173">This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</span></span> <span data-ttu-id="a480b-174">Par exemple, si cette propriété est égale à 1, la largeur de l’embout personnalisé est 10, la hauteur est 5 et une ligne est dessinée avec un stylet avec une largeur de 3, l’extrémité de fin est dessiné 30 large et 15 unités haute.</span><span class="sxs-lookup"><span data-stu-id="a480b-174">For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</span></span> <span data-ttu-id="a480b-175">Cette propriété à 3, l’embout est dessiné avec une largeur de 90 unités et une hauteur de 45 unités.</span><span class="sxs-lookup"><span data-stu-id="a480b-175">Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>