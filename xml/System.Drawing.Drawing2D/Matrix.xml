<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="830c4b8105496845c2dc0d32c2ce03349b30fe2b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36671031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Matrix = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="672bf-101">Encapsule une matrice affine 3-par-3 qui représente une transformation géométrique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="672bf-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span>
      </span>
      <span data-ttu-id="672bf-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="672bf-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-103">Dans [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] vous pouvez stocker une transformation affine dans un <xref:System.Drawing.Drawing2D.Matrix> objet.</span><span class="sxs-lookup"><span data-stu-id="672bf-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="672bf-104">Étant donné que la troisième colonne d’une matrice qui représente une transformation affine est toujours (0, 0, 1), vous spécifiez uniquement les six nombres dans les deux premières colonnes lorsque vous construisez un <xref:System.Drawing.Drawing2D.Matrix> objet.</span><span class="sxs-lookup"><span data-stu-id="672bf-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="672bf-105">L’instruction `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` construit la matrice affichée dans l’illustration suivante.</span><span class="sxs-lookup"><span data-stu-id="672bf-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="672bf-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span><span class="sxs-lookup"><span data-stu-id="672bf-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="672bf-107">Transformations composites</span><span class="sxs-lookup"><span data-stu-id="672bf-107">Composite Transformations</span></span>  
 <span data-ttu-id="672bf-108">Une transformation composite est une séquence de transformations, un après l’autre.</span><span class="sxs-lookup"><span data-stu-id="672bf-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="672bf-109">Prenons les matrices et les transformations dans la liste suivante :</span><span class="sxs-lookup"><span data-stu-id="672bf-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="672bf-110">Matrice A</span><span class="sxs-lookup"><span data-stu-id="672bf-110">Matrix A</span></span>|<span data-ttu-id="672bf-111">Rotation de 90 degrés</span><span class="sxs-lookup"><span data-stu-id="672bf-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="672bf-112">Matrice B</span><span class="sxs-lookup"><span data-stu-id="672bf-112">Matrix B</span></span>|<span data-ttu-id="672bf-113">Mettre à l’échelle par un facteur de 2 dans la direction x</span><span class="sxs-lookup"><span data-stu-id="672bf-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="672bf-114">Matrice C</span><span class="sxs-lookup"><span data-stu-id="672bf-114">Matrix C</span></span>|<span data-ttu-id="672bf-115">Translation de 3 unités dans la direction y</span><span class="sxs-lookup"><span data-stu-id="672bf-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="672bf-116">Si nous commençons avec le point (2, 1), représenté par la matrice [2 1 1] — et multiplier par A, puis B, puis C, le point (2, 1) subiront les trois transformations dans l’ordre indiqué.</span><span class="sxs-lookup"><span data-stu-id="672bf-116">If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="672bf-117">[1 DE 1 2] ABC = [1 DE 5-2]</span><span class="sxs-lookup"><span data-stu-id="672bf-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="672bf-118">Au lieu de cela les trois parties de la transformation composite dans trois matrices distinctes, vous pouvez multiplier A, B et C ensemble pour obtenir une matrice 3 x 3 unique qui stocke la transformation composite entière.</span><span class="sxs-lookup"><span data-stu-id="672bf-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="672bf-119">Supposons que ABC = D. Puis un point multiplié par D donne le même résultat qu’un point multiplié par A, puis B, puis sur C.</span><span class="sxs-lookup"><span data-stu-id="672bf-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="672bf-120">[1 DE 1 2] D = [1 DE 5-2]</span><span class="sxs-lookup"><span data-stu-id="672bf-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="672bf-121">L’illustration suivante montre les matrices A, B, C et D.</span><span class="sxs-lookup"><span data-stu-id="672bf-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="672bf-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span><span class="sxs-lookup"><span data-stu-id="672bf-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="672bf-123">Le fait que la matrice d’une transformation composite peut être formée en multipliant les matrices de transformation individuelles signifie que n’importe quelle séquence de transformations affines peut être stockée dans un seul <xref:System.Drawing.Drawing2D.Matrix> objet.</span><span class="sxs-lookup"><span data-stu-id="672bf-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="672bf-124">L’ordre d’une transformation composite est important.</span><span class="sxs-lookup"><span data-stu-id="672bf-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="672bf-125">En règle générale, faire pivoter, mettre à l’échelle, puis traduire n’est pas le même que l’échelle, faire pivoter, puis traduire.</span><span class="sxs-lookup"><span data-stu-id="672bf-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="672bf-126">De même, l’ordre de la multiplication des matrices est important.</span><span class="sxs-lookup"><span data-stu-id="672bf-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="672bf-127">En général, ABC n’est pas identique à l’arrière.</span><span class="sxs-lookup"><span data-stu-id="672bf-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="672bf-128">Le <xref:System.Drawing.Drawing2D.Matrix> classe fournit plusieurs méthodes pour créer une transformation composite : <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, et <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span><span class="sxs-lookup"><span data-stu-id="672bf-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="672bf-129">L’exemple suivant crée la matrice d’une transformation composite qui pivote tout d’abord de 30 degrés, puis met à l’échelle par un facteur de 2 sur l’axe y et enfin une translation de 5 unités dans la direction x :</span><span class="sxs-lookup"><span data-stu-id="672bf-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-130">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-130">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-131">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> en tant que matrice d'identité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.Rectangle * System.Drawing.Point[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="672bf-132">Structure <see cref="T:System.Drawing.Rectangle" /> qui représente le rectangle à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-132">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span>
          </span>
        </param>
        <param name="plgpts">
          <span data-ttu-id="672bf-133">Tableau de trois structures <see cref="T:System.Drawing.Point" /> qui représente les points du parallélogramme que deviendront les angles supérieur gauche, supérieur droit et inférieur gauche du rectangle après la transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-133">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          </span>
          <span data-ttu-id="672bf-134">L'angle inférieur droit du parallélogramme est défini par les trois premiers angles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-134">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-135">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> en lui assignant la transformation géométrique définie par le rectangle et le tableau de points spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-136">Cette méthode initialise la nouvelle matrice, tel qu’il représente la transformation géométrique mappant le rectangle spécifié par le `rect` paramètre parallélogramme défini par les trois points dans le `plgpts` paramètre.</span><span class="sxs-lookup"><span data-stu-id="672bf-136">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="672bf-137">L’angle supérieur gauche du rectangle est mappé au premier point dans le `plgpts` tableau, l’angle supérieur droit est mappé au deuxième point et l’angle inférieur gauche est mappé au troisième point.</span><span class="sxs-lookup"><span data-stu-id="672bf-137">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="672bf-138">Le point inférieur droit du parallélogramme est défini par les trois premières.</span><span class="sxs-lookup"><span data-stu-id="672bf-138">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.RectangleF * System.Drawing.PointF[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="672bf-139">Structure <see cref="T:System.Drawing.RectangleF" /> qui représente le rectangle à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-139">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span>
          </span>
        </param>
        <param name="plgpts">
          <span data-ttu-id="672bf-140">Tableau de trois structures <see cref="T:System.Drawing.PointF" /> qui représente les points du parallélogramme que deviendront les angles supérieur gauche, supérieur droit et inférieur gauche du rectangle après la transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-140">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          </span>
          <span data-ttu-id="672bf-141">L'angle inférieur droit du parallélogramme est défini par les trois premiers angles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-141">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-142">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> en lui assignant la transformation géométrique définie par le rectangle et le tableau de points spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-142">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-143">Cette méthode initialise la nouvelle <xref:System.Drawing.Drawing2D.Matrix> tel qu’il représente la transformation géométrique mappant le rectangle spécifié par le `rect` paramètre parallélogramme défini par les trois points dans le `plgpts` paramètre.</span><span class="sxs-lookup"><span data-stu-id="672bf-143">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="672bf-144">L’angle supérieur gauche du rectangle est mappé au premier point dans le `plgpts` tableau, l’angle supérieur droit est mappé au deuxième point et l’angle inférieur gauche est mappé au troisième point.</span><span class="sxs-lookup"><span data-stu-id="672bf-144">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="672bf-145">Le point inférieur droit du parallélogramme est défini par les trois premières.</span><span class="sxs-lookup"><span data-stu-id="672bf-145">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : single * single * single * single * single * single -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (m11, m12, m21, m22, dx, dy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11">
          <span data-ttu-id="672bf-146">Valeur du nouveau <see cref="T:System.Drawing.Drawing2D.Matrix" />, à l'intersection de la première ligne et de la première colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-146">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m12">
          <span data-ttu-id="672bf-147">Valeur du nouveau <see cref="T:System.Drawing.Drawing2D.Matrix" />, à l'intersection de la première ligne et de la deuxième colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-147">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m21">
          <span data-ttu-id="672bf-148">Valeur du nouveau <see cref="T:System.Drawing.Drawing2D.Matrix" />, à l'intersection de la deuxième ligne et de la première colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-148">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m22">
          <span data-ttu-id="672bf-149">Valeur du nouveau <see cref="T:System.Drawing.Drawing2D.Matrix" />, à l'intersection de la deuxième ligne et de la deuxième colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-149">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="dx">
          <span data-ttu-id="672bf-150">Valeur du nouveau <see cref="T:System.Drawing.Drawing2D.Matrix" />, à l'intersection de la troisième ligne et de la première colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-150">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="672bf-151">Valeur du nouveau <see cref="T:System.Drawing.Drawing2D.Matrix" />, à l'intersection de la troisième ligne et de la deuxième colonne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-151">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-152">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.Matrix" /> avec les éléments spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-152">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Drawing2D.Matrix" Usage="matrix.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-153">Crée une copie exacte de <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-153">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="672bf-154">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> créé par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-154">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="matrix.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-155">Libère toutes les ressources utilisées par ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-155">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-156">Appel de `Dispose` autorise les ressources utilisées par ce <xref:System.Drawing.Drawing2D.Matrix> objet à être réaffectés à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="672bf-156">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : single[]" Usage="System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-157">Obtient un tableau de valeurs à virgule flottante qui représente les éléments de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-157">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="672bf-158">Tableau de valeurs à virgule flottante qui représente les éléments de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-158">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-159">Les éléments m11, m12, m21, m22, dx et dy du <xref:System.Drawing.Drawing2D.Matrix> sont représentés par les valeurs du tableau dans cet ordre.</span><span class="sxs-lookup"><span data-stu-id="672bf-159">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="672bf-160">Objet à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-160">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-161">Vérifie si l'objet spécifié est un <see cref="T:System.Drawing.Drawing2D.Matrix" /> identique à ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-161">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="672bf-162">Cette méthode retourne <see langword="true" /> si <paramref name="obj" /> est le <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié identique à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-162">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="matrix.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-163">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-163">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-164">Retourne un code de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-164">Returns a hash code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="672bf-165">Code de hachage pour cette <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-165">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-166">Inverse ce <see cref="T:System.Drawing.Drawing2D.Matrix" />, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-166">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-167">L’exemple de code suivant crée une matrice et inverse :</span><span class="sxs-lookup"><span data-stu-id="672bf-167">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-168">Obtient une valeur indiquant si ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> est la matrice d'identité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-168">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="672bf-169">Cette propriété est <see langword="true" /> si cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> est la matrice d'identité ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-169">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvertible : bool" Usage="System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-170">Obtient une valeur indiquant si ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> peut être inversé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-170">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="672bf-171">Cette propriété est <see langword="true" /> si cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> peut être inversé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-171">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-172">Multiplie ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> par le <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié en ajoutant l'objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-172">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="matrix.Multiply matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="672bf-173">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> par lequel ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> doit être multiplié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-173">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-174">Multiplie ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> par la matrice spécifiée dans le paramètre <paramref name="matrix" /> en ajoutant le <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-174">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-175">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span><span class="sxs-lookup"><span data-stu-id="672bf-175">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Multiply (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="672bf-176">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> par lequel ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> doit être multiplié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-176">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="672bf-177">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> qui représente l'ordre de la multiplication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-177">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-178">Multiplie ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> par la matrice spécifiée par le paramètre <paramref name="matrix" />, dans l'ordre spécifié par le paramètre <paramref name="order" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-178">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-179">Si l’ordre spécifié est <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, cette <xref:System.Drawing.Drawing2D.Matrix> est multipliée par la matrice spécifiée en l’ajoutant au début.</span><span class="sxs-lookup"><span data-stu-id="672bf-179">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="672bf-180">Si l’ordre spécifié est <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, cette <xref:System.Drawing.Drawing2D.Matrix> est multipliée par la matrice spécifiée en l’ajoutant à la fin.</span><span class="sxs-lookup"><span data-stu-id="672bf-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672bf-181">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-181">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-182">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-182">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-183">Crée trois matrices.</span><span class="sxs-lookup"><span data-stu-id="672bf-183">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="672bf-184">Répertorie le contenu de la matrice 1 à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-184">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-185">Multiplie la matrice 1 par la matrice 2 et stocke le résultat dans la matrice 1.</span><span class="sxs-lookup"><span data-stu-id="672bf-185">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="672bf-186">Répertorie le contenu de la matrice 1 à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-186">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-187">Multiplie le résultat enregistré dans la matrice 1 par la matrice 3 et à nouveau stocke le résultat dans la matrice 1.</span><span class="sxs-lookup"><span data-stu-id="672bf-187">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="672bf-188">Répertorie le contenu de la matrice 1 à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-188">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-189">Dessine un rectangle à l’écran avant d’appliquer la transformation de matrice 1 (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-189">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-190">Applique la transformation au rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-190">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-191">Dessine le rectangle transformé à l’écran (rectangle rouge), à l’aide des mêmes coordonnées que le rectangle précédent.</span><span class="sxs-lookup"><span data-stu-id="672bf-191">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="672bf-192">Notez que le rectangle rouge a été mis à l’échelle par un facteur de deux dans le sens horizontal, puis pivote de 90 degrés et déplacé (converti) de 250 points sur l’axe x et de 50 points sur l’axe y.</span><span class="sxs-lookup"><span data-stu-id="672bf-192">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-193">Obtient la valeur de translation x (la valeur dx, ou l'élément à l'intersection de la troisième ligne et de la première colonne) de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-193">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="672bf-194">Valeur de translation x de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-194">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-195">Obtient la valeur de translation y (la valeur dy ou l'élément à l'intersection de la troisième ligne et de la deuxième colonne) de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-195">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="672bf-196">Valeur de translation y de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-196">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="matrix.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="672bf-197">Réinitialise ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en lui assignant les éléments de la matrice d'identité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-197">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-198">Les éléments de la diagonale principale de la matrice d’identité sont 1.</span><span class="sxs-lookup"><span data-stu-id="672bf-198">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="672bf-199">Tous les autres éléments de la matrice d’identité sont 0.</span><span class="sxs-lookup"><span data-stu-id="672bf-199">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672bf-200">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-200">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-201">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-201">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-202">Crée une matrice de mise à l'échelle.</span><span class="sxs-lookup"><span data-stu-id="672bf-202">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="672bf-203">Répertorie les éléments de la matrice à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-203">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-204">Rétablit la matrice identité.</span><span class="sxs-lookup"><span data-stu-id="672bf-204">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="672bf-205">Répertorie les éléments à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-205">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-206">Convertit la matrice de 50 points sur l’axe des abscisses et de 40 points sur l’axe des ordonnées.</span><span class="sxs-lookup"><span data-stu-id="672bf-206">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="672bf-207">Répertorie les éléments de la matrice convertie à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-207">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-208">Dessine qu'un rectangle est dessiné à l’écran avant d’appliquer la matrice de transformation (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-208">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-209">Applique la transformation au rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-209">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-210">Dessine que le rectangle transformé est dessiné à l’écran (rectangle rouge), à l’aide des mêmes coordonnées que le rectangle précédent.</span><span class="sxs-lookup"><span data-stu-id="672bf-210">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="672bf-211">Notez que le rectangle rouge n’a pas été mis à l’échelle (en raison de la réinitialisation) mais a été converti sur les axes x et y.</span><span class="sxs-lookup"><span data-stu-id="672bf-211">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-212">Effectue une rotation égale à l'angle spécifié dans le sens des aiguilles d'une montre, par rapport à l'origine de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-212">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="672bf-213">Angle de la rotation, en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-213">The angle of the rotation, in degrees.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-214">Ajoute une rotation égale à l'angle spécifié, dans le sens des aiguilles d'une montre et par rapport à l'origine, au début de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-214">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-215">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="672bf-215">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Rotate (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="672bf-216">Angle (étendue) de la rotation, en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-216">The angle (extent) of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="672bf-217">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> qui spécifie l'ordre (ajout au début ou à la fin) dans lequel la rotation est appliquée à ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-217">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-218">Applique une rotation égale à la valeur spécifiée par le paramètre <paramref name="angle" />, dans le sens des aiguilles d'une montre et par rapport à l'origine (coordonnées x et y égales à zéro), pour ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-218">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-219">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-220">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-221">Dessine un rectangle à l’écran avant d’appliquer une transformation de rotation (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-221">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-222">Crée une matrice et fait pivoter de 45 degrés.</span><span class="sxs-lookup"><span data-stu-id="672bf-222">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="672bf-223">Applique cette matrice de transformation au rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-223">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-224">Dessine le rectangle transformé à l’écran (rectangle rouge).</span><span class="sxs-lookup"><span data-stu-id="672bf-224">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="672bf-225">Notez que le rectangle rouge a subi une rotation autour de la valeur 0, 0 coordonnées d’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-225">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-226">Applique une rotation dans le sens des aiguilles d'une montre et par rapport au point spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-226">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF -&gt; unit" Usage="matrix.RotateAt (angle, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="672bf-227">Angle (étendue) de la rotation, en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-227">The angle (extent) of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="672bf-228">
            <see cref="T:System.Drawing.PointF" /> qui représente le centre de la rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-228">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-229">Applique une rotation dans le sens des aiguilles d'une montre et par rapport au point spécifié par le paramètre <see cref="T:System.Drawing.Drawing2D.Matrix" /> à ce <paramref name="point" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-229">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-230">L’exemple de code suivant montre comment utiliser un <xref:System.Drawing.Drawing2D.Matrix> et <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> méthode pour faire pivoter une chaîne.</span><span class="sxs-lookup"><span data-stu-id="672bf-230">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="672bf-231">Cet exemple est conçu pour être utilisé avec Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="672bf-231">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="672bf-232">Créer un formulaire et collez le code suivant.</span><span class="sxs-lookup"><span data-stu-id="672bf-232">Create a form and paste the following code into it.</span></span> <span data-ttu-id="672bf-233">Appelez le `DrawVerticalStringFromBottomUp` méthode sous de la forme <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="672bf-233">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.RotateAt (angle, point, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="672bf-234">Angle de la rotation, en degrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-234">The angle of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="672bf-235">
            <see cref="T:System.Drawing.PointF" /> qui représente le centre de la rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-235">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="672bf-236">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> qui spécifie l'ordre (ajout au début ou à la fin) dans lequel la rotation est appliquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-236">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-237">Applique une rotation dans le sens des aiguilles d'une montre et par rapport au point spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> dans l'ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-237">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-238">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-238">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-239">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-239">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-240">Dessine un rectangle à l’écran avant d’appliquer une transformation de rotation (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-240">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-241">Crée une matrice et fait pivoter de 45 degrés autour d’un point spécifié.</span><span class="sxs-lookup"><span data-stu-id="672bf-241">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="672bf-242">Applique cette matrice de transformation est le rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-242">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-243">Dessine le rectangle transformé à l’écran (rectangle rouge).</span><span class="sxs-lookup"><span data-stu-id="672bf-243">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="672bf-244">Notez que le rectangle rouge a subi une rotation autour de l’angle supérieur gauche du rectangle (le point de rotation spécifié le <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> méthode).</span><span class="sxs-lookup"><span data-stu-id="672bf-244">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-245">Applique le vecteur d'échelle spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-245">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="672bf-246">Valeur d'échelle de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> sur l'axe x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-246">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="672bf-247">Valeur d'échelle de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> sur l'axe y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-248">Applique le vecteur d'échelle spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-248">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-249">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="672bf-249">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Scale (scaleX, scaleY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="672bf-250">Valeur d'échelle de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> sur l'axe x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-250">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="672bf-251">Valeur d'échelle de cet objet <see cref="T:System.Drawing.Drawing2D.Matrix" /> sur l'axe y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="672bf-252">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> qui spécifie l'ordre (ajout au début ou à la fin) dans lequel le vecteur d'échelle est appliqué à ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-252">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-253">Applique le vecteur d'échelle spécifié (<paramref name="scaleX" /> et <paramref name="scaleY" />) à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> dans l'ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-253">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-254">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-254">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-255">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-255">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-256">Dessine un rectangle à l’écran avant d’appliquer une transformation de mise à l’échelle (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-256">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-257">Crée une matrice et le facteur d’échelle par 3 sur l’axe x et de 2 sur l’axe y.</span><span class="sxs-lookup"><span data-stu-id="672bf-257">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="672bf-258">Applique cette matrice de transformation au rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-258">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-259">Dessine le rectangle transformé à l’écran (rectangle rouge).</span><span class="sxs-lookup"><span data-stu-id="672bf-259">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="672bf-260">Notez que le rectangle rouge a été mis à l’échelle par un facteur de 3 sur l’axe des x et de 2 sur l’axe des ordonnées, y compris l’angle supérieur gauche du rectangle (le point de début du rectangle).</span><span class="sxs-lookup"><span data-stu-id="672bf-260">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-261">Applique le vecteur d'inclinaison spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-261">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single -&gt; unit" Usage="matrix.Shear (shearX, shearY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX">
          <span data-ttu-id="672bf-262">Facteur d'inclinaison horizontale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-262">The horizontal shear factor.</span>
          </span>
        </param>
        <param name="shearY">
          <span data-ttu-id="672bf-263">Facteur d'inclinaison verticale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-263">The vertical shear factor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-264">Applique le vecteur d'inclinaison spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début de la transformation d'inclinaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-264">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-265">La transformation appliquée dans cette méthode est une inclinaison pure uniquement si l’un des paramètres est 0.</span><span class="sxs-lookup"><span data-stu-id="672bf-265">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="672bf-266">Appliquée à un rectangle à l’origine, lorsque le `shearY` facteur est 0, la transformation déplace le bord inférieur horizontalement par `shearX` fois la hauteur du rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-266">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="672bf-267">Lorsque le `shearX` facteur est 0, il déplace le bord droit verticalement de `shearY` fois la largeur du rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-267">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="672bf-268">Attention est dans l’ordre lorsque les deux paramètres sont différents de zéro, car les résultats sont difficiles à prévoir.</span><span class="sxs-lookup"><span data-stu-id="672bf-268">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="672bf-269">Par exemple, si les deux facteurs est 1, la transformation est au singulier (par conséquent, noninvertible), compression de l’ensemble du plan en une seule ligne.</span><span class="sxs-lookup"><span data-stu-id="672bf-269">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672bf-270">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-270">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-271">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-271">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="672bf-272">Dessine un rectangle à l’écran, à l’aide d’un stylet vert, avant d’appliquer une transformation de mise à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="672bf-272">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="672bf-273">Crée un <xref:System.Drawing.Drawing2D.Matrix> et l’utilise pour définir une transformation en coordonnées universelles pour le <xref:System.Drawing.Graphics>.</span><span class="sxs-lookup"><span data-stu-id="672bf-273">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="672bf-274">Dessine un rectangle à l’aide d’un stylet rouge.</span><span class="sxs-lookup"><span data-stu-id="672bf-274">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="672bf-275">Dessine une ellipse à l’aide d’un stylet bleu.</span><span class="sxs-lookup"><span data-stu-id="672bf-275">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="672bf-276">Le résultat est un rectangle vert, un parallélogramme rouge et une ellipse transformée bleue.</span><span class="sxs-lookup"><span data-stu-id="672bf-276">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="672bf-277">Notez que le rectangle vert (dessiné avant la définition de la transformation) utilise directement les coordonnées fournies dans le <xref:System.Drawing.Graphics.DrawRectangle%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="672bf-277">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="672bf-278">Les deux autres figures sont transformées avant le dessin.</span><span class="sxs-lookup"><span data-stu-id="672bf-278">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="672bf-279">Le rectangle est transformé en parallélogramme (rouge), et les points de suspension (bleu) est transformé pour s’ajuster dans un parallélogramme transformé.</span><span class="sxs-lookup"><span data-stu-id="672bf-279">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="672bf-280">Notez que le bas du rectangle est déplacé (incliné) sur l’axe des x selon un facteur de deux fois la hauteur du rectangle, formant ainsi parallélogramme.</span><span class="sxs-lookup"><span data-stu-id="672bf-280">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Shear (shearX, shearY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX">
          <span data-ttu-id="672bf-281">Facteur d'inclinaison horizontale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-281">The horizontal shear factor.</span>
          </span>
        </param>
        <param name="shearY">
          <span data-ttu-id="672bf-282">Facteur d'inclinaison verticale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-282">The vertical shear factor.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="672bf-283">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> qui spécifie l'ordre (ajout au début ou à la fin) dans lequel l'inclinaison est appliquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-283">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-284">Applique le vecteur d'inclinaison spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> dans l'ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-284">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="672bf-285">La transformation appliquée dans cette méthode est une inclinaison pure uniquement si l’un des paramètres est 0.</span><span class="sxs-lookup"><span data-stu-id="672bf-285">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="672bf-286">Appliquée à un rectangle à l’origine, lorsque le `shearY` facteur est 0, la transformation déplace le bord inférieur horizontalement par `shearX` fois la hauteur du rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-286">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="672bf-287">Lorsque le `shearX` facteur est 0, il déplace le bord droit verticalement de `shearY` fois la largeur du rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-287">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="672bf-288">Attention est dans l’ordre lorsque les deux paramètres sont différents de zéro, car les résultats sont difficiles à prévoir.</span><span class="sxs-lookup"><span data-stu-id="672bf-288">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="672bf-289">Par exemple, si les deux facteurs est 1, la transformation est au singulier (par conséquent, noninvertible), compression de l’ensemble du plan en une seule ligne.</span><span class="sxs-lookup"><span data-stu-id="672bf-289">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="672bf-290">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="672bf-290">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-291">Applique la transformation géométrique représentée par ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> à un tableau de points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-291">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="672bf-292">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-292">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-293">Applique la transformation géométrique représentée par ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> à un tableau de points spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-293">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-294">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-294">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-295">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-295">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-296">Crée un tableau de points qui forment un rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-296">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-297">Dessine ce tableau de points (à l’écran avant d’appliquer une transformation de mise à l’échelle (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-297">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-298">Crée une matrice et le facteur d’échelle par 3 sur l’axe x et de 2 sur l’axe y.</span><span class="sxs-lookup"><span data-stu-id="672bf-298">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="672bf-299">S’applique à cette matrice de transformation pour le tableau de points.</span><span class="sxs-lookup"><span data-stu-id="672bf-299">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="672bf-300">Dessine le tableau transformé à l’écran (rectangle rouge).</span><span class="sxs-lookup"><span data-stu-id="672bf-300">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="672bf-301">Notez que le rectangle rouge a été mis à l’échelle par un facteur de 3 sur l’axe des x et de 2 sur l’axe des ordonnées, y compris l’angle supérieur gauche du rectangle (le point de début du rectangle).</span><span class="sxs-lookup"><span data-stu-id="672bf-301">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="672bf-302">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-302">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-303">Applique la transformation géométrique représentée par ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> à un tableau de points spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-303">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-304">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="672bf-304">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-305">Multiplie chaque vecteur d'un tableau par la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-305">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="672bf-306">Les éléments de translation de cette matrice (troisième ligne) sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-306">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="672bf-307">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-307">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-308">Applique uniquement les composants d'échelle et de rotation de ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> au tableau de points spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-308">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-309">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-309">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-310">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-310">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-311">Crée un tableau de points qui forment un rectangle.</span><span class="sxs-lookup"><span data-stu-id="672bf-311">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="672bf-312">Dessine ce tableau de points à l’écran avant d’appliquer une transformation de mise à l’échelle (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-312">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-313">Crée une matrice de facteur d’échelle par 3 sur l’axe x et de 2 sur l’axe y et il se traduit par 100 sur les deux axes.</span><span class="sxs-lookup"><span data-stu-id="672bf-313">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="672bf-314">Répertorie les éléments de la matrice à l’écran.</span><span class="sxs-lookup"><span data-stu-id="672bf-314">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="672bf-315">S’applique à cette matrice de transformation pour le tableau de points.</span><span class="sxs-lookup"><span data-stu-id="672bf-315">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="672bf-316">Dessine le tableau transformé à l’écran (rectangle rouge).</span><span class="sxs-lookup"><span data-stu-id="672bf-316">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="672bf-317">Notez que le rectangle rouge a été mis à l’échelle par un facteur de 3 sur l’axe des x et de 2 sur l’axe des ordonnées, y compris l’angle supérieur gauche du rectangle (le point de début du rectangle), mais le vecteur de translation (les deux derniers éléments de la matrice) est ignoré.</span><span class="sxs-lookup"><span data-stu-id="672bf-317">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="672bf-318">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-318">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-319">Multiplie chaque vecteur d'un tableau par la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-319">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="672bf-320">Les éléments de translation de cette matrice (troisième ligne) sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-320">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-321">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="672bf-321">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="672bf-322">Applique le vecteur de translation spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-322">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="672bf-323">Valeur de translation x de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-323">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="672bf-324">Valeur de translation y de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-324">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-325">Applique le vecteur de translation spécifié (<paramref name="offsetX" /> et <paramref name="offsetY" />) à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> en l'ajoutant au début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-325">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-326">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="672bf-326">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Translate (offsetX, offsetY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="672bf-327">Valeur de translation x de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-327">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="672bf-328">Valeur de translation y de ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-328">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="672bf-329">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> qui spécifie l'ordre (ajout au début ou à la fin) dans lequel la translation est appliquée à ce <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-329">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-330">Applique le vecteur de translation spécifié à ce <see cref="T:System.Drawing.Drawing2D.Matrix" /> dans l'ordre spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-330">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="672bf-331">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="672bf-331">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="672bf-332">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="672bf-332">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="672bf-333">Dessine un rectangle à l’écran avant d’appliquer la conversion (rectangle bleu).</span><span class="sxs-lookup"><span data-stu-id="672bf-333">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="672bf-334">Crée une matrice et le traduit par 100 sur les deux axes.</span><span class="sxs-lookup"><span data-stu-id="672bf-334">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="672bf-335">S’applique cette matrice de transformation au rectangle</span><span class="sxs-lookup"><span data-stu-id="672bf-335">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="672bf-336">Dessine le rectangle transformé à l’écran (rectangle rouge).</span><span class="sxs-lookup"><span data-stu-id="672bf-336">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="672bf-337">Notez que le début du rectangle rouge est situés 100 points sur les deux axes à partir du début du triangle bleu.</span><span class="sxs-lookup"><span data-stu-id="672bf-337">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.VectorTransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.VectorTransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="672bf-338">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-338">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="672bf-339">Multiplie chaque vecteur d'un tableau par la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-339">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="672bf-340">Les éléments de translation de cette matrice (troisième ligne) sont ignorés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="672bf-340">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>