<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AdjustableArrowCap.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50c86477d7957c5af4a9dd9ce6593a6697c73c934.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c86477d7957c5af4a9dd9ce6593a6697c73c934</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.AdjustableArrowCap">
          <source>Represents an adjustable arrow-shaped line cap.</source>
          <target state="translated">Représente un embout de ligne réglable en forme de flèche.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.AdjustableArrowCap">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.AdjustableArrowCap">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /&gt;</ph> class with the specified width and height.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /&gt;</ph> avec la largeur et la hauteur spécifiées.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>The width of the arrow.</source>
          <target state="translated">Largeur de la flèche.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>The height of the arrow.</source>
          <target state="translated">Hauteur de la flèche.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /&gt;</ph> class with the specified width and height.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /&gt;</ph> avec la largeur et la hauteur spécifiées.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>The arrow end caps created with this constructor are always filled.</source>
          <target state="translated">Les embouts en forme de flèche créés à l'aide de ce constructeur sont toujours remplis.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>Creates an <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> object named <ph id="ph2">`myArrow`</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> objet nommé <ph id="ph2">`myArrow`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object named <ph id="ph2">`capPen`</ph>, and sets its <ph id="ph3">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> properties equal to <ph id="ph5">`myArrow`</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objet nommé <ph id="ph2">`capPen`</ph>et définit sa <ph id="ph3">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> propriétés égales à <ph id="ph5">`myArrow`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> method to draw to screen a line capped by two arrows.</source>
          <target state="translated">Utilise le <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> méthode pour dessiner une ligne terminée par deux flèches à l’écran.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>The width of the arrow.</source>
          <target state="translated">Largeur de la flèche.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>The height of the arrow.</source>
          <target state="translated">Hauteur de la flèche.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to fill the arrow cap; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour remplir l'embout de flèche ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /&gt;</ph> class with the specified width, height, and fill property.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /&gt;</ph> avec la largeur, la hauteur et la propriété de remplissage spécifiées.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>Whether an arrow end cap is filled depends on the argument passed to the <ph id="ph1">&lt;paramref name="isFilled" /&gt;</ph> parameter.</source>
          <target state="translated">Le fait qu'un embout de flèche soit rempli ou non dépend de l'argument passé au paramètre <ph id="ph1">&lt;paramref name="isFilled" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>Creates an <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> object named <ph id="ph2">`myArrow`</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> objet nommé <ph id="ph2">`myArrow`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object named <ph id="ph2">`capPen`</ph>, and sets its <ph id="ph3">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> properties equal to <ph id="ph5">`myArrow`</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objet nommé <ph id="ph2">`capPen`</ph>et définit sa <ph id="ph3">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> propriétés égales à <ph id="ph5">`myArrow`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> method to draw to screen a line capped by two arrows.</source>
          <target state="translated">Utilise le <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph> méthode pour dessiner une ligne terminée par deux flèches à l’écran.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
          <source>Gets or sets whether the arrow cap is filled.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si l'embout de flèche est rempli.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
          <source>This property is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the arrow cap is filled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette propriété est <ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'embout de flèche est rempli ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
          <source>Gets or sets the height of the arrow cap.</source>
          <target state="translated">Obtient ou définit la hauteur de l'embout de la flèche.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
          <source>The height of the arrow cap.</source>
          <target state="translated">Hauteur de l'embout de la flèche.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
          <source>The height of the arrow cap is scaled by the width of the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object used to draw the line being capped.</source>
          <target state="translated">La hauteur de l’embout de flèche est ajustée selon la largeur de la <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objet utilisé pour dessiner la ligne en cours terminée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
          <source>For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> object has a height of 3, then the actual arrow cap is drawn 15 pixels high.</source>
          <target state="translated">Par exemple, si vous dessinez une ligne à embouts avec un stylet qui a une largeur de 5 pixels et la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> objet a une hauteur de 3, l’embout de flèche réel est dessinés 15 pixels de haut.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
          <source>Gets or sets the number of units between the outline of the arrow cap and the fill.</source>
          <target state="translated">Obtient ou définit le nombre d'unités entre le contour de l'embout de la flèche et le remplissage.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
          <source>The number of units between the outline of the arrow cap and the fill of the arrow cap.</source>
          <target state="translated">Nombre d'unités entre le contour de l'embout de la flèche et son remplissage.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
          <source>Gets or sets the width of the arrow cap.</source>
          <target state="translated">Obtient ou définit la largeur de l'embout de flèche.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
          <source>The width, in units, of the arrow cap.</source>
          <target state="translated">Largeur de l'embout de flèche, exprimée en unités.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
          <source>The width of the arrow cap is scaled by the width of the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object used to draw the line being capped.</source>
          <target state="translated">La largeur de l’embout de flèche est ajustée par la largeur de la <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objet utilisé pour dessiner la ligne en cours terminée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
          <source>For example, if you are drawing a capped line with a pen that has a width of 5 pixels, and the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> object has a width of 3, then the actual arrow cap is drawn 15 pixels wide.</source>
          <target state="translated">Par exemple, si vous dessinez une ligne à embouts avec un stylet qui a une largeur de 5 pixels et la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.AdjustableArrowCap&gt;</ph> objet a une largeur de 3, l’embout de flèche réel est dessinés 15 pixels de large.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>