<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GraphicsPathIterator.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5868cfafe7838293ffd89cde43221f26fa996840c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">868cfafe7838293ffd89cde43221f26fa996840c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>Provides the ability to iterate through subpaths in a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> and test the types of shapes contained in each subpath.</source>
          <target state="translated">Permet d'itérer au sein de sous-tracés dans un <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> et de tester les types de formes contenus dans chaque sous-tracé.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object for which this helper class is to be initialized.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> pour lequel une classe d'assistance doit être initialisée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> avec l'objet <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Upon return, contains an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points in the path.</source>
          <target state="translated">Au retour, contient un tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points du tracé.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Upon return, contains an array of bytes that represents the types of points in the path.</source>
          <target state="translated">Au retour, contient un tableau d'octets qui représente les types de points du tracé.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Specifies the starting index of the arrays.</source>
          <target state="translated">Spécifie l'index de début des tableaux.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Specifies the ending index of the arrays.</source>
          <target state="translated">Spécifie l'index de fin des tableaux.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> property and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> property arrays of the associated <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into the two specified arrays.</source>
          <target state="translated">Copie la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> et les tableaux de propriétés <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> du <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> associé dans les deux tableaux spécifiés.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>The number of points copied.</source>
          <target state="translated">Nombre de points copiés.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`endIndex`</ph> parameters to copy a specified range of the path data.</source>
          <target state="translated">Utilisez le <ph id="ph1">`startIndex`</ph> et <ph id="ph2">`endIndex`</ph> paramètres pour copier une plage spécifiée de données du tracé.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Creates a graphics path.</source>
          <target state="translated">Crée un tracé graphique.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Populates it with several primitives and some markers.</source>
          <target state="translated">Remplit avec plusieurs primitives et des marqueurs.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Lists the path data on the left side of the screen.</source>
          <target state="translated">Répertorie les données de chemin d’accès sur le côté gauche de l’écran.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> and rewinds it.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> et rembobine.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Increments the path data index to the second marker.</source>
          <target state="translated">Incrémente l’index de données de chemin d’accès au deuxième marqueur.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A&gt;</ph> method to copy the path data contained between the start and end indexes to the points and types arrays.</source>
          <target state="translated">Appelle la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A&gt;</ph> méthode pour copier les données de chemin d’accès au contenu entre le début et la fin des index sur les points et types de tableaux.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Lists this copied data on the right side of the screen.</source>
          <target state="translated">Répertorie les données copiées sur le côté droit de l’écran.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
          <source>Gets the number of points in the path.</source>
          <target state="translated">Obtient le nombre de points dans le tracé.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
          <source>The number of points in the path.</source>
          <target state="translated">Nombre de points dans le tracé.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">Appel de <ph id="ph1">`Dispose`</ph> autorise les ressources utilisées par ce <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> objet à être réaffectés à d’autres fins.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Upon return, contains an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points in the path.</source>
          <target state="translated">Au retour, contient un tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points du tracé.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Upon return, contains an array of bytes that represents the types of points in the path.</source>
          <target state="translated">Au retour, contient un tableau d'octets qui représente les types de points du tracé.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Copies the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> property and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> property arrays of the associated <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into the two specified arrays.</source>
          <target state="translated">Copie la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> et les tableaux de propriétés <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> du <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> associé dans les deux tableaux spécifiés.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>The number of points copied.</source>
          <target state="translated">Nombre de points copiés.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Creates a graphics path.</source>
          <target state="translated">Crée un tracé graphique.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Populates it with several primitives and some markers.</source>
          <target state="translated">Remplit avec plusieurs primitives et des marqueurs.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Lists the path data on the left side of the screen.</source>
          <target state="translated">Répertorie les données de chemin d’accès sur le côté gauche de l’écran.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> and rewinds it.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> et rembobine.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Increments the path data index to the second marker.</source>
          <target state="translated">Incrémente l’index de données de chemin d’accès au deuxième marqueur.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A&gt;</ph> method to copy the path data to the <ph id="ph2">`points`</ph> and <ph id="ph3">`types`</ph> arrays.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A&gt;</ph> méthode pour copier les données de chemin d’accès à la <ph id="ph2">`points`</ph> et <ph id="ph3">`types`</ph> tableaux.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Lists this copied data on the right side of the screen.</source>
          <target state="translated">Répertorie les données copiées sur le côté droit de l’écran.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Indicates whether the path associated with this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> contains a curve.</source>
          <target state="translated">Indique si le tracé associé à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> contient une courbe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current subpath contains a curve; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le sous-tracé en cours contient une courbe ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>All curves in a path are stored as sequences of Bézier splines.</source>
          <target state="translated">Toutes les courbes dans un chemin d’accès sont stockés sous forme de séquences de splines de Bézier.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>For example, when you add an ellipse to a path, you specify the upper-left corner, the width, and the height of the ellipse's bounding rectangle.</source>
          <target state="translated">Par exemple, lorsque vous ajoutez une ellipse à un chemin d’accès, vous spécifiez le coin supérieur gauche, la largeur et la hauteur du rectangle englobant de l’ellipse.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Those numbers (upper-left corner, width, and height) are not stored in the path; instead; the ellipse is converted to a sequence of four Bézier splines.</source>
          <target state="translated">Ces nombres (coin supérieur gauche, largeur et hauteur) ne sont pas stockées dans le chemin d’accès ; à la place. les points de suspension est convertie en une séquence de quatre splines de Bézier.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>The path stores the endpoints and control points of those Bézier splines.</source>
          <target state="translated">Le tracé stocke les points de terminaison et les points de contrôle de ces splines de Bézier.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>A path stores an array of data points, each of which belongs to a line or a Bézier spline.</source>
          <target state="translated">Un chemin d’accès stocke un tableau de points de données, chacune d’elles appartient à une ligne ou d’une spline de Bézier.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>If some of the points in the array belong to Bézier splines, then <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Si certains des points dans le tableau appartiennent à des splines de Bézier, puis <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> retourne <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>If all points in the array belong to lines, then <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Si tous les points du tableau appartiennent à des lignes, puis <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> retourne <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Certain methods flatten a path, which means that all the curves in the path are converted to sequences of lines.</source>
          <target state="translated">Certaines méthodes aplanissent un tracé, ce qui signifie que toutes les courbes dans le chemin d’accès sont converties en séquences de lignes.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>After a path has been flattened, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> will always return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Une fois un chemin d’accès a été mis à plat, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> retournera toujours <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Calling the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> class will flatten a path.</source>
          <target state="translated">Appel de la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A&gt;</ph> méthode de la <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> classe aplanit un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object, <ph id="ph2">`myPath`</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> objet, <ph id="ph2">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Adds three lines, a rectangle, and an ellipse.</source>
          <target state="translated">Ajoute trois lignes, un rectangle et une ellipse.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object for <ph id="ph2">`myPath`</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> pour l’objet <ph id="ph2">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Tests to see if the current path <ph id="ph1">`myPath`</ph> contains a curve.</source>
          <target state="translated">Vérifie si le chemin d’accès actuel <ph id="ph1">`myPath`</ph> contient une courbe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Shows the result of the test in a message box.</source>
          <target state="translated">Affiche le résultat du test dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>Moves the iterator to the next marker in the path.</source>
          <target state="translated">Déplace l'itérateur jusqu'au marqueur suivant dans le tracé.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object to which the points will be copied.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> vers lequel seront copiés les points.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> object has a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object associated with it.</source>
          <target state="translated">Cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> possède un <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> qui lui est associé.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /&gt;</ph> method increments the associated <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object passed in to the parameter.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /&gt;</ph> incrémente le <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> associé au marqueur suivant dans son tracé et copie tous les points contenus entre le marqueur en cours et le marqueur suivant (ou la fin du tracé) dans un deuxième objet <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> passé dans le paramètre.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The number of points between this marker and the next.</source>
          <target state="translated">Nombre de points entre ce marqueur et le suivant.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to set markers in a path.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> méthode pour définir des marqueurs dans un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Markers are used to create groups of subpaths.</source>
          <target state="translated">Marqueurs sont utilisés pour créer des groupes de sous-tracés.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>One or more subpaths can be between two markers.</source>
          <target state="translated">Une ou plusieurs sections peuvent être entre deux marques.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Adds three lines, a rectangle, an ellipse, and two markers.</source>
          <target state="translated">Ajoute trois lignes, un rectangle, une ellipse et deux marqueurs.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Lists the values of all the path's points to the left side of the screen.</source>
          <target state="translated">Répertorie les valeurs de tous les points du tracé sur le côté gauche de l’écran.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object, <ph id="ph2">`myPathSection`</ph>, to receive copied points.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> objet <ph id="ph2">`myPathSection`</ph>pour recevoir les points copiés.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method, which iterates to the first marker and copies all the points contained between that marker and the next to <ph id="ph2">`myPathSection`</ph>.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> (méthode), qui parcourt le premier marqueur et copie tous les points contenus entre ce marqueur et le suivant à <ph id="ph2">`myPathSection`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Returns the number of points copied to <ph id="ph1">`markerPoints`</ph>.</source>
          <target state="translated">Retourne le nombre de points copiés vers <ph id="ph1">`markerPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Lists the marker number (the first marker) and number of points it contains to the right side of the screen.</source>
          <target state="translated">Répertorie le nombre de marqueur (premier marqueur) et le nombre de points qu’il contient sur le côté droit de l’écran.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>[out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.</source>
          <target state="translated">[out] La référence entière fournie à ce paramètre reçoit l'index du point de départ d'un sous-tracé.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>[out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <bpt id="p1">&lt;c&gt;</bpt>startIndex<ept id="p1">&lt;/c&gt;</ept> points.</source>
          <target state="translated">[out] La référence entière fournie à ce paramètre reçoit l’index du point final d’un sous-tracé désigné par <bpt id="p1">&lt;c&gt;</bpt>startIndex<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> to the next marker in the path and returns the start and stop indexes by way of the [out] parameters.</source>
          <target state="translated">Incrémente <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> au marqueur suivant dans le tracé et retourne les index de début et de fin au moyen des paramètres [out].</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>The number of points between this marker and the next.</source>
          <target state="translated">Nombre de points entre ce marqueur et le suivant.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to set markers in a path.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> méthode pour définir des marqueurs dans un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Markers are used to create groups of subpaths.</source>
          <target state="translated">Marqueurs sont utilisés pour créer des groupes de sous-tracés.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>One or more subpaths can be between two markers.</source>
          <target state="translated">Une ou plusieurs sections peuvent être entre deux marques.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Adds three lines, a rectangle, and an ellipse ¾ with markers between each.</source>
          <target state="translated">Ajoute trois lignes, un rectangle et une ellipse aux ¾ avec marqueurs entre chaque.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Draws the values for the array of points to the screen.</source>
          <target state="translated">Dessine les valeurs pour le tableau de points à l’écran.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method.</source>
          <target state="translated">Appelle la méthode <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Uses the values returned from the iterative calls to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> to draw the start and stop points for each marker to the screen.</source>
          <target state="translated">Utilise les valeurs retournées par des appels répétitifs à <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> pour dessiner le démarrer et arrêter des points pour chaque marqueur à l’écran.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Draws the value for the total number of points to the screen.</source>
          <target state="translated">Dessine la valeur du nombre total de points à l’écran.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>[out] Receives the point type shared by all points in the group.</source>
          <target state="translated">[out] Reçoit le type de points partagé par tous les points du groupe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Possible types can be retrieved from the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration.</source>
          <target state="translated">Les types possibles peuvent être récupérés de l'énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>[out] Receives the starting index of the group of points.</source>
          <target state="translated">[out] Reçoit l'index de début du groupe de points.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>[out] Receives the ending index of the group of points.</source>
          <target state="translated">[out] Reçoit l'index de fin du groupe de points.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Gets the starting index and the ending index of the next group of data points that all have the same type.</source>
          <target state="translated">Obtient l'index de début et l'index de fin du groupe suivant de points de données possédant tous le même type.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>This method returns the number of data points in the group.</source>
          <target state="translated">Cette méthode retourne le nombre de points de données dans le groupe.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>If there are no more groups in the path, this method returns 0.</source>
          <target state="translated">Si le tracé ne comprend plus de groupe, cette méthode retourne 0.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Adds three lines, a rectangle, and an ellipse.</source>
          <target state="translated">Ajoute trois lignes, un rectangle et une ellipse.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Lists the values of all the points to the left side of the screen.</source>
          <target state="translated">Répertorie les valeurs de tous les points sur le côté gauche de l’écran.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> and rewinds it.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> et rembobine.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>In a <ph id="ph1">`for`</ph> loop, iterates through the points using the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> methods.</source>
          <target state="translated">Dans un <ph id="ph1">`for`</ph> de boucle, parcourt les points à l’aide de la <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Uses the values returned from the iterative calls to list the subpath number, the number of points in it, and the type of the path points to the right side of the screen.</source>
          <target state="translated">Utilise les valeurs retournées par les appels répétitifs pour répertorier le nombre de sous-chemin, le nombre de points qu’il contient et le type des points de chemin d’accès au côté droit de l’écran.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Displays the value for the total number of points to the screen.</source>
          <target state="translated">Affiche la valeur du nombre total de points à l’écran.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Note that <ph id="ph1">`ListPathPoints`</ph> is a helper function that separates most (not all) of the display code from the graphics path code.</source>
          <target state="translated">Notez que <ph id="ph1">`ListPathPoints`</ph> est une fonction d’assistance qui sépare la plupart (et non la totalité) du code d’affichage à partir du code de chemin d’accès des graphiques.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>Moves the subpath to the next subpath in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Déplace le sous-tracé vers le sous-tracé suivant dans le <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> dont les points de données doivent être définis pour correspondre aux points de données de la figure récupérée (sous-tracé) pour cet itérateur.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>[out] Indicates whether the current subpath is closed.</source>
          <target state="translated">[out] Indique si le sous-tracé en cours est fermé.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>It is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the if the figure is closed, otherwise it is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la figure est fermée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Gets the next figure (subpath) from the associated path of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph>.</source>
          <target state="translated">Obtient la figure suivante (sous-tracé) à partir du tracé associé à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>The number of data points in the retrieved figure (subpath).</source>
          <target state="translated">Nombre de points de données dans la figure récupérée (sous-tracé).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>If there are no more figures to retrieve, zero is returned.</source>
          <target state="translated">S'il n'existe plus de figure à récupérer, une valeur nulle est retournée.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Adds three lines, a rectangle, an ellipse, and two markers.</source>
          <target state="translated">Ajoute trois lignes, un rectangle, une ellipse et deux marqueurs.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Lists the values of all the path's points to the left side of the screen.</source>
          <target state="translated">Répertorie les valeurs de tous les points du tracé sur le côté gauche de l’écran.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object, <ph id="ph2">`myPathSection`</ph>, to receive copied points.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> objet <ph id="ph2">`myPathSection`</ph>pour recevoir les points copiés.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> method, which iterates to the third subpath (figure) and copies all the points contained in that subpath to the <ph id="ph2">`myPathSection`</ph> path, and also returns the number of points copied to <ph id="ph3">`subpathPoints`</ph>.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> (méthode), qui parcourt le troisième sous-tracé (figure) et copie tous les points contenus dans ce sous-tracé le <ph id="ph2">`myPathSection`</ph> chemin d’accès, puis retourne également le nombre de points copié vers <ph id="ph3">`subpathPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Lists the subpath number and number of points it contains to the right side of the screen.</source>
          <target state="translated">Répertorie le numéro du sous-tracé et le nombre de points qu’il contient sur le côté droit de l’écran.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>[out] Receives the starting index of the next subpath.</source>
          <target state="translated">[out] Reçoit l'index de début du sous-tracé suivant.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>[out] Receives the ending index of the next subpath.</source>
          <target state="translated">[out] Reçoit l'index de fin du sous-tracé suivant.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>[out] Indicates whether the subpath is closed.</source>
          <target state="translated">[out] Indique si le sous-tracé est fermé.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Moves the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> to the next subpath in the path.</source>
          <target state="translated">Déplace <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> jusqu'au sous-tracé suivant dans le tracé.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The start index and end index of the next subpath are contained in the [out] parameters.</source>
          <target state="translated">Les index de début et de fin du sous-tracé suivant sont contenus dans les paramètres [out].</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The number of subpaths in the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object.</source>
          <target state="translated">Nombre de sous-tracés dans l'objet <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Adds three lines, a rectangle, and an ellipse.</source>
          <target state="translated">Ajoute trois lignes, un rectangle et une ellipse.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Draws the values for the array of points to the screen.</source>
          <target state="translated">Dessine les valeurs pour le tableau de points à l’écran.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Crée un objet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> method.</source>
          <target state="translated">Appelle la méthode <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Uses the values returned from the iterative calls to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> to draw the start and stop values for each subpath to the screen.</source>
          <target state="translated">Utilise les valeurs retournées par des appels répétitifs à <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> pour dessiner le démarrer et arrêter des valeurs de chaque sous-tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Draws the value for the total number of subpaths to the screen.</source>
          <target state="translated">Dessine la valeur du nombre total de sous-tracés à l’écran.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>Rewinds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> to the beginning of its associated path.</source>
          <target state="translated">Rembobine ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> jusqu'au début du tracé qui lui est associé.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>The first time you call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> method of an iterator, it gets the first figure (subpath) of that iterator's associated path.</source>
          <target state="translated">La première fois que vous appelez le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> méthode d’un itérateur, elle obtient la première figure (sous-tracé) du chemin d’accès associé de cet itérateur.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>The second time, it gets the second figure, and so on.</source>
          <target state="translated">La deuxième fois, elle obtient la deuxième figure et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph> method, the sequence starts over; that is, after you call <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph>, the next call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> gets the first figure in the path.</source>
          <target state="translated">Lorsque vous appelez le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph> (méthode), la séquence démarre ; autrement dit, après avoir appelé <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph>, l’appel suivant à <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> Obtient la première figure dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> methods behave similarly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> méthodes se comportent de la même façon.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
          <source>Gets the number of subpaths in the path.</source>
          <target state="translated">Obtient le nombre de sous-tracés dans le tracé.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
          <source>The number of subpaths in the path.</source>
          <target state="translated">Nombre de sous-tracés dans le tracé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>