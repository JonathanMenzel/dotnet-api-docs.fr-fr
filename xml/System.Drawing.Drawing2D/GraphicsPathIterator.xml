<Type Name="GraphicsPathIterator" FullName="System.Drawing.Drawing2D.GraphicsPathIterator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71133be4f46e376e59a346bac44968fc61f5a3d7" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49141506" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPathIterator : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPathIterator extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPathIterator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPathIterator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPathIterator sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPathIterator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6e166-101">Permet d'itérer au sein de sous-tracés dans un <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> et de tester les types de formes contenus dans chaque sous-tracé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e166-101">Provides the ability to iterate through subpaths in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> and test the types of shapes contained in each subpath.</span>
      </span>
      <span data-ttu-id="6e166-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e166-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPathIterator (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPathIterator(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPathIterator : System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Drawing2D.GraphicsPathIterator" Usage="new System.Drawing.Drawing2D.GraphicsPathIterator path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="6e166-103">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> pour lequel une classe d'assistance doit être initialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-103">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for which this helper class is to be initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-104">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> avec l'objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-104">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> class with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyData">
      <MemberSignature Language="C#" Value="public int CopyData (ref System.Drawing.PointF[] points, ref byte[] types, int startIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CopyData(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types, int32 startIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyData (ByRef points As PointF(), ByRef types As Byte(), startIndex As Integer, endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CopyData(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types, int startIndex, int endIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyData :  *  * int * int -&gt; int" Usage="graphicsPathIterator.CopyData (points, types, startIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]" RefType="ref" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="6e166-105">Au retour, contient un tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points du tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-105">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="6e166-106">Au retour, contient un tableau d'octets qui représente les types de points du tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-106">Upon return, contains an array of bytes that represents the types of points in the path.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="6e166-107">Spécifie l'index de début des tableaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-107">Specifies the starting index of the arrays.</span>
          </span>
        </param>
        <param name="endIndex">
          <span data-ttu-id="6e166-108">Spécifie l'index de fin des tableaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-108">Specifies the ending index of the arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-109">Copie la propriété <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> et les tableaux de propriétés <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> du <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> associé dans les deux tableaux spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-109">Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-110">Nombre de points copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-110">The number of points copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e166-111">Utilisez le `startIndex` et `endIndex` paramètres pour copier une plage spécifiée de données du tracé.</span><span class="sxs-lookup"><span data-stu-id="6e166-111">Use the `startIndex` and `endIndex` parameters to copy a specified range of the path data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e166-112">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-112">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-113">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-113">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-114">Crée un tracé graphique.</span><span class="sxs-lookup"><span data-stu-id="6e166-114">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="6e166-115">Remplit avec plusieurs primitives et des marqueurs.</span><span class="sxs-lookup"><span data-stu-id="6e166-115">Populates it with several primitives and some markers.</span></span>  
  
-   <span data-ttu-id="6e166-116">Répertorie les données de chemin d’accès sur le côté gauche de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-116">Lists the path data on the left side of the screen.</span></span>  
  
-   <span data-ttu-id="6e166-117">Crée un <xref:System.Drawing.Drawing2D.GraphicsPathIterator> et rembobine.</span><span class="sxs-lookup"><span data-stu-id="6e166-117">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.</span></span>  
  
-   <span data-ttu-id="6e166-118">Incrémente l’index de données de chemin d’accès au deuxième marqueur.</span><span class="sxs-lookup"><span data-stu-id="6e166-118">Increments the path data index to the second marker.</span></span>  
  
-   <span data-ttu-id="6e166-119">Appelle le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A> méthode pour copier les données de chemin d’accès contenues entre le début et de fin indexe aux points et types de tableaux.</span><span class="sxs-lookup"><span data-stu-id="6e166-119">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A> method to copy the path data contained between the start and end indexes to the points and types arrays.</span></span>  
  
-   <span data-ttu-id="6e166-120">Répertorie les données copiées sur le côté droit de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-120">Lists this copied data on the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Drawing.Drawing2D.GraphicsPathIterator.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e166-121">Obtient le nombre de points dans le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-121">Gets the number of points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e166-122">Nombre de points dans le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-122">The number of points in the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPathIterator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e166-123">Libère toutes les ressources utilisées par cet objet <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-123">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e166-124">Appel `Dispose` autorise les ressources utilisées par ce <xref:System.Drawing.Drawing2D.GraphicsPathIterator> objet à être réaffectées à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="6e166-124">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public int Enumerate (ref System.Drawing.PointF[] points, ref byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Enumerate(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enumerate (ByRef points As PointF(), ByRef types As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Enumerate(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types);" />
      <MemberSignature Language="F#" Value="member this.Enumerate :  *  -&gt; int" Usage="graphicsPathIterator.Enumerate (points, types)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="6e166-125">Au retour, contient un tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points du tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-125">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="6e166-126">Au retour, contient un tableau d'octets qui représente les types de points du tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-126">Upon return, contains an array of bytes that represents the types of points in the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-127">Copie la propriété <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> et les tableaux de propriétés <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> du <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> associé dans les deux tableaux spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-127">Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-128">Nombre de points copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-128">The number of points copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e166-129">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-129">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-130">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-130">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-131">Crée un tracé graphique.</span><span class="sxs-lookup"><span data-stu-id="6e166-131">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="6e166-132">Remplit avec plusieurs primitives et des marqueurs.</span><span class="sxs-lookup"><span data-stu-id="6e166-132">Populates it with several primitives and some markers.</span></span>  
  
-   <span data-ttu-id="6e166-133">Répertorie les données de chemin d’accès sur le côté gauche de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-133">Lists the path data on the left side of the screen.</span></span>  
  
-   <span data-ttu-id="6e166-134">Crée un <xref:System.Drawing.Drawing2D.GraphicsPathIterator> et rembobine.</span><span class="sxs-lookup"><span data-stu-id="6e166-134">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.</span></span>  
  
-   <span data-ttu-id="6e166-135">Incrémente l’index de données de chemin d’accès au deuxième marqueur.</span><span class="sxs-lookup"><span data-stu-id="6e166-135">Increments the path data index to the second marker.</span></span>  
  
-   <span data-ttu-id="6e166-136">Appelle le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A> méthode pour copier les données de chemin d’accès à la `points` et `types` tableaux.</span><span class="sxs-lookup"><span data-stu-id="6e166-136">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A> method to copy the path data to the `points` and `types` arrays.</span></span>  
  
-   <span data-ttu-id="6e166-137">Répertorie les données copiées sur le côté droit de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-137">Lists this copied data on the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPathIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPathIterator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPathIterator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e166-138">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-138">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCurve">
      <MemberSignature Language="C#" Value="public bool HasCurve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasCurve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve" />
      <MemberSignature Language="VB.NET" Value="Public Function HasCurve () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasCurve();" />
      <MemberSignature Language="F#" Value="member this.HasCurve : unit -&gt; bool" Usage="graphicsPathIterator.HasCurve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e166-139">Indique si le tracé associé à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> contient une courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-139">Indicates whether the path associated with this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> contains a curve.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-140">Cette méthode retourne <see langword="true" /> si le sous-tracé en cours contient une courbe ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-140">This method returns <see langword="true" /> if the current subpath contains a curve; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e166-141">Toutes les courbes dans un chemin d’accès sont stockés en tant que séquence de splines de Bézier.</span><span class="sxs-lookup"><span data-stu-id="6e166-141">All curves in a path are stored as sequences of Bézier splines.</span></span> <span data-ttu-id="6e166-142">Par exemple, lorsque vous ajoutez une ellipse à un chemin d’accès, vous spécifiez le coin supérieur gauche, la largeur et la hauteur du rectangle englobant de l’ellipse.</span><span class="sxs-lookup"><span data-stu-id="6e166-142">For example, when you add an ellipse to a path, you specify the upper-left corner, the width, and the height of the ellipse's bounding rectangle.</span></span> <span data-ttu-id="6e166-143">Ces nombres (coin supérieur gauche, la largeur et hauteur) ne sont pas stockés dans le chemin d’accès ; à la place. l’ellipse est convertie en une séquence de quatre de splines de Bézier.</span><span class="sxs-lookup"><span data-stu-id="6e166-143">Those numbers (upper-left corner, width, and height) are not stored in the path; instead; the ellipse is converted to a sequence of four Bézier splines.</span></span> <span data-ttu-id="6e166-144">Les magasins de chemin d’accès les points de terminaison et les points de contrôle de ces splines de Bézier.</span><span class="sxs-lookup"><span data-stu-id="6e166-144">The path stores the endpoints and control points of those Bézier splines.</span></span>  
  
 <span data-ttu-id="6e166-145">Un chemin d’accès stocke un tableau de points de données, chacune appartenant à une ligne ou une spline de Bézier.</span><span class="sxs-lookup"><span data-stu-id="6e166-145">A path stores an array of data points, each of which belongs to a line or a Bézier spline.</span></span> <span data-ttu-id="6e166-146">Si certains des points du tableau appartiennent à des splines de Bézier, puis <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="6e166-146">If some of the points in the array belong to Bézier splines, then <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> returns `true`.</span></span> <span data-ttu-id="6e166-147">Si tous les points du tableau appartiennent à des lignes, puis <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="6e166-147">If all points in the array belong to lines, then <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="6e166-148">Certaines méthodes aplanissent un tracé, ce qui signifie que toutes les courbes dans le chemin d’accès sont convertis en séquences de lignes.</span><span class="sxs-lookup"><span data-stu-id="6e166-148">Certain methods flatten a path, which means that all the curves in the path are converted to sequences of lines.</span></span> <span data-ttu-id="6e166-149">Une fois un chemin d’accès ont été aplatie, <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> retournera toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="6e166-149">After a path has been flattened, <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> will always return `false`.</span></span> <span data-ttu-id="6e166-150">Appel de la <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>, ou <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> méthode de la <xref:System.Drawing.Drawing2D.GraphicsPath> classe sera aplanir un tracé.</span><span class="sxs-lookup"><span data-stu-id="6e166-150">Calling the <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>, or <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> method of the <xref:System.Drawing.Drawing2D.GraphicsPath> class will flatten a path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e166-151">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-151">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-152">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-153">Crée un <xref:System.Drawing.Drawing2D.GraphicsPath> objet, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="6e166-153">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPath`.</span></span>  
  
-   <span data-ttu-id="6e166-154">Ajoute trois lignes, un rectangle et une ellipse.</span><span class="sxs-lookup"><span data-stu-id="6e166-154">Adds three lines, a rectangle, and an ellipse.</span></span>  
  
-   <span data-ttu-id="6e166-155">Crée un <xref:System.Drawing.Drawing2D.GraphicsPathIterator> pour l’objet `myPath`.</span><span class="sxs-lookup"><span data-stu-id="6e166-155">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object for `myPath`.</span></span>  
  
-   <span data-ttu-id="6e166-156">Vérifie si le chemin d’accès actuel `myPath` contient une courbe.</span><span class="sxs-lookup"><span data-stu-id="6e166-156">Tests to see if the current path `myPath` contains a curve.</span></span>  
  
-   <span data-ttu-id="6e166-157">Affiche le résultat du test dans une boîte de message.</span><span class="sxs-lookup"><span data-stu-id="6e166-157">Shows the result of the test in a message box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextMarker">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e166-158">Déplace l'itérateur jusqu'au marqueur suivant dans le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-158">Moves the iterator to the next marker in the path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (path As GraphicsPath) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.NextMarker : System.Drawing.Drawing2D.GraphicsPath -&gt; int" Usage="graphicsPathIterator.NextMarker path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="6e166-159">Objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> vers lequel seront copiés les points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-159">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to which the points will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-160">Cet objet <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> possède un <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui lui est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-160">This <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object has a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object associated with it.</span>
          </span>
          <span data-ttu-id="6e166-161">La méthode <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> incrémente le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> associé au marqueur suivant dans son tracé et copie tous les points contenus entre le marqueur en cours et le marqueur suivant (ou la fin du tracé) dans un deuxième objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> passé dans le paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-161">The <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> method increments the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object passed in to the parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-162">Nombre de points entre ce marqueur et le suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-162">The number of points between this marker and the next.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e166-163">Utilisez le <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> méthode pour définir des marqueurs dans un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="6e166-163">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to set markers in a path.</span></span> <span data-ttu-id="6e166-164">Marqueurs sont utilisés pour créer des groupes de sous-tracés.</span><span class="sxs-lookup"><span data-stu-id="6e166-164">Markers are used to create groups of subpaths.</span></span> <span data-ttu-id="6e166-165">Une ou plusieurs sections peuvent contenir entre deux marqueurs.</span><span class="sxs-lookup"><span data-stu-id="6e166-165">One or more subpaths can be between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e166-166">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-166">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-167">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-167">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-168">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="6e166-168">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="6e166-169">Ajoute trois lignes, un rectangle, une ellipse et deux marqueurs.</span><span class="sxs-lookup"><span data-stu-id="6e166-169">Adds three lines, a rectangle, an ellipse, and two markers.</span></span>  
  
-   <span data-ttu-id="6e166-170">Répertorie les valeurs de tous les points du tracé vers le côté gauche de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-170">Lists the values of all the path's points to the left side of the screen.</span></span>  
  
-   <span data-ttu-id="6e166-171">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.</span><span class="sxs-lookup"><span data-stu-id="6e166-171">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="6e166-172">Crée un <xref:System.Drawing.Drawing2D.GraphicsPath> objet, `myPathSection`pour recevoir des points copiés.</span><span class="sxs-lookup"><span data-stu-id="6e166-172">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.</span></span>  
  
-   <span data-ttu-id="6e166-173">Appelle le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> (méthode), qui parcourt le premier marqueur et copie tous les points contenus entre ce marqueur et le suivant à `myPathSection`.</span><span class="sxs-lookup"><span data-stu-id="6e166-173">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method, which iterates to the first marker and copies all the points contained between that marker and the next to `myPathSection`.</span></span>  
  
-   <span data-ttu-id="6e166-174">Retourne le nombre de points copiés vers `markerPoints`.</span><span class="sxs-lookup"><span data-stu-id="6e166-174">Returns the number of points copied to `markerPoints`.</span></span>  
  
-   <span data-ttu-id="6e166-175">Répertorie le numéro de marqueur (premier marqueur) et le nombre de points qu’il contient sur le côté droit de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-175">Lists the marker number (the first marker) and number of points it contains to the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker([out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberSignature Language="F#" Value="member this.NextMarker :  *  -&gt; int" Usage="graphicsPathIterator.NextMarker (startIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="6e166-176">[out] La référence entière fournie à ce paramètre reçoit l'index du point de départ d'un sous-tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-176">[out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.</span>
          </span>
        </param>
        <param name="endIndex">
          <span data-ttu-id="6e166-177">[out] La référence entière fournie à ce paramètre reçoit l’index du point final d’un sous-tracé désigné par <c>startIndex</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-177">[out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <c>startIndex</c> points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-178">Incrémente <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> au marqueur suivant dans le tracé et retourne les index de début et de fin au moyen des paramètres [out].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-178">Increments the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next marker in the path and returns the start and stop indexes by way of the [out] parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-179">Nombre de points entre ce marqueur et le suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-179">The number of points between this marker and the next.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e166-180">Utilisez le <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> méthode pour définir des marqueurs dans un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="6e166-180">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to set markers in a path.</span></span> <span data-ttu-id="6e166-181">Marqueurs sont utilisés pour créer des groupes de sous-tracés.</span><span class="sxs-lookup"><span data-stu-id="6e166-181">Markers are used to create groups of subpaths.</span></span> <span data-ttu-id="6e166-182">Une ou plusieurs sections peuvent contenir entre deux marqueurs.</span><span class="sxs-lookup"><span data-stu-id="6e166-182">One or more subpaths can be between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e166-183">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-183">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-184">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-184">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-185">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="6e166-185">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="6e166-186">Ajoute trois lignes, un rectangle et une ellipse aux ¾ avec marqueurs entre chacun d’eux.</span><span class="sxs-lookup"><span data-stu-id="6e166-186">Adds three lines, a rectangle, and an ellipse ¾ with markers between each.</span></span>  
  
-   <span data-ttu-id="6e166-187">Dessine les valeurs pour le tableau de points à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-187">Draws the values for the array of points to the screen.</span></span>  
  
-   <span data-ttu-id="6e166-188">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.</span><span class="sxs-lookup"><span data-stu-id="6e166-188">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="6e166-189">Appelle la méthode <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e166-189">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method.</span></span>  
  
-   <span data-ttu-id="6e166-190">Utilise les valeurs retournées par des appels répétitifs à <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> pour dessiner le démarrer et arrêter des points pour chaque marqueur à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-190">Uses the values returned from the iterative calls to <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> to draw the start and stop points for each marker to the screen.</span></span>  
  
-   <span data-ttu-id="6e166-191">Dessine la valeur pour le nombre total de points à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-191">Draws the value for the total number of points to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPathType">
      <MemberSignature Language="C#" Value="public int NextPathType (out byte pathType, out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextPathType([out] unsigned int8&amp; pathType, [out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextPathType (ByRef pathType As Byte, ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextPathType([Runtime::InteropServices::Out] System::Byte % pathType, [Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberSignature Language="F#" Value="member this.NextPathType :  *  *  -&gt; int" Usage="graphicsPathIterator.NextPathType (pathType, startIndex, endIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathType" Type="System.Byte" RefType="out" />
        <Parameter Name="startIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pathType">
          <span data-ttu-id="6e166-192">[out] Reçoit le type de points partagé par tous les points du groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-192">[out] Receives the point type shared by all points in the group.</span>
          </span>
          <span data-ttu-id="6e166-193">Les types possibles peuvent être récupérés de l'énumération <see cref="T:System.Drawing.Drawing2D.PathPointType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-193">Possible types can be retrieved from the <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="6e166-194">[out] Reçoit l'index de début du groupe de points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-194">[out] Receives the starting index of the group of points.</span>
          </span>
        </param>
        <param name="endIndex">
          <span data-ttu-id="6e166-195">[out] Reçoit l'index de fin du groupe de points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-195">[out] Receives the ending index of the group of points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-196">Obtient l'index de début et l'index de fin du groupe suivant de points de données possédant tous le même type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-196">Gets the starting index and the ending index of the next group of data points that all have the same type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-197">Cette méthode retourne le nombre de points de données dans le groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-197">This method returns the number of data points in the group.</span>
          </span>
          <span data-ttu-id="6e166-198">Si le tracé ne comprend plus de groupe, cette méthode retourne 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-198">If there are no more groups in the path, this method returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e166-199">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-199">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-200">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-200">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-201">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="6e166-201">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="6e166-202">Ajoute trois lignes, un rectangle et une ellipse.</span><span class="sxs-lookup"><span data-stu-id="6e166-202">Adds three lines, a rectangle, and an ellipse.</span></span>  
  
-   <span data-ttu-id="6e166-203">Répertorie les valeurs de tous les points sur le côté gauche de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-203">Lists the values of all the points to the left side of the screen.</span></span>  
  
-   <span data-ttu-id="6e166-204">Crée un <xref:System.Drawing.Drawing2D.GraphicsPathIterator> et rembobine.</span><span class="sxs-lookup"><span data-stu-id="6e166-204">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> and rewinds it.</span></span>  
  
-   <span data-ttu-id="6e166-205">Dans un `for` boucle, effectue une itération dans les points à l’aide de la <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> et <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="6e166-205">In a `for` loop, iterates through the points using the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> and <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> methods.</span></span>  
  
-   <span data-ttu-id="6e166-206">Utilise les valeurs retournées par les appels répétitifs pour répertorier le nombre de sous-chemin, le nombre de points qu’il contient et le type des points de chemin d’accès vers le côté droit de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-206">Uses the values returned from the iterative calls to list the subpath number, the number of points in it, and the type of the path points to the right side of the screen.</span></span>  
  
-   <span data-ttu-id="6e166-207">Affiche la valeur pour le nombre total de points à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-207">Displays the value for the total number of points to the screen.</span></span>  
  
 <span data-ttu-id="6e166-208">Notez que `ListPathPoints` est une fonction d’assistance qui sépare la plupart (voire l’ensemble) du code d’affichage à partir du code de chemin d’accès de graphiques.</span><span class="sxs-lookup"><span data-stu-id="6e166-208">Note that `ListPathPoints` is a helper function that separates most (not all) of the display code from the graphics path code.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextSubpath">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e166-209">Déplace le sous-tracé vers le sous-tracé suivant dans le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-209">Moves the subpath to the next subpath in the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (System.Drawing.Drawing2D.GraphicsPath path, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath(class System.Drawing.Drawing2D.GraphicsPath path, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (path As GraphicsPath, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath(System::Drawing::Drawing2D::GraphicsPath ^ path, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberSignature Language="F#" Value="member this.NextSubpath : System.Drawing.Drawing2D.GraphicsPath *  -&gt; int" Usage="graphicsPathIterator.NextSubpath (path, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="isClosed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="6e166-210">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> dont les points de données doivent être définis pour correspondre aux points de données de la figure récupérée (sous-tracé) pour cet itérateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-210">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.</span>
          </span>
        </param>
        <param name="isClosed">
          <span data-ttu-id="6e166-211">[out] Indique si le sous-tracé en cours est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-211">[out] Indicates whether the current subpath is closed.</span>
          </span>
          <span data-ttu-id="6e166-212">A la valeur <see langword="true" /> si la figure est fermée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-212">It is <see langword="true" /> if the if the figure is closed, otherwise it is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-213">Obtient la figure suivante (sous-tracé) à partir du tracé associé à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-213">Gets the next figure (subpath) from the associated path of this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-214">Nombre de points de données dans la figure récupérée (sous-tracé).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-214">The number of data points in the retrieved figure (subpath).</span>
          </span>
          <span data-ttu-id="6e166-215">S'il n'existe plus de figure à récupérer, une valeur nulle est retournée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-215">If there are no more figures to retrieve, zero is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e166-216">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-216">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-217">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-217">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-218">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="6e166-218">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="6e166-219">Ajoute trois lignes, un rectangle, une ellipse et deux marqueurs.</span><span class="sxs-lookup"><span data-stu-id="6e166-219">Adds three lines, a rectangle, an ellipse, and two markers.</span></span>  
  
-   <span data-ttu-id="6e166-220">Répertorie les valeurs de tous les points du tracé vers le côté gauche de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-220">Lists the values of all the path's points to the left side of the screen.</span></span>  
  
-   <span data-ttu-id="6e166-221">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.</span><span class="sxs-lookup"><span data-stu-id="6e166-221">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="6e166-222">Crée un <xref:System.Drawing.Drawing2D.GraphicsPath> objet, `myPathSection`pour recevoir des points copiés.</span><span class="sxs-lookup"><span data-stu-id="6e166-222">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object, `myPathSection`, to receive copied points.</span></span>  
  
-   <span data-ttu-id="6e166-223">Appelle le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> (méthode), qui parcourt le troisième sous-tracé (figure) et copie tous les points contenus dans ce sous-tracé le `myPathSection` chemin d’accès, puis retourne également le nombre de points copié vers `subpathPoints`.</span><span class="sxs-lookup"><span data-stu-id="6e166-223">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> method, which iterates to the third subpath (figure) and copies all the points contained in that subpath to the `myPathSection` path, and also returns the number of points copied to `subpathPoints`.</span></span>  
  
-   <span data-ttu-id="6e166-224">Répertorie le numéro du sous-tracé et le nombre de points qu’il contient sur le côté droit de l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-224">Lists the subpath number and number of points it contains to the right side of the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (out int startIndex, out int endIndex, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath([out] int32&amp; startIndex, [out] int32&amp; endIndex, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (ByRef startIndex As Integer, ByRef endIndex As Integer, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberSignature Language="F#" Value="member this.NextSubpath :  *  *  -&gt; int" Usage="graphicsPathIterator.NextSubpath (startIndex, endIndex, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32" RefType="out" />
        <Parameter Name="isClosed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="6e166-225">[out] Reçoit l'index de début du sous-tracé suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-225">[out] Receives the starting index of the next subpath.</span>
          </span>
        </param>
        <param name="endIndex">
          <span data-ttu-id="6e166-226">[out] Reçoit l'index de fin du sous-tracé suivant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-226">[out] Receives the ending index of the next subpath.</span>
          </span>
        </param>
        <param name="isClosed">
          <span data-ttu-id="6e166-227">[out] Indique si le sous-tracé est fermé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-227">[out] Indicates whether the subpath is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e166-228">Déplace <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> jusqu'au sous-tracé suivant dans le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-228">Moves the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next subpath in the path.</span>
          </span>
          <span data-ttu-id="6e166-229">Les index de début et de fin du sous-tracé suivant sont contenus dans les paramètres [out].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-229">The start index and end index of the next subpath are contained in the [out] parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e166-230">Nombre de sous-tracés dans l'objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-230">The number of subpaths in the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6e166-231">L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e166-231">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6e166-232">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e166-232">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6e166-233">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="6e166-233">Creates a <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="6e166-234">Ajoute trois lignes, un rectangle et une ellipse.</span><span class="sxs-lookup"><span data-stu-id="6e166-234">Adds three lines, a rectangle, and an ellipse.</span></span>  
  
-   <span data-ttu-id="6e166-235">Dessine les valeurs pour le tableau de points à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-235">Draws the values for the array of points to the screen.</span></span>  
  
-   <span data-ttu-id="6e166-236">Crée un objet <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.</span><span class="sxs-lookup"><span data-stu-id="6e166-236">Creates a <xref:System.Drawing.Drawing2D.GraphicsPathIterator> object.</span></span>  
  
-   <span data-ttu-id="6e166-237">Appelle la méthode <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e166-237">Calls the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> method.</span></span>  
  
-   <span data-ttu-id="6e166-238">Utilise les valeurs retournées par des appels répétitifs à <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> pour dessiner le démarrer et arrêter des valeurs de chaque sous-tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-238">Uses the values returned from the iterative calls to <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> to draw the start and stop values for each subpath to the screen.</span></span>  
  
-   <span data-ttu-id="6e166-239">Dessine la valeur du nombre total de sous-tracés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="6e166-239">Draws the value for the total number of subpaths to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rewind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rewind();" />
      <MemberSignature Language="F#" Value="member this.Rewind : unit -&gt; unit" Usage="graphicsPathIterator.Rewind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e166-240">Rembobine ce <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> jusqu'au début du tracé qui lui est associé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-240">Rewinds this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the beginning of its associated path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e166-241">La première fois que vous appelez le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> méthode d’un itérateur, elle obtient la première figure (sous-tracé) du tracé associé à cet itérateur.</span><span class="sxs-lookup"><span data-stu-id="6e166-241">The first time you call the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> method of an iterator, it gets the first figure (subpath) of that iterator's associated path.</span></span> <span data-ttu-id="6e166-242">La deuxième fois, elle obtient la deuxième figure et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="6e166-242">The second time, it gets the second figure, and so on.</span></span> <span data-ttu-id="6e166-243">Lorsque vous appelez le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A> (méthode), la séquence démarre ; autrement dit, après avoir appelé <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A>, l’appel suivant à <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> Obtient la première figure dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="6e166-243">When you call the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A> method, the sequence starts over; that is, after you call <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A>, the next call to <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> gets the first figure in the path.</span></span> <span data-ttu-id="6e166-244">Le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> et <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> méthodes se comportent de la même façon.</span><span class="sxs-lookup"><span data-stu-id="6e166-244">The <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> and <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> methods behave similarly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubpathCount">
      <MemberSignature Language="C#" Value="public int SubpathCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubpathCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubpathCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubpathCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SubpathCount : int" Usage="System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e166-245">Obtient le nombre de sous-tracés dans le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-245">Gets the number of subpaths in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e166-246">Nombre de sous-tracés dans le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e166-246">The number of subpaths in the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>