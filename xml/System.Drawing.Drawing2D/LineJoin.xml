<Type Name="LineJoin" FullName="System.Drawing.Drawing2D.LineJoin">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c07b4ad0fed8cec8a5ffd34d6c13da756c1c5ed" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46673917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum LineJoin" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LineJoin extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.LineJoin" />
  <TypeSignature Language="VB.NET" Value="Public Enum LineJoin" />
  <TypeSignature Language="C++ CLI" Value="public enum class LineJoin" />
  <TypeSignature Language="F#" Value="type LineJoin = " />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="e7b5a-101">Spécifie la façon de joindre des segments de ligne ou de courbes qui se suivent dans une figure (section) d'un objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7b5a-101">Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Bevel">
      <MemberSignature Language="C#" Value="Bevel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Drawing2D.LineJoin Bevel = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Drawing2D.LineJoin.Bevel" />
      <MemberSignature Language="VB.NET" Value="Bevel" />
      <MemberSignature Language="C++ CLI" Value="Bevel" />
      <MemberSignature Language="F#" Value="Bevel = 1" Usage="System.Drawing.Drawing2D.LineJoin.Bevel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b5a-102">Spécifie une jointure biseautée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-102">Specifies a beveled join.</span>
          </span>
          <span data-ttu-id="e7b5a-103">Cela donne un coin en diagonale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-103">This produces a diagonal corner.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Miter">
      <MemberSignature Language="C#" Value="Miter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Drawing2D.LineJoin Miter = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Drawing2D.LineJoin.Miter" />
      <MemberSignature Language="VB.NET" Value="Miter" />
      <MemberSignature Language="C++ CLI" Value="Miter" />
      <MemberSignature Language="F#" Value="Miter = 0" Usage="System.Drawing.Drawing2D.LineJoin.Miter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b5a-104">Spécifie une jointure à onglet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-104">Specifies a mitered join.</span>
          </span>
          <span data-ttu-id="e7b5a-105">Cela donne un angle aigu ou un coin découpé, selon que la longueur de l'onglet dépasse ou non celle de la limite de l'onglet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-105">This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MiterClipped">
      <MemberSignature Language="C#" Value="MiterClipped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Drawing2D.LineJoin MiterClipped = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Drawing2D.LineJoin.MiterClipped" />
      <MemberSignature Language="VB.NET" Value="MiterClipped" />
      <MemberSignature Language="C++ CLI" Value="MiterClipped" />
      <MemberSignature Language="F#" Value="MiterClipped = 3" Usage="System.Drawing.Drawing2D.LineJoin.MiterClipped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b5a-106">Spécifie une jointure à onglet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-106">Specifies a mitered join.</span>
          </span>
          <span data-ttu-id="e7b5a-107">Cela donne un angle aigu ou un coin biseauté, selon que la longueur de l'onglet dépasse ou non celle de la limite de l'onglet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-107">This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="Round" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.Drawing2D.LineJoin Round = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.Drawing2D.LineJoin.Round" />
      <MemberSignature Language="VB.NET" Value="Round" />
      <MemberSignature Language="C++ CLI" Value="Round" />
      <MemberSignature Language="F#" Value="Round = 2" Usage="System.Drawing.Drawing2D.LineJoin.Round" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7b5a-108">Spécifie une jointure circulaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-108">Specifies a circular join.</span>
          </span>
          <span data-ttu-id="e7b5a-109">Cela donne un arc circulaire et lisse entre les lignes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7b5a-109">This produces a smooth, circular arc between the lines.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>