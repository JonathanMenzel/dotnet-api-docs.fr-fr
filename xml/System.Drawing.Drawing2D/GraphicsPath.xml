<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GraphicsPath.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5010b867d0c50e186006fea90cdbc67fefd8cfd61.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">010b867d0c50e186006fea90cdbc67fefd8cfd61</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Represents a series of connected lines and curves.</source>
          <target state="translated">Représente une série de lignes et de courbes connectées.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</source>
          <target state="translated">Applications utilisent des chemins d’accès pour dessiner le contour des formes, remplir l’intérieur des formes et créer des zones de découpage.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</source>
          <target state="translated">Le moteur graphique conserve les coordonnées des formes géométriques dans un chemin d’accès dans l’espace de coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A path may be composed of any number of figures (subpaths).</source>
          <target state="translated">Un chemin d’accès peut être composée de n’importe quel nombre de figures (sections).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</source>
          <target state="translated">Chaque figure se compose d’une séquence de lignes reliées et courbes ou d’une primitive de forme géométrique.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting point of a figure is the first point in the sequence of connected lines and curves.</source>
          <target state="translated">Le point de départ d’une figure est le premier point dans la séquence de lignes reliées et de courbes.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The ending point is the last point in the sequence.</source>
          <target state="translated">Le point de fin est le dernier point dans la séquence.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting and ending points of a geometric shape primitive are defined by the primitive specification.</source>
          <target state="translated">Les points de début et de fin d’une primitive de forme géométrique sont définis par la spécification primitive.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</source>
          <target state="translated">Une illustration qui se compose d’une séquence de lignes reliées et courbes (dont les points de début et de fin peuvent être coïncidents) est une figure ouverte, sauf si elle est fermée explicitement.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure can be closed explicitly, by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> method, which closes the current figure by connecting a line from the ending point to the starting point.</source>
          <target state="translated">Une figure peut être fermée explicitement, à l’aide de la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> (méthode), qui ferme la figure en cours par une ligne reliant le point de fin pour le point de départ.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a geometric shape primitive is a closed figure.</source>
          <target state="translated">Une figure composée d’une primitive de forme géométrique est une figure fermée.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>For purposes of filling and clipping (for example, if a path is rendered using <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), all open figures are closed by adding a line from the figure's first point to its last point.</source>
          <target state="translated">Pour des raisons de remplissage et de découpage (par exemple, si un chemin d’accès est restitué à l’aide <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), tous les chiffres sont fermées en ajoutant une ligne à partir du premier point de la figure à son dernier point.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is implicitly started when a path is created or when a figure is closed.</source>
          <target state="translated">Une nouvelle figure est implicitement lancée lorsqu’un chemin d’accès est créé ou lorsqu’une figure est fermée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is explicitly created when the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> method is called.</source>
          <target state="translated">Une nouvelle figure est créée explicitement lorsque la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</source>
          <target state="translated">Lorsqu’une primitive de forme géométrique est ajoutée à un chemin d’accès, il ajoute une figure contenant la forme géométrique et également de manière implicite démarre une nouvelle figure.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Consequently, there is always a current figure in a path.</source>
          <target state="translated">Par conséquent, il est toujours en cours figure dans un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</source>
          <target state="translated">Lorsque les lignes et des courbes sont ajoutés à un chemin d’accès, une ligne implicite est ajoutée pour connecter le point de fin de la figure en cours pour le point de départ de nouvelles lignes et de courbes pour former une séquence de lignes reliées et de courbes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</source>
          <target state="translated">Figure a une direction qui décrit comment les segments de ligne et de courbe sont tracées entre le point de départ et le point de fin.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</source>
          <target state="translated">La direction est définie dans l’ordre de lignes et des courbes sont ajoutés à un chiffre, ou est défini par la primitive de forme géométrique.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is used in determining the path interiors for clipping and fill.</source>
          <target state="translated">La direction est utilisée pour déterminer l’intérieur du chemin d’accès pour le découpage et de remplissage.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration of <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec une énumération <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> de <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> value of <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec une valeur <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> de <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interior of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> is filled.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> qui définit le mode de remplissage de l'intérieur de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec l'énumération <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui définit les coordonnées des points composant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Tableau des éléments de l’énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> qui spécifie le type de chaque point correspondant du tableau <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec les tableaux <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui définit les coordonnées des points composant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Tableau des éléments de l’énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> qui spécifie le type de chaque point correspondant du tableau <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays.</source>
          <target state="translated">Initialise une nouvelle instance du tableau <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec les tableaux <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui définit les coordonnées des points composant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Tableau des éléments de l’énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> qui spécifie le type de chaque point correspondant du tableau <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> qui spécifie le mode de remplissage de l'intérieur des formes contenues dans ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec les tableaux <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> et l'élément de l'énumération <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui définit les coordonnées des points composant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Tableau des éléments de l’énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> qui spécifie le type de chaque point correspondant du tableau <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> qui spécifie le mode de remplissage de l'intérieur des formes contenues dans ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">Initialise une nouvelle instance du tableau <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avec les tableaux <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> et l'élément de l'énumération <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Ajoute un arc elliptique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> qui représente les limites rectangulaires de l'ellipse à partir de laquelle l'arc est obtenu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin de l’arc.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Ajoute un arc elliptique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle, from which the arc is defined.</source>
          <target state="translated">Crée un rectangle, à partir de laquelle l’arc est défini.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a path, <ph id="ph1">`myPath`</ph>.</source>
          <target state="translated">Crée un chemin d’accès, <ph id="ph1">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</source>
          <target state="translated">Définit un arc elliptique de 180 degrés, allant de 0 degrés, 180 degrés, et ajoute un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente les limites rectangulaires de l'ellipse à partir de laquelle l'arc est obtenu.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin de l’arc.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Ajoute un arc elliptique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordonnée x de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordonnée y de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Largeur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Hauteur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin de l’arc.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Ajoute un arc elliptique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordonnée x de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Coordonnée y de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Largeur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">Hauteur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin de l’arc.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Ajoute un arc elliptique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Ajoute une courbe de Bézier cubique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente le point de début de la courbe.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente le premier point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente le deuxième point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente le point de terminaison de la courbe.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Ajoute une courbe de Bézier cubique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le point de début de la courbe.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le premier point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le deuxième point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le point de terminaison de la courbe.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Ajoute une courbe de Bézier cubique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordonnée x du point de début de la courbe.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordonnée y du point de début de la courbe.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordonnée x du premier point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordonnée y du premier point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordonnée x du second point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordonnée y du second point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordonnée x du point de terminaison de la courbe.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordonnée y du point de terminaison de la courbe.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Ajoute une courbe de Bézier cubique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</source>
          <target state="translated">Ajoute une courbe de Bézier cubique définie par les points (50, 50), (70, 0), (100, 120) et (150, 50) pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Closes the curve.</source>
          <target state="translated">Ferme la courbe.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the path to screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordonnée x du point de début de la courbe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">Coordonnée y du point de début de la courbe.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordonnée x du premier point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">Coordonnée y du premier point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordonnée x du second point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">Coordonnée y du second point de contrôle de la courbe.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordonnée x du point de terminaison de la courbe.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">Coordonnée y du point de terminaison de la courbe.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Ajoute une courbe de Bézier cubique à la figure en cours.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Ajoute une suite de courbes de Bézier cubiques connectées à la figure en cours.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant les courbes.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Ajoute une suite de courbes de Bézier cubiques connectées à la figure en cours.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated">Le <ph id="ph1">`points`</ph> paramètre spécifie un tableau de points de terminaison et les points de contrôle de la courbe des courbes connectées.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">La première courbe est construite à partir du premier point au quatrième point dans le <ph id="ph1">`points`</ph> tableau à l’aide des deuxième et troisième points comme points de contrôle.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">Outre le point de terminaison de la courbe précédente, chaque courbe suivante dans la séquence doit exactement trois points supplémentaires : les deux points dans la séquence sont des points de contrôle et le troisième est le point de terminaison de la courbe ajoutée.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la première courbe cubique de la séquence.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates an array of seven points (representing two connected Bézier curves).</source>
          <target state="translated">Crée un tableau de sept points (représentant deux courbes Bézier connectées).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates a path and adds the series of Bézier curve points to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute la série de points de courbe de Bézier pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant les courbes.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Ajoute une suite de courbes de Bézier cubiques connectées à la figure en cours.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated">Le <ph id="ph1">`points`</ph> paramètre spécifie un tableau de points de terminaison et les points de contrôle de la courbe des courbes connectées.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">La première courbe est construite à partir du premier point au quatrième point dans le <ph id="ph1">`points`</ph> tableau à l’aide des deuxième et troisième points comme points de contrôle.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">Outre le point de terminaison de la courbe précédente, chaque courbe suivante dans la séquence doit exactement trois points supplémentaires : les deux points dans la séquence sont des points de contrôle et le troisième est le point de terminaison de la courbe ajoutée.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la première courbe cubique de la séquence.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>For an example see:</source>
          <target state="translated">Pour un exemple, consultez :</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Ajoute une courbe fermée à ce tracé.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Ajoute une courbe fermée à ce tracé.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Si le premier et le dernier point dans le <ph id="ph1">`points`</ph> tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">Impossible de définir la valeur de tension pour cette méthode et la valeur par défaut est une valeur équivalente à 0,5.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Ajoute une courbe fermée à ce tracé.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Si le premier et le dernier point dans le <ph id="ph1">`points`</ph> tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">Impossible de définir la valeur de tension pour cette méthode et la valeur par défaut est une valeur équivalente à 0,5.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">Valeur comprise entre 0 et 1 qui spécifie la courbure de la courbe entre les points, 0 correspondant à la courbe la plus petite (angle le plus prononcé) et 1 représentant la courbe la plus régulière.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Ajoute une courbe fermée à ce tracé.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Si le premier et le dernier point dans le <ph id="ph1">`points`</ph> tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates an array of six points (representing a cardinal spline).</source>
          <target state="translated">Crée un tableau de six points (représentant une spline cardinale).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</source>
          <target state="translated">Crée un chemin d’accès et ajoute les courbes spline cardinale fermée pour le chemin d’accès (fermée du point de terminaison pour le point de départ).</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Notice that a tension of 0.5 is used.</source>
          <target state="translated">Notez que la valeur 0,5 est utilisée.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">Valeur comprise entre 0 et 1 qui spécifie la courbure de la courbe entre les points, 0 correspondant à la courbe la plus petite (angle le plus prononcé) et 1 représentant la courbe la plus régulière.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Ajoute une courbe fermée à ce tracé.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Si le premier et le dernier point dans le <ph id="ph1">`points`</ph> tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Des valeurs supérieures à 1 donnent des résultats inattendus.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Des valeurs supérieures à 1 donnent des résultats inattendus.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">Index de l’élément du tableau <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> qui est utilisé comme premier point de la courbe.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Des valeurs supérieures à 1 donnent des résultats inattendus.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Des valeurs supérieures à 1 donnent des résultats inattendus.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by the <ph id="ph1">`offset`</ph> parameter and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">La courbe commence au point dans le tableau spécifié par le <ph id="ph1">`offset`</ph> paramètre et inclut le nombre de points (segments) spécifié par <ph id="ph2">`numberOfSegments`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates an array of four points (representing a cardinal spline).</source>
          <target state="translated">Crée un tableau de quatre points (représentant une spline cardinale).</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates a path and using the array of points, adds the curve to the path.</source>
          <target state="translated">Crée un chemin d’accès et le tableau de points, ajoute la courbe pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</source>
          <target state="translated">Remarquez que le tableau comporte quatre points, il y a que trois segments, qui est le nombre spécifié dans le troisième argument de l’appel à <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant la courbe.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">Index de l’élément du tableau <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> qui est utilisé comme premier point de la courbe.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The number of segments used to draw the curve.</source>
          <target state="translated">Nombre de segments utilisés pour dessiner la courbe.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A segment can be thought of as a line connecting two points.</source>
          <target state="translated">Un segment peut être représenté comme une ligne reliant deux points.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Des valeurs supérieures à 1 donnent des résultats inattendus.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Ajoute une spline à la figure en cours.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by <ph id="ph1">`offset`</ph>, and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">La courbe commence au point dans le tableau spécifié par <ph id="ph1">`offset`</ph>, notamment le nombre de points (segments) spécifié par <ph id="ph2">`numberOfSegments`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Ajoute une ellipse au tracé en cours.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> représentant le rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Ajoute une ellipse au tracé en cours.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a bounding rectangle that defines an ellipse.</source>
          <target state="translated">Crée un rectangle englobant qui définit l’ellipse.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a path and adds the ellipse to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute les points de suspension pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Draws the path to screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> représentant le rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Ajoute une ellipse au tracé en cours.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Largeur du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Hauteur du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Ajoute une ellipse au tracé en cours.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Largeur du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Hauteur du rectangle englobant qui définit l'ellipse.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Ajoute une ellipse au tracé en cours.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute un segment de ligne à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente le point de début de la ligne.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente le point de terminaison de la ligne.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute un segment de ligne à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de ce <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le point de début de la ligne.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le point de terminaison de la ligne.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute un segment de ligne à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de ce <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">Coordonnée x du point de début de la ligne.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">Coordonnée y du point de début de la ligne.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordonnée x du point de terminaison de la ligne.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordonnée y du point de terminaison de la ligne.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Appends a line segment to the current figure.</source>
          <target state="translated">Ajoute un segment de ligne à la figure en cours.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method adds the line segment defined by the specified points to the end of the current figure.</source>
          <target state="translated">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de la figure en cours.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</source>
          <target state="translated">Le code crée un chemin d’accès, ajoute trois lignes formant un triangle, puis dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">Coordonnée x du point de début de la ligne.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">Coordonnée y du point de début de la ligne.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordonnée x du point de terminaison de la ligne.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">Coordonnée y du point de terminaison de la ligne.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute un segment de ligne à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de ce <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute une série de segments de ligne connectés à la fin de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui représente les points définissant les segments de ligne à ajouter.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute une série de segments de ligne connectés à la fin de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment du précédent point de départ de la ligne.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated">Le <ph id="ph1">`points`</ph> paramètre spécifie un tableau de points de terminaison.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The first two specify the first line.</source>
          <target state="translated">Les deux premiers spécifient la première ligne.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">Chaque point supplémentaire spécifie le point de terminaison d’un segment de ligne dont le point de départ est le point de terminaison de la ligne précédente.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates an array of four points that describe a triangle.</source>
          <target state="translated">Crée un tableau de quatre points décrivant un triangle.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates a path and adds the array of lines.</source>
          <target state="translated">Crée un chemin d’accès et ajoute le tableau de lignes.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</source>
          <target state="translated">Notez que chaque ligne après le premier point utilise le point précédent comme point de départ et le nouveau point comme point de terminaison.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente les points définissant les segments de ligne à ajouter.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute une série de segments de ligne connectés à la fin de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment du précédent point de départ de la ligne.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated">Le <ph id="ph1">`points`</ph> paramètre spécifie un tableau de points de terminaison.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The first two specify the first line.</source>
          <target state="translated">Les deux premiers spécifient la première ligne.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">Chaque point supplémentaire spécifie le point de terminaison d’un segment de ligne dont le point de départ est le point de terminaison de la ligne précédente.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> à ajouter.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">Valeur Boolean qui spécifie si la première figure du tracé ajouté appartient à la dernière figure de ce tracé.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="true" /&gt;</ph> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph> spécifie que la première figure du tracé ajouté fait partie de la dernière figure de ce tracé, le cas échéant.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="false" /&gt;</ph> specifies that the first figure in the added path is separate from the last figure in this path.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;see langword="false" /&gt;</ph> spécifie que la première figure du tracé ajouté n'appartient pas à la dernière figure de ce dernier.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Appends the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to this path.</source>
          <target state="translated">Ajoute le <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> spécifié à la fin de ce tracé.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</source>
          <target state="translated">Crée une de deux chemins d’accès un triangle à droite-côté-up et l’autre un triangle côté-up-down.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Adds the second path to the first.</source>
          <target state="translated">Ajoute le deuxième chemin d’accès à la première.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Draws the resultant path to the screen.</source>
          <target state="translated">Dessine le tracé résultant à l’écran.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Ajoute le contour d'un graphique à secteurs à ce tracé.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> qui représente le rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ du graphique à secteurs, mesuré en degrés et dans le sens des aiguilles d'une montre à partir de l'axe x.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin du secteur, mesuré en degrés dans le sens des aiguilles d’une montre à partir de <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Ajoute le contour d'un graphique à secteurs à ce tracé.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">Le secteur est défini par un contour partiel d’une ellipse et deux lignes radiales qui croisent les points de terminaison du contour.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">Le contour partiel commence à <ph id="ph1">`startAngle`</ph> (mesurée dans le sens horaire à partir de l’axe des x) et se termine à <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Largeur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Hauteur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ du graphique à secteurs, mesuré en degrés et dans le sens des aiguilles d'une montre à partir de l'axe x.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin du secteur, mesuré en degrés dans le sens des aiguilles d’une montre à partir de <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Ajoute le contour d'un graphique à secteurs à ce tracé.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">Le secteur est défini par un contour partiel d’une ellipse et deux lignes radiales qui croisent les points de terminaison du contour.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">Le contour partiel commence à <ph id="ph1">`startAngle`</ph> (mesurée dans le sens horaire à partir de l’axe des x) et se termine à <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</source>
          <target state="translated">Le code crée un tracé graphique, ajoute la forme de graphique à secteurs, puis dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Largeur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Hauteur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">Angle de départ du graphique à secteurs, mesuré en degrés et dans le sens des aiguilles d'une montre à partir de l'axe x.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Angle entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> et la fin du secteur, mesuré en degrés dans le sens des aiguilles d’une montre à partir de <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Ajoute le contour d'un graphique à secteurs à ce tracé.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">Le secteur est défini par un contour partiel d’une ellipse et deux lignes radiales qui croisent les points de terminaison du contour.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">Le contour partiel commence à <ph id="ph1">`startAngle`</ph> (mesurée dans le sens horaire à partir de l’axe des x) et se termine à <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Ajoute un polygone à ce tracé.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui définit le polygone à ajouter.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Ajoute un polygone à ce tracé.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">Les points dans le <ph id="ph1">`points`</ph> tableau spécifient les vertex d’un polygone.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">Si le premier point dans le tableau n’est pas le même que le dernier point, ces deux points sont connectés pour fermer le polygone.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates an array of points that defines a polygon.</source>
          <target state="translated">Crée un tableau de points définissant un polygone.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates a path and adds the polygon to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute le polygone pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui définit le polygone à ajouter.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Ajoute un polygone à ce tracé.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">Les points dans le <ph id="ph1">`points`</ph> tableau spécifient les vertex d’un polygone.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">Si le premier point dans le tableau n’est pas le même que le dernier point, ces deux points sont connectés pour fermer le polygone.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Ajoute un rectangle à ce tracé.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> qui représente le rectangle à ajouter.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Ajoute un rectangle à ce tracé.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a rectangle and adds the rectangle to the path.</source>
          <target state="translated">Crée un rectangle et ajoute le rectangle pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente le rectangle à ajouter.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Ajoute un rectangle à ce tracé.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Ajoute une série de rectangles à ce tracé.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> qui représente les rectangles à ajouter.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Ajoute une série de rectangles à ce tracé.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates an array of rectangles and adds the rectangles to the path.</source>
          <target state="translated">Crée un tableau de rectangles et ajoute les rectangles pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente les rectangles à ajouter.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Ajoute une série de rectangles à ce tracé.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a text string to this path.</source>
          <target state="translated">Ajoute une chaîne de texte à ce tracé.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> à ajouter.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> qui correspond au nom de la police utilisée pour dessiner le test.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> qui représente les informations sur le style du texte (gras, italique, etc.).</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Hauteur du carré cadratin englobant le caractère.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> représentant le point où le texte commence.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Ajoute une chaîne de texte à ce tracé.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Sets up string and font arguments.</source>
          <target state="translated">Définit les arguments de chaîne et de la police.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds the string to the path.</source>
          <target state="translated">Ajoute la chaîne pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Draws the string to the screen.</source>
          <target state="translated">Dessine la chaîne à l’écran.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>There are two important things to be pointed out. First, notice that the <ph id="ph1">`fontStyle`</ph> argument is cast as an integer.</source>
          <target state="translated">Il existe deux points importants à noter. Tout d’abord, notez que le <ph id="ph1">`fontStyle`</ph> argument est casté en un entier.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> method requires this so that two or more <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> members can be combined to create the desired font style (in this case, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> and <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> méthode cela requiert deux ou plusieurs <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> membres peuvent être combinés pour créer le style de police souhaitée (dans ce cas, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> et <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Secondly, notice that the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> method is used rather than the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> method.</source>
          <target state="translated">En outre, notez que le <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> méthode est utilisée plutôt qu’à le <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>If <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> is used, solid text is rendered, whereas if <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> is used, the text will be an outline style.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> est utilisé, solide texte est rendu, tandis que si <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> est utilisé, le texte sera un style de contour.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> à ajouter.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> qui correspond au nom de la police utilisée pour dessiner le test.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> qui représente les informations sur le style du texte (gras, italique, etc.).</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Hauteur du carré cadratin englobant le caractère.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> représentant le point où le texte commence.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Ajoute une chaîne de texte à ce tracé.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> à ajouter.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> qui correspond au nom de la police utilisée pour dessiner le test.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> qui représente les informations sur le style du texte (gras, italique, etc.).</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Hauteur du carré cadratin englobant le caractère.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> représentant le rectangle qui englobe le texte.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Ajoute une chaîne de texte à ce tracé.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> à ajouter.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> qui correspond au nom de la police utilisée pour dessiner le test.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> qui représente les informations sur le style du texte (gras, italique, etc.).</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">Hauteur du carré cadratin englobant le caractère.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> représentant le rectangle qui englobe le texte.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Ajoute une chaîne de texte à ce tracé.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from this path.</source>
          <target state="translated">Efface tous les marqueurs de ce tracé.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to create a marker at the current location in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> méthode pour créer un marqueur à l’emplacement actuel dans un <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method to iterate through the existing markers in a path.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> méthode pour parcourir les marqueurs existants dans un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">Marqueurs sont utilisés pour séparer les groupes de sections.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>One or more subpaths can be contained between two markers.</source>
          <target state="translated">Une ou plusieurs sections peuvent figurer entre deux marqueurs.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds several objects to the path.</source>
          <target state="translated">Ajoute plusieurs objets pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds markers to the path.</source>
          <target state="translated">Ajoute des marqueurs pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from the path.</source>
          <target state="translated">Efface tous les marqueurs du chemin d’accès.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates an exact copy of this path.</source>
          <target state="translated">Crée une copie exacte de ce tracé.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> créé par cette méthode et casté en un objet.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Adds several figures to the path.</source>
          <target state="translated">Ajoute plusieurs figures pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Clones a copy of that path.</source>
          <target state="translated">Clone une copie de ce chemin d’accès.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the new path to the screen.</source>
          <target state="translated">Dessine le nouveau chemin d’accès à l’écran.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Notice that the call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> method must be cast as a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Notez que l’appel de la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> (méthode) doit être convertie en un <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all open figures in this path and starts a new figure.</source>
          <target state="translated">Ferme toutes les figures ouvertes dans ce tracé et crée une nouvelle figure.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>It closes each open figure by connecting a line from its endpoint to its starting point.</source>
          <target state="translated">Chaque figure ouverte est fermée par une ligne connectant son point de terminaison à son point de début.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Adds several open figures to the path.</source>
          <target state="translated">Ajoute plusieurs figures ouvertes vers le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all figures in the path.</source>
          <target state="translated">Ferme tous les chiffres dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>Closes the current figure and starts a new figure.</source>
          <target state="translated">Ferme la figure en cours et crée une nouvelle figure.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</source>
          <target state="translated">Si la figure en cours contient une succession de lignes et de courbes connectées, la méthode ferme la boucle à l'aide d'une ligne connectant le point de terminaison au point de début.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</source>
          <target state="translated">Le code crée un triangle en créant un nouveau chemin d’accès, commencer une figure, ajout de deux lignes qui se croisent à la figure et puis fermer la figure pour former un triangle.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The path is then drawn to the screen.</source>
          <target state="translated">Le chemin d’accès est ensuite dessiné à l’écran.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> autorise les ressources utilisées par ce <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> pour être réaffectés à d’autres fins.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Obtient ou définit une énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> qui détermine le mode de remplissage de l'intérieur des formes contenues dans ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> qui spécifie le mode de remplissage de l'intérieur des formes contenues dans ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">Convertit chaque courbe de ce tracé en une succession de segments de ligne connectés.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">Convertit chaque courbe de ce tracé en une succession de segments de ligne connectés.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> à l'aide duquel transformer ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avant de le réduire à deux dimensions.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>Applies the specified transform and then converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">Applique la transformation spécifiée puis convertit chaque courbe de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> en une succession de segments de ligne connectés.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> à l'aide duquel transformer ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> avant de le réduire à deux dimensions.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Specifies the maximum permitted error between the curve and its flattened approximation.</source>
          <target state="translated">Spécifie l'erreur maximale autorisée entre la courbe et son approximation à deux dimensions.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value of 0.25 is the default.</source>
          <target state="translated">La valeur par défaut du paramètre 2D est égale à 0,25.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Reducing the flatness value will increase the number of line segments in the approximation.</source>
          <target state="translated">Une réduction de cette valeur augmente le nombre de segments de ligne utilisés pour l'approximation.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">Convertit chaque courbe de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> en une succession de segments de ligne connectés.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a graphics path and a translation matrix.</source>
          <target state="translated">Crée un tracé graphique et une matrice de translation.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Adds a curve to the path using four points.</source>
          <target state="translated">Ajoute une courbe pour le chemin d’accès à l’aide de quatre points.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path (curve) to the screen, using a black pen.</source>
          <target state="translated">Dessine le tracé (courbe) à l’écran, à l’aide d’un stylet noir.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Shifts the curve down 10 pixels and flattens it.</source>
          <target state="translated">Déplace la courbe vers le bas de 10 pixels et réduit à deux dimensions.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the curve to the screen using, a red pen.</source>
          <target state="translated">Dessine la courbe à l’écran à l’aide, un stylet rouge.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the red curve has flattened lines connecting the points.</source>
          <target state="translated">Notez que la courbe rouge a mis à plat les lignes reliant les points.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Retourne un rectangle délimitant ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Retourne un rectangle délimitant ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente un rectangle délimitant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">La taille du rectangle englobant retourné est influencée par le type de majuscules, de largeur du stylet et pointe du stylet et par conséquent produit un ajustement « libre » pour le chemin d’accès limitée.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">La formule approximative est : le rectangle englobant est augmenté de largeur du stylet, et ce résultat est multiplié par la limite d’angle, ainsi qu’une marge supplémentaire pour permettre des extrémités.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a graphics path.</source>
          <target state="translated">Crée un tracé graphique.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds an ellipse (circle) to it and draws it to the screen.</source>
          <target state="translated">Ajoute une ellipse (cercle) et le dessine à l’écran.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the circle with a call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> and draws the rectangle to the screen.</source>
          <target state="translated">Récupère le rectangle englobant du cercle avec un appel à <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> et dessine le rectangle à l’écran.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a second graphics path.</source>
          <target state="translated">Crée un deuxième chemin d’accès des graphiques.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds a circle and widens the path to a width of 10.</source>
          <target state="translated">Ajoute un cercle et élargit le chemin d’accès à une largeur égale à 10.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the second circle.</source>
          <target state="translated">Récupère le rectangle englobant du second cercle.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the bounding rectangle to the screen.</source>
          <target state="translated">Dessine le rectangle à l’écran.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Displays the rectangle size in a dialog box.</source>
          <target state="translated">Affiche la taille du rectangle dans une boîte de dialogue.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</source>
          <target state="translated">Notez que le rectangle englobant de droite est plus grand (pour le compte de la largeur supplémentaire de la ligne).</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> qui spécifie une transformation à appliquer à ce tracé avant le calcul du rectangle englobant.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">Le tracé n'est pas transformé de manière définitive ; la transformation est utilisée durant le calcul du rectangle englobant uniquement.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when this path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Retourne un rectangle qui délimite ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsque ce tracé est transformé par le <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente un rectangle délimitant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">La taille du rectangle englobant retourné est influencée par le type de majuscules, de largeur du stylet et pointe du stylet et par conséquent produit un ajustement « libre » pour le chemin d’accès limitée.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">La formule approximative est : le rectangle englobant est augmenté de largeur du stylet, et ce résultat est multiplié par la limite d’angle, ainsi qu’une marge supplémentaire pour permettre des extrémités.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> qui spécifie une transformation à appliquer à ce tracé avant le calcul du rectangle englobant.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">Le tracé n'est pas transformé de manière définitive ; la transformation est utilisée durant le calcul du rectangle englobant uniquement.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> with which to draw the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à l'aide duquel dessiner <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when the current path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> and drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Retourne un rectangle délimitant ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsque le tracé en cours est transformé par le <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifié puis dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente un rectangle délimitant ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">La taille du rectangle englobant retourné est influencée par le type de majuscules, de largeur du stylet et pointe du stylet et par conséquent produit un ajustement « libre » pour le chemin d’accès limitée.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">La formule approximative est : le rectangle englobant est augmenté de largeur du stylet, et ce résultat est multiplié par la limite d’angle, ainsi qu’une marge supplémentaire pour permettre des extrémités.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>Gets the last point in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Obtient le dernier point du tableau <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the last point in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représente le dernier point de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The code creates a path, adds a line to the path, and then gets the last point in the path.</source>
          <target state="translated">Le code crée un chemin d’accès, ajoute une ligne pour le chemin d’accès, puis obtient le dernier point dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se situe dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui spécifie l'emplacement à tester.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se situe dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui spécifie l'emplacement à tester.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se situe dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui spécifie l'emplacement à tester.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se trouve dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide des <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation <ph id="ph1">`graphics`</ph> est appliquée de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui spécifie l'emplacement à tester.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se trouve dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide des <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans (sous) le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation <ph id="ph1">`graphics`</ph> est appliquée de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se situe dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se situe dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se trouve dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide des <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation <ph id="ph1">`graphics`</ph> est appliquée de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Adds a rectangle to the path.</source>
          <target state="translated">Ajouter un rectangle dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a wide pen and widens the path with that pen (to make the example clearer),</source>
          <target state="translated">Crée un stylet large et s’étend le chemin d’accès avec ce stylet (pour un exemple plus clair),</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</source>
          <target state="translated">Teste un point (100, 50) pour voir si elle se trouve dans (sous) un des bords du rectangle en appelant <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The result is shown in the message box (in this case, true).</source>
          <target state="translated">Le résultat est illustré dans la boîte de message (dans ce cas, true).</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>In other words the edge is rendered over that point.</source>
          <target state="translated">En d’autres termes, le bord est rendu sur ce point.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié se trouve dans (sous) le contour de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide des <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> et <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié se situe dans (sous) le contour de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> lorsqu'il est dessiné à l'aide du <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> spécifié ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation de le <ph id="ph1">`graphics`</ph> paramètre est appliqué de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui spécifie le point à tester.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui spécifie le point à tester.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> qui spécifie le point à tester.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation de le <ph id="ph1">`graphics`</ph> paramètre est appliqué de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui spécifie le point à tester.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié figure dans cet objet ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation de le <ph id="ph1">`graphics`</ph> paramètre est appliqué de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, using the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indique si ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> contient le point spécifié, à l'aide du <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation <ph id="ph1">`graphics`</ph> est appliquée de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute une ellipse pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Tests whether the specified point is contained within the path.</source>
          <target state="translated">Teste si le point spécifié est contenu dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Displays the result in a dialog box.</source>
          <target state="translated">Affiche le résultat dans une boîte de dialogue.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">Coordonnée x du point à tester.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">Coordonnée y du point à tester.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pour lequel tester la visibilité.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> in the visible clip region of the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indique si le point spécifié est contenu dans ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, dans la zone de découpage visible du <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si le point spécifié est contenu dans <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">La matrice de transformation de le <ph id="ph1">`graphics`</ph> paramètre est appliqué de manière temporaire avant de tester la visibilité.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays of points (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) and types (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) for this <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> qui encapsule les tableaux de points (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) et de types (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) de ce <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays for both the points and types for this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> qui encapsule les tableaux de points et de types de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>Gets the points in the path.</source>
          <target state="translated">Obtient les points du tracé.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> objects that represent the path.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> qui représentent le tracé.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Gets the types of the corresponding points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array.</source>
          <target state="translated">Obtient les types des points correspondants du tableau <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>An array of bytes that specifies the types of the corresponding points in the path.</source>
          <target state="translated">Tableau d'octets qui spécifie les types des points correspondants du tracé.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The array of bytes returned by the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> property specifies point types and flags for the data points in a path.</source>
          <target state="translated">Le tableau d’octets retourné par la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> propriété spécifie les types de points et les indicateurs pour les points de données dans un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</source>
          <target state="translated">Pour chaque point, bits 0 à 2 indiquent le type d’un point et bits 3 à 7 contiennent un ensemble d’indicateurs qui spécifient les attributs d’un point.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The following table shows possible values and their meanings.</source>
          <target state="translated">Le tableau suivant montre les valeurs possibles et leurs significations.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Meaning</source>
          <target state="translated">Signification</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is the start of a figure.</source>
          <target state="translated">Indique que le point est le début d’une figure.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is one of the two endpoints of a line.</source>
          <target state="translated">Indique que le point est un des deux points de terminaison d’une ligne.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is an endpoint or control point of a cubic Bézier spline.</source>
          <target state="translated">Indique que le point est un point de contrôle ou de point de terminaison d’une spline de Bézier cubique.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x7</source>
          <target state="translated">0x7</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Masks all bits except for the three low-order bits, which indicate the point type.</source>
          <target state="translated">Masque tous les bits sauf pour les trois bits de poids faible, qui indiquent le type de point.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x20</source>
          <target state="translated">0x20</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is a marker.</source>
          <target state="translated">Spécifie que le point est un marqueur.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x80</source>
          <target state="translated">0x80</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is the last point in a closed subpath (figure).</source>
          <target state="translated">Spécifie que le point est le dernier point dans un sous-tracé (figure).</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated">Obtient le nombre d'éléments contenus dans le tableau <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph>ou <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>An integer that specifies the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated">Entier spécifiant le nombre d'éléments contenus dans le tableau <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Empties the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> arrays and sets the <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> to <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated">Vide les tableaux <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> et assigne la valeur <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> à <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Adds several primitives to it.</source>
          <target state="translated">Ajoute plusieurs primitives.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">Dessine le tableau de points du chemin d’accès à l’écran.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Resets the path to an empty state.</source>
          <target state="translated">Réinitialise le chemin d’accès à un état vide.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Re-acquires the points array (if it exists).</source>
          <target state="translated">Acquiert une nouvelle fois le tableau de points (s’il existe).</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the array to the screen.</source>
          <target state="translated">Dessine le tableau à l’écran.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Notice that it finds no array following the reset call.</source>
          <target state="translated">Notez qu’il ne trouve aucun tableau qui suit l’appel de reset.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Reverses the order of points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Inverse l'ordre des points du tableau <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Creates a path and adds several primitives to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute plusieurs primitives pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">Dessine le tableau de points du chemin d’accès à l’écran.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the reversed points array to the screen.</source>
          <target state="translated">Dessine le tableau de points inversés à l’écran.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Notice that the second listing of points is in reverse order from the first.</source>
          <target state="translated">Notez que la deuxième liste de points est dans l’ordre inverse de la première.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Sets a marker on this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Définit un marqueur sur ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>This method creates a marker on the path that can be used to separate sections of the path.</source>
          <target state="translated">Cette méthode crée un marqueur sur le chemin d’accès peut être utilisé pour séparer les sections de chemin d’accès.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>You can then use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> methods to iterate through the markers in the path.</source>
          <target state="translated">Vous pouvez ensuite utiliser le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> méthodes pour boucler dans les marqueurs dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">Marqueurs sont utilisés pour séparer les groupes de sections.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>One or more subpaths can be contained between two markers in the path.</source>
          <target state="translated">Une ou plusieurs sections peuvent figurer entre deux marques dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</source>
          <target state="translated">Le code crée un chemin d’accès et ajoute plusieurs primitives séparées par des marqueurs et dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Starts a new figure without closing the current figure.</source>
          <target state="translated">Commence une nouvelle figure sans fermer la figure en cours.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>All subsequent points added to the path are added to this new figure.</source>
          <target state="translated">Tous les nouveaux points ajoutés au tracé sont ajoutés à cette nouvelle figure.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>This method starts a new subpath in the path.</source>
          <target state="translated">Cette méthode démarre une nouvelle section dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Subpaths allow you to separate a path into sections and use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> class to iterate through the subpaths.</source>
          <target state="translated">Vous permettent de séparer un chemin d’accès dans les sections de la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> classe à une itération au sein des sous-tracés.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Creates a path.</source>
          <target state="translated">Crée un chemin d’accès.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Adds two sets of figures.</source>
          <target state="translated">Ajoute deux jeux de chiffres.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The first set of figures combines four primitives into two figures.</source>
          <target state="translated">Le premier jeu de figures combine quatre primitives en deux chiffres.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</source>
          <target state="translated">Le deuxième jeu de figures combine ces mêmes quatre primitives (sauf qu’ils sont le décalage de l’axe des y) en trois chiffres.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Draws all the figures to the screen.</source>
          <target state="translated">Dessine tous les chiffres à l’écran.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Notice the difference in the appearance between the two sets of figures.</source>
          <target state="translated">Notez la différence d’aspect entre les deux ensembles de chiffres.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the transformation to apply.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> représentant la transformation à appliquer.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Applies a transform matrix to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applique une matrice de transformation à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The transformation can scale, translate, rotate, or skew the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">La transformation peut mettre à l’échelle, traduire, faire pivoter ou incliner le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute une ellipse pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws path to the screen.</source>
          <target state="translated">Dessine le tracé à l’écran.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a transform matrix to translate the path 100 units in the x-axis direction.</source>
          <target state="translated">Crée une matrice de transformation pour convertir les chemin d’accès de 100 unités dans la direction de l’axe x.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws the transformed path to the screen.</source>
          <target state="translated">Dessine le tracé transformé à l’écran.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</source>
          <target state="translated">Notez que l’ellipse d’origine est dessinée en noir et que l’ellipse transformée s’affiche en rouge.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> définissant un parallélogramme en lequel se transforme le rectangle défini par <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Le tableau peut contenir trois ou quatre éléments.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente le rectangle transformé en parallélogramme défini par <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> définissant un parallélogramme en lequel se transforme le rectangle défini par <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Le tableau peut contenir trois ou quatre éléments.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente le rectangle transformé en parallélogramme défini par <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifiant la transformation géométrique à appliquer au tracé.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> définissant un parallélogramme en lequel se transforme le rectangle défini par <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Le tableau peut contenir trois ou quatre éléments.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente le rectangle transformé en parallélogramme défini par <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifiant la transformation géométrique à appliquer au tracé.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> qui spécifie si la distorsion utilise un mode bilinéaire ou de perspective.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Tableau de structures <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> définissant un parallélogramme en lequel se transforme le rectangle défini par <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">Le tableau peut contenir trois ou quatre éléments.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> qui représente le rectangle transformé en parallélogramme défini par <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifiant la transformation géométrique à appliquer au tracé.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> qui spécifie si la distorsion utilise un mode bilinéaire ou de perspective.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A value from 0 through 1 that specifies how flat the resulting path is.</source>
          <target state="translated">Valeur comprise entre 0 et 1 qui spécifie l'apparence à deux dimensions du tracé résultant.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>For more information, see the <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph> methods.</source>
          <target state="translated">Pour plus d'informations, consultez les méthodes <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Creates a path and adds a rectangle to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute un rectangle dans le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws that rectangle to the screen in black.</source>
          <target state="translated">Dessine le rectangle à l’écran en noir.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Warps the path with a perspective warp.</source>
          <target state="translated">Déformer le chemin d’accès avec une distorsion de perspective.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws the warped rectangle (path) to the screen in red.</source>
          <target state="translated">Dessine le rectangle déformé (chemin) à l’écran en rouge.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">Remplace ce tracé par des courbes englobant la zone remplie lorsque ce tracé est dessiné à l'aide du stylet spécifié.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> qui spécifie la largeur entre le contour d'origine du tracé et le nouveau contour créé par cette méthode.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>Adds an additional outline to the path.</source>
          <target state="translated">Ajoute un contour supplémentaire au tracé.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode crée un contour autour des lignes d’origine dans cet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, avec une distance entre les lignes existantes et le nouveau contour égale à celle de la largeur de la <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> utilisé dans l’appel à <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Si vous souhaitez remplir l’espace entre les lignes, vous devez utiliser le <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> plutôt que le <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> qui spécifie la largeur entre le contour d'origine du tracé et le nouveau contour créé par cette méthode.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifiant la transformation à appliquer au tracé avant de l'élargir.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>Adds an additional outline to the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Ajoute un contour supplémentaire au <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode crée un contour autour des lignes d’origine dans cet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, avec une distance entre les lignes existantes et le nouveau contour égale à celle de la largeur de la <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> utilisé dans l’appel à <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Si vous souhaitez remplir l’espace entre les lignes, vous devez utiliser le <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> plutôt que le <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Pour obtenir un exemple, consultez <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> qui spécifie la largeur entre le contour d'origine du tracé et le nouveau contour créé par cette méthode.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifiant la transformation à appliquer au tracé avant de l'élargir.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value that specifies the flatness for curves.</source>
          <target state="translated">Valeur qui spécifie l'apparence à deux dimensions des courbes.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Replaces this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">Remplace ce <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> par des courbes englobant la zone remplie lorsque ce tracé est dessiné à l'aide du stylet spécifié.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode crée un contour autour des lignes d’origine dans cet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, avec une distance entre les lignes existantes et le nouveau contour égale à celle de la largeur de la <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> utilisé dans l’appel à <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Si vous souhaitez remplir l’espace entre les lignes, vous devez utiliser le <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> plutôt que le <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objet d’événement.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a path and adds two ellipses to the path.</source>
          <target state="translated">Crée un chemin d’accès et ajoute deux points de suspension pour le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in black.</source>
          <target state="translated">Dessine le tracé en noir.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Widens the path.</source>
          <target state="translated">S’étend le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in red.</source>
          <target state="translated">Dessine le tracé en rouge.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the second rendering uses <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, and hence the rendered figure has the outline filled.</source>
          <target state="translated">Notez que le second rendu utilise <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> au lieu de <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, et par conséquent, la figure rendue a remplit le contour.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>