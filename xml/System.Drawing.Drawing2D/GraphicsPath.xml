<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="010b867d0c50e186006fea90cdbc67fefd8cfd61" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="14bc1-101">Représente une série de lignes et de courbes connectées.</span>
      <span class="sxs-lookup">
        <span data-stu-id="14bc1-101">Represents a series of connected lines and curves.</span>
      </span>
      <span data-ttu-id="14bc1-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="14bc1-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-103">Applications utilisent des chemins d’accès pour dessiner le contour des formes, remplir l’intérieur des formes et créer des zones de découpage.</span><span class="sxs-lookup"><span data-stu-id="14bc1-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="14bc1-104">Le moteur graphique conserve les coordonnées des formes géométriques dans un chemin d’accès dans l’espace de coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="14bc1-105">Un chemin d’accès peut être composée de n’importe quel nombre de figures (sections).</span><span class="sxs-lookup"><span data-stu-id="14bc1-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="14bc1-106">Chaque figure se compose d’une séquence de lignes reliées et courbes ou d’une primitive de forme géométrique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="14bc1-107">Le point de départ d’une figure est le premier point dans la séquence de lignes reliées et de courbes.</span><span class="sxs-lookup"><span data-stu-id="14bc1-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="14bc1-108">Le point de fin est le dernier point dans la séquence.</span><span class="sxs-lookup"><span data-stu-id="14bc1-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="14bc1-109">Les points de début et de fin d’une primitive de forme géométrique sont définis par la spécification primitive.</span><span class="sxs-lookup"><span data-stu-id="14bc1-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="14bc1-110">Une illustration qui se compose d’une séquence de lignes reliées et courbes (dont les points de début et de fin peuvent être coïncidents) est une figure ouverte, sauf si elle est fermée explicitement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="14bc1-111">Une figure peut être fermée explicitement, à l’aide de la <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> (méthode), qui ferme la figure en cours par une ligne reliant le point de fin pour le point de départ.</span><span class="sxs-lookup"><span data-stu-id="14bc1-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="14bc1-112">Une figure composée d’une primitive de forme géométrique est une figure fermée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="14bc1-113">Pour des raisons de remplissage et de découpage (par exemple, si un chemin d’accès est restitué à l’aide <xref:System.Drawing.Graphics.FillPath%2A>), tous les chiffres sont fermées en ajoutant une ligne à partir du premier point de la figure à son dernier point.</span><span class="sxs-lookup"><span data-stu-id="14bc1-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="14bc1-114">Une nouvelle figure est implicitement lancée lorsqu’un chemin d’accès est créé ou lorsqu’une figure est fermée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="14bc1-115">Une nouvelle figure est créée explicitement lorsque la <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="14bc1-116">Lorsqu’une primitive de forme géométrique est ajoutée à un chemin d’accès, il ajoute une figure contenant la forme géométrique et également de manière implicite démarre une nouvelle figure.</span><span class="sxs-lookup"><span data-stu-id="14bc1-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="14bc1-117">Par conséquent, il est toujours en cours figure dans un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="14bc1-118">Lorsque les lignes et des courbes sont ajoutés à un chemin d’accès, une ligne implicite est ajoutée pour connecter le point de fin de la figure en cours pour le point de départ de nouvelles lignes et de courbes pour former une séquence de lignes reliées et de courbes.</span><span class="sxs-lookup"><span data-stu-id="14bc1-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="14bc1-119">Figure a une direction qui décrit comment les segments de ligne et de courbe sont tracées entre le point de départ et le point de fin.</span><span class="sxs-lookup"><span data-stu-id="14bc1-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="14bc1-120">La direction est définie dans l’ordre de lignes et des courbes sont ajoutés à un chiffre, ou est défini par la primitive de forme géométrique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="14bc1-121">La direction est utilisée pour déterminer l’intérieur du chemin d’accès pour le découpage et de remplissage.</span><span class="sxs-lookup"><span data-stu-id="14bc1-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-122">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec une énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> de <see langword="Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-122">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-123">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec une valeur <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> de <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode">
          <span data-ttu-id="14bc1-124">Énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> qui définit le mode de remplissage de l'intérieur de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-124">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-125">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec l'énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="14bc1-126">Tableau de structures <see cref="T:System.Drawing.Point" /> qui définit les coordonnées des points composant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-126">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="14bc1-127">Tableau des éléments de l’énumération <see cref="T:System.Drawing.Drawing2D.PathPointType" /> qui spécifie le type de chaque point correspondant du tableau <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-127">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-128">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec les tableaux <see cref="T:System.Drawing.Drawing2D.PathPointType" /> et <see cref="T:System.Drawing.Point" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-128">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="14bc1-129">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui définit les coordonnées des points composant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-129">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="14bc1-130">Tableau des éléments de l’énumération <see cref="T:System.Drawing.Drawing2D.PathPointType" /> qui spécifie le type de chaque point correspondant du tableau <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-130">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-131">Initialise une nouvelle instance du tableau <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec les tableaux <see cref="T:System.Drawing.Drawing2D.PathPointType" /> et <see cref="T:System.Drawing.PointF" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="14bc1-132">Tableau de structures <see cref="T:System.Drawing.Point" /> qui définit les coordonnées des points composant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-132">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="14bc1-133">Tableau des éléments de l’énumération <see cref="T:System.Drawing.Drawing2D.PathPointType" /> qui spécifie le type de chaque point correspondant du tableau <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-133">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="14bc1-134">Énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> qui spécifie le mode de remplissage de l'intérieur des formes contenues dans ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-134">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-135">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec les tableaux <see cref="T:System.Drawing.Drawing2D.PathPointType" /> et <see cref="T:System.Drawing.Point" /> et l'élément de l'énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="14bc1-136">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui définit les coordonnées des points composant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-136">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="14bc1-137">Tableau des éléments de l’énumération <see cref="T:System.Drawing.Drawing2D.PathPointType" /> qui spécifie le type de chaque point correspondant du tableau <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-137">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="14bc1-138">Énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> qui spécifie le mode de remplissage de l'intérieur des formes contenues dans ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-138">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-139">Initialise une nouvelle instance du tableau <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avec les tableaux <see cref="T:System.Drawing.Drawing2D.PathPointType" /> et <see cref="T:System.Drawing.PointF" /> et l'élément de l'énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-139">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-140">Ajoute un arc elliptique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-140">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-141">
            <see cref="T:System.Drawing.Rectangle" /> qui représente les limites rectangulaires de l'ellipse à partir de laquelle l'arc est obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-141">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-142">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-142">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-143">Angle entre <c>startAngle</c> et la fin de l’arc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-143">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-144">Ajoute un arc elliptique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-144">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-145">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</span><span class="sxs-lookup"><span data-stu-id="14bc1-145">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="14bc1-146">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-146">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="14bc1-147">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</span><span class="sxs-lookup"><span data-stu-id="14bc1-147">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="14bc1-148">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</span><span class="sxs-lookup"><span data-stu-id="14bc1-148">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="14bc1-149">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-149">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-150">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-150">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-151">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-151">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-152">Crée un rectangle, à partir de laquelle l’arc est défini.</span><span class="sxs-lookup"><span data-stu-id="14bc1-152">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="14bc1-153">Crée un chemin d’accès, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-153">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="14bc1-154">Définit un arc elliptique de 180 degrés, allant de 0 degrés, 180 degrés, et ajoute un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-154">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="14bc1-155">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-155">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-156">
            <see cref="T:System.Drawing.RectangleF" /> qui représente les limites rectangulaires de l'ellipse à partir de laquelle l'arc est obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-156">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-157">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-157">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-158">Angle entre <c>startAngle</c> et la fin de l’arc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-158">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-159">Ajoute un arc elliptique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-159">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-160">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</span><span class="sxs-lookup"><span data-stu-id="14bc1-160">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="14bc1-161">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-161">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="14bc1-162">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</span><span class="sxs-lookup"><span data-stu-id="14bc1-162">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="14bc1-163">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</span><span class="sxs-lookup"><span data-stu-id="14bc1-163">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="14bc1-164">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-164">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-165">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-165">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-166">Coordonnée x de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-166">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-167">Coordonnée y de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-167">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="14bc1-168">Largeur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-168">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="14bc1-169">Hauteur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-169">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-170">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-170">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-171">Angle entre <c>startAngle</c> et la fin de l’arc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-171">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-172">Ajoute un arc elliptique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-172">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-173">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</span><span class="sxs-lookup"><span data-stu-id="14bc1-173">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="14bc1-174">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-174">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="14bc1-175">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</span><span class="sxs-lookup"><span data-stu-id="14bc1-175">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="14bc1-176">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</span><span class="sxs-lookup"><span data-stu-id="14bc1-176">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="14bc1-177">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-177">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-178">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-178">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-179">Coordonnée x de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-179">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-180">Coordonnée y de l'angle supérieur gauche de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-180">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="14bc1-181">Largeur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-181">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="14bc1-182">Hauteur de la zone rectangulaire qui définit l'ellipse à partir de laquelle l'arc est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-182">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-183">Angle de départ de l'arc, mesuré en degrés à partir de l'axe x et dans le sens des aiguilles d'une montre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-183">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-184">Angle entre <c>startAngle</c> et la fin de l’arc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-184">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-185">Ajoute un arc elliptique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-185">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-186">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au début de l’arc.</span><span class="sxs-lookup"><span data-stu-id="14bc1-186">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="14bc1-187">L’arc est tracé le long du périmètre de l’ellipse délimitée par le rectangle spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-187">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="14bc1-188">Le point de départ de l’arc est déterminé par la mesure dans le sens horaire à partir de l’axe x de l’ellipse (0-degrés) par le nombre de degrés de l’angle de début.</span><span class="sxs-lookup"><span data-stu-id="14bc1-188">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="14bc1-189">Le point de terminaison se trouve de la même façon en mesurant dans le sens horaire à partir du point de départ par le nombre de degrés de l’angle de balayage.</span><span class="sxs-lookup"><span data-stu-id="14bc1-189">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="14bc1-190">Si l’angle de balayage est supérieur à 360 degrés ou inférieur à 360 degrés, l’arc est balayage exactement 360 degrés ou -360 degrés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-190">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-191">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-191">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-192">Ajoute une courbe de Bézier cubique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-192">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="14bc1-193">
            <see cref="T:System.Drawing.Point" /> qui représente le point de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-193">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="14bc1-194">
            <see cref="T:System.Drawing.Point" /> qui représente le premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-194">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="14bc1-195">
            <see cref="T:System.Drawing.Point" /> qui représente le deuxième point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-195">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="14bc1-196">
            <see cref="T:System.Drawing.Point" /> qui représente le point de terminaison de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-196">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-197">Ajoute une courbe de Bézier cubique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-197">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-198">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-198">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="14bc1-199">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-199">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-200">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-200">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="14bc1-201">
            <see cref="T:System.Drawing.PointF" /> qui représente le point de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-201">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="14bc1-202">
            <see cref="T:System.Drawing.PointF" /> qui représente le premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-202">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="14bc1-203">
            <see cref="T:System.Drawing.PointF" /> qui représente le deuxième point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-203">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="14bc1-204">
            <see cref="T:System.Drawing.PointF" /> qui représente le point de terminaison de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-204">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-205">Ajoute une courbe de Bézier cubique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-205">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-206">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-206">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="14bc1-207">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-207">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-208">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-208">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="14bc1-209">Coordonnée x du point de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-209">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="14bc1-210">Coordonnée y du point de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-210">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="14bc1-211">Coordonnée x du premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-211">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="14bc1-212">Coordonnée y du premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-212">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="14bc1-213">Coordonnée x du second point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-213">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="14bc1-214">Coordonnée y du second point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-214">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="14bc1-215">Coordonnée x du point de terminaison de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-215">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="14bc1-216">Coordonnée y du point de terminaison de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-216">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-217">Ajoute une courbe de Bézier cubique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-217">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-218">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-218">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="14bc1-219">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-219">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-220">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-221">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-222">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-222">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-223">Ajoute une courbe de Bézier cubique définie par les points (50, 50), (70, 0), (100, 120) et (150, 50) pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-223">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-224">Ferme la courbe.</span><span class="sxs-lookup"><span data-stu-id="14bc1-224">Closes the curve.</span></span>  
  
-   <span data-ttu-id="14bc1-225">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-225">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="14bc1-226">Coordonnée x du point de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-226">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="14bc1-227">Coordonnée y du point de début de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-227">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="14bc1-228">Coordonnée x du premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-228">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="14bc1-229">Coordonnée y du premier point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-229">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="14bc1-230">Coordonnée x du second point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-230">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="14bc1-231">Coordonnée y du second point de contrôle de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-231">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="14bc1-232">Coordonnée x du point de terminaison de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-232">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="14bc1-233">Coordonnée y du point de terminaison de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-233">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-234">Ajoute une courbe de Bézier cubique à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-234">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-235">La courbe cubique est construite à partir du premier point au quatrième point à l’aide des deuxième et troisième points comme points de contrôle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-235">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="14bc1-236">S’il existe une ligne précédente ou un segment courbe dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la courbe cubique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-236">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-237">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-237">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-238">Ajoute une suite de courbes de Bézier cubiques connectées à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-238">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-239">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant les courbes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-239">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-240">Ajoute une suite de courbes de Bézier cubiques connectées à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-240">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-241">Le `points` paramètre spécifie un tableau de points de terminaison et les points de contrôle de la courbe des courbes connectées.</span><span class="sxs-lookup"><span data-stu-id="14bc1-241">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="14bc1-242">La première courbe est construite à partir du premier point au quatrième point dans le `points` tableau à l’aide des deuxième et troisième points comme points de contrôle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-242">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="14bc1-243">Outre le point de terminaison de la courbe précédente, chaque courbe suivante dans la séquence doit exactement trois points supplémentaires : les deux points dans la séquence sont des points de contrôle et le troisième est le point de terminaison de la courbe ajoutée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-243">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="14bc1-244">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la première courbe cubique de la séquence.</span><span class="sxs-lookup"><span data-stu-id="14bc1-244">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-245">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-245">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-246">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-246">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-247">Crée un tableau de sept points (représentant deux courbes Bézier connectées).</span><span class="sxs-lookup"><span data-stu-id="14bc1-247">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="14bc1-248">Crée un chemin d’accès et ajoute la série de points de courbe de Bézier pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-248">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-249">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-249">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-250">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant les courbes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-250">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-251">Ajoute une suite de courbes de Bézier cubiques connectées à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-251">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-252">Le `points` paramètre spécifie un tableau de points de terminaison et les points de contrôle de la courbe des courbes connectées.</span><span class="sxs-lookup"><span data-stu-id="14bc1-252">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="14bc1-253">La première courbe est construite à partir du premier point au quatrième point dans le `points` tableau à l’aide des deuxième et troisième points comme points de contrôle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-253">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="14bc1-254">Outre le point de terminaison de la courbe précédente, chaque courbe suivante dans la séquence doit exactement trois points supplémentaires : les deux points dans la séquence sont des points de contrôle et le troisième est le point de terminaison de la courbe ajoutée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-254">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="14bc1-255">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment précédent au point de départ de la première courbe cubique de la séquence.</span><span class="sxs-lookup"><span data-stu-id="14bc1-255">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-256">Pour un exemple, consultez :</span><span class="sxs-lookup"><span data-stu-id="14bc1-256">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-257">Ajoute une courbe fermée à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-257">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="14bc1-258">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-258">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-259">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-259">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-260">Ajoute une courbe fermée à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-260">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="14bc1-261">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-261">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-262">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-262">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-263">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-263">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="14bc1-264">Si le premier et le dernier point dans le `points` tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</span><span class="sxs-lookup"><span data-stu-id="14bc1-264">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="14bc1-265">Impossible de définir la valeur de tension pour cette méthode et la valeur par défaut est une valeur équivalente à 0,5.</span><span class="sxs-lookup"><span data-stu-id="14bc1-265">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-266">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-266">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-267">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-267">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-268">Ajoute une courbe fermée à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-268">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="14bc1-269">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-269">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-270">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-270">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-271">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-271">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="14bc1-272">Si le premier et le dernier point dans le `points` tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</span><span class="sxs-lookup"><span data-stu-id="14bc1-272">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="14bc1-273">Impossible de définir la valeur de tension pour cette méthode et la valeur par défaut est une valeur équivalente à 0,5.</span><span class="sxs-lookup"><span data-stu-id="14bc1-273">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-274">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-274">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-275">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-275">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="14bc1-276">Valeur comprise entre 0 et 1 qui spécifie la courbure de la courbe entre les points, 0 correspondant à la courbe la plus petite (angle le plus prononcé) et 1 représentant la courbe la plus régulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-276">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-277">Ajoute une courbe fermée à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-277">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="14bc1-278">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-278">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-279">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-279">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-280">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-280">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="14bc1-281">Si le premier et le dernier point dans le `points` tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</span><span class="sxs-lookup"><span data-stu-id="14bc1-281">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-282">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-282">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-283">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-283">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-284">Crée un tableau de six points (représentant une spline cardinale).</span><span class="sxs-lookup"><span data-stu-id="14bc1-284">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="14bc1-285">Crée un chemin d’accès et ajoute les courbes spline cardinale fermée pour le chemin d’accès (fermée du point de terminaison pour le point de départ).</span><span class="sxs-lookup"><span data-stu-id="14bc1-285">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="14bc1-286">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-286">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="14bc1-287">Notez que la valeur 0,5 est utilisée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-287">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-288">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-288">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="14bc1-289">Valeur comprise entre 0 et 1 qui spécifie la courbure de la courbe entre les points, 0 correspondant à la courbe la plus petite (angle le plus prononcé) et 1 représentant la courbe la plus régulière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-289">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-290">Ajoute une courbe fermée à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-290">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="14bc1-291">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-291">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-292">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-292">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-293">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-293">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="14bc1-294">Si le premier et le dernier point dans le `points` tableau ne sont pas identiques, la courbe est fermée en connectant ces deux points.</span><span class="sxs-lookup"><span data-stu-id="14bc1-294">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-295">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-295">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-296">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-296">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="14bc1-297">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-297">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-298">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-298">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-299">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-299">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="14bc1-300">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-300">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-301">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-301">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-302">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-302">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-303">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-303">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-304">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-304">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-305">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-305">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="14bc1-306">Une spline cardinale est utilisée car la courbe passe par chaque point du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-306">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-307">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-307">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-308">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-308">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-309">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-309">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-310">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-310">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="14bc1-311">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-311">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="14bc1-312">Des valeurs supérieures à 1 donnent des résultats inattendus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-312">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-313">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-313">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-314">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-314">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-315">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-315">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-316">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-316">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-317">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-317">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="14bc1-318">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-318">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="14bc1-319">Des valeurs supérieures à 1 donnent des résultats inattendus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-319">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-320">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-320">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-321">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-321">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-322">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-322">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-323">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-323">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-324">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-324">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="14bc1-325">Index de l’élément du tableau <c>points</c> qui est utilisé comme premier point de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-325">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="14bc1-326">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-326">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="14bc1-327">Des valeurs supérieures à 1 donnent des résultats inattendus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-327">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="14bc1-328">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-328">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="14bc1-329">Des valeurs supérieures à 1 donnent des résultats inattendus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-329">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-330">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-330">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-331">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-331">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-332">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-332">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="14bc1-333">La courbe commence au point dans le tableau spécifié par le `offset` paramètre et inclut le nombre de points (segments) spécifié par `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-333">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-334">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-335">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-335">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-336">Crée un tableau de quatre points (représentant une spline cardinale).</span><span class="sxs-lookup"><span data-stu-id="14bc1-336">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="14bc1-337">Crée un chemin d’accès et le tableau de points, ajoute la courbe pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-337">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-338">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-338">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-339">Remarquez que le tableau comporte quatre points, il y a que trois segments, qui est le nombre spécifié dans le troisième argument de l’appel à <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-339">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-340">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-340">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="14bc1-341">Index de l’élément du tableau <c>points</c> qui est utilisé comme premier point de la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-341">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="14bc1-342">Nombre de segments utilisés pour dessiner la courbe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-342">The number of segments used to draw the curve.</span>
          </span>
          <span data-ttu-id="14bc1-343">Un segment peut être représenté comme une ligne reliant deux points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-343">A segment can be thought of as a line connecting two points.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="14bc1-344">Valeur qui spécifie la courbure de la courbe entre les points de contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-344">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="14bc1-345">Des valeurs supérieures à 1 donnent des résultats inattendus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-345">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-346">Ajoute une spline à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-346">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-347">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-347">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-348">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-348">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="14bc1-349">La courbe commence au point dans le tableau spécifié par `offset`, notamment le nombre de points (segments) spécifié par `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-349">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-350">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-350">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-351">Ajoute une ellipse au tracé en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-351">Adds an ellipse to the current path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-352">
            <see cref="T:System.Drawing.Rectangle" /> représentant le rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-352">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-353">Ajoute une ellipse au tracé en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-353">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-354">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-354">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-355">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-355">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="14bc1-356">Crée un rectangle englobant qui définit l’ellipse.</span><span class="sxs-lookup"><span data-stu-id="14bc1-356">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="14bc1-357">Crée un chemin d’accès et ajoute les points de suspension pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-357">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="14bc1-358">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-358">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-359">
            <see cref="T:System.Drawing.RectangleF" /> représentant le rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-359">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-360">Ajoute une ellipse au tracé en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-360">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-361">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-361">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-362">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-362">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-363">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-363">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="14bc1-364">Largeur du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-364">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="14bc1-365">Hauteur du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-365">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-366">Ajoute une ellipse au tracé en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-366">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-367">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-367">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-368">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-368">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-369">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-369">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="14bc1-370">Largeur du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-370">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="14bc1-371">Hauteur du rectangle englobant qui définit l'ellipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-371">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-372">Ajoute une ellipse au tracé en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-372">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-373">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-373">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-374">Ajoute un segment de ligne à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-374">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="14bc1-375">
            <see cref="T:System.Drawing.Point" /> qui représente le point de début de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-375">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="14bc1-376">
            <see cref="T:System.Drawing.Point" /> qui représente le point de terminaison de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-376">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-377">Ajoute un segment de ligne à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-377">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-378">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de ce <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-378">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="14bc1-379">S’il existe déjà des lignes ou des courbes dans le <xref:System.Drawing.Drawing2D.GraphicsPath>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-379">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-380">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-380">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="14bc1-381">
            <see cref="T:System.Drawing.PointF" /> qui représente le point de début de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-381">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="14bc1-382">
            <see cref="T:System.Drawing.PointF" /> qui représente le point de terminaison de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-382">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-383">Ajoute un segment de ligne à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-383">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-384">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de ce <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-384">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="14bc1-385">S’il existe déjà des lignes ou des courbes dans le <xref:System.Drawing.Drawing2D.GraphicsPath>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-385">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-386">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-386">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="14bc1-387">Coordonnée x du point de début de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-387">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="14bc1-388">Coordonnée y du point de début de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-388">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="14bc1-389">Coordonnée x du point de terminaison de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-389">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="14bc1-390">Coordonnée y du point de terminaison de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-390">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-391">Ajoute un segment de ligne à la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-391">Appends a line segment to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-392">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de la figure en cours.</span><span class="sxs-lookup"><span data-stu-id="14bc1-392">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="14bc1-393">S’il existe déjà des lignes ou des courbes dans le <xref:System.Drawing.Drawing2D.GraphicsPath>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-393">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-394">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-394">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-395">Le code crée un chemin d’accès, ajoute trois lignes formant un triangle, puis dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-395">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="14bc1-396">Coordonnée x du point de début de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-396">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="14bc1-397">Coordonnée y du point de début de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-397">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="14bc1-398">Coordonnée x du point de terminaison de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-398">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="14bc1-399">Coordonnée y du point de terminaison de la ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-399">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-400">Ajoute un segment de ligne à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-400">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-401">Cette méthode ajoute le segment de ligne défini par les points spécifiés à la fin de ce <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-401">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="14bc1-402">S’il existe déjà des lignes ou des courbes dans le <xref:System.Drawing.Drawing2D.GraphicsPath>, un segment de ligne est dessiné pour connecter le dernier point dans le chemin d’accès et le premier point dans le nouveau segment de ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-402">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-403">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-403">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-404">Ajoute une série de segments de ligne connectés à la fin de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-404">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-405">Tableau de structures <see cref="T:System.Drawing.Point" /> qui représente les points définissant les segments de ligne à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-405">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-406">Ajoute une série de segments de ligne connectés à la fin de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-406">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-407">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment du précédent point de départ de la ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-407">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="14bc1-408">Le `points` paramètre spécifie un tableau de points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="14bc1-408">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="14bc1-409">Les deux premiers spécifient la première ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-409">The first two specify the first line.</span></span> <span data-ttu-id="14bc1-410">Chaque point supplémentaire spécifie le point de terminaison d’un segment de ligne dont le point de départ est le point de terminaison de la ligne précédente.</span><span class="sxs-lookup"><span data-stu-id="14bc1-410">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-411">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-411">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-412">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-412">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-413">Crée un tableau de quatre points décrivant un triangle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-413">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="14bc1-414">Crée un chemin d’accès et ajoute le tableau de lignes.</span><span class="sxs-lookup"><span data-stu-id="14bc1-414">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="14bc1-415">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-415">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="14bc1-416">Notez que chaque ligne après le premier point utilise le point précédent comme point de départ et le nouveau point comme point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="14bc1-416">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-417">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui représente les points définissant les segments de ligne à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-417">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-418">Ajoute une série de segments de ligne connectés à la fin de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-418">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-419">S’il existe déjà des lignes ou des courbes dans l’illustration, une ligne est ajoutée pour connecter le point de terminaison du segment du précédent point de départ de la ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-419">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="14bc1-420">Le `points` paramètre spécifie un tableau de points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="14bc1-420">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="14bc1-421">Les deux premiers spécifient la première ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-421">The first two specify the first line.</span></span> <span data-ttu-id="14bc1-422">Chaque point supplémentaire spécifie le point de terminaison d’un segment de ligne dont le point de départ est le point de terminaison de la ligne précédente.</span><span class="sxs-lookup"><span data-stu-id="14bc1-422">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-423">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-423">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath">
          <span data-ttu-id="14bc1-424">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-424">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span>
          </span>
        </param>
        <param name="connect">
          <span data-ttu-id="14bc1-425">Valeur Boolean qui spécifie si la première figure du tracé ajouté appartient à la dernière figure de ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-425">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="14bc1-426">La valeur <see langword="true" /> spécifie que la première figure du tracé ajouté fait partie de la dernière figure de ce tracé, le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-426">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="14bc1-427">La valeur <see langword="false" /> spécifie que la première figure du tracé ajouté n'appartient pas à la dernière figure de ce dernier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-427">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-428">Ajoute le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié à la fin de ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-428">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-429">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-429">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-430">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-430">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-431">Crée une de deux chemins d’accès un triangle à droite-côté-up et l’autre un triangle côté-up-down.</span><span class="sxs-lookup"><span data-stu-id="14bc1-431">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="14bc1-432">Ajoute le deuxième chemin d’accès à la première.</span><span class="sxs-lookup"><span data-stu-id="14bc1-432">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="14bc1-433">Dessine le tracé résultant à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-433">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-434">Ajoute le contour d'un graphique à secteurs à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-434">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-435">
            <see cref="T:System.Drawing.Rectangle" /> qui représente le rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-435">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-436">Angle de départ du graphique à secteurs, mesuré en degrés et dans le sens des aiguilles d'une montre à partir de l'axe x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-436">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-437">Angle entre <c>startAngle</c> et la fin du secteur, mesuré en degrés dans le sens des aiguilles d’une montre à partir de <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-437">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-438">Ajoute le contour d'un graphique à secteurs à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-438">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-439">Le secteur est défini par un contour partiel d’une ellipse et deux lignes radiales qui croisent les points de terminaison du contour.</span><span class="sxs-lookup"><span data-stu-id="14bc1-439">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="14bc1-440">Le contour partiel commence à `startAngle` (mesurée dans le sens horaire à partir de l’axe des x) et se termine à `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-440">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-441">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-441">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-442">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-442">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-443">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-443">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="14bc1-444">Largeur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-444">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="14bc1-445">Hauteur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-445">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-446">Angle de départ du graphique à secteurs, mesuré en degrés et dans le sens des aiguilles d'une montre à partir de l'axe x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-446">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-447">Angle entre <c>startAngle</c> et la fin du secteur, mesuré en degrés dans le sens des aiguilles d’une montre à partir de <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-447">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-448">Ajoute le contour d'un graphique à secteurs à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-448">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-449">Le secteur est défini par un contour partiel d’une ellipse et deux lignes radiales qui croisent les points de terminaison du contour.</span><span class="sxs-lookup"><span data-stu-id="14bc1-449">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="14bc1-450">Le contour partiel commence à `startAngle` (mesurée dans le sens horaire à partir de l’axe des x) et se termine à `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-450">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-451">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-451">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-452">Le code crée un tracé graphique, ajoute la forme de graphique à secteurs, puis dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-452">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-453">Coordonnée x de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-453">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-454">Coordonnée y de l'angle supérieur gauche du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-454">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="14bc1-455">Largeur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-455">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="14bc1-456">Hauteur du rectangle englobant qui définit l'ellipse à partir de laquelle le graphique à secteurs est dessiné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-456">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="14bc1-457">Angle de départ du graphique à secteurs, mesuré en degrés et dans le sens des aiguilles d'une montre à partir de l'axe x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-457">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="14bc1-458">Angle entre <c>startAngle</c> et la fin du secteur, mesuré en degrés dans le sens des aiguilles d’une montre à partir de <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-458">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-459">Ajoute le contour d'un graphique à secteurs à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-459">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-460">Le secteur est défini par un contour partiel d’une ellipse et deux lignes radiales qui croisent les points de terminaison du contour.</span><span class="sxs-lookup"><span data-stu-id="14bc1-460">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="14bc1-461">Le contour partiel commence à `startAngle` (mesurée dans le sens horaire à partir de l’axe des x) et se termine à `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-461">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-462">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-462">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-463">Ajoute un polygone à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-463">Adds a polygon to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-464">Tableau de structures <see cref="T:System.Drawing.Point" /> qui définit le polygone à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-464">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-465">Ajoute un polygone à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-465">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-466">Les points dans le `points` tableau spécifient les vertex d’un polygone.</span><span class="sxs-lookup"><span data-stu-id="14bc1-466">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="14bc1-467">Si le premier point dans le tableau n’est pas le même que le dernier point, ces deux points sont connectés pour fermer le polygone.</span><span class="sxs-lookup"><span data-stu-id="14bc1-467">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-468">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-469">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-470">Crée un tableau de points définissant un polygone.</span><span class="sxs-lookup"><span data-stu-id="14bc1-470">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="14bc1-471">Crée un chemin d’accès et ajoute le polygone pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-471">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-472">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-472">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="14bc1-473">Tableau de structures <see cref="T:System.Drawing.PointF" /> qui définit le polygone à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-473">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-474">Ajoute un polygone à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-474">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-475">Les points dans le `points` tableau spécifient les vertex d’un polygone.</span><span class="sxs-lookup"><span data-stu-id="14bc1-475">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="14bc1-476">Si le premier point dans le tableau n’est pas le même que le dernier point, ces deux points sont connectés pour fermer le polygone.</span><span class="sxs-lookup"><span data-stu-id="14bc1-476">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-477">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-477">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-478">Ajoute un rectangle à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-478">Adds a rectangle to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-479">
            <see cref="T:System.Drawing.Rectangle" /> qui représente le rectangle à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-479">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-480">Ajoute un rectangle à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-480">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-481">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-482">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-483">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-483">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-484">Crée un rectangle et ajoute le rectangle pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-484">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-485">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-485">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="14bc1-486">
            <see cref="T:System.Drawing.RectangleF" /> qui représente le rectangle à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-486">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-487">Ajoute un rectangle à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-487">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-488">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-488">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-489">Ajoute une série de rectangles à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-489">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="14bc1-490">Tableau de structures <see cref="T:System.Drawing.Rectangle" /> qui représente les rectangles à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-490">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-491">Ajoute une série de rectangles à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-491">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-492">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-493">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-494">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-494">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-495">Crée un tableau de rectangles et ajoute les rectangles pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-495">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-496">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-496">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="14bc1-497">Tableau de structures <see cref="T:System.Drawing.RectangleF" /> qui représente les rectangles à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-497">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-498">Ajoute une série de rectangles à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-498">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-499">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-499">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-500">Ajoute une chaîne de texte à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-500">Adds a text string to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="14bc1-501">
            <see cref="T:System.String" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-501">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="14bc1-502">
            <see cref="T:System.Drawing.FontFamily" /> qui correspond au nom de la police utilisée pour dessiner le test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-502">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="14bc1-503">Énumération <see cref="T:System.Drawing.FontStyle" /> qui représente les informations sur le style du texte (gras, italique, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-503">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="14bc1-504">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-504">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="14bc1-505">Hauteur du carré cadratin englobant le caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-505">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="14bc1-506">
            <see cref="T:System.Drawing.Point" /> représentant le point où le texte commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-506">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="14bc1-507">
            <see cref="T:System.Drawing.StringFormat" /> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-507">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-508">Ajoute une chaîne de texte à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-508">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-509">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-510">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-511">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-511">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-512">Définit les arguments de chaîne et de la police.</span><span class="sxs-lookup"><span data-stu-id="14bc1-512">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="14bc1-513">Ajoute la chaîne pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-513">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-514">Dessine la chaîne à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-514">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-515">Il existe deux points importants à noter. Tout d’abord, notez que le `fontStyle` argument est casté en un entier.</span><span class="sxs-lookup"><span data-stu-id="14bc1-515">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="14bc1-516">Le <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> méthode cela requiert deux ou plusieurs <xref:System.Drawing.FontStyle> membres peuvent être combinés pour créer le style de police souhaitée (dans ce cas, <xref:System.Drawing.FontStyle.Italic> et <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="14bc1-516">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="14bc1-517">En outre, notez que le <xref:System.Drawing.Graphics.FillPath%2A> méthode est utilisée plutôt qu’à le <xref:System.Drawing.Graphics.DrawPath%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14bc1-517">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="14bc1-518">Si <xref:System.Drawing.Graphics.FillPath%2A> est utilisé, solide texte est rendu, tandis que si <xref:System.Drawing.Graphics.DrawPath%2A> est utilisé, le texte sera un style de contour.</span><span class="sxs-lookup"><span data-stu-id="14bc1-518">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="14bc1-519">
            <see cref="T:System.String" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-519">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="14bc1-520">
            <see cref="T:System.Drawing.FontFamily" /> qui correspond au nom de la police utilisée pour dessiner le test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-520">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="14bc1-521">Énumération <see cref="T:System.Drawing.FontStyle" /> qui représente les informations sur le style du texte (gras, italique, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-521">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="14bc1-522">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-522">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="14bc1-523">Hauteur du carré cadratin englobant le caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-523">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="14bc1-524">
            <see cref="T:System.Drawing.PointF" /> représentant le point où le texte commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-524">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="14bc1-525">
            <see cref="T:System.Drawing.StringFormat" /> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-525">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-526">Ajoute une chaîne de texte à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-526">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-527">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-527">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="14bc1-528">
            <see cref="T:System.String" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-528">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="14bc1-529">
            <see cref="T:System.Drawing.FontFamily" /> qui correspond au nom de la police utilisée pour dessiner le test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-529">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="14bc1-530">Énumération <see cref="T:System.Drawing.FontStyle" /> qui représente les informations sur le style du texte (gras, italique, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-530">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="14bc1-531">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-531">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="14bc1-532">Hauteur du carré cadratin englobant le caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-532">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="14bc1-533">
            <see cref="T:System.Drawing.Rectangle" /> représentant le rectangle qui englobe le texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-533">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="14bc1-534">
            <see cref="T:System.Drawing.StringFormat" /> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-534">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-535">Ajoute une chaîne de texte à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-535">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-536">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-536">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="14bc1-537">
            <see cref="T:System.String" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-537">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="14bc1-538">
            <see cref="T:System.Drawing.FontFamily" /> qui correspond au nom de la police utilisée pour dessiner le test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-538">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="14bc1-539">Énumération <see cref="T:System.Drawing.FontStyle" /> qui représente les informations sur le style du texte (gras, italique, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-539">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="14bc1-540">Elle doit être castée en un entier (consultez l'exemple de code figurant plus loin dans cette rubrique).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-540">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="14bc1-541">Hauteur du carré cadratin englobant le caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-541">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="14bc1-542">
            <see cref="T:System.Drawing.RectangleF" /> représentant le rectangle qui englobe le texte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-542">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="14bc1-543">
            <see cref="T:System.Drawing.StringFormat" /> qui spécifie des informations sur la mise en forme du texte telles que l'espacement des lignes et l'alignement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-543">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-544">Ajoute une chaîne de texte à ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-544">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-545">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-545">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-546">Efface tous les marqueurs de ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-546">Clears all markers from this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-547">Utilisez le <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> méthode pour créer un marqueur à l’emplacement actuel dans un <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-547">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="14bc1-548">Utilisez la <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> méthode pour parcourir les marqueurs existants dans un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="14bc1-549">Marqueurs sont utilisés pour séparer les groupes de sections.</span><span class="sxs-lookup"><span data-stu-id="14bc1-549">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="14bc1-550">Une ou plusieurs sections peuvent figurer entre deux marqueurs.</span><span class="sxs-lookup"><span data-stu-id="14bc1-550">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-551">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-551">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-552">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-552">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-553">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-553">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-554">Ajoute plusieurs objets pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-554">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-555">Ajoute des marqueurs pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-555">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-556">Efface tous les marqueurs du chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-556">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="14bc1-557">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-557">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-558">Crée une copie exacte de ce tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-558">Creates an exact copy of this path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-559">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> créé par cette méthode et casté en un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-559">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-560">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-560">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-561">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-561">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-562">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-562">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-563">Ajoute plusieurs figures pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-563">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-564">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-564">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-565">Clone une copie de ce chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-565">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="14bc1-566">Dessine le nouveau chemin d’accès à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-566">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-567">Notez que l’appel de la <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> (méthode) doit être convertie en un <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-567">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-568">Ferme toutes les figures ouvertes dans ce tracé et crée une nouvelle figure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-568">Closes all open figures in this path and starts a new figure.</span>
          </span>
          <span data-ttu-id="14bc1-569">Chaque figure ouverte est fermée par une ligne connectant son point de terminaison à son point de début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-569">It closes each open figure by connecting a line from its endpoint to its starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-570">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-571">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-572">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-572">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-573">Ajoute plusieurs figures ouvertes vers le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-573">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-574">Ferme tous les chiffres dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-574">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="14bc1-575">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-575">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-576">Ferme la figure en cours et crée une nouvelle figure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-576">Closes the current figure and starts a new figure.</span>
          </span>
          <span data-ttu-id="14bc1-577">Si la figure en cours contient une succession de lignes et de courbes connectées, la méthode ferme la boucle à l'aide d'une ligne connectant le point de terminaison au point de début.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-577">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-578">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-578">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-579">Le code crée un triangle en créant un nouveau chemin d’accès, commencer une figure, ajout de deux lignes qui se croisent à la figure et puis fermer la figure pour former un triangle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-579">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="14bc1-580">Le chemin d’accès est ensuite dessiné à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-580">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-581">Libère toutes les ressources utilisées par ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-581">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-582">Appel de <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> autorise les ressources utilisées par ce <xref:System.Drawing.Drawing2D.GraphicsPath> pour être réaffectés à d’autres fins.</span><span class="sxs-lookup"><span data-stu-id="14bc1-582">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-583">Obtient ou définit une énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> qui détermine le mode de remplissage de l'intérieur des formes contenues dans ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-583">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14bc1-584">Énumération <see cref="T:System.Drawing.Drawing2D.FillMode" /> qui spécifie le mode de remplissage de l'intérieur des formes contenues dans ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-584">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-585">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-585">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-586">Convertit chaque courbe de ce tracé en une succession de segments de ligne connectés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-586">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-587">Convertit chaque courbe de ce tracé en une succession de segments de ligne connectés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-587">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-588">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-588">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="14bc1-589">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> à l'aide duquel transformer ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avant de le réduire à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-589">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-590">Applique la transformation spécifiée puis convertit chaque courbe de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en une succession de segments de ligne connectés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-590">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-591">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-591">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="14bc1-592">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> à l'aide duquel transformer ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> avant de le réduire à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-592">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="14bc1-593">Spécifie l'erreur maximale autorisée entre la courbe et son approximation à deux dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-593">Specifies the maximum permitted error between the curve and its flattened approximation.</span>
          </span>
          <span data-ttu-id="14bc1-594">La valeur par défaut du paramètre 2D est égale à 0,25.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-594">A value of 0.25 is the default.</span>
          </span>
          <span data-ttu-id="14bc1-595">Une réduction de cette valeur augmente le nombre de segments de ligne utilisés pour l'approximation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-595">Reducing the flatness value will increase the number of line segments in the approximation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-596">Convertit chaque courbe de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en une succession de segments de ligne connectés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-596">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-597">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-598">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-599">Crée un tracé graphique et une matrice de translation.</span><span class="sxs-lookup"><span data-stu-id="14bc1-599">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="14bc1-600">Ajoute une courbe pour le chemin d’accès à l’aide de quatre points.</span><span class="sxs-lookup"><span data-stu-id="14bc1-600">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="14bc1-601">Dessine le tracé (courbe) à l’écran, à l’aide d’un stylet noir.</span><span class="sxs-lookup"><span data-stu-id="14bc1-601">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="14bc1-602">Déplace la courbe vers le bas de 10 pixels et réduit à deux dimensions.</span><span class="sxs-lookup"><span data-stu-id="14bc1-602">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="14bc1-603">Dessine la courbe à l’écran à l’aide, un stylet rouge.</span><span class="sxs-lookup"><span data-stu-id="14bc1-603">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="14bc1-604">Notez que la courbe rouge a mis à plat les lignes reliant les points.</span><span class="sxs-lookup"><span data-stu-id="14bc1-604">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-605">Retourne un rectangle délimitant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-605">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-606">Retourne un rectangle délimitant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-607">
            <see cref="T:System.Drawing.RectangleF" /> qui représente un rectangle délimitant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-607">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-608">La taille du rectangle englobant retourné est influencée par le type de majuscules, de largeur du stylet et pointe du stylet et par conséquent produit un ajustement « libre » pour le chemin d’accès limitée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-608">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="14bc1-609">La formule approximative est : le rectangle englobant est augmenté de largeur du stylet, et ce résultat est multiplié par la limite d’angle, ainsi qu’une marge supplémentaire pour permettre des extrémités.</span><span class="sxs-lookup"><span data-stu-id="14bc1-609">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-610">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-611">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-612">Crée un tracé graphique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-612">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="14bc1-613">Ajoute une ellipse (cercle) et le dessine à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-613">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-614">Récupère le rectangle englobant du cercle avec un appel à <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> et dessine le rectangle à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-614">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-615">Crée un deuxième chemin d’accès des graphiques.</span><span class="sxs-lookup"><span data-stu-id="14bc1-615">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="14bc1-616">Ajoute un cercle et élargit le chemin d’accès à une largeur égale à 10.</span><span class="sxs-lookup"><span data-stu-id="14bc1-616">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="14bc1-617">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-617">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-618">Récupère le rectangle englobant du second cercle.</span><span class="sxs-lookup"><span data-stu-id="14bc1-618">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="14bc1-619">Dessine le rectangle à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-619">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-620">Affiche la taille du rectangle dans une boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="14bc1-620">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="14bc1-621">Notez que le rectangle englobant de droite est plus grand (pour le compte de la largeur supplémentaire de la ligne).</span><span class="sxs-lookup"><span data-stu-id="14bc1-621">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="14bc1-622">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> qui spécifie une transformation à appliquer à ce tracé avant le calcul du rectangle englobant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-622">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="14bc1-623">Le tracé n'est pas transformé de manière définitive ; la transformation est utilisée durant le calcul du rectangle englobant uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-623">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-624">Retourne un rectangle qui délimite ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsque ce tracé est transformé par le <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-624">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-625">
            <see cref="T:System.Drawing.RectangleF" /> qui représente un rectangle délimitant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-625">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-626">La taille du rectangle englobant retourné est influencée par le type de majuscules, de largeur du stylet et pointe du stylet et par conséquent produit un ajustement « libre » pour le chemin d’accès limitée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-626">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="14bc1-627">La formule approximative est : le rectangle englobant est augmenté de largeur du stylet, et ce résultat est multiplié par la limite d’angle, ainsi qu’une marge supplémentaire pour permettre des extrémités.</span><span class="sxs-lookup"><span data-stu-id="14bc1-627">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-628">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-628">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="14bc1-629">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> qui spécifie une transformation à appliquer à ce tracé avant le calcul du rectangle englobant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-629">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="14bc1-630">Le tracé n'est pas transformé de manière définitive ; la transformation est utilisée durant le calcul du rectangle englobant uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-630">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-631">
            <see cref="T:System.Drawing.Pen" /> à l'aide duquel dessiner <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-631">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-632">Retourne un rectangle délimitant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsque le tracé en cours est transformé par le <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié puis dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-632">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-633">
            <see cref="T:System.Drawing.RectangleF" /> qui représente un rectangle délimitant ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-633">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-634">La taille du rectangle englobant retourné est influencée par le type de majuscules, de largeur du stylet et pointe du stylet et par conséquent produit un ajustement « libre » pour le chemin d’accès limitée.</span><span class="sxs-lookup"><span data-stu-id="14bc1-634">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="14bc1-635">La formule approximative est : le rectangle englobant est augmenté de largeur du stylet, et ce résultat est multiplié par la limite d’angle, ainsi qu’une marge supplémentaire pour permettre des extrémités.</span><span class="sxs-lookup"><span data-stu-id="14bc1-635">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-636">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-636">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-637">Obtient le dernier point du tableau <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-637">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-638">
            <see cref="T:System.Drawing.PointF" /> qui représente le dernier point de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-638">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-639">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-640">Le code crée un chemin d’accès, ajoute une ligne pour le chemin d’accès, puis obtient le dernier point dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-640">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-641">Indique si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-641">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="14bc1-642">
            <see cref="T:System.Drawing.Point" /> qui spécifie l'emplacement à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-642">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-643">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-643">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-644">Indique si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-644">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-645">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-645">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-646">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-646">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-647">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-647">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="14bc1-648">
            <see cref="T:System.Drawing.PointF" /> qui spécifie l'emplacement à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-648">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-649">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-649">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-650">Indique si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-650">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-651">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-651">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-652">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-652">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-653">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-653">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="14bc1-654">
            <see cref="T:System.Drawing.Point" /> qui spécifie l'emplacement à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-654">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-655">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-655">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-656">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-656">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-657">Indique si le point spécifié se trouve dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide des <see cref="T:System.Drawing.Pen" /> et <see cref="T:System.Drawing.Graphics" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-657">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-658">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-658">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-659">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-659">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="14bc1-660">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-660">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-661">La matrice de transformation `graphics` est appliquée de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-661">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-662">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-662">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="14bc1-663">
            <see cref="T:System.Drawing.PointF" /> qui spécifie l'emplacement à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-663">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-664">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-664">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-665">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-665">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-666">Indique si le point spécifié se trouve dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide des <see cref="T:System.Drawing.Pen" /> et <see cref="T:System.Drawing.Graphics" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-666">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-667">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-667">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-668">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-668">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="14bc1-669">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-669">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-670">La matrice de transformation `graphics` est appliquée de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-670">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-671">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-671">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-672">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-672">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-673">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-673">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-674">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-674">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-675">Indique si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-675">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-676">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-676">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-677">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-677">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-678">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-678">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-679">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-679">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-680">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-680">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-681">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-681">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-682">Indique si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-682">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-683">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-683">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-684">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-684">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-685">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-685">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-686">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-686">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-687">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-687">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-688">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-688">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-689">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-689">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-690">Indique si le point spécifié se trouve dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide des <see cref="T:System.Drawing.Pen" /> et <see cref="T:System.Drawing.Graphics" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-690">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-691">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-691">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-692">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-692">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="14bc1-693">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-693">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-694">La matrice de transformation `graphics` est appliquée de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-694">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-695">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-695">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="14bc1-696">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-696">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-697">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-697">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-698">Ajouter un rectangle dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-698">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-699">Crée un stylet large et s’étend le chemin d’accès avec ce stylet (pour un exemple plus clair),</span><span class="sxs-lookup"><span data-stu-id="14bc1-699">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="14bc1-700">Teste un point (100, 50) pour voir si elle se trouve dans (sous) un des bords du rectangle en appelant <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-700">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="14bc1-701">Le résultat est illustré dans la boîte de message (dans ce cas, true).</span><span class="sxs-lookup"><span data-stu-id="14bc1-701">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="14bc1-702">En d’autres termes, le bord est rendu sur ce point.</span><span class="sxs-lookup"><span data-stu-id="14bc1-702">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-703">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-703">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-704">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-704">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="14bc1-705">
            <see cref="T:System.Drawing.Pen" /> à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-705">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-706">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-706">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-707">Indique si le point spécifié se trouve dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide des <see cref="T:System.Drawing.Pen" /> et <see cref="T:System.Drawing.Graphics" /> spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-707">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-708">Cette méthode retourne <see langword="true" /> si le point spécifié se situe dans (sous) le contour de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Pen" /> spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-708">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-709">Cette méthode vérifie si le rendu du contour d’un chemin d’accès donné est visible au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="14bc1-709">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="14bc1-710">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-710">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-711">La matrice de transformation de le `graphics` paramètre est appliqué de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-711">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-712">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-712">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-713">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-713">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="14bc1-714">
            <see cref="T:System.Drawing.Point" /> qui spécifie le point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-714">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-715">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-715">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-716">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-716">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-717">Pour obtenir un exemple, consultez `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-717">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="14bc1-718">
            <see cref="T:System.Drawing.PointF" /> qui spécifie le point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-718">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-719">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-719">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-720">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-720">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-721">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-721">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="14bc1-722">
            <see cref="T:System.Drawing.Point" /> qui spécifie le point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-722">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-723">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-723">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-724">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-724">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-725">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-725">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-726">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-726">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-727">La matrice de transformation de le `graphics` paramètre est appliqué de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-727">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-728">Pour obtenir un exemple, consultez `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="14bc1-728">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="14bc1-729">
            <see cref="T:System.Drawing.PointF" /> qui spécifie le point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-729">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-730">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-730">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-731">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-731">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-732">Cette méthode retourne <see langword="true" /> si le point spécifié figure dans cet objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-732">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-733">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-733">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-734">La matrice de transformation de le `graphics` paramètre est appliqué de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-734">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-735">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-735">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-736">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-736">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-737">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-737">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-738">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-738">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-739">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-739">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-740">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-740">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-741">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-741">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-742">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-742">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-743">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-743">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-744">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-744">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-745">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-745">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-746">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-746">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-747">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-747">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-748">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-748">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-749">Indique si ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> contient le point spécifié, à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-749">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-750">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-750">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-751">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-751">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-752">La matrice de transformation `graphics` est appliquée de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-752">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-753">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-753">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-754">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-754">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-755">Crée un chemin d’accès et ajoute une ellipse pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-755">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-756">Teste si le point spécifié est contenu dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-756">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="14bc1-757">Affiche le résultat dans une boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="14bc1-757">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="14bc1-758">Coordonnée x du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-758">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="14bc1-759">Coordonnée y du point à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-759">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="14bc1-760">
            <see cref="T:System.Drawing.Graphics" /> pour lequel tester la visibilité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-760">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-761">Indique si le point spécifié est contenu dans ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, dans la zone de découpage visible du <see cref="T:System.Drawing.Graphics" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-761">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14bc1-762">Cette méthode retourne <see langword="true" /> si le point spécifié est contenu dans <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-762">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-763">Les coordonnées du point à tester sont exprimées en coordonnées universelles.</span><span class="sxs-lookup"><span data-stu-id="14bc1-763">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="14bc1-764">La matrice de transformation de le `graphics` paramètre est appliqué de manière temporaire avant de tester la visibilité.</span><span class="sxs-lookup"><span data-stu-id="14bc1-764">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-765">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-765">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-766">Obtient un <see cref="T:System.Drawing.Drawing2D.PathData" /> qui encapsule les tableaux de points (<paramref name="points" />) et de types (<paramref name="types" />) de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-766">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14bc1-767">
            <see cref="T:System.Drawing.Drawing2D.PathData" /> qui encapsule les tableaux de points et de types de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-767">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-768">Obtient les points du tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-768">Gets the points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14bc1-769">Tableau d'objets <see cref="T:System.Drawing.PointF" /> qui représentent le tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-769">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-770">Obtient les types des points correspondants du tableau <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-770">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14bc1-771">Tableau d'octets qui spécifie les types des points correspondants du tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-771">An array of bytes that specifies the types of the corresponding points in the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-772">Le tableau d’octets retourné par la <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> propriété spécifie les types de points et les indicateurs pour les points de données dans un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-772">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="14bc1-773">Pour chaque point, bits 0 à 2 indiquent le type d’un point et bits 3 à 7 contiennent un ensemble d’indicateurs qui spécifient les attributs d’un point.</span><span class="sxs-lookup"><span data-stu-id="14bc1-773">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="14bc1-774">Le tableau suivant montre les valeurs possibles et leurs significations.</span><span class="sxs-lookup"><span data-stu-id="14bc1-774">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="14bc1-775">Value</span><span class="sxs-lookup"><span data-stu-id="14bc1-775">Value</span></span>|<span data-ttu-id="14bc1-776">Signification</span><span class="sxs-lookup"><span data-stu-id="14bc1-776">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="14bc1-777">0</span><span class="sxs-lookup"><span data-stu-id="14bc1-777">0</span></span>|<span data-ttu-id="14bc1-778">Indique que le point est le début d’une figure.</span><span class="sxs-lookup"><span data-stu-id="14bc1-778">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="14bc1-779">1</span><span class="sxs-lookup"><span data-stu-id="14bc1-779">1</span></span>|<span data-ttu-id="14bc1-780">Indique que le point est un des deux points de terminaison d’une ligne.</span><span class="sxs-lookup"><span data-stu-id="14bc1-780">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="14bc1-781">3</span><span class="sxs-lookup"><span data-stu-id="14bc1-781">3</span></span>|<span data-ttu-id="14bc1-782">Indique que le point est un point de contrôle ou de point de terminaison d’une spline de Bézier cubique.</span><span class="sxs-lookup"><span data-stu-id="14bc1-782">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="14bc1-783">0x7</span><span class="sxs-lookup"><span data-stu-id="14bc1-783">0x7</span></span>|<span data-ttu-id="14bc1-784">Masque tous les bits sauf pour les trois bits de poids faible, qui indiquent le type de point.</span><span class="sxs-lookup"><span data-stu-id="14bc1-784">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="14bc1-785">0x20</span><span class="sxs-lookup"><span data-stu-id="14bc1-785">0x20</span></span>|<span data-ttu-id="14bc1-786">Spécifie que le point est un marqueur.</span><span class="sxs-lookup"><span data-stu-id="14bc1-786">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="14bc1-787">0x80</span><span class="sxs-lookup"><span data-stu-id="14bc1-787">0x80</span></span>|<span data-ttu-id="14bc1-788">Spécifie que le point est le dernier point dans un sous-tracé (figure).</span><span class="sxs-lookup"><span data-stu-id="14bc1-788">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-789">Obtient le nombre d'éléments contenus dans le tableau <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />ou <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-789">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14bc1-790">Entier spécifiant le nombre d'éléments contenus dans le tableau <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> ou <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-790">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-791">Vide les tableaux <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> et <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> et assigne la valeur <see cref="T:System.Drawing.Drawing2D.FillMode" /> à <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-791">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-792">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-792">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-793">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-793">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-794">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-794">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-795">Ajoute plusieurs primitives.</span><span class="sxs-lookup"><span data-stu-id="14bc1-795">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="14bc1-796">Dessine le tableau de points du chemin d’accès à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-796">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-797">Réinitialise le chemin d’accès à un état vide.</span><span class="sxs-lookup"><span data-stu-id="14bc1-797">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="14bc1-798">Acquiert une nouvelle fois le tableau de points (s’il existe).</span><span class="sxs-lookup"><span data-stu-id="14bc1-798">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="14bc1-799">Dessine le tableau à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-799">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-800">Notez qu’il ne trouve aucun tableau qui suit l’appel de reset.</span><span class="sxs-lookup"><span data-stu-id="14bc1-800">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-801">Inverse l'ordre des points du tableau <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> de ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-801">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-802">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-802">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-803">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-803">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-804">Crée un chemin d’accès et ajoute plusieurs primitives pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-804">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-805">Dessine le tableau de points du chemin d’accès à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-805">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-806">Dessine le tableau de points inversés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-806">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-807">Notez que la deuxième liste de points est dans l’ordre inverse de la première.</span><span class="sxs-lookup"><span data-stu-id="14bc1-807">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-808">Définit un marqueur sur ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-808">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-809">Cette méthode crée un marqueur sur le chemin d’accès peut être utilisé pour séparer les sections de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-809">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="14bc1-810">Vous pouvez ensuite utiliser le <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> méthodes pour boucler dans les marqueurs dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-810">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="14bc1-811">Marqueurs sont utilisés pour séparer les groupes de sections.</span><span class="sxs-lookup"><span data-stu-id="14bc1-811">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="14bc1-812">Une ou plusieurs sections peuvent figurer entre deux marques dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-812">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-813">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-813">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-814">Le code crée un chemin d’accès et ajoute plusieurs primitives séparées par des marqueurs et dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-814">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-815">Commence une nouvelle figure sans fermer la figure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-815">Starts a new figure without closing the current figure.</span>
          </span>
          <span data-ttu-id="14bc1-816">Tous les nouveaux points ajoutés au tracé sont ajoutés à cette nouvelle figure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-816">All subsequent points added to the path are added to this new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-817">L’utilisateur doit conserver les points d’origine s’ils sont nécessaires.</span><span class="sxs-lookup"><span data-stu-id="14bc1-817">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="14bc1-818">Les points d’origine sont convertis en points de contrôle de courbe de Bézier cubiques en interne, par conséquent, il n’existe aucun mécanisme pour retourner les points d’origine.</span><span class="sxs-lookup"><span data-stu-id="14bc1-818">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="14bc1-819">Cette méthode démarre une nouvelle section dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-819">This method starts a new subpath in the path.</span></span> <span data-ttu-id="14bc1-820">Vous permettent de séparer un chemin d’accès dans les sections de la <xref:System.Drawing.Drawing2D.GraphicsPathIterator> classe à une itération au sein des sous-tracés.</span><span class="sxs-lookup"><span data-stu-id="14bc1-820">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-821">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-822">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-823">Crée un chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-823">Creates a path.</span></span>  
  
-   <span data-ttu-id="14bc1-824">Ajoute deux jeux de chiffres.</span><span class="sxs-lookup"><span data-stu-id="14bc1-824">Adds two sets of figures.</span></span> <span data-ttu-id="14bc1-825">Le premier jeu de figures combine quatre primitives en deux chiffres.</span><span class="sxs-lookup"><span data-stu-id="14bc1-825">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="14bc1-826">Le deuxième jeu de figures combine ces mêmes quatre primitives (sauf qu’ils sont le décalage de l’axe des y) en trois chiffres.</span><span class="sxs-lookup"><span data-stu-id="14bc1-826">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="14bc1-827">Dessine tous les chiffres à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-827">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-828">Notez la différence d’aspect entre les deux ensembles de chiffres.</span><span class="sxs-lookup"><span data-stu-id="14bc1-828">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="14bc1-829">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> représentant la transformation à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-829">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-830">Applique une matrice de transformation à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-830">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-831">La transformation peut mettre à l’échelle, traduire, faire pivoter ou incliner le <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-831">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-832">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-832">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-833">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-833">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-834">Crée un chemin d’accès et ajoute une ellipse pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-834">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-835">Dessine le tracé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-835">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="14bc1-836">Crée une matrice de transformation pour convertir les chemin d’accès de 100 unités dans la direction de l’axe x.</span><span class="sxs-lookup"><span data-stu-id="14bc1-836">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="14bc1-837">Dessine le tracé transformé à l’écran.</span><span class="sxs-lookup"><span data-stu-id="14bc1-837">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="14bc1-838">Notez que l’ellipse d’origine est dessinée en noir et que l’ellipse transformée s’affiche en rouge.</span><span class="sxs-lookup"><span data-stu-id="14bc1-838">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-839">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-839">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="14bc1-840">Tableau de structures <see cref="T:System.Drawing.PointF" /> définissant un parallélogramme en lequel se transforme le rectangle défini par <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-840">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="14bc1-841">Le tableau peut contenir trois ou quatre éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-841">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="14bc1-842">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-842">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="14bc1-843">
            <see cref="T:System.Drawing.RectangleF" /> qui représente le rectangle transformé en parallélogramme défini par <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-843">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-844">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-844">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-845">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-845">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="14bc1-846">Tableau de structures <see cref="T:System.Drawing.PointF" /> définissant un parallélogramme en lequel se transforme le rectangle défini par <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-846">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="14bc1-847">Le tableau peut contenir trois ou quatre éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-847">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="14bc1-848">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-848">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="14bc1-849">
            <see cref="T:System.Drawing.RectangleF" /> qui représente le rectangle transformé en parallélogramme défini par <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-849">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="14bc1-850">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifiant la transformation géométrique à appliquer au tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-850">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-851">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-851">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-852">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-852">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="14bc1-853">Tableau de structures <see cref="T:System.Drawing.PointF" /> définissant un parallélogramme en lequel se transforme le rectangle défini par <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-853">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="14bc1-854">Le tableau peut contenir trois ou quatre éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-854">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="14bc1-855">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-855">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="14bc1-856">
            <see cref="T:System.Drawing.RectangleF" /> qui représente le rectangle transformé en parallélogramme défini par <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-856">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="14bc1-857">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifiant la transformation géométrique à appliquer au tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-857">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="14bc1-858">Énumération <see cref="T:System.Drawing.Drawing2D.WarpMode" /> qui spécifie si la distorsion utilise un mode bilinéaire ou de perspective.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-858">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-859">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-859">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-860">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-860">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="14bc1-861">Tableau de structures <see cref="T:System.Drawing.PointF" /> définissant un parallélogramme en lequel se transforme le rectangle défini par <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-861">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="14bc1-862">Le tableau peut contenir trois ou quatre éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-862">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="14bc1-863">Lorsqu'il contient trois éléments, l'angle inférieur droit du parallélogramme est défini par les trois premiers points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-863">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="14bc1-864">
            <see cref="T:System.Drawing.RectangleF" /> qui représente le rectangle transformé en parallélogramme défini par <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-864">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="14bc1-865">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifiant la transformation géométrique à appliquer au tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-865">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="14bc1-866">Énumération <see cref="T:System.Drawing.Drawing2D.WarpMode" /> qui spécifie si la distorsion utilise un mode bilinéaire ou de perspective.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-866">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="14bc1-867">Valeur comprise entre 0 et 1 qui spécifie l'apparence à deux dimensions du tracé résultant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-867">A value from 0 through 1 that specifies how flat the resulting path is.</span>
          </span>
          <span data-ttu-id="14bc1-868">Pour plus d'informations, consultez les méthodes <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-868">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-869">Applique une distorsion, définie par un rectangle et un parallélogramme, à ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-869">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14bc1-870">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-870">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-871">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-871">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-872">Crée un chemin d’accès et ajoute un rectangle dans le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-872">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-873">Dessine le rectangle à l’écran en noir.</span><span class="sxs-lookup"><span data-stu-id="14bc1-873">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="14bc1-874">Déformer le chemin d’accès avec une distorsion de perspective.</span><span class="sxs-lookup"><span data-stu-id="14bc1-874">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="14bc1-875">Dessine le rectangle déformé (chemin) à l’écran en rouge.</span><span class="sxs-lookup"><span data-stu-id="14bc1-875">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14bc1-876">Remplace ce tracé par des courbes englobant la zone remplie lorsque ce tracé est dessiné à l'aide du stylet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-876">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="14bc1-877">
            <see cref="T:System.Drawing.Pen" /> qui spécifie la largeur entre le contour d'origine du tracé et le nouveau contour créé par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-877">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-878">Ajoute un contour supplémentaire au tracé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-878">Adds an additional outline to the path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-879">Cette méthode crée un contour autour des lignes d’origine dans cet <xref:System.Drawing.Drawing2D.GraphicsPath>, avec une distance entre les lignes existantes et le nouveau contour égale à celle de la largeur de la <xref:System.Drawing.Pen> utilisé dans l’appel à <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-879">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="14bc1-880">Si vous souhaitez remplir l’espace entre les lignes, vous devez utiliser le <xref:System.Drawing.Graphics.FillPath%2A> plutôt que le <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-880">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-881">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-881">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="14bc1-882">
            <see cref="T:System.Drawing.Pen" /> qui spécifie la largeur entre le contour d'origine du tracé et le nouveau contour créé par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-882">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="14bc1-883">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifiant la transformation à appliquer au tracé avant de l'élargir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-883">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-884">Ajoute un contour supplémentaire au <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-884">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-885">Cette méthode crée un contour autour des lignes d’origine dans cet <xref:System.Drawing.Drawing2D.GraphicsPath>, avec une distance entre les lignes existantes et le nouveau contour égale à celle de la largeur de la <xref:System.Drawing.Pen> utilisé dans l’appel à <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-885">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="14bc1-886">Si vous souhaitez remplir l’espace entre les lignes, vous devez utiliser le <xref:System.Drawing.Graphics.FillPath%2A> plutôt que le <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-886">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-887">Pour obtenir un exemple, consultez <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-887">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="14bc1-888">
            <see cref="T:System.Drawing.Pen" /> qui spécifie la largeur entre le contour d'origine du tracé et le nouveau contour créé par cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-888">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="14bc1-889">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifiant la transformation à appliquer au tracé avant de l'élargir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-889">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="14bc1-890">Valeur qui spécifie l'apparence à deux dimensions des courbes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-890">A value that specifies the flatness for curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14bc1-891">Remplace ce <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> par des courbes englobant la zone remplie lorsque ce tracé est dessiné à l'aide du stylet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14bc1-891">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14bc1-892">Cette méthode crée un contour autour des lignes d’origine dans cet <xref:System.Drawing.Drawing2D.GraphicsPath>, avec une distance entre les lignes existantes et le nouveau contour égale à celle de la largeur de la <xref:System.Drawing.Pen> utilisé dans l’appel à <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-892">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="14bc1-893">Si vous souhaitez remplir l’espace entre les lignes, vous devez utiliser le <xref:System.Drawing.Graphics.FillPath%2A> plutôt que le <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="14bc1-893">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14bc1-894">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objet d’événement.</span><span class="sxs-lookup"><span data-stu-id="14bc1-894">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="14bc1-895">Le code exécute les actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="14bc1-895">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14bc1-896">Crée un chemin d’accès et ajoute deux points de suspension pour le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-896">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="14bc1-897">Dessine le tracé en noir.</span><span class="sxs-lookup"><span data-stu-id="14bc1-897">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="14bc1-898">S’étend le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="14bc1-898">Widens the path.</span></span>  
  
-   <span data-ttu-id="14bc1-899">Dessine le tracé en rouge.</span><span class="sxs-lookup"><span data-stu-id="14bc1-899">Draws the path in red.</span></span>  
  
 <span data-ttu-id="14bc1-900">Notez que le second rendu utilise <xref:System.Drawing.Graphics.FillPath%2A> au lieu de <xref:System.Drawing.Graphics.DrawPath%2A>, et par conséquent, la figure rendue a remplit le contour.</span><span class="sxs-lookup"><span data-stu-id="14bc1-900">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>