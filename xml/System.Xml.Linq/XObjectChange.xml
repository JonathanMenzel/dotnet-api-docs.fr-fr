<Type Name="XObjectChange" FullName="System.Xml.Linq.XObjectChange">
  <TypeSignature Language="C#" Value="public enum XObjectChange" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XObjectChange extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XObjectChange" />
  <TypeSignature Language="VB.NET" Value="Public Enum XObjectChange" />
  <TypeSignature Language="C++ CLI" Value="public enum class XObjectChange" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="cf8dc-101">Spécifie le type d'événement lorsqu'un événement est déclenché pour un objet <see cref="T:System.Xml.Linq.XObject" />.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-101">Specifies the event type when an event is raised for an <see cref="T:System.Xml.Linq.XObject" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf8dc-102">Cela `enum` Spécifie le type d’événement lorsqu’un événement est déclenché pour un <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-102">This `enum` specifies the event type when an event is raised for an <xref:System.Xml.Linq.XObject>.</span></span>  
  
 <span data-ttu-id="cf8dc-103">Toutes les opérations qui modifient l’arborescence XML se décomposent en une série de primitives.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-103">All operations that modify the XML tree break down to a series of primitives.</span></span> <span data-ttu-id="cf8dc-104">Il existe quatre types de primitives.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-104">There are four types of primitives.</span></span> <span data-ttu-id="cf8dc-105">Deux des primitives (ajouter et supprimer) agissent sur des collections.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-105">Two of the primitives (Add and Remove) act on collections.</span></span> <span data-ttu-id="cf8dc-106">Deux d'entre eux (nom et valeur) agissent sur les instances.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-106">Two of them (Name and Value) act on instances.</span></span> <span data-ttu-id="cf8dc-107">Il existe un événement correspondant pour chacune de ces primitives.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-107">There is a corresponding event for each of these primitives.</span></span>  
  
 <span data-ttu-id="cf8dc-108">Vous devez être prudent lors de la modification d’une arborescence XML dans une de ces événements, car cela peut produire des résultats inattendus.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-108">You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</span></span> <span data-ttu-id="cf8dc-109">Par exemple, si vous recevez un <xref:System.Xml.Linq.XObject.Changing> événement et pendant le traitement de l’événement que vous supprimez le nœud de l’arborescence, vous ne pouvez pas recevoir le <xref:System.Xml.Linq.XObject.Changed> événement.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-109">For example, if you receive a <xref:System.Xml.Linq.XObject.Changing> event, and while the event is being processed you remove the node from the tree, you might not receive the <xref:System.Xml.Linq.XObject.Changed> event.</span></span> <span data-ttu-id="cf8dc-110">Lorsqu’un événement est en cours de traitement, il est valide pour modifier une arborescence XML autre que celui qui contient le nœud qui reçoit l’événement ; Il est encore valide pour modifier l’arborescence de la même condition que les modifications n’affectent pas les nœuds spécifiques sur lequel l’événement a été déclenché.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-110">When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</span></span> <span data-ttu-id="cf8dc-111">Toutefois, si vous modifiez la zone de l’arborescence qui contient le nœud recevant l’événement, les événements que vous recevez et l’impact sur l’arborescence ne sont pas définis.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-111">However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf8dc-112">L’exemple suivant déclenche un événement en ajoutant un élément à l’arborescence.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-112">The following example raises an event by adding an element to the tree.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "content");  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.Add(new XElement("Child", "child content"));  
```  
  
 <span data-ttu-id="cf8dc-113">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="cf8dc-113">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XElement  
  Changing: Add  
Changed event raised  
  Sender: System.Xml.Linq.XElement  
  Changed: Add  
```  
  
 <span data-ttu-id="cf8dc-114">L’exemple suivant déclenche un événement en supprimant un élément de l’arborescence.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-114">The following example raises an event by removing an element from the tree.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XElement("Child", "content")  
);  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.Element("Child").Remove();  
```  
  
 <span data-ttu-id="cf8dc-115">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="cf8dc-115">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XElement  
  Changing: Remove  
Changed event raised  
  Sender: System.Xml.Linq.XElement  
  Changed: Remove  
```  
  
 <span data-ttu-id="cf8dc-116">L’exemple suivant déclenche un événement en modifiant le nom d’un élément.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-116">The following example raises an event by changing the name of an element.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "content");  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.Name = "NewName";  
```  
  
 <span data-ttu-id="cf8dc-117">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="cf8dc-117">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XElement  
  Changing: Name  
Changed event raised  
  Sender: System.Xml.Linq.XElement  
  Changed: Name  
```  
  
 <span data-ttu-id="cf8dc-118">L’exemple suivant déclenche un événement en définissant la valeur d’un attribut.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-118">The following example raises an event by setting the value of an attribute.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "att value")  
);  
root.Changing += (sender, e) =>  
    {  
        Console.WriteLine("Changing event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changing: " + e.ObjectChange);  
    };  
root.Changed += (sender, e) =>  
    {  
        Console.WriteLine("Changed event raised");  
        Console.WriteLine("  Sender: " + sender.GetType());  
        Console.WriteLine("  Changed: " + e.ObjectChange);  
    };  
root.FirstAttribute.Value = "new contents";  
```  
  
 <span data-ttu-id="cf8dc-119">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="cf8dc-119">This example produces the following output:</span></span>  
  
```  
Changing event raised  
  Sender: System.Xml.Linq.XAttribute  
  Changing: Value  
Changed event raised  
  Sender: System.Xml.Linq.XAttribute  
  Changed: Value  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Add = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Add" />
      <MemberSignature Language="VB.NET" Value="Add" />
      <MemberSignature Language="C++ CLI" Value="Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cf8dc-120">Un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être ajouté à un <see cref="T:System.Xml.Linq.XContainer" />.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-120">An <see cref="T:System.Xml.Linq.XObject" /> has been or will be added to an <see cref="T:System.Xml.Linq.XContainer" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="Name" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Name = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Name" />
      <MemberSignature Language="VB.NET" Value="Name" />
      <MemberSignature Language="C++ CLI" Value="Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cf8dc-121">Un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être renommé.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-121">An <see cref="T:System.Xml.Linq.XObject" /> has been or will be renamed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="Remove" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Remove = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Remove" />
      <MemberSignature Language="VB.NET" Value="Remove" />
      <MemberSignature Language="C++ CLI" Value="Remove" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cf8dc-122">Un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être supprimé d'un <see cref="T:System.Xml.Linq.XContainer" />.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-122">An <see cref="T:System.Xml.Linq.XObject" /> has been or will be removed from an <see cref="T:System.Xml.Linq.XContainer" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="Value" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Linq.XObjectChange Value = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Linq.XObjectChange.Value" />
      <MemberSignature Language="VB.NET" Value="Value" />
      <MemberSignature Language="C++ CLI" Value="Value" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XObjectChange</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cf8dc-123">La valeur d'un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être modifiée.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-123">The value of an <see cref="T:System.Xml.Linq.XObject" /> has been or will be changed.</span></span> <span data-ttu-id="cf8dc-124">De plus, une modification de la sérialisation d'un élément vide (d'une balise vide vers une paire de balises démarrer/arrêter ou inversement) déclenche cet événement.</span><span class="sxs-lookup"><span data-stu-id="cf8dc-124">In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>