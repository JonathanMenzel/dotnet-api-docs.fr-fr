<Type Name="XAttribute" FullName="System.Xml.Linq.XAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6883ebc737eb1ddebe8158e03b05b8f7dbfc05d5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39969311" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XAttribute : System.Xml.Linq.XObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XAttribute extends System.Xml.Linq.XObject" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XAttribute&#xA;Inherits XObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class XAttribute : System::Xml::Linq::XObject" />
  <TypeSignature Language="F#" Value="type XAttribute = class&#xA;    inherit XObject" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(System.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2ac69-101">Représente un attribut XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ac69-101">Represents an XML attribute.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-102">Un attribut XML est une paire nom/valeur associée à un élément XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-102">An XML attribute is a name/value pair associated with an XML element.</span></span>  
  
 <span data-ttu-id="2ac69-103">Chaque <xref:System.Xml.Linq.XElement> contient une liste des attributs de cet élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-103">Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element.</span></span> <span data-ttu-id="2ac69-104">Attributs doivent avoir un nom qualifié qui est unique à l’élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-104">Attributes must have a qualified name that is unique to the element.</span></span> <span data-ttu-id="2ac69-105">Attributs ne sont pas dérivés de <xref:System.Xml.Linq.XNode>; ils ne sont pas des nœuds dans l’arborescence XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-105">Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree.</span></span> <span data-ttu-id="2ac69-106">Au lieu de cela, ils sont simplement des paires nom/valeur associés à un élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-106">Instead, they are simply name/value pairs associated with an element.</span></span>  
  
 <span data-ttu-id="2ac69-107">Les attributs sont conservés dans l’arborescence XML dans l’ordre qu’ils ont été ajoutés à l’élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-107">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="2ac69-108">Lorsqu’une collection d’attributs est retournée par <xref:System.Xml.Linq.XElement.Attributes%2A>, ils sont retournés dans l’ordre qu’ils ont été ajoutés à l’élément et ne sont pas triés.</span><span class="sxs-lookup"><span data-stu-id="2ac69-108">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.</span></span>  
  
 <span data-ttu-id="2ac69-109">Techniquement, dans XML, les déclarations d’espace de noms ne sont pas les attributs appropriés.</span><span class="sxs-lookup"><span data-stu-id="2ac69-109">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="2ac69-110">Toutefois, cette distinction n’est normalement effectuée par de nombreux programmeurs XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-110">However, this distinction is not normally made by many XML programmers.</span></span> <span data-ttu-id="2ac69-111">Au lieu de cela, étant donné que les déclarations d’espace de noms ont exactement la même syntaxe XML en tant qu’attributs, la plupart des programmeurs XML voient espaces de noms en tant qu’attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-111">Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="2ac69-112">Pour simplifier la [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] interface de programmation, les espaces de noms sont représentés dans l’arborescence XML en tant qu’attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-112">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="2ac69-113">Ces attributs de l’espace de noms sur la sérialisation d’une arborescence XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-113">Such namespace attributes impact serialization of an XML tree.</span></span> <span data-ttu-id="2ac69-114">Lors de la sérialisation, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tente de sérialiser avec le préfixe d’espace de noms spécifié dans les attributs de l’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="2ac69-114">When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes.</span></span> <span data-ttu-id="2ac69-115">Vous pouvez utiliser le <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> pour déterminer si un attribut n’est vraiment une déclaration d’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="2ac69-115">You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.</span></span>  
  
 <span data-ttu-id="2ac69-116">La classe <xref:System.Xml.Linq.XAttribute> dérive de la classe <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-116">The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="2ac69-117">Vous pouvez ajouter des annotations aux attributs et observer leurs événements.</span><span class="sxs-lookup"><span data-stu-id="2ac69-117">You can add annotations to attributes, and observe events for them.</span></span>  
  
 <span data-ttu-id="2ac69-118">Certains <xref:System.Xml.Linq.XAttribute> méthodes peuvent être utilisées à partir de XAML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-118">Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML.</span></span> <span data-ttu-id="2ac69-119">Pour plus d’informations, consultez [Propriétés dynamiques LINQ to XML](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span><span class="sxs-lookup"><span data-stu-id="2ac69-119">For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.XElement" />
    <altmember cref="T:System.Xml.Linq.XDocument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-120">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-120">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class.</span>
          </span>
        </summary>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XAttribute other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XAttribute other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XAttribute ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XAttribute : System.Xml.Linq.XAttribute -&gt; System.Xml.Linq.XAttribute" Usage="new System.Xml.Linq.XAttribute other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="2ac69-121">Objet <see cref="T:System.Xml.Linq.XAttribute" /> à partir duquel effectuer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-121">An <see cref="T:System.Xml.Linq.XAttribute" /> object to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-122">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XAttribute" /> à partir d'un autre objet <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-122">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from another <see cref="T:System.Xml.Linq.XAttribute" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-123">Ce constructeur est principalement utilisé en interne lors de l’établissement d’une copie complète d’une arborescence XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-123">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-124">Cet exemple montre que la création d’une copie complète d’une arborescence XML crée une copie, pas un clone d’un attribut dans l’arborescence.</span><span class="sxs-lookup"><span data-stu-id="2ac69-124">This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.</span></span>  
  
```csharp  
XElement root1 = XElement.Parse("<Root Att1='abc' />");  
// Make a deep copy.  
XElement root2 = new XElement(root1);  
if (root1.Attribute("Att1") == root2.Attribute("Att1"))  
    Console.WriteLine("This will not be printed");  
else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.");  
```  
  
```vb  
Dim root1 As XElement = <Root Att1='abc'/>  
' Make a deep copy.  
Dim root2 As XElement = New XElement(root1)  
If root1.Attribute("Att1") Is root2.Attribute("Att1") Then  
    Console.WriteLine("This will not be printed")  
Else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.")  
End If  
```  
  
 <span data-ttu-id="2ac69-125">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-125">This example produces the following output:</span></span>  
  
```  
  
Creating a deep copy created a new attribute from the original.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-126">Le paramètre <paramref name="other" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-126">The <paramref name="other" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XName name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As XName, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XName ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XAttribute : System.Xml.Linq.XName * obj -&gt; System.Xml.Linq.XAttribute" Usage="new System.Xml.Linq.XAttribute (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2ac69-127">
            <see cref="T:System.Xml.Linq.XName" /> de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-127">The <see cref="T:System.Xml.Linq.XName" /> of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2ac69-128">
            <see cref="T:System.Object" /> contenant la valeur de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-128">An <see cref="T:System.Object" /> containing the value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-129">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XAttribute" /> à partir de la valeur et du nom spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-129">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from the specified name and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-130">Il existe une conversion implicite d’une chaîne en <xref:System.Xml.Linq.XName>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-130">There is an implicit conversion from string to <xref:System.Xml.Linq.XName>.</span></span> <span data-ttu-id="2ac69-131">Une utilisation typique de ce constructeur consiste à spécifier une chaîne comme premier paramètre au lieu de créer un nouveau <xref:System.Xml.Linq.XName>, comme suit :</span><span class="sxs-lookup"><span data-stu-id="2ac69-131">Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="2ac69-132">Vous pouvez également utiliser la surcharge d’opérateur d’addition avec un <xref:System.Xml.Linq.XNamespace> et une chaîne pour créer un <xref:System.Xml.Linq.XName>, comme suit :</span><span class="sxs-lookup"><span data-stu-id="2ac69-132">You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(aw + "AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="2ac69-133">Pour plus d’informations, consultez [utilisation des espaces de noms XML](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span><span class="sxs-lookup"><span data-stu-id="2ac69-133">For more information, see [Working with XML Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span></span>  
  
 <span data-ttu-id="2ac69-134">Ces mêmes approches fonctionneront pour Visual Basic, mais les littéraux XML offrent une meilleure approche pour la création d’arborescences XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-134">These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.</span></span>  
  
 <span data-ttu-id="2ac69-135">Le `value` paramètre peut être un <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, ou <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-135">The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>.</span></span> <span data-ttu-id="2ac69-136">Si la valeur est un <xref:System.DateTime> ou <xref:System.TimeSpan>, la valeur de l’attribut est mise en forme correctement par les spécifications W3C.</span><span class="sxs-lookup"><span data-stu-id="2ac69-136">If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-137">L’exemple suivant utilise ce constructeur pour créer des attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-137">The following example uses this constructor to create attributes.</span></span> <span data-ttu-id="2ac69-138">Il passe des chaînes en tant que premier argument de la <xref:System.Xml.Linq.XAttribute> constructeur, qui sont ensuite converties implicitement en <xref:System.Xml.Linq.XName> objets.</span><span class="sxs-lookup"><span data-stu-id="2ac69-138">It passes strings as the first argument to the <xref:System.Xml.Linq.XAttribute> constructor, which are then implicitly converted to <xref:System.Xml.Linq.XName> objects.</span></span> <span data-ttu-id="2ac69-139">Les attributs sont ajoutés à un élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-139">The attributes are added to an element.</span></span>  
  
```csharp  
XElement root;  
  
double dbl = 12.345;  
XAttribute[] attArray = {  
    new XAttribute("Att4", 1),  
    new XAttribute("Att5", 2),  
    new XAttribute("Att6", 3)  
};  
DateTime dt = new DateTime(2006, 10, 6, 12, 30, 00);  
  
// string content  
root = new XElement("Root",  
    new XAttribute("Att1", "Some text"),  
  
    // double content  
    new XAttribute("Att2", dbl),  
  
    // DateTime content  
    new XAttribute("Att3", dt),  
  
    // XAttribute array content  
    attArray  
);  
  
Console.WriteLine(root);  
```  
  
```vb  
Dim dbl As Double = 12.345  
Dim attArray As XAttribute() = { _  
    New XAttribute("Att4", 1), _  
    New XAttribute("Att5", 2), _  
    New XAttribute("Att6", 3) _  
}  
Dim dt As DateTime = New DateTime(2006, 10, 6, 12, 30, 0)  
Dim root As XElement = <Root Att1="Some text"  
                           Att2=<%= dbl %>  
                           Att3=<%= dt %>  
                           <%= attArray %>  
                       />  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="2ac69-140">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-140">This example produces the following output:</span></span>  
  
```  
  
<Root Att1="Some text" Att2="12.345" Att3="2006-10-06T12:30:00" Att4="1" Att5="2" Att6="3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-141">Le paramètre <paramref name="name" /> ou <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-141">The <paramref name="name" /> or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="EmptySequence">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; EmptySequence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; EmptySequence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ EmptySequence { System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptySequence : seq&lt;System.Xml.Linq.XAttribute&gt;" Usage="System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-142">Obtient une collection d'attributs vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-142">Gets an empty collection of attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-143">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> contenant une collection vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-143">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-144">Cette propriété est généralement utilisée par les implémenteurs de classes lors de l’écriture d’une méthode qui retourne une collection d’attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-144">This property is typically used by class implementers when writing a method that returns a collection of attributes.</span></span> <span data-ttu-id="2ac69-145">Si la méthode doit retourner une collection d’attributs vide, elle peut utiliser cette propriété pour obtenir une collection vide de <xref:System.Xml.Linq.XAttribute> objets.</span><span class="sxs-lookup"><span data-stu-id="2ac69-145">If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XElement.EmptySequence" />
        <altmember cref="Overload:System.Xml.Linq.XAttribute.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceDeclaration">
      <MemberSignature Language="C#" Value="public bool IsNamespaceDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceDeclaration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceDeclaration : bool" Usage="System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-146">Détermine si cet attribut est une déclaration d'espace de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-146">Determines if this attribute is a namespace declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-147">
            <see langword="true" /> si cet attribut est une déclaration d'espace de noms ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-147">
              <see langword="true" /> if this attribute is a namespace declaration; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-148">Techniquement, dans XML, les déclarations d’espace de noms ne sont pas les attributs appropriés.</span><span class="sxs-lookup"><span data-stu-id="2ac69-148">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="2ac69-149">Toutefois, cette distinction n’est normalement effectuée par la plupart des programmeurs XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-149">However, this distinction is not normally made by most XML programmers.</span></span> <span data-ttu-id="2ac69-150">Au lieu de cela, étant donné que les déclarations d’espace de noms ont exactement la même syntaxe en tant qu’attributs, la plupart des programmeurs XML voient espaces de noms en tant qu’attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-150">Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="2ac69-151">Pour simplifier la [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] interface de programmation, les espaces de noms sont représentés dans l’arborescence XML en tant qu’attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-151">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="2ac69-152">Vous pouvez utiliser cette propriété pour déterminer si un particulier [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribut est vraiment une déclaration d’espace de noms.</span><span class="sxs-lookup"><span data-stu-id="2ac69-152">You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-153">L’exemple suivant crée un attribut qui est une déclaration d’espace de noms et un attribut qui n’est pas.</span><span class="sxs-lookup"><span data-stu-id="2ac69-153">The following example creates an attribute that is a namespace declaration and an attribute that is not.</span></span> <span data-ttu-id="2ac69-154">Il utilise ensuite cette propriété pour indiquer si chaque attribut est une déclaration d’espace de noms ou non.</span><span class="sxs-lookup"><span data-stu-id="2ac69-154">It then uses this property to display whether each attribute is a namespace declaration or not.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content")  
);  
  
foreach (XAttribute att in root.Attributes()) {  
    if (att.IsNamespaceDeclaration)  
        Console.WriteLine("{0} is a namespace declaration", att.Name);  
    else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name);  
}  
```  
  
```vb  
Dim root As XElement = <aw:Root xmlns:aw='http://www.adventure-works.com'  
                           aw:Att='content'/>  
  
For Each att As XAttribute In root.Attributes()  
    If (att.IsNamespaceDeclaration) Then  
        Console.WriteLine("{0} is a namespace declaration", att.Name)  
    Else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name)  
    End If  
Next  
```  
  
 <span data-ttu-id="2ac69-155">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-155">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw is a namespace declaration  
{http://www.adventure-works.com}Att is not a namespace declaration  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XNamespace" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Xml.Linq.XName" Usage="System.Xml.Linq.XAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-156">Obtient le nom développé de cet attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-156">Gets the expanded name of this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-157">
            <see cref="T:System.Xml.Linq.XName" /> contenant le nom de cet attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-157">An <see cref="T:System.Xml.Linq.XName" /> containing the name of this attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-158">Le nom développé retourné par cette propriété est sous la forme de `{namespace}localname`.</span><span class="sxs-lookup"><span data-stu-id="2ac69-158">The expanded name returned by this property is in the form of `{namespace}localname`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-159">L’exemple suivant crée un élément avec trois attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-159">The following example creates an element with three attributes.</span></span> <span data-ttu-id="2ac69-160">Il utilise ensuite cette propriété pour imprimer le nom de chaque attribut.</span><span class="sxs-lookup"><span data-stu-id="2ac69-160">It then uses this property to print out the name of each attribute.</span></span> <span data-ttu-id="2ac69-161">L’exemple illustre également la création d’un nouvel attribut à l’aide du nom d’un attribut existant.</span><span class="sxs-lookup"><span data-stu-id="2ac69-161">The example also shows creation of a new attribute using the name of an existing attribute.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content"),  
    new XAttribute("Att2", "different content")  
);  
  
foreach (XAttribute att in root.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
Console.WriteLine("");  
  
XElement newRoot = new XElement(aw + "Root",  
    from att in root.Attributes("Att2")  
    select new XAttribute(att.Name, "new content"));  
  
foreach (XAttribute att in newRoot.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
```  
  
```vb  
Dim root As XElement = _   
    <aw:Root xmlns:aw='http://www.adventure-works.com'  
        aw:Att='content'  
        Att2='different content'/>  
  
For Each att As XAttribute In root.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
Console.WriteLine("")  
  
Dim NewRoot As XElement = _  
<Root  
    <%= _  
        From att In root.Attributes("Att2") _  
        Select New XAttribute(att.Name, "new content") _  
    %>>_  
</Root>  
  
For Each att As XAttribute In NewRoot.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
  
```  
  
 <span data-ttu-id="2ac69-162">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-162">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw=http://www.adventure-works.com  
{http://www.adventure-works.com}Att=content  
Att2=different content  
  
Att2=new content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XName" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
    <Member MemberName="NextAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute NextAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute NextAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ NextAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextAttribute : System.Xml.Linq.XAttribute" Usage="System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-163">Obtient l'attribut suivant de l'élément parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-163">Gets the next attribute of the parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-164">
            <see cref="T:System.Xml.Linq.XAttribute" /> contenant l'attribut suivant de l'élément parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-164">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the next attribute of the parent element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-165">Les attributs sont conservés dans l’arborescence XML dans l’ordre qu’ils ont été ajoutés à l’élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-165">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="2ac69-166">Lorsqu’une collection d’attributs est retournée par <xref:System.Xml.Linq.XElement.Attributes%2A>, ils sont retournés dans l’ordre qu’ils ont été ajoutés et ne sont pas triés.</span><span class="sxs-lookup"><span data-stu-id="2ac69-166">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="2ac69-167">Lorsque vous demandez l’attribut suivant via cette propriété, cette propriété retourne l’attribut qui a été ajouté après cet attribut.</span><span class="sxs-lookup"><span data-stu-id="2ac69-167">When you request the next attribute through this property, this property returns the attribute that was added after this attribute.</span></span>  
  
 <span data-ttu-id="2ac69-168">Si cet attribut n’a pas de parent, ou s’il n’existe aucun attribut suivant, cette propriété retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="2ac69-168">If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-169">L’exemple suivant montre comment effectuer une itération dans les attributs d’un élément à l’aide de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="2ac69-169">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
  
XAttribute att = root.FirstAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.NextAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.FirstAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.NextAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="2ac69-170">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-170">This example produces the following output:</span></span>  
  
```  
Att1="1"  
Att2="2"  
Att3="3"  
Att4="4"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XAttribute.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-171">Obtient le type de ce nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-171">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-172">Type de nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-172">The node type.</span>
          </span>
          <span data-ttu-id="2ac69-173">Pour les objets <see cref="T:System.Xml.Linq.XAttribute" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-173">For <see cref="T:System.Xml.Linq.XAttribute" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-174">Étant donné que toutes les classes qui dérivent de <xref:System.Xml.Linq.XObject> contiennent un <xref:System.Xml.Linq.XObject.NodeType%2A> propriété, vous pouvez écrire du code qui fonctionne sur des collections de la sous-classe concrète de <xref:System.Xml.Linq.XObject>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-174">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="2ac69-175">Votre code peut ensuite tester le type de nœud de chaque nœud dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2ac69-175">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-176">L’exemple suivant crée un attribut, puis affiche le type de nœud à l’aide de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="2ac69-176">The following example creates an attribute, and then displays the node type using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.NodeType);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Dim att As XAttribute = root.FirstAttribute  
Console.WriteLine(att.NodeType.ToString)  
```  
  
 <span data-ttu-id="2ac69-177">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-177">This example produces the following output:</span></span>  
  
```  
  
Attribute  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator bool (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator bool(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; bool" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-178">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-178">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-179">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-179">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-180">
            <see cref="T:System.Boolean" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-180">A <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-181">Lors de la conversion à <xref:System.Boolean> à partir d’un attribut ou un élément, valeurs autorisées sont « 0 », « 1 » et que toute chaîne qui génère « true » ou « false » après rognage et conversion en minuscules.</span><span class="sxs-lookup"><span data-stu-id="2ac69-181">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  
 
## Examples  
 <span data-ttu-id="2ac69-182">L’exemple suivant crée un attribut avec un <xref:System.Boolean> valeur, puis caste vers <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-182">The following example creates an attribute with a <xref:System.Boolean> value, then casts it to <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue", true)  
);  
bool bv = (bool)root.Attribute("BoolValue");  
Console.WriteLine("(bool)BoolValue={0}", bv);  
```  
  
```vb  
Dim root As XElement = <root BoolValue="true"/>  
Dim bv As Boolean = CBool(root.Attribute("BoolValue"))  
Console.WriteLine("(bool)BoolValue={0}", bv)  
```  
  
 <span data-ttu-id="2ac69-183">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-183">This example produces the following output:</span></span>  
  
```  
(bool)BoolValue=True  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-184">L'attribut ne contient pas de valeur <see cref="T:System.Boolean" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-184">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-185">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-185">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTime (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTime(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; DateTime" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-186">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-186">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTime" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-187">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-187">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-188">
            <see cref="T:System.DateTime" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-188">A <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-189">L’espace de valeur d’un attribut ou un élément qui contient la date et d’heure est étroitement lié aux dates et heures décrites dans ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="2ac69-189">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="2ac69-190">Lorsque vous créez un attribut ou un élément qui contient la date et d’heure, les valeurs d’attribut ou d’élément sont mis en forme conformément à la spécification W3C.</span><span class="sxs-lookup"><span data-stu-id="2ac69-190">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="2ac69-191">Consultez la spécification W3C pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="2ac69-191">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="2ac69-192">Comportement est lax lors de la conversion vers un <xref:System.DateTime> à partir d’un attribut ou élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-192">Behavior is lax when casting to a <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="2ac69-193">Même si la valeur d’attribut ou d’élément n’est pas mise en forme exactement par la spécification W3C, la valeur est correctement convertie en un <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-193">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="2ac69-194">Cet opérateur de conversion utilise <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> à convertir à partir d’un <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-194">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
 
## Examples  
 <span data-ttu-id="2ac69-195">L’exemple suivant crée un attribut avec du contenu de date et d’heure.</span><span class="sxs-lookup"><span data-stu-id="2ac69-195">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="2ac69-196">Ensuite, il caste à <xref:System.DateTime> pour récupérer la valeur.</span><span class="sxs-lookup"><span data-stu-id="2ac69-196">It then casts it to <xref:System.DateTime> to retrieve the value.</span></span>  
  
```csharp  
// Behavior is strict when formatting an XML element or attribute from a DateTime,  
// but behavior is lax when casting to a DateTime from an element or attribute.  
  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTime dt = (DateTime)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
Console.WriteLine("-----");  
  
// if root is formatted in some different way than the standard ISO 8601, if at all possible,  
// the value is appropriately converted to DateTime  
  
XAttribute dtAtt = new XAttribute("OrderDate", "October 6, 2006");  
Console.WriteLine(dtAtt);  
DateTime orderDate = (DateTime)dtAtt;  
Console.WriteLine("OrderDate={0:d}", orderDate);  
```  
  
```vb  
' Behavior is strict when formatting an XML element or attribute from a DateTime,  
' but behavior is lax when casting to a DateTime from an element or attribute.  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTime = CType(root.Attribute("Att"), DateTime)  
Console.WriteLine("dt={0}", dt)  
Console.WriteLine("-----")  
  
' if root is formatted in some different way than the standard ISO 8601, if at all possible,  
' the value is appropriately converted to DateTime  
Dim dtAtt As XAttribute = New XAttribute("OrderDate", "October 6, 2006")  
Console.WriteLine(dtAtt)  
Dim orderDate As DateTime = CType(dtAtt, DateTime)  
Console.WriteLine("OrderDate={0:d}", orderDate)  
```  
  
 <span data-ttu-id="2ac69-197">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-197">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00" />  
dt=10/6/2006 12:30:00 PM  
-----  
OrderDate="October 6, 2006"  
OrderDate=10/6/2006  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-198">L'attribut ne contient pas de valeur <see cref="T:System.DateTime" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-198">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-199">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-199">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTimeOffset (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTimeOffset(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; DateTimeOffset" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-200">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-200">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-201">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-201">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-202">
            <see cref="T:System.DateTimeOffset" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-202">A <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-203">Cet opérateur de conversion utilise la <xref:System.Xml.XmlConvert> classe pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="2ac69-203">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  

## Examples  
 <span data-ttu-id="2ac69-204">L’exemple suivant crée un attribut avec du contenu de date et d’heure.</span><span class="sxs-lookup"><span data-stu-id="2ac69-204">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="2ac69-205">Ensuite, il caste à <xref:System.DateTimeOffset> pour récupérer la valeur.</span><span class="sxs-lookup"><span data-stu-id="2ac69-205">It then casts it to <xref:System.DateTimeOffset> to retrieve the value.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTimeOffset dt = (DateTimeOffset)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTimeOffset = CType(root.Attribute("Att"), DateTimeOffset)  
Console.WriteLine("dt={0}", dt)  
```  
  
 <span data-ttu-id="2ac69-206">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-206">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00-07:00" />  
dt=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-207">L'attribut ne contient pas de valeur <see cref="T:System.DateTimeOffset" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-207">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-208">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-208">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; decimal" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-209">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-209">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-210">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-210">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-211">
            <see cref="T:System.Decimal" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-211">A <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-212">L’exemple suivant crée un attribut avec une valeur décimale.</span><span class="sxs-lookup"><span data-stu-id="2ac69-212">The following example creates an attribute with a decimal value.</span></span> <span data-ttu-id="2ac69-213">Il récupère ensuite la valeur de l’attribut en effectuant un cast à <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-213">It then retrieves the value of the attribute by casting to <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal value = (decimal)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Decimal = CDec(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-214">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-214">This example produces the following output:</span></span>  
  
```  
value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-215">L'attribut ne contient pas de valeur <see cref="T:System.Decimal" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-215">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-216">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-216">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; double" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-217">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-217">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-218">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-218">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-219">
            <see cref="T:System.Double" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-219">A <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-220">L’exemple suivant crée un attribut avec <xref:System.Double> contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-220">The following example creates an attribute with <xref:System.Double> content.</span></span> <span data-ttu-id="2ac69-221">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-221">It then retrieves the value by casting to <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double value = (double)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Double = CDbl(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-222">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-222">This example produces the following output:</span></span>  
  
```  
value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-223">L'attribut ne contient pas de valeur <see cref="T:System.Double" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-223">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-224">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-224">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Guid (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Guid op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Guid(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Guid" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-225">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-225">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Guid" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-226">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-226">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-227">
            <see cref="T:System.Guid" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-227">A <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-228">L’exemple suivant crée un attribut avec un GUID en tant que contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-228">The following example creates an attribute with a GUID as content.</span></span> <span data-ttu-id="2ac69-229">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-229">It then retrieves the value by casting to <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid value = (Guid)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Guid = CType(root.Attribute("Att"), Guid)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-230">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-230">This example produces the following output:</span></span>  
  
```  
value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-231">L'attribut ne contient pas de valeur <see cref="T:System.Guid" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-231">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-232">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-232">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; int" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-233">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-233">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-234">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-234">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-235">
            <see cref="T:System.Int32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-235">A <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-236">L’exemple suivant crée un attribut avec un entier en tant que contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-236">The following example creates an attribute with an integer as content.</span></span> <span data-ttu-id="2ac69-237">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-237">It then retrieves the value by casting to <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 2147483647)  
);  
int value = (int)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Integer = CInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-238">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-238">This example produces the following output:</span></span>  
  
```  
value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-239">L'attribut ne contient pas de valeur <see cref="T:System.Int32" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-239">The attribute does not contain a valid <see cref="T:System.Int32" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-240">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-240">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; int64" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-241">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-241">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-242">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-242">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-243">
            <see cref="T:System.Int64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-243">A <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-244">L’exemple suivant crée un attribut avec un entier long en tant que contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-244">The following example creates an attribute with a long integer as content.</span></span> <span data-ttu-id="2ac69-245">Il récupère ensuite la valeur de l’attribut en effectuant un cast à <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-245">It then retrieves the value of the attribute by casting to <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 9223372036854775807)  
);  
long value = (long)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Long = CLng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-246">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-246">This example produces the following output:</span></span>  
  
```  
value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-247">L'attribut ne contient pas de valeur <see cref="T:System.Int64" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-247">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-248">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-248">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;bool&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;bool&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;bool&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;bool&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-249">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-249">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-250">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-250">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-251">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-251">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-252">Lors de la conversion à <xref:System.Boolean> à partir d’un attribut ou un élément, valeurs autorisées sont « 0 », « 1 » et que toute chaîne qui génère « true » ou « false » après rognage et conversion en minuscules.</span><span class="sxs-lookup"><span data-stu-id="2ac69-252">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  

## Examples  
 <span data-ttu-id="2ac69-253">L’exemple suivant crée un attribut avec du contenu booléen.</span><span class="sxs-lookup"><span data-stu-id="2ac69-253">The following example creates an attribute with Boolean content.</span></span> <span data-ttu-id="2ac69-254">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-254">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue1", true),  
    new XAttribute("BoolValue2", false)  
);  
bool? bool1 = (bool?)root.Attribute("BoolValue1");  
bool? bool2 = (bool?)root.Attribute("BoolValue2");  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1);  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2);  
```  
  
```vb  
Dim root As XElement = <Root BoolValue1="true" BoolValue2="false"/>  
Dim bool1 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue1"), Nullable(Of Boolean))  
Dim bool2 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue2"), Nullable(Of Boolean))  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1)  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2)  
```  
  
 <span data-ttu-id="2ac69-255">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-255">This example produces the following output:</span></span>  
  
```  
Nullable boolean: BoolValue1=True  
Nullable boolean: BoolValue2=False  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-256">L'attribut ne contient pas de valeur <see cref="T:System.Boolean" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-256">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTime&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTime&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;DateTime&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-257">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-257">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-258">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-258">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-259">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-259">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-260">L’espace de valeur d’un attribut ou un élément qui contient la date et d’heure est étroitement lié aux dates et heures décrites dans ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="2ac69-260">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="2ac69-261">Lorsque vous créez un attribut ou un élément qui contient la date et d’heure, les valeurs d’attribut ou d’élément sont mis en forme conformément à la spécification W3C.</span><span class="sxs-lookup"><span data-stu-id="2ac69-261">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="2ac69-262">Consultez la spécification W3C pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="2ac69-262">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="2ac69-263">Comportement est lax lors de la conversion vers un <xref:System.Nullable%601> de <xref:System.DateTime> à partir d’un attribut ou élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-263">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="2ac69-264">Même si la valeur d’attribut ou d’élément n’est pas mise en forme exactement par la spécification W3C, la valeur est correctement convertie en un <xref:System.Nullable%601> de <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-264">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="2ac69-265">Cet opérateur de conversion utilise <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> à convertir à partir d’un <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-265">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
  
## Examples  
 <span data-ttu-id="2ac69-266">L’exemple suivant crée un attribut avec une date et une heure en tant que contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-266">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="2ac69-267">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-267">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
DateTime? value = (DateTime?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTime: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
Dim value As Nullable(Of DateTime) = CType(root.Attribute("Att"), Nullable(Of DateTime))  
Console.WriteLine("Nullable DateTime: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-268">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-268">This example produces the following output:</span></span>  
  
```  
Nullable DateTime: value=10/6/2006 12:30:00 PM  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-269">L'attribut ne contient pas de valeur <see cref="T:System.DateTime" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-269">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTimeOffset&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTimeOffset&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;DateTimeOffset&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-270">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-270">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-271">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-271">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-272">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-272">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-273">Cet opérateur de conversion utilise la <xref:System.Xml.XmlConvert> classe pour effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="2ac69-273">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  
 
## Examples  
 <span data-ttu-id="2ac69-274">L’exemple suivant crée un attribut avec une date et une heure en tant que contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-274">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="2ac69-275">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.DateTimeOffset>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-275">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTimeOffset>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
DateTimeOffset? value = (DateTimeOffset?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTimeOffset: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Dim value As Nullable(Of DateTimeOffset) = CType(root.Attribute("Att"), Nullable(Of DateTimeOffset))  
Console.WriteLine("Nullable DateTimeOffset: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-276">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-276">This example produces the following output:</span></span>  
  
```  
Nullable DateTimeOffset: value=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-277">L'attribut ne contient pas de valeur <see cref="T:System.DateTimeOffset" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-277">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;decimal&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::Decimal&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;decimal&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-278">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-278">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-279">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-279">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-280">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-280">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-281">L’exemple suivant crée un attribut avec du contenu décimal.</span><span class="sxs-lookup"><span data-stu-id="2ac69-281">The following example creates an attribute with decimal content.</span></span> <span data-ttu-id="2ac69-282">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-282">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal? value = (decimal?)root.Attribute("Att");  
Console.WriteLine("Nullable decimal: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Nullable(Of Decimal) = CType(root.Attribute("Att"), Nullable(Of Decimal))  
Console.WriteLine("Nullable decimal: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-283">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-283">This example produces the following output:</span></span>  
  
```  
Nullable decimal: value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-284">L'attribut ne contient pas de valeur <see cref="T:System.Decimal" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-284">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;double&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;double&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;double&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-285">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-285">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-286">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-286">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-287">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-287">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-288">L’exemple suivant crée un attribut avec contenu du point de flottante double précision.</span><span class="sxs-lookup"><span data-stu-id="2ac69-288">The following example creates an attribute with double precision floating point content.</span></span> <span data-ttu-id="2ac69-289">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-289">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double? value = (double?)root.Attribute("Att");  
Console.WriteLine("Nullable double: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Nullable(Of Double) = CType(root.Attribute("Att"), Nullable(Of Double))  
Console.WriteLine("Nullable double: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-290">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-290">This example produces the following output:</span></span>  
  
```  
Nullable double: value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-291">L'attribut ne contient pas de valeur <see cref="T:System.Double" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-291">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;Guid&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Guid&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;Guid&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;Guid&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-292">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-292">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-293">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-293">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-294">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-294">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-295">L’exemple suivant crée un attribut avec le contenu de type guid.</span><span class="sxs-lookup"><span data-stu-id="2ac69-295">The following example creates an attribute with guid content.</span></span> <span data-ttu-id="2ac69-296">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-296">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid? value = (Guid?)root.Attribute("Att");  
Console.WriteLine("Nullable Guid: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Nullable(Of Guid) = CType(root.Attribute("Att"), Nullable(Of Guid))  
Console.WriteLine("Nullable Guid: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-297">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-297">This example produces the following output:</span></span>  
  
```  
Nullable Guid: value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-298">L'attribut ne contient pas de valeur <see cref="T:System.Guid" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-298">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;int&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;int&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;int&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-299">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-299">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-300">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-300">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-301">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-301">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-302">L’exemple suivant crée un attribut avec le contenu de l’entier.</span><span class="sxs-lookup"><span data-stu-id="2ac69-302">The following example creates an attribute with integer content.</span></span> <span data-ttu-id="2ac69-303">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-303">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 2147483647)  
);  
int? value = (int?)root.Attribute("Att");  
Console.WriteLine("Nullable int: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Nullable(Of Integer) = CType(root.Attribute("Att"), Nullable(Of Integer))  
Console.WriteLine("Nullable int: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-304">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-304">This example produces the following output:</span></span>  
  
```  
Nullable int: value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;long&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;long&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;int64&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-305">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-305">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-306">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-306">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-307">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-307">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-308">L’exemple suivant crée un attribut avec le contenu de type entier long.</span><span class="sxs-lookup"><span data-stu-id="2ac69-308">The following example creates an attribute with long integer content.</span></span> <span data-ttu-id="2ac69-309">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-309">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
long? value = (long?)root.Attribute("Att");  
Console.WriteLine("Nullable long: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of Long) = CType(root.Attribute("Att"), Nullable(Of Long))  
Console.WriteLine("Nullable long: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-310">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-310">This example produces the following output:</span></span>  
  
```  
Nullable long: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-311">L'attribut ne contient pas de valeur <see cref="T:System.Int64" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-311">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;float&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;float&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;single&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-312">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-312">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-313">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-313">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-314">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-314">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-315">L’exemple suivant crée un attribut avec le contenu de point flottante simple précision.</span><span class="sxs-lookup"><span data-stu-id="2ac69-315">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="2ac69-316">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-316">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 3.402823e38)  
);  
float? value = (float?)root.Attribute("Att");  
Console.WriteLine("Nullable Single: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Nullable(Of Single) = CType(root.Attribute("Att"), Nullable(Of Single))  
Console.WriteLine("Nullable Single: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-317">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-317">This example produces the following output:</span></span>  
  
```  
Nullable Single: value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-318">L'attribut ne contient pas de valeur <see cref="T:System.Single" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-318">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;TimeSpan&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;TimeSpan&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;TimeSpan&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-319">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-319">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-320">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-320">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-321">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-321">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-322">L’espace de valeur d’un attribut ou un élément qui contient le contenu d’intervalle de temps est étroitement liée au contenu de la durée, comme décrit dans la norme ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="2ac69-322">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="2ac69-323">Lorsque vous créez un attribut ou un élément qui contient le contenu d’intervalle de temps, les valeurs d’attribut ou d’élément sont mis en forme conformément à la spécification W3C.</span><span class="sxs-lookup"><span data-stu-id="2ac69-323">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="2ac69-324">Consultez la spécification W3C pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="2ac69-324">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="2ac69-325">Comportement est lax lors de la conversion vers un <xref:System.Nullable%601> de <xref:System.TimeSpan> à partir d’un attribut ou élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-325">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="2ac69-326">Même si la valeur d’attribut ou d’élément n’est pas mise en forme exactement par la spécification W3C, la valeur est correctement convertie en un <xref:System.Nullable%601> de <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-326">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="2ac69-327">L’exemple suivant crée un attribut avec l’intervalle de temps contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-327">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="2ac69-328">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-328">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan? value = (TimeSpan?)root.Attribute("Att");  
Console.WriteLine("Nullable TimeSpan: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As Nullable(Of TimeSpan) = CType(root.Attribute("Att"), Nullable(Of TimeSpan))  
Console.WriteLine("Nullable TimeSpan: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-329">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-329">This example produces the following output:</span></span>  
  
```  
Nullable TimeSpan: value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-330">L'attribut ne contient pas de valeur <see cref="T:System.TimeSpan" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-330">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;uint&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt32&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;uint32&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-331">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-331">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-332">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-332">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-333">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-333">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-334">L’exemple suivant crée un attribut avec le contenu de l’entier non signé.</span><span class="sxs-lookup"><span data-stu-id="2ac69-334">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="2ac69-335">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.UInt32>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-335">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint? value = (uint?)root.Attribute("Att");  
Console.WriteLine("Nullable uint: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As Nullable(Of UInteger) = CType(root.Attribute("Att"), Nullable(Of UInteger))  
Console.WriteLine("Nullable uint: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-336">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-336">This example produces the following output:</span></span>  
  
```  
Nullable uint: value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-337">L'attribut ne contient pas de valeur <see cref="T:System.UInt32" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-337">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;ulong&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt64&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; Nullable&lt;uint64&gt;" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-338">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-338">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-339">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-339">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-340">
            <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-340">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-341">L’exemple suivant crée un attribut avec le contenu de l’entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="2ac69-341">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="2ac69-342">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Nullable%601> de <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-342">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
ulong? value = (ulong?)root.Attribute("Att");  
Console.WriteLine("Nullable ulong: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of ULong) = CType(root.Attribute("Att"), Nullable(Of ULong))  
Console.WriteLine("Nullable ulong: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="2ac69-343">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-343">This example produces the following output:</span></span>  
  
```  
Nullable ulong: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-344">L'attribut ne contient pas de valeur <see cref="T:System.UInt64" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-344">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; single" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-345">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-345">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Single" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-346">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-346">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-347">
            <see cref="T:System.Single" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-347">A <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-348">L’exemple suivant crée un attribut avec le contenu de point flottante simple précision.</span><span class="sxs-lookup"><span data-stu-id="2ac69-348">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="2ac69-349">Il récupère ensuite la valeur en effectuant un cast à <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-349">It then retrieves the value by casting to <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 3.402823e38)  
);  
float value = (float)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Single = CSng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-350">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-350">This example produces the following output:</span></span>  
  
```  
value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-351">L'attribut ne contient pas de valeur <see cref="T:System.Single" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-351">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-352">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-352">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator string (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::String ^(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; string" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-353">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-353">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-354">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-354">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-355">
            <see cref="T:System.String" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-355">A <see cref="T:System.String" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-356">L’exemple suivant crée un attribut avec le contenu de chaîne.</span><span class="sxs-lookup"><span data-stu-id="2ac69-356">The following example creates an attribute with string content.</span></span> <span data-ttu-id="2ac69-357">Il récupère ensuite la valeur en effectuant un cast à <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-357">It then retrieves the value by casting to <xref:System.String>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "attribute content")  
);  
XAttribute att = root.Attribute("Att");  
string str = (string)att;  
Console.WriteLine("(string)att={0}", str);  
```  
  
```vb  
Dim root As XElement = <Root Att="attribute content"/>  
Dim att As XAttribute = root.Attribute("Att")  
Dim str As String = CStr(att)  
Console.WriteLine("(string)att={0}", str)  
```  
  
 <span data-ttu-id="2ac69-358">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-358">This example produces the following output:</span></span>  
  
```  
(string)att=attribute content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator TimeSpan (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator TimeSpan(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; TimeSpan" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-359">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-359">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.TimeSpan" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-360">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-360">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-361">
            <see cref="T:System.TimeSpan" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-361">A <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-362">L’espace de valeur d’un attribut ou un élément qui contient le contenu d’intervalle de temps est étroitement liée au contenu de la durée, comme décrit dans la norme ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="2ac69-362">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="2ac69-363">Lorsque vous créez un attribut ou un élément qui contient le contenu d’intervalle de temps, les valeurs d’attribut ou d’élément sont mis en forme conformément à la spécification W3C.</span><span class="sxs-lookup"><span data-stu-id="2ac69-363">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="2ac69-364">Consultez la spécification W3C pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="2ac69-364">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="2ac69-365">Comportement est lax lors de la conversion vers un <xref:System.TimeSpan> à partir d’un attribut ou élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-365">Behavior is lax when casting to a <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="2ac69-366">Même si la valeur d’attribut ou d’élément n’est pas mise en forme exactement par la spécification W3C, la valeur est correctement convertie en un <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-366">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="2ac69-367">L’exemple suivant crée un attribut avec l’intervalle de temps contenu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-367">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="2ac69-368">Il récupère ensuite la valeur en effectuant un cast à <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-368">It then retrieves the value by casting to <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan value = (TimeSpan)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As TimeSpan = CType(root.Attribute("Att"), TimeSpan)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-369">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-369">This example produces the following output:</span></span>  
  
```  
value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-370">L'attribut ne contient pas de valeur <see cref="T:System.TimeSpan" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-370">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-371">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-371">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; uint32" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-372">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-372">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-373">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-373">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-374">
            <see cref="T:System.UInt32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-374">A <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-375">L’exemple suivant crée un attribut avec le contenu de l’entier non signé.</span><span class="sxs-lookup"><span data-stu-id="2ac69-375">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="2ac69-376">Il récupère ensuite la valeur en effectuant un cast à <xref:System.UInt32>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-376">It then retrieves the value by casting to <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint value = (uint)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As UInteger = CUInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-377">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-377">This example produces the following output:</span></span>  
  
```  
value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-378">L'attribut ne contient pas de valeur <see cref="T:System.UInt32" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-378">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-379">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-379">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Xml.Linq.XAttribute -&gt; uint64" Usage="System.Xml.Linq.XAttribute.op_Explicit attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="2ac69-380">
            <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-380">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-381">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-381">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-382">
            <see cref="T:System.UInt64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-382">A <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="2ac69-383">L’exemple suivant crée un attribut avec le contenu de l’entier long non signé.</span><span class="sxs-lookup"><span data-stu-id="2ac69-383">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="2ac69-384">Il récupère ensuite la valeur en effectuant un cast à <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-384">It then retrieves the value by casting to <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1844674407370955161)  
);  
ulong value = (ulong)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1844674407370955161"/>  
Dim value As ULong = CULng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="2ac69-385">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-385">This example produces the following output:</span></span>  
  
```  
value=1844674407370955161  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2ac69-386">L'attribut ne contient pas de valeur <see cref="T:System.UInt64" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-386">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-387">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-387">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      </Docs>
    </Member>
    <Member MemberName="PreviousAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute PreviousAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute PreviousAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ PreviousAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousAttribute : System.Xml.Linq.XAttribute" Usage="System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-388">Obtient l'attribut précédent de l'élément parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-388">Gets the previous attribute of the parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-389">
            <see cref="T:System.Xml.Linq.XAttribute" /> contenant l'attribut précédent de l'élément parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-389">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the previous attribute of the parent element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-390">Les attributs sont conservés dans l’arborescence XML dans l’ordre qu’ils ont été ajoutés à l’élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-390">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="2ac69-391">Lorsqu’une collection d’attributs est retournée par <xref:System.Xml.Linq.XElement.Attributes%2A>, ils sont retournés dans l’ordre qu’ils ont été ajoutés et ne sont pas triés.</span><span class="sxs-lookup"><span data-stu-id="2ac69-391">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="2ac69-392">Lorsque vous demandez l’attribut précédent via cette propriété, cette propriété retourne l’attribut qui a été ajouté avant cet attribut.</span><span class="sxs-lookup"><span data-stu-id="2ac69-392">When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.</span></span>  
  
 <span data-ttu-id="2ac69-393">Si cet attribut n’a pas de parent, ou si cet attribut est le premier attribut, cette propriété retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="2ac69-393">If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`.</span></span>  
  
 <span data-ttu-id="2ac69-394">Le <xref:System.Xml.Linq.XElement> classe stocke ses attributs sous forme de liste liée unique de <xref:System.Xml.Linq.XAttribute> objets.</span><span class="sxs-lookup"><span data-stu-id="2ac69-394">The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects.</span></span> <span data-ttu-id="2ac69-395">Cela signifie que le <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> propriété doit parcourir la liste des attributs qui appartiennent à l’élément.</span><span class="sxs-lookup"><span data-stu-id="2ac69-395">This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element.</span></span> <span data-ttu-id="2ac69-396">Par conséquent, à l’aide de cette propriété peut affecter vos performances.</span><span class="sxs-lookup"><span data-stu-id="2ac69-396">Therefore, using this property might affect your performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-397">L’exemple suivant montre comment effectuer une itération dans les attributs d’un élément à l’aide de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="2ac69-397">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
XAttribute att = root.LastAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.PreviousAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.LastAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.PreviousAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="2ac69-398">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-398">This example produces the following output:</span></span>  
  
```  
Att4="4"  
Att3="3"  
Att2="2"  
Att1="1"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.NextAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="xAttribute.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-399">Supprime cet attribut de son élément parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-399">Removes this attribute from its parent element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-400">Vous pouvez utiliser cette méthode pour modifier une arborescence XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-400">You can use this method to modify an XML tree.</span></span> <span data-ttu-id="2ac69-401">Cette méthode provoquera des événements se produisent.</span><span class="sxs-lookup"><span data-stu-id="2ac69-401">This method will cause events to occur.</span></span>  
  
 <span data-ttu-id="2ac69-402">Il existe de nombreux scénarios dans lesquels vous souhaiterez supprimer un ensemble d’attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-402">There are many scenarios in which you might want to remove a set of attributes.</span></span> <span data-ttu-id="2ac69-403">Dans [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] de programmation, vous ne devez pas manipuler ou modifier un ensemble de nœuds tandis que vous demandez des nœuds dans ce jeu.</span><span class="sxs-lookup"><span data-stu-id="2ac69-403">In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.</span></span> <span data-ttu-id="2ac69-404">En pratique, cela signifie que vous ne devez pas effectuer une itération sur un ensemble d’attributs et supprimez-les.</span><span class="sxs-lookup"><span data-stu-id="2ac69-404">In practical terms, this means that you should not iterate over a set of attributes and remove them.</span></span> <span data-ttu-id="2ac69-405">Au lieu de cela, vous devez les matérialiser dans une <xref:System.Collections.Generic.List%601> à l’aide de la <xref:System.Linq.Enumerable.ToList%2A> méthode d’extension.</span><span class="sxs-lookup"><span data-stu-id="2ac69-405">Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method.</span></span> <span data-ttu-id="2ac69-406">Vous pouvez, puis itérer sur la liste, en supprimant les attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-406">Then you can iterate over the list, removing the attributes.</span></span> <span data-ttu-id="2ac69-407">Pour plus d’informations, consultez [mixte bogues de Code impératif Code déclaratif (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span><span class="sxs-lookup"><span data-stu-id="2ac69-407">For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span></span>  
  
 <span data-ttu-id="2ac69-408">Vous pouvez également, si vous souhaitez supprimer un ensemble d’attributs, il est recommandé d’utiliser le <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2ac69-408">Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2ac69-409">Cette méthode copie les attributs dans une liste, puis effectue une itération sur la liste, en supprimant les attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-409">This method copies the attributes to a list, then iterates over the list, removing the attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-410">L’exemple suivant crée un élément avec trois attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-410">The following example creates an element with three attributes.</span></span> <span data-ttu-id="2ac69-411">Il supprime ensuite un des attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-411">It then removes one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.Remove();  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.Remove()  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="2ac69-412">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-412">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ac69-413">L'élément parent est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-413">The parent element is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj -&gt; unit" Usage="xAttribute.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2ac69-414">Valeur à assigner à cet attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-414">The value to assign to this attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac69-415">Définit la valeur de cet attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-415">Sets the value of this attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-416">La valeur est convertie en sa représentation sous forme de chaîne et assignée à la propriété <xref:System.Xml.Linq.XAttribute.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-416">The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.</span></span>  
  
 <span data-ttu-id="2ac69-417">Il n’est pas valide pour transmettre une instance d’une classe qui dérive de <xref:System.Xml.Linq.XObject>, tel que <xref:System.Xml.Linq.XElement> ou <xref:System.Xml.Linq.XAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-417">It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="2ac69-418">Cette méthode déclenchera le <xref:System.Xml.Linq.XObject.Changed> et <xref:System.Xml.Linq.XObject.Changing> événements.</span><span class="sxs-lookup"><span data-stu-id="2ac69-418">This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-419">L’exemple suivant crée un élément avec plusieurs attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-419">The following example creates an element with several attributes.</span></span> <span data-ttu-id="2ac69-420">Il remplace ensuite le contenu d’un des attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-420">It then changes the contents of one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.SetValue("new content");  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.SetValue("new content")  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="2ac69-421">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-421">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att2="new content" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-422">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-422">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ac69-423">La <paramref name="value" /> est un <see cref="T:System.Xml.Linq.XObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-423">The <paramref name="value" /> is an <see cref="T:System.Xml.Linq.XObject" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XElement.SetValue(System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xAttribute.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-424">Convertit l'objet <see cref="T:System.Xml.Linq.XAttribute" /> en cours en une représentation sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-424">Converts the current <see cref="T:System.Xml.Linq.XAttribute" /> object to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac69-425">
            <see cref="T:System.String" /> qui contient la représentation textuelle XML d'un attribut et sa valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-425">A <see cref="T:System.String" /> containing the XML text representation of an attribute and its value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-426">Cette méthode retourne une chaîne sous la forme de `AttributeName="content"`.</span><span class="sxs-lookup"><span data-stu-id="2ac69-426">This method returns a string in the form of `AttributeName="content"`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2ac69-427">Lorsque cette méthode est appelée et <xref:System.Xml.Linq.XAttribute> contient contrôle caractère, une exception est levée avec un message similaire à : valeur hexadécimale 0x0B, est un caractère non valide.</span><span class="sxs-lookup"><span data-stu-id="2ac69-427">When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-428">L’exemple suivant crée un élément avec plusieurs attributs.</span><span class="sxs-lookup"><span data-stu-id="2ac69-428">The following example creates an element with several attributes.</span></span> <span data-ttu-id="2ac69-429">Ensuite, il obtient un attribut et affiche son contenu en appelant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="2ac69-429">It then gets an attribute and displays it and its content by calling this method.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
Console.WriteLine(att.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
Console.WriteLine(att.ToString())  
```  
  
 <span data-ttu-id="2ac69-430">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-430">This example produces the following output:</span></span>  
  
```  
Att2="content2"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ac69-431">Obtient ou définit la valeur de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-431">Gets or sets the value of this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ac69-432">
            <see cref="T:System.String" /> contenant la valeur de cet attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-432">A <see cref="T:System.String" /> containing the value of this attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac69-433">Vous pouvez utiliser cette propriété pour obtenir ou définir la valeur d’un attribut.</span><span class="sxs-lookup"><span data-stu-id="2ac69-433">You can use this property to get or set the value of an attribute.</span></span>  
  
 <span data-ttu-id="2ac69-434">Paramètre de cette propriété déclenche le <xref:System.Xml.Linq.XObject.Changed> et <xref:System.Xml.Linq.XObject.Changing> événements.</span><span class="sxs-lookup"><span data-stu-id="2ac69-434">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
 <span data-ttu-id="2ac69-435">Si vous obtenez la valeur et l’attribut n’existe ne peut-être pas, il est plus pratique d’utiliser les opérateurs de conversion explicite et assigner l’attribut à un type nullable tel que `string` ou <xref:System.Nullable%601> de <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="2ac69-435">If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>.</span></span> <span data-ttu-id="2ac69-436">Si l’attribut n’existe pas, le type nullable a la valeur `null`.</span><span class="sxs-lookup"><span data-stu-id="2ac69-436">If the attribute does not exist, then the nullable type is set to `null`.</span></span> <span data-ttu-id="2ac69-437">Avant d’utiliser cette propriété, vous devez vous assurer que le <xref:System.Xml.Linq.XElement.Attribute%2A> méthode ne retourne pas `null`.</span><span class="sxs-lookup"><span data-stu-id="2ac69-437">Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ac69-438">L’exemple suivant crée un élément avec un attribut.</span><span class="sxs-lookup"><span data-stu-id="2ac69-438">The following example creates an element with an attribute.</span></span> <span data-ttu-id="2ac69-439">Il récupère ensuite la valeur de l’attribut et il définit ensuite.</span><span class="sxs-lookup"><span data-stu-id="2ac69-439">It then retrieves the value of the attribute, and then sets it.</span></span>  
  
 <span data-ttu-id="2ac69-440">Notez que l’exemple Visual Basic utilise la propriété d’attribut XML.</span><span class="sxs-lookup"><span data-stu-id="2ac69-440">Note that the Visual Basic example uses the XML attribute property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.Value);  
att.Value = "new text";  
Console.WriteLine(att.Value);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Console.WriteLine(root.@Att)  
root.@Att = "new text"  
Console.WriteLine(root.@Att)  
```  
  
 <span data-ttu-id="2ac69-441">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-441">This example produces the following output:</span></span>  
  
```  
content  
new text  
```  
  
 <span data-ttu-id="2ac69-442">L’exemple suivant montre l’avantage d’utiliser les opérateurs de conversion explicite pour obtenir la valeur d’un attribut qui n’existe ne peut-être pas :</span><span class="sxs-lookup"><span data-stu-id="2ac69-442">The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "attribute 1 content"),  
    new XAttribute("Att2", "2")  
);  
  
// The following assignments demonstrate why it is easier to use  
// casting when the attribute might or might not exist.  
  
string c1 = (string)root.Attribute("Att1");  
Console.WriteLine("c1:{0}", c1 == null ? "attribute does not exist" : c1);  
  
int? c2 = (int?)root.Attribute("Att2");  
Console.WriteLine("c2:{0}", c2 == null ? "attribute does not exist" : c2.ToString());  
  
string c3 = (string)root.Attribute("Att3");  
Console.WriteLine("c3:{0}", c3 == null ? "attribute does not exist" : c3);  
  
int? c4 = (int?)root.Attribute("Att4");  
Console.WriteLine("c4:{0}", c4 == null ? "attribute does not exist" : c4.ToString());  
  
Console.WriteLine();  
  
// The following assignments show the necessary code when using  
// the value property when the attribute might or might not exist.  
  
XAttribute att1 = root.Attribute("Att1");  
string v1;  
if (att1 == null)  
    v1 = null;  
else  
    v1 = att1.Value;  
Console.WriteLine("v1:{0}", v1 == null ? "attribute does not exist" : v1);  
  
XAttribute att2 = root.Attribute("Att2");  
int? v2;  
if (att2 == null)  
    v2 = null;  
else  
    v2 = Int32.Parse(att2.Value);  
Console.WriteLine("v2:{0}", v2 == null ? "attribute does not exist" : v2.ToString());  
  
XAttribute att3 = root.Attribute("Att3");  
string v3;  
if (att3 == null)  
    v3 = null;  
else  
    v3 = att3.Value;  
Console.WriteLine("v3:{0}", v3 == null ? "attribute does not exist" : v3);  
  
XAttribute att4 = root.Attribute("Att4");  
int? v4;  
if (att4 == null)  
    v4 = null;  
else  
    v4 = Int32.Parse(att4.Value);  
Console.WriteLine("v4:{0}", v4 == null ? "attribute does not exist" : v4.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="attribute 1 content" Att2="2"/>  
  
' The following assignments demonstrate why it is easier to use  
' casting when the attribute might or might not exist.  
  
Dim c1 As String = CStr(root.Attribute("Att1"))  
Console.WriteLine("c1:{0}", IIf(c1 Is Nothing, "attribute does not exist", c1))  
  
Dim c2 As Nullable(Of Integer) = CType(root.Attribute("Att2"), Nullable(Of Integer))  
Console.WriteLine("c2:{0}", IIf(c2.HasValue, c2, "attribute does not exist"))  
  
Dim c3 As String = CStr(root.Attribute("Att3"))  
Console.WriteLine("c3:{0}", IIf(c3 Is Nothing, "attribute does not exist", c3))  
  
Dim c4 As Nullable(Of Integer) = CType(root.Attribute("Att4"), Nullable(Of Integer))  
Console.WriteLine("c4:{0}", IIf(c4.HasValue, c4, "attribute does not exist"))  
  
Console.WriteLine()  
  
' The following assignments show the necessary code when using  
' the value property when the attribute might or might not exist.  
  
Dim att1 As XAttribute = root.Attribute("Att1")  
Dim v1 As String  
If att1 Is Nothing Then  
    v1 = Nothing  
Else  
    v1 = att1.Value  
End If  
  
Console.WriteLine("v1:{0}", IIf(v1 Is Nothing, "attribute does not exist", v1))  
  
Dim att2 As XAttribute = root.Attribute("Att2")  
Dim v2 As Nullable(Of Integer)  
If att2 Is Nothing Then  
    v2 = Nothing  
Else  
    v2 = Int32.Parse(att2.Value)  
End If  
  
Console.WriteLine("v2:{0}", IIf(v2.HasValue, v2, "attribute does not exist"))  
  
Dim att3 As XAttribute = root.Attribute("Att3")  
Dim v3 As String  
If att3 Is Nothing Then  
    v3 = Nothing  
Else  
    v3 = att3.Value  
End If  
  
Console.WriteLine("v3:{0}", IIf(v3 Is Nothing, "attribute does not exist", v3))  
  
Dim att4 As XAttribute = root.Attribute("Att4")  
Dim v4 As Nullable(Of Integer)  
If att4 Is Nothing Then  
    v4 = Nothing  
Else  
    v4 = Int32.Parse(att4.Value)  
End If  
  
Console.WriteLine("v4:{0}", IIf(v4.HasValue, v4, "attribute does not exist"))  
```  
  
 <span data-ttu-id="2ac69-443">Cet exemple génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="2ac69-443">This example produces the following output:</span></span>  
  
```  
c1:attribute 1 content  
c2:2  
c3:attribute does not exist  
c4:attribute does not exist  
  
v1:attribute 1 content  
v2:2  
v3:attribute does not exist  
v4:attribute does not exist  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ac69-444">Lors de la définition, <paramref name="value" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac69-444">When setting, the <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>