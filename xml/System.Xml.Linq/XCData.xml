<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XCData.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d893c93b876fdf3006f16ab750c569e9e4ec6bb7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d893c93b876fdf3006f16ab750c569e9e4ec6bb7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XCData">
          <source>Represents a text node that contains CDATA.</source>
          <target state="translated">Représente un nœud de texte qui contient CDATA.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>An XML CDATA section allows you to store almost any arbitrary string as the contents of an XML element.</source>
          <target state="translated">Une section CDATA XML vous permet de stocker pratiquement toutes les chaînes arbitraires en tant que le contenu d’un élément XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>This class represents the XML concept of a CDATA text node.</source>
          <target state="translated">Cette classe représente le concept XML d’un nœud de texte CDATA.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>This class derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph>, which represents XML text.</source>
          <target state="translated">Cette classe dérive <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph>, qui représente le texte XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>CDATA sections are special cases of XML text.</source>
          <target state="translated">Les sections CDATA sont des cas spéciaux de texte XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XCData">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>A string that contains the value of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> node.</source>
          <target state="translated">Chaîne qui contient la valeur du nœud <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>The following example creates an element that contains a CDATA node.</source>
          <target state="translated">L’exemple suivant crée un élément qui contient un nœud CDATA.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">Cet exemple génère la sortie suivante :</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> node to copy from.</source>
          <target state="translated">Nœud <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> à partir duquel effectuer la copie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">Ce constructeur est principalement utilisé en interne pour effectuer une copie complète d’une arborescence XML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Obtient le type de ce nœud.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>The node type.</source>
          <target state="translated">Type de nœud.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.CDATA" /&gt;</ph>.</source>
          <target state="translated">Pour les objets <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph>, cette valeur est <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.CDATA" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Étant donné que toutes les classes qui dérivent de <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contiennent un <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> propriété, vous pouvez écrire du code qui fonctionne sur des collections de la sous-classe concrète de <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">Votre code peut ensuite tester le type de nœud de chaque nœud dans la collection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>The following example creates an XML tree that contains various types of nodes.</source>
          <target state="translated">L’exemple suivant crée une arborescence XML qui contient différents types de nœuds.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>It then iterates through the tree, and prints the node type of each node.</source>
          <target state="translated">Il puis effectue une itération dans l’arborescence et imprime le type de nœud de chaque nœud.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">Cet exemple génère la sortie suivante :</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> dans lequel cette méthode écrira.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
          <source>Writes this CDATA object to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Écrit cet objet CDATA vers un <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">Cette méthode est principalement utilisée en interne par les méthodes qui écrivent une arborescence XML vers un <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>