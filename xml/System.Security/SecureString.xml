<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e660e4093f886ad6783fec776da81c3aa1b77e7" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="61dde-101">Représente le texte qui doit rester confidentiel, par exemple en le supprimant de la mémoire de l'ordinateur quand il n'est plus nécessaire.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61dde-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span>
      </span>
      <span data-ttu-id="61dde-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61dde-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-103"><xref:System.Security.SecureString> est un type de chaîne qui fournit une mesure de sécurité.</span><span class="sxs-lookup"><span data-stu-id="61dde-103"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="61dde-104">Il tente d’éviter de stocker des chaînes potentiellement sensibles dans la mémoire de processus en tant que texte brut.</span><span class="sxs-lookup"><span data-stu-id="61dde-104">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="61dde-105">(Pour connaître les limitations, toutefois, consultez la [est-il sécurisé SecureString ?](#HowSecure) section.) La valeur d’une instance de <xref:System.Security.SecureString> est alors automatiquement protégé à l’aide d’un mécanisme de prise en charge par la plateforme sous-jacente lorsque l’instance est initialisée ou lorsque la valeur est modifiée.</span><span class="sxs-lookup"><span data-stu-id="61dde-105">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="61dde-106">Votre application peut rendre l’instance immuable et empêcher toute autre modification en appelant le <xref:System.Security.SecureString.MakeReadOnly%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="61dde-106">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="61dde-107">La longueur maximale d’un <xref:System.Security.SecureString> instance est 65 536 caractères.</span><span class="sxs-lookup"><span data-stu-id="61dde-107">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61dde-108">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="61dde-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="61dde-109">Lorsque vous avez fini d’utiliser une instance du type, vous devez la supprimer directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="61dde-109">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="61dde-110">Pour supprimer le type directement, vous devez appeler sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="61dde-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="61dde-111">Pour la supprimer indirectement, utiliser une construction de langage telles que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="61dde-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="61dde-112">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="61dde-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="61dde-113">La <xref:System.Security.SecureString> classe et ses membres ne sont pas visibles par COM.</span><span class="sxs-lookup"><span data-stu-id="61dde-113">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="61dde-114">Pour plus d'informations, consultez <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span><span class="sxs-lookup"><span data-stu-id="61dde-114">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="61dde-115">Dans cette section :</span><span class="sxs-lookup"><span data-stu-id="61dde-115">In this section:</span></span>  
  
 <span data-ttu-id="61dde-116">[chaîne vs. SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="61dde-116">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="61dde-117">[Opérations de SecureString](#Ops) </span><span class="sxs-lookup"><span data-stu-id="61dde-117">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="61dde-118">[SecureString et l’interopérabilité](#interop) </span><span class="sxs-lookup"><span data-stu-id="61dde-118">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="61dde-119">SecureString d’est-il sécurisé ?</span><span class="sxs-lookup"><span data-stu-id="61dde-119">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="61dde-120">Chaîne par rapport à SecureString</span><span class="sxs-lookup"><span data-stu-id="61dde-120">String versus SecureString</span></span>  
 <span data-ttu-id="61dde-121">Une instance de la <xref:System.String?displayProperty=nameWithType> classe est immuable et, lorsque vous n’est plus nécessaire, ne peut pas être planifiée par programme pour le garbage collection ; autrement dit, l’instance est en lecture seule après sa création, et il n’est pas possible de prédire quand l’instance supprimé de la mémoire de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="61dde-121">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="61dde-122">Étant donné que <xref:System.String?displayProperty=nameWithType> les instances sont immuables, les opérations qui semblent modifier une instance existante créent en fait une copie pour manipuler.</span><span class="sxs-lookup"><span data-stu-id="61dde-122">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="61dde-123">Par conséquent, si un <xref:System.String> objet contient des informations sensibles telles qu’un mot de passe, numéro de carte de crédit ou les données personnelles, il existe un risque qu’elles soient révélées après leur utilisation car votre application ne peut pas supprimer les données de la mémoire de l’ordinateur .</span><span class="sxs-lookup"><span data-stu-id="61dde-123">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="61dde-124">A <xref:System.Security.SecureString> objet est semblable à un <xref:System.String> de l’objet car il a une valeur de texte.</span><span class="sxs-lookup"><span data-stu-id="61dde-124">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="61dde-125">Toutefois, la valeur d’un <xref:System.Security.SecureString> de l’objet est épinglé en mémoire, peut utiliser un mécanisme de protection, telles que le chiffrement, fourni par le système d’exploitation sous-jacent, qui peut être modifié jusqu'à ce que votre application la marque comme étant en lecture seule et peut être supprimé de la mémoire de l’ordinateur soit par votre application appelant le <xref:System.Security.SecureString.Dispose%2A> méthode ou par le garbage collector .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="61dde-125">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="61dde-126">Pour en savoir plus sur les limitations de la <xref:System.Security.SecureString> de classe, consultez la [est-il sécurisé SecureString ?](#HowSecure) section.</span><span class="sxs-lookup"><span data-stu-id="61dde-126">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="61dde-127">Retour au début</span><span class="sxs-lookup"><span data-stu-id="61dde-127">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="61dde-128">Opérations de SecureString</span><span class="sxs-lookup"><span data-stu-id="61dde-128">SecureString operations</span></span>  
 <span data-ttu-id="61dde-129">La <xref:System.Security.SecureString> classe contient des membres qui vous permettent d’effectuer les opérations suivantes :</span><span class="sxs-lookup"><span data-stu-id="61dde-129">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="61dde-130">Instancier une <xref:System.Security.SecureString> objet</span><span class="sxs-lookup"><span data-stu-id="61dde-130">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="61dde-131">Vous instanciez un <xref:System.Security.SecureString> objet en appelant son constructeur sans paramètre.</span><span class="sxs-lookup"><span data-stu-id="61dde-131">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="61dde-132">Ajouter des caractères à un <xref:System.Security.SecureString> objet</span><span class="sxs-lookup"><span data-stu-id="61dde-132">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="61dde-133">Vous pouvez ajouter un seul caractère à la fois à un <xref:System.Security.SecureString> objet en appelant son <xref:System.Security.SecureString.AppendChar%2A> ou <xref:System.Security.SecureString.InsertAt%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="61dde-133">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61dde-134">A <xref:System.Security.SecureString> objet ne doit jamais être construit à partir d’un <xref:System.String>, car les données sensibles seront déjà soumise aux conséquences de persistance de mémoire de la liste immuable <xref:System.String> classe.</span><span class="sxs-lookup"><span data-stu-id="61dde-134">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="61dde-135">La meilleure façon de construire un <xref:System.Security.SecureString> objet porte d’une source de non managée de caractère à temps, telles que le <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="61dde-135">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="61dde-136">Supprimez les caractères d’un <xref:System.Security.SecureString> objet</span><span class="sxs-lookup"><span data-stu-id="61dde-136">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="61dde-137">Vous pouvez remplacer un caractère individuel en appelant le <xref:System.Security.SecureString.SetAt%2A> (méthode), supprimer un caractère individuel en appelant le <xref:System.Security.SecureString.RemoveAt%2A> (méthode), ou supprimez tous les caractères à partir de la <xref:System.Security.SecureString> instance en appelant le <xref:System.Security.SecureString.Clear%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="61dde-137">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="61dde-138">Rendre le <xref:System.Security.SecureString> objet en lecture seule</span><span class="sxs-lookup"><span data-stu-id="61dde-138">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="61dde-139">Une fois que vous avez défini la chaîne qui le <xref:System.Security.SecureString> objet représente, vous appelez ses <xref:System.Security.SecureString.MakeReadOnly%2A> méthode afin que la chaîne en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="61dde-139">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="61dde-140">Obtenir des informations sur la <xref:System.Security.SecureString> objet</span><span class="sxs-lookup"><span data-stu-id="61dde-140">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="61dde-141">Le <xref:System.Security.SecureString> classe possède uniquement deux membres qui fournissent des informations sur la chaîne : son <xref:System.Security.SecureString.Length%2A> qui indique le nombre d’unités de code encodée en UTF16 dans la chaîne ; et le <xref:System.Security.SecureString.IsReadOnly%2A>, méthode, ce qui indique si l’instance est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="61dde-141">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="61dde-142">Libérer la mémoire allouée à la <xref:System.Security.SecureString> instance</span><span class="sxs-lookup"><span data-stu-id="61dde-142">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="61dde-143">Étant donné que <xref:System.Security.SecureString> implémente la <xref:System.IDisposable> interface, vous libérer sa mémoire en appelant le <xref:System.Security.SecureString.Dispose%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="61dde-143">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="61dde-144">Le <xref:System.Security.SecureString> classe ne possède aucun membre qui inspecte, compare ou convertit la valeur d’un <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="61dde-144">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="61dde-145">L’absence de ces membres permet de protéger la valeur de l’instance d’une exposition accidentelle ou malveillante.</span><span class="sxs-lookup"><span data-stu-id="61dde-145">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="61dde-146">Utilisez les membres appropriés de le <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, telle que la <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> (méthode), pour manipuler la valeur d’un <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-146">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="61dde-147">La bibliothèque de classes .NET Framework utilise couramment <xref:System.Security.SecureString> instances comme suit :</span><span class="sxs-lookup"><span data-stu-id="61dde-147">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="61dde-148">Pour fournir des informations de mot de passe à un processus à l’aide de la <xref:System.Diagnostics.ProcessStartInfo> de la structure ou en appelant une surcharge de la <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> méthode qui a un paramètre de type <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="61dde-148">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="61dde-149">Pour fournir des informations de mot de passe réseau en appelant un <xref:System.Net.NetworkCredential> constructeur de classe qui a un paramètre de type <xref:System.Security.SecureString> ou à l’aide de la <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="61dde-149">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="61dde-150">Pour fournir des informations de mot de passe pour l’authentification SQL Server en appelant le <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructeur ou la récupération de la valeur de la <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="61dde-150">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="61dde-151">Pour passer une chaîne en code non managé.</span><span class="sxs-lookup"><span data-stu-id="61dde-151">To pass a string to unmanaged code.</span></span> <span data-ttu-id="61dde-152">Pour plus d’informations, consultez la [SecureString et interopérabilité](#interop) section.</span><span class="sxs-lookup"><span data-stu-id="61dde-152">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="61dde-153">Retour au début</span><span class="sxs-lookup"><span data-stu-id="61dde-153">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="61dde-154">SecureString et l’interopérabilité</span><span class="sxs-lookup"><span data-stu-id="61dde-154">SecureString and interop</span></span>  
 <span data-ttu-id="61dde-155">Étant donné que le système d’exploitation ne prend pas en charge directement <xref:System.Security.SecureString>, vous devez convertir la valeur de la <xref:System.Security.SecureString> objet vers le type de chaîne requis avant de passer la chaîne à une méthode native.</span><span class="sxs-lookup"><span data-stu-id="61dde-155">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="61dde-156">La <xref:System.Runtime.InteropServices.Marshal> classe a cinq méthodes que cela :</span><span class="sxs-lookup"><span data-stu-id="61dde-156">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="61dde-157"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, qui convertit le <xref:System.Security.SecureString> valeur de chaîne à une chaîne binaire (BSTR) reconnue par COM.</span><span class="sxs-lookup"><span data-stu-id="61dde-157"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="61dde-158"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> et <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, qui copie le <xref:System.Security.SecureString> valeur de chaîne à une chaîne ANSI dans la mémoire non managée.</span><span class="sxs-lookup"><span data-stu-id="61dde-158"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="61dde-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> et <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, qui copie le <xref:System.Security.SecureString> valeur de chaîne à une chaîne Unicode dans la mémoire non managée.</span><span class="sxs-lookup"><span data-stu-id="61dde-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="61dde-160">Chacune de ces méthodes crée une chaîne de texte en clair dans la mémoire non managée.</span><span class="sxs-lookup"><span data-stu-id="61dde-160">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="61dde-161">Il incombe au développeur de zéro et libérer cette mémoire dès qu’il n’est plus nécessaire.</span><span class="sxs-lookup"><span data-stu-id="61dde-161">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="61dde-162">Chacune des méthodes d’allocation mémoire et de conversion de chaîne a une méthode correspondante à zéro et libérer la mémoire allouée :</span><span class="sxs-lookup"><span data-stu-id="61dde-162">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="61dde-163">Méthode d’allocation et de conversion</span><span class="sxs-lookup"><span data-stu-id="61dde-163">Allocation and conversion method</span></span>|<span data-ttu-id="61dde-164">Zéro et free (méthode)</span><span class="sxs-lookup"><span data-stu-id="61dde-164">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="61dde-165">Retour au début</span><span class="sxs-lookup"><span data-stu-id="61dde-165">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="61dde-166">SecureString d’est-il sécurisé ?</span><span class="sxs-lookup"><span data-stu-id="61dde-166">How secure is SecureString?</span></span>  
 <span data-ttu-id="61dde-167">Lors de la création correctement, un <xref:System.Security.SecureString> instance fournit plus de protection de données qu’un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="61dde-167">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="61dde-168">Lors de la création d’une chaîne à partir d’une source de caractère à temps <xref:System.String> crée plusieurs intermédiaires dans la mémoire, tandis que <xref:System.Security.SecureString> crée une seule instance.</span><span class="sxs-lookup"><span data-stu-id="61dde-168">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="61dde-169">Le garbage collection de <xref:System.String> objets est non déterministe.</span><span class="sxs-lookup"><span data-stu-id="61dde-169">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="61dde-170">En outre, étant donné que sa mémoire n’est pas épinglée, le garbage collector effectuer des copies supplémentaires de <xref:System.String> valeurs lors du déplacement et le compactage de mémoire.</span><span class="sxs-lookup"><span data-stu-id="61dde-170">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="61dde-171">En revanche, la mémoire allouée à un <xref:System.Security.SecureString> objet est épinglé, et que la mémoire peut être libérée en appelant le <xref:System.Security.SecureString.Dispose%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="61dde-171">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="61dde-172">Bien que les données stockées dans un <xref:System.Security.SecureString> instance est plus sécurisée que les données stockées dans un <xref:System.String> d’une instance, il existe des limitations importantes sur la sécurisation un <xref:System.Security.SecureString> est de l’instance.</span><span class="sxs-lookup"><span data-stu-id="61dde-172">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="61dde-173">Elles incluent notamment :</span><span class="sxs-lookup"><span data-stu-id="61dde-173">These include:</span></span>  
  
 <span data-ttu-id="61dde-174">Plateforme</span><span class="sxs-lookup"><span data-stu-id="61dde-174">Platform</span></span>  
 <span data-ttu-id="61dde-175">Sur le système d’exploitation Windows, le contenu d’un <xref:System.Security.SecureString> tableau de caractères interne de l’instance sont chiffrés.</span><span class="sxs-lookup"><span data-stu-id="61dde-175">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="61dde-176">Toutefois, si car il manque des API ou des problèmes de gestion de clés, le chiffrement n’est pas disponible sur toutes les plateformes.</span><span class="sxs-lookup"><span data-stu-id="61dde-176">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="61dde-177">En raison de cette dépendance de plateforme, <xref:System.Security.SecureString> ne chiffre pas le stockage interne sur la plateforme non Windows.</span><span class="sxs-lookup"><span data-stu-id="61dde-177">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="61dde-178">Autres techniques permettent de fournir une protection supplémentaire sur ces plateformes.</span><span class="sxs-lookup"><span data-stu-id="61dde-178">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="61dde-179">Duration</span><span class="sxs-lookup"><span data-stu-id="61dde-179">Duration</span></span>  
 <span data-ttu-id="61dde-180">Même si le <xref:System.Security.SecureString> implémentation est en mesure de tirer parti de chiffrement, le texte brut est attribué à la <xref:System.Security.SecureString> instance peut-être être exposée à des moments différents :</span><span class="sxs-lookup"><span data-stu-id="61dde-180">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="61dde-181">Étant donné que Windows n’offre pas une implémentation de la chaîne sécurisée au niveau du système d’exploitation, le .NET Framework a toujours convertir la valeur de chaîne sécurisée en sa représentation sous forme de texte brut pour pouvoir le pour utiliser.</span><span class="sxs-lookup"><span data-stu-id="61dde-181">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="61dde-182">Chaque fois que la valeur de la chaîne sécurisée est modifiée par les méthodes telles que <xref:System.Security.SecureString.AppendChar%2A> ou <xref:System.Security.SecureString.RemoveAt%2A>, il doit être déchiffré (c'est-à-dire converti précédent en texte brut), modifié, puis chiffrées à nouveau.</span><span class="sxs-lookup"><span data-stu-id="61dde-182">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (i.e., converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="61dde-183">Si la chaîne sécurisée est utilisée dans un appel d’interopérabilité, il doit être converti pour une chaîne ANSI, une chaîne Unicode ou une chaîne binaire (BSTR).</span><span class="sxs-lookup"><span data-stu-id="61dde-183">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="61dde-184">Pour plus d’informations, consultez la [SecureString et interopérabilité](#interop) section.</span><span class="sxs-lookup"><span data-stu-id="61dde-184">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="61dde-185">L’intervalle de temps pour lequel le <xref:System.Security.SecureString> valeur de l’instance est exposée est simplement réduit par rapport à la <xref:System.String> classe.</span><span class="sxs-lookup"><span data-stu-id="61dde-185">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="61dde-186">Stockage et d’utilisation</span><span class="sxs-lookup"><span data-stu-id="61dde-186">Storage versus usage</span></span>  
 <span data-ttu-id="61dde-187">En règle générale, la <xref:System.Security.SecureString> classe définit un mécanisme de stockage pour les valeurs de chaîne qui doit être protégé ou rester confidentiel.</span><span class="sxs-lookup"><span data-stu-id="61dde-187">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="61dde-188">Toutefois, en dehors de .NET Framework lui-même, pas de mécanisme d’utilisation prend en charge <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="61dde-188">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="61dde-189">Cela signifie que la chaîne sécurisée doit être convertie en un format exploitable (généralement un formulaire de texte en clair) qui peut être reconnu par sa cible, et que le déchiffrement et conversion doivent se trouver dans l’espace de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="61dde-189">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="61dde-190">Globale, <xref:System.Security.SecureString> est plus sûre que <xref:System.String> car elle limite l’exposition des données de chaîne qui tient compte.</span><span class="sxs-lookup"><span data-stu-id="61dde-190">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="61dde-191">Toutefois, ces chaînes peuvent toujours être exposées à n’importe quel processus ou une opération qui a accès à la mémoire brute, par exemple un processus malveillant en cours d’exécution sur l’ordinateur hôte, un vidage de processus ou un fichier d’échange visible à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="61dde-191">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="61dde-192">Au lieu d’utiliser <xref:System.Security.SecureString> pour protéger les mots de passe, l’alternative recommandée consiste à utiliser un handle opaque aux informations d’identification sont stockées en dehors du processus.</span><span class="sxs-lookup"><span data-stu-id="61dde-192">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="61dde-193">Retour au début</span><span class="sxs-lookup"><span data-stu-id="61dde-193">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="61dde-194">L’exemple suivant montre comment utiliser un <xref:System.Security.SecureString> pour sécuriser un mot de passe utilisateur à utiliser comme informations d’identification pour démarrer un nouveau processus.</span><span class="sxs-lookup"><span data-stu-id="61dde-194">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user’s password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61dde-195">Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecureString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-195">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dde-196">Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecureString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-196">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61dde-197">L’exemple suivant utilise la valeur par défaut (ou sans paramètre) pour instancier un nouvel constructeur <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-197">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="61dde-198">Il appelle ensuite la <xref:System.Security.SecureString.AppendChar%2A> méthode pour lui ajouter un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="61dde-198">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="61dde-199">L’exemple suivant crée un <xref:System.Security.SecureString> objet à partir de la valeur d’un <xref:System.String> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-199">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-200">Une erreur s’est produite au moment de la protection ou de l’annulation de la protection de la valeur de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-200">An error occurred while protecting or unprotecting the value of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61dde-201">Cette opération n’est pas prise en charge sur cette plateforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-201">This operation is not supported on this platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61dde-202">Pointeur vers un tableau d'objets <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-202">A pointer to an array of <see cref="T:System.Char" /> objects.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="61dde-203">Nombre d’éléments de <c>value</c> à inclure dans la nouvelle instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-203">The number of elements of <c>value</c> to include in the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dde-204">Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecureString" /> à partir d'un sous-tableau d'objets <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-204">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span>
          </span>
          <span data-ttu-id="61dde-205">Ce constructeur n’est pas conforme CLS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-205">This constructor is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="61dde-206">L’alternative conforme CLS est <see cref="M:System.Security.SecureString.#ctor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-206">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-207">Ce constructeur initialise la nouvelle <xref:System.Security.SecureString> objet pour le nombre de caractères dans `value` spécifié par `length`; la valeur de l’instance est ensuite chiffrée.</span><span class="sxs-lookup"><span data-stu-id="61dde-207">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="61dde-208">En c#, ce constructeur est défini uniquement dans le contexte de code unsafe.</span><span class="sxs-lookup"><span data-stu-id="61dde-208">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-209">L’exemple suivant instancie une nouvelle <xref:System.Security.SecureString> en passant à son constructeur un pointeur vers un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="61dde-209">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61dde-210">
            <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-210">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61dde-211">
            <paramref name="length" /> est inférieur à 0 ou supérieur à 65 536.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-211">
              <paramref name="length" /> is less than zero or greater than 65,536.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-212">Une erreur s’est produite lors de la protection ou de l’annulation de la protection de la valeur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-212">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61dde-213">Cette opération n’est pas prise en charge sur cette plateforme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-213">This operation is not supported on this platform.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="61dde-214">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-214">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="61dde-215">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-215">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="61dde-216">Caractère à ajouter à cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-216">A character to append to this secure string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dde-217">Ajoute un caractère à la fin de la chaîne sécurisée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-217">Appends a character to the end of the current secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-218">Si l’implémentation utilise un mécanisme de protection, telles que le chiffrement, la valeur de cette chaîne sécurisée, le cas échéant, est non protégée ; `c` est ajouté ; la nouvelle valeur de la chaîne sécurisée est de nouveau protégée.</span><span class="sxs-lookup"><span data-stu-id="61dde-218">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-219">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, et <xref:System.Security.SecureString.Clear%2A> méthodes affectent la valeur d’un <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-219">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="61dde-220">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A> et <xref:System.Security.SecureString.RemoveAt%2A> méthodes peuvent être utilisées pour rassembler les caractères dans un mot de passe.</span><span class="sxs-lookup"><span data-stu-id="61dde-220">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-221">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-221">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61dde-222">Cette chaîne sécurisée est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-222">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61dde-223">L’exécution de cette opération rendrait la longueur de cette chaîne sécurisée supérieure à 65 536 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-223">Performing this operation would make the length of this secure string greater than 65,536 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-224">Une erreur s’est produite lors de la protection ou de l’annulation de la protection de la valeur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-224">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dde-225">Supprime la valeur de la chaîne sécurisée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-225">Deletes the value of the current secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-226">La mémoire de l’ordinateur qui contient la valeur de cette chaîne sécurisée est remis à zéro, puis la longueur de la valeur de cette chaîne sécurisée est définie à zéro.</span><span class="sxs-lookup"><span data-stu-id="61dde-226">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-227">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, et <xref:System.Security.SecureString.Clear%2A> méthodes affectent la valeur d’un <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-227">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-228">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-228">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61dde-229">Cette chaîne sécurisée est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-229">This secure string is read-only.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dde-230">Crée une copie de la chaîne sécurisée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-230">Creates a copy of the current secure string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61dde-231">Doublon de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-231">A duplicate of this secure string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-232">Si une instance d’un <xref:System.Security.SecureString> est marqué en lecture seule, la copie de cette instance ne sera pas en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="61dde-232">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-233">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-233">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-234">Une erreur s’est produite lors de la protection ou de l’annulation de la protection de la valeur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-234">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dde-235">Libère toutes les ressources utilisées par l'objet <see cref="T:System.Security.SecureString" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-235">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-236">Le <xref:System.Security.SecureString.Dispose%2A> méthode écrit des zéros binaires vers la mémoire allouée qui contient la valeur de ce <xref:System.Security.SecureString> de l’objet, puis libère la mémoire allouée.</span><span class="sxs-lookup"><span data-stu-id="61dde-236">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="61dde-237">Pour plus d’informations, consultez [le Garbage Collection](~/docs/standard/garbage-collection/index.md).</span><span class="sxs-lookup"><span data-stu-id="61dde-237">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="61dde-238">Position d’index à laquelle le paramètre <c>c</c> est inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-238">The index position where parameter <c>c</c> is inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="61dde-239">Caractère à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-239">The character to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dde-240">Insère un caractère dans cette chaîne sécurisée à la position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-240">Inserts a character in this secure string at the specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-241">L’index est zéro ; le premier caractère dans cette chaîne sécurisée est à la position d’index zéro.</span><span class="sxs-lookup"><span data-stu-id="61dde-241">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="61dde-242">Si l’implémentation utilise un mécanisme de protection, telles que le chiffrement, la valeur de la chaîne sécurisée, le cas échéant, est non protégée ; `c` est inséré à la position d’index spécifiée ; la nouvelle valeur est de nouveau protégée.</span><span class="sxs-lookup"><span data-stu-id="61dde-242">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="61dde-243">Le <xref:System.Security.SecureString.InsertAt%2A> méthode produit les mêmes résultats que la <xref:System.Security.SecureString.AppendChar%2A> (méthode), qui insère un caractère à la fin d’une chaîne sécurisée, si le `index` paramètre de <xref:System.Security.SecureString.InsertAt%2A> est définie à la longueur de cette instance.</span><span class="sxs-lookup"><span data-stu-id="61dde-243">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-244">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, et <xref:System.Security.SecureString.Clear%2A> méthodes affectent la valeur d’un <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-244">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-245">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-245">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61dde-246">Cette chaîne sécurisée est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-246">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61dde-247">
            <paramref name="index" /> est inférieur à zéro ou supérieur à la longueur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-247">
              <paramref name="index" /> is less than zero, or greater than the length of this secure string.</span>
          </span>
          <span data-ttu-id="61dde-248">-ou- L’exécution de cette opération rend la longueur de cette chaîne sécurisée supérieure à 65 536 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-248">-or-  Performing this operation would make the length of this secure string greater than 65,536 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-249">Une erreur s’est produite lors de la protection ou de l’annulation de la protection de la valeur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-249">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dde-250">Indique si cette chaîne sécurisée est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-250">Indicates whether this secure string is marked read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61dde-251">
            <see langword="true" /> si cette chaîne sécurisée est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-251">
              <see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-252">Une fois qu’une instance de <xref:System.Security.SecureString> est marqué en lecture seule par le <xref:System.Security.SecureString.MakeReadOnly%2A> (méthode), toute tentative de modifier la valeur de cette instance lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="61dde-252">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="61dde-253">Utilisez le <xref:System.Security.SecureString.IsReadOnly%2A> méthode pour tester si une <xref:System.Security.SecureString> est en lecture seule avant de tenter de le modifier.</span><span class="sxs-lookup"><span data-stu-id="61dde-253">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-254">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-254">This secure string has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61dde-255">Obtient le nombre de caractères dans la chaîne sécurisée actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-255">Gets the number of characters in the current secure string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61dde-256">Nombre d'objets <see cref="T:System.Char" /> de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-256">The number of <see cref="T:System.Char" /> objects in this secure string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-257">Le <xref:System.Security.SecureString.Length%2A> propriété retourne le nombre de <xref:System.Char> objets dans cette instance, pas le nombre de caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="61dde-257">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="61dde-258">Un caractère Unicode peut être représenté par plusieurs <xref:System.Char> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-258">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="61dde-259">La longueur maximale d’un <xref:System.Security.SecureString> instance est 65 536 caractères.</span><span class="sxs-lookup"><span data-stu-id="61dde-259">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-260">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-260">This secure string has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61dde-261">Met en lecture seule la valeur texte de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-261">Makes the text value of this secure string read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-262">Initialiser la valeur de texte d’une instance de la <xref:System.Security.SecureString> classe avec le <xref:System.Security.SecureString.%23ctor%2A> constructeurs et modifiez la valeur avec le <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, et <xref:System.Security.SecureString.AppendChar%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="61dde-262">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="61dde-263">Après avoir effectué vos dernières modifications, utilisez la <xref:System.Security.SecureString.MakeReadOnly%2A> méthode pour rendre la valeur de l’instance immuable (lecture seule).</span><span class="sxs-lookup"><span data-stu-id="61dde-263">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="61dde-264">Une fois que la valeur est marquée en lecture seule, toute tentative supplémentaire de la modifier lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="61dde-264">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="61dde-265">L’effet de l’appel <xref:System.Security.SecureString.MakeReadOnly%2A> est permanente, car la <xref:System.Security.SecureString> classe ne fournit aucun moyen de rendre la chaîne sécurisée à nouveau modifiable.</span><span class="sxs-lookup"><span data-stu-id="61dde-265">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="61dde-266">Utilisez le <xref:System.Security.SecureString.IsReadOnly%2A> méthode pour tester si une instance de <xref:System.Security.SecureString> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="61dde-266">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-267">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A> et <xref:System.Security.SecureString.RemoveAt%2A> méthodes peuvent être utilisées pour rassembler les caractères dans un mot de passe.</span><span class="sxs-lookup"><span data-stu-id="61dde-267">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="61dde-268">Une fois que le mot de passe est collecté, elle est définie en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="61dde-268">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-269">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-269">This secure string has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="61dde-270">Position d'index d'un caractère dans cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-270">The index position of a character in this secure string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dde-271">Supprime de cette chaîne sécurisée le caractère situé à la position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-271">Removes the character at the specified index position from this secure string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-272">L’index est zéro ; le premier caractère dans cette instance est à la position d’index zéro.</span><span class="sxs-lookup"><span data-stu-id="61dde-272">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="61dde-273">Si l’implémentation utilise un mécanisme de protection, telles que le chiffrement, la valeur de cette chaîne sécurisée, le cas échéant, est non protégée ; le caractère situé à la position d’index spécifiée est supprimé ; Ensuite, la nouvelle valeur est nouveau protégée.</span><span class="sxs-lookup"><span data-stu-id="61dde-273">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-274">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, et <xref:System.Security.SecureString.Clear%2A> méthodes affectent la valeur d’un <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-274">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="61dde-275">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A> et <xref:System.Security.SecureString.RemoveAt%2A> méthodes peuvent être utilisées pour rassembler les caractères dans un mot de passe.</span><span class="sxs-lookup"><span data-stu-id="61dde-275">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-276">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-276">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61dde-277">Cette chaîne sécurisée est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-277">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61dde-278">
            <paramref name="index" /> est inférieur à zéro, ou encore supérieur ou égal à la longueur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-278">
              <paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-279">Une erreur s’est produite lors de la protection ou de l’annulation de la protection de la valeur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-279">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="61dde-280">Position d'index d'un caractère existant dans cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-280">The index position of an existing character in this secure string</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="61dde-281">Caractère qui remplace le caractère existant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-281">A character that replaces the existing character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61dde-282">Remplace le caractère existant à la position d'index spécifiée par un autre caractère.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-282">Replaces the existing character at the specified index position with another character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61dde-283">L’index est zéro ; le premier caractère dans cette instance est à la position d’index zéro.</span><span class="sxs-lookup"><span data-stu-id="61dde-283">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="61dde-284">Si l’implémentation utilise un mécanisme de protection, telles que le chiffrement, la valeur de la chaîne sécurisée, le cas échéant, est non protégée ; `c` est affectée à la position d’index spécifiée ; la nouvelle valeur est de nouveau protégée.</span><span class="sxs-lookup"><span data-stu-id="61dde-284">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61dde-285">L’exemple suivant montre comment la <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, et <xref:System.Security.SecureString.Clear%2A> méthodes affectent la valeur d’un <xref:System.Security.SecureString> objet.</span><span class="sxs-lookup"><span data-stu-id="61dde-285">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61dde-286">Cette chaîne sécurisée a déjà été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-286">This secure string has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61dde-287">Cette chaîne sécurisée est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-287">This secure string is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61dde-288">
            <paramref name="index" /> est inférieur à zéro, ou encore supérieur ou égal à la longueur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-288">
              <paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="61dde-289">Une erreur s’est produite lors de la protection ou de l’annulation de la protection de la valeur de cette chaîne sécurisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61dde-289">An error occurred while protecting or unprotecting the value of this secure string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>