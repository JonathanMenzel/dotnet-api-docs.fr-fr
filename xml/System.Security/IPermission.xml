<Type Name="IPermission" FullName="System.Security.IPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab62c8d43e0ca696a66655b37755ebe3e68e56e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="30690-101">Définit les méthodes implémentées par les types d'autorisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30690-101">Defines methods implemented by permission types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30690-102">Autorisations dans le common language runtime sont des objets qui décrivent les ensembles d’opérations qui peuvent être sécurisées pour les ressources spécifiées.</span><span class="sxs-lookup"><span data-stu-id="30690-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="30690-103">Un objet d’autorisation décrit les opérations ou accès qui est soumis au contrôle de sécurité ; Il ne représente pas d’accès ou un droit d’effectuer des opérations.</span><span class="sxs-lookup"><span data-stu-id="30690-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="30690-104">Autorisations sont utilisées par le code d’application et le système de sécurité .NET Framework, comme suit.</span><span class="sxs-lookup"><span data-stu-id="30690-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="30690-105">Le code demande les autorisations que requises pour pouvoir s’exécuter.</span><span class="sxs-lookup"><span data-stu-id="30690-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="30690-106">La stratégie de système de sécurité accorde des autorisations au code afin qu’il à exécuter.</span><span class="sxs-lookup"><span data-stu-id="30690-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="30690-107">Code requiert que le code appelant possède une autorisation.</span><span class="sxs-lookup"><span data-stu-id="30690-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="30690-108">Code substitue la pile de sécurité à l’aide d’assertion/refus/PermitOnly.</span><span class="sxs-lookup"><span data-stu-id="30690-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30690-109">Si vous écrivez une nouvelle autorisation, vous devez implémenter cette interface dans votre classe.</span><span class="sxs-lookup"><span data-stu-id="30690-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="30690-110">Une autorisation est accessible par plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="30690-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="30690-111">Lorsque vous implémentez cette interface, vous devez vous assurer que le <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, et <xref:System.Security.IPermission.Copy%2A> implémentations de méthode sont thread-safe.</span><span class="sxs-lookup"><span data-stu-id="30690-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30690-112">Cet exemple montre comment définir une classe d’autorisation pour une utilisation avec la sécurité d’accès du code.</span><span class="sxs-lookup"><span data-stu-id="30690-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="30690-113">Toutes les interfaces d’autorisation nécessaires sont implémentées.</span><span class="sxs-lookup"><span data-stu-id="30690-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30690-114">Crée et retourne une copie identique de l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-114">Creates and returns an identical copy of the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30690-115">Copie de l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-115">A copy of the current permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30690-116">Une copie d’une autorisation représente le même accès aux ressources que l’autorisation d’origine.</span><span class="sxs-lookup"><span data-stu-id="30690-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30690-117">L’exemple de code suivant illustre l’implémentation du <xref:System.Security.IPermission.Copy%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="30690-118">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="30690-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30690-119">Lève une <see cref="T:System.Security.SecurityException" /> au moment de l'exécution si les conditions de sécurité ne sont pas réunies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30690-120">Cette méthode est généralement utilisée par des bibliothèques sécurisées pour garantir que les appelants ont l’autorisation d’accéder à une ressource.</span><span class="sxs-lookup"><span data-stu-id="30690-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="30690-121">Par exemple, une classe de fichier dans une bibliothèque de classes sécurisée appelle <xref:System.Security.CodeAccessPermission.Demand%2A> pour nécessaires <xref:System.Security.Permissions.FileIOPermission> avant d’effectuer une opération de fichier demandée par l’appelant.</span><span class="sxs-lookup"><span data-stu-id="30690-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="30690-122">Bien que la plupart des classes qui implémentent cette méthode d’interface répondent aux critères de sécurité en effectuant un parcours de pile complet, un parcours de pile n’est pas nécessairement effectué.</span><span class="sxs-lookup"><span data-stu-id="30690-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="30690-123">Est un exemple d’une implémentation qui n’effectue pas un parcours de pile <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="30690-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="30690-124">Lorsqu’un parcours de pile est effectué, les autorisations du code qui appelle cette méthode ne sont pas examinées ; la vérification commence à partir de l’appelant immédiat de ce code et se déroule la pile.</span><span class="sxs-lookup"><span data-stu-id="30690-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="30690-125">La pile des appels est généralement représentée comme étant descendante, afin que le plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="30690-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="30690-126"><xref:System.Security.CodeAccessPermission.Demand%2A> réussit uniquement si aucune <xref:System.Security.SecurityException> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="30690-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="30690-127">Autorisation à croiser avec l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-127">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="30690-128">Elle doit être du même type que l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-128">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30690-129">Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30690-130">Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-130">A new permission that represents the intersection of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="30690-131">Cette nouvelle autorisation est <see langword="null" /> si l'intersection est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-131">This new permission is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30690-132">L’intersection de deux autorisations est une autorisation qui décrit l’ensemble des opérations qu’elles décrivent en commun.</span><span class="sxs-lookup"><span data-stu-id="30690-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="30690-133">Seule une demande qui passe les deux autorisations d’origine passera l’intersection.</span><span class="sxs-lookup"><span data-stu-id="30690-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="30690-134">Les instructions suivantes doivent avoir la valeur true pour toutes les implémentations de la <xref:System.Security.IPermission.Intersect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="30690-135">`X` et `Y` représentent <xref:System.Security.IPermission> références d’objet qui ne sont pas `null`.</span><span class="sxs-lookup"><span data-stu-id="30690-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="30690-136">`X`. Intersect (`X`) retourne une valeur égale à `X`.</span><span class="sxs-lookup"><span data-stu-id="30690-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="30690-137">`X`. Intersect (`Y`) retourne la même valeur que `Y`. Intersect (`X`).</span><span class="sxs-lookup"><span data-stu-id="30690-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="30690-138">`X`. Intersect (`null`) renvoie `null`.</span><span class="sxs-lookup"><span data-stu-id="30690-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30690-139">L’exemple de code suivant illustre l’implémentation du <xref:System.Security.IPermission.Intersect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="30690-140">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="30690-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30690-141">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas une instance de la même classe que l'autorisation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="30690-142">Autorisation qui doit être testée pour la relation de sous-ensemble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-142">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="30690-143">Cette autorisation doit être du même type que l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-143">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30690-144">Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-144">Determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30690-145">
            <see langword="true" /> si l'autorisation en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-145">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30690-146">L’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée si l’autorisation actuelle spécifie un ensemble d’opérations qui est entièrement contenu par l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="30690-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="30690-147">Par exemple, une autorisation qui représente l’accès à C:\example.txt est un sous-ensemble d’une autorisation qui représente l’accès à C:\\.</span><span class="sxs-lookup"><span data-stu-id="30690-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="30690-148">Si cette méthode retourne `true`, l’autorisation en cours ne représente pas plus d’accès à la ressource protégée que l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="30690-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="30690-149">Les instructions suivantes doivent avoir la valeur true pour toutes les implémentations de la <xref:System.Security.IPermission.IsSubsetOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="30690-150">`X`, `Y`, et `Z` représentent <xref:System.Security.IPermission> les objets qui ne sont pas `null`.</span><span class="sxs-lookup"><span data-stu-id="30690-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="30690-151">`X`. IsSubsetOf (`X`) renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="30690-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="30690-152">`X`. IsSubsetOf (`Y`) retourne la même valeur que `Y`. IsSubsetOf (`X`) si et seulement si `X` et `Y` représentent le même jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="30690-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="30690-153">Si `X`. IsSubsetOf (`Y`) et `Y`. IsSubsetOf (`Z`) retournent tous deux `true`, `X`. IsSubsetOf (`Z`) renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="30690-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="30690-154">Si `X` représente vide <xref:System.Security.IPermission> objet avec un état d’autorisation <xref:System.Security.Permissions.PermissionState.None> et `Y` représente un <xref:System.Security.IPermission> objet `null`, `X`. IsSubsetOf (`Y`) renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="30690-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="30690-155">Si `Z` est également une autorisation vide, l’opération de définition composée `X`. Union(Z). IsSubsetOf (y) retourne également `true` , car l’union de deux autorisations vides est une autorisation vide.</span><span class="sxs-lookup"><span data-stu-id="30690-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30690-156">L’exemple de code suivant illustre l’implémentation du <xref:System.Security.IPermission.IsSubsetOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="30690-157">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="30690-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30690-158">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="30690-159">Autorisation à combiner avec l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-159">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="30690-160">Elle doit être du même type que l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-160">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30690-161">Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-161">Creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30690-162">Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-162">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30690-163">Le résultat d’un appel à <xref:System.Security.IPermission.Union%2A> est une autorisation qui représente toutes les opérations représentées par l’autorisation actuelle et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="30690-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="30690-164">Toute demande qui transmet une autorisation passe leur union.</span><span class="sxs-lookup"><span data-stu-id="30690-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="30690-165">Les instructions suivantes doivent avoir la valeur true pour toutes les implémentations de la <xref:System.Security.IPermission.Union%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="30690-166">`X` et `Y` représentent <xref:System.Security.IPermission> les objets qui ne sont pas `null`.</span><span class="sxs-lookup"><span data-stu-id="30690-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="30690-167">`X`. Union (`X`) retourne un objet qui a la même valeur que `X`.</span><span class="sxs-lookup"><span data-stu-id="30690-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="30690-168">`X`. Union (`Y`) retourne un objet qui a la même valeur que l’objet retourné par `Y`. Union (`X`).</span><span class="sxs-lookup"><span data-stu-id="30690-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="30690-169">`X`. Union (`null`) retourne un objet qui a la même valeur que `X`.</span><span class="sxs-lookup"><span data-stu-id="30690-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30690-170">L’exemple de code suivant illustre l’implémentation du <xref:System.Security.IPermission.Union%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="30690-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="30690-171">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.IPermission> classe.</span><span class="sxs-lookup"><span data-stu-id="30690-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]  
  
-  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30690-172">Le paramètre <paramref name="target" /> n'est pas <see langword="null" /> et n'est pas du même type que l'autorisation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30690-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>