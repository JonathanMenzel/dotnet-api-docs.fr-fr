<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityElement.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c818d504196f12b9c0fb2d709edba0ae29cba89d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">818d504196f12b9c0fb2d709edba0ae29cba89d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">Représente le modèle d’objet XML pour l’encodage des objets de sécurité.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">Cette classe est destinée à être une implémentation légère d’un modèle d’objet XML simple à utiliser dans le système de sécurité et non en tant que modèle objet XML global.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This documentation assumes a basic knowledge of XML.</source>
          <target state="translated">Cette documentation suppose une connaissance de base du langage XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The simple XML object model for an element consists of the following parts:</source>
          <target state="translated">Le modèle d’objet XML simple pour un élément se compose des éléments suivants :</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tag is the element name.</source>
          <target state="translated">La balise est le nom de l’élément.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The attributes are zero or more name/value attribute pairs on the element.</source>
          <target state="translated">Les attributs sont zéro ou plusieurs des paires nom/valeur de l’élément.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The children are zero or more elements nested within <ph id="ph1">`&lt;tag&gt;`</ph> and <ph id="ph2">`&lt;/tag&gt;`</ph>.</source>
          <target state="translated">Les enfants sont zéro ou plusieurs éléments imbriqués entre <ph id="ph1">`&lt;tag&gt;`</ph> et <ph id="ph2">`&lt;/tag&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>It is strongly suggested that attribute based XML representation is used to express security elements and their values.</source>
          <target state="translated">Il est fortement recommandé que représentation sous forme de XML en fonction des attributs est utilisée pour exprimer des éléments de la sécurité et leurs valeurs.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This means properties of an element are expressed as attributes and property values are expressed as attribute values.</source>
          <target state="translated">Cela signifie que les propriétés d’un élément sont exprimées en tant qu’attributs et valeurs de propriété sont exprimées en tant que valeurs d’attribut.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Avoid nesting text within tags.</source>
          <target state="translated">Évitez d’imbriquer du texte dans les balises.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For any <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representation a representation of type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> is usually available.</source>
          <target state="translated">Pour toute <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> représentation une représentation de type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> est généralement disponible.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</source>
          <target state="translated">À l’aide de cette représentation XML basée sur les attributs améliore la lisibilité et permet la portabilité WMI de la sérialisation XML résultante.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>An attribute name must be one character or longer, and cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Un nom d’attribut doit comporter au moins un caractère et ne peut pas être <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>If element-based value representation is used, elements with a text string that is <ph id="ph1">`null`</ph> are represented in the <ph id="ph2">`&lt;tag/&gt;`</ph> form; otherwise, text is delimited by the <ph id="ph3">`&lt;tag&gt;`</ph> and <ph id="ph4">`&lt;/tag&gt;`</ph> tokens.</source>
          <target state="translated">Si la représentation sous forme de valeur basée sur l’élément est utilisé, les éléments avec le texte d’une chaîne qui est <ph id="ph1">`null`</ph> sont représentés dans le <ph id="ph2">`&lt;tag/&gt;`</ph> écran ; sinon, le texte est délimitée par le <ph id="ph3">`&lt;tag&gt;`</ph> et <ph id="ph4">`&lt;/tag&gt;`</ph> jetons.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Both forms can be combined with attributes, which are shown if present.</source>
          <target state="translated">Les deux formes peuvent être combinées avec des attributs, qui sont indiquées le cas échéant.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tags, attributes, and text of elements, if present, are always case-sensitive.</source>
          <target state="translated">Les balises, attributs et du texte des éléments, le cas échéant, respectent toujours la casse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The XML form contains quotations and escapes where necessary.</source>
          <target state="translated">Le format XML contient des guillemets et remplace le cas échéant.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>String values that include characters invalid for use in XML result in an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Une valeur de chaîne qui incluent des caractères non valides pour une utilisation dans XML un <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>These rules apply to all properties and methods.</source>
          <target state="translated">Ces règles s’appliquent à toutes les propriétés et méthodes.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</source>
          <target state="translated">Pour des raisons de performances, validité des caractères est uniquement vérifiée lors de l’élément est encodé au format texte XML et non dans chaque jeu d’une propriété ou méthode.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Static methods allow explicit checking where needed.</source>
          <target state="translated">Les méthodes statiques autorisent explicites de la vérification de la fonction des besoins.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The following example shows the use of members of the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">L’exemple suivant illustre l’utilisation des membres de la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The tag name of an XML element.</source>
          <target state="translated">Nom de balise d'un élément XML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> avec la balise spécifiée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">`tag`</ph> parameter must consist of a valid XML tag name.</source>
          <target state="translated">Le <ph id="ph1">`tag`</ph> paramètre doit être constituée d’un nom de balise XML valide.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> pour supprimer des caractères non valides à partir de la chaîne.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The following code shows the use of  the <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> object.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> constructeur pour créer un nouveau <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> n'est pas valide dans XML.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The tag name of the XML element.</source>
          <target state="translated">Nom de balise de l'élément XML.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The text content within the element.</source>
          <target state="translated">Texte contenu dans l'élément.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag and text.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> avec la balise et le texte spécifiés.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>If the <ph id="ph1">`text`</ph> parameter is <ph id="ph2">`null`</ph> this constructor produces an element identical to the default constructor.</source>
          <target state="translated">Si le <ph id="ph1">`text`</ph> paramètre est <ph id="ph2">`null`</ph> ce constructeur produit un élément identique au constructeur par défaut.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="text" /&gt;</ph> ne sont pas des paramètres valides dans XML.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The name of the attribute.</source>
          <target state="translated">Nom de l'attribut.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">Valeur de l'attribut.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Adds a name/value attribute to an XML element.</source>
          <target state="translated">Ajoute un attribut nom/valeur à un élément XML.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Names and values in attributes should only contain valid XML attribute characters.</source>
          <target state="translated">Noms et valeurs d’attributs doivent contenir uniquement des caractères d’attributs XML valides.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>XML attribute names must be unique.</source>
          <target state="translated">Noms des attributs XML doivent être uniques.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> pour supprimer des caractères non valides à partir de la chaîne.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">Il n’existe aucune prise en charge pour les chaînes entre guillemets, afin de chaînes pour les paires nom/valeur ne doivent pas contenir de guillemets ou d’autres caractères nécessitant une mise entre guillemets.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> method to add a name/value attribute to an XML element.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> méthode pour ajouter un attribut de nom/valeur à un élément XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> est <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ne sont pas des paramètres valides dans XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>An attribute with the name specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter already exists.</source>
          <target state="translated">Un attribut portant le nom spécifié par le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> existe déjà.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element to add.</source>
          <target state="translated">Élément enfant à ajouter.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>Adds a child element to the XML element.</source>
          <target state="translated">Ajoute un élément enfant à l'élément XML.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element is added following any previously existing child elements.</source>
          <target state="translated">L’élément enfant est ajouté après n’importe quel élément enfant existant.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> method to add a child element to the XML element.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> méthode pour ajouter un élément enfant à l’élément XML.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="child" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="child" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The name of the attribute for which to search.</source>
          <target state="translated">Nom de l'attribut à rechercher.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>Finds an attribute by name in an XML element.</source>
          <target state="translated">Recherche un attribut par nom dans un élément XML.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The value associated with the named attribute, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no attribute with <ph id="ph2">&lt;paramref name="name" /&gt;</ph> exists.</source>
          <target state="translated">Valeur associée à l'attribut nommé, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> s'il n'existe aucun attribut avec <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>With XML as follows, <ph id="ph1">`Attribute("B")`</ph> would return "456".</source>
          <target state="translated">Avec le code XML comme suit, <ph id="ph1">`Attribute("B")`</ph> va retourner « 456 ».</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> method to find an attribute by name.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> méthode pour rechercher un attribut par nom.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>Gets or sets the attributes of an XML element as name/value pairs.</source>
          <target state="translated">Obtient ou définit les attributs d'un élément XML en tant que paires de nom/valeur.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object for the attribute values of the XML element.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> pour les valeurs d'attributs de l'élément XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Each attribute is stored in the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> as a name/value pair.</source>
          <target state="translated">Chaque attribut est stocké dans le <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> comme une paire nom/valeur.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Names and values in attributes should contain only valid XML attribute characters.</source>
          <target state="translated">Noms et valeurs d’attributs doivent contenir uniquement des caractères d’attribut XML valides.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> pour supprimer des caractères non valides à partir de la chaîne.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">Il n’existe aucune prise en charge pour les chaînes entre guillemets, afin de chaînes pour les paires nom/valeur ne doivent pas contenir de guillemets ou d’autres caractères nécessitant une mise entre guillemets.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> property to get an attribute of an XML element.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> propriété à obtenir un attribut d’un élément XML.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name or value of the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object is invalid.</source>
          <target state="translated">Le nom ou la valeur de l'objet <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> n'est pas valide.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name is not a valid XML attribute name.</source>
          <target state="translated">Le nom n'est pas un nom d'attribut XML valide.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>Gets or sets the array of child elements of the XML element.</source>
          <target state="translated">Obtient ou définit le tableau des éléments enfants de l'élément XML.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The ordered child elements of the XML element as security elements.</source>
          <target state="translated">Les éléments enfants classés de l'élément XML en tant qu'éléments de sécurité.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contient à la fois <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> apparaît en premier.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> property to get the array of child elements of the XML element.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> propriété à obtenir le tableau des éléments enfants de l’élément XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>A child of the XML parent node is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un enfant du nœud parent XML est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>Creates and returns an identical copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">Crée et retourne une copie identique de l'objet <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>A copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">Copie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Copy">
          <source>The copy includes both the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> properties.</source>
          <target state="translated">La copie inclut à la fois le <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>An XML element object to which to compare the current XML element object.</source>
          <target state="translated">Objet élément XML auquel comparer l'objet élément XML en cours.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>Compares two XML element objects for equality.</source>
          <target state="translated">Compare si deux objets éléments XML sont égaux.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la balise, les noms et les valeurs d'attributs, les éléments enfants et les champs de texte de l'élément XML en cours sont identiques aux éléments correspondants dans le paramètre <ph id="ph2">&lt;paramref name="other" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>If there are child elements, comparison extends recursively to them.</source>
          <target state="translated">S’il existe des éléments enfants, comparaison s’étend de manière récursive à ceux-ci.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>There is no support for comparing different XML representations of the same characters.</source>
          <target state="translated">Il n’existe aucune prise en charge pour la comparaison de plusieurs représentations XML les mêmes caractères.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> method to compare two XML elements.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> méthode pour comparer deux éléments XML.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The string within which to escape invalid characters.</source>
          <target state="translated">Chaîne dans laquelle ignorer les caractères non valides.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaces invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">Remplace les caractères XML non valides dans une chaîne par leur équivalent XML valide.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The input string with invalid characters replaced.</source>
          <target state="translated">Chaîne d'entrée avec les caractères non valides remplacés.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Use this method to replace invalid characters in a string before using the string in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
          <target state="translated">Utilisez cette méthode pour remplacer des caractères non valides dans une chaîne avant d’utiliser la chaîne dans un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>If invalid characters are used in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> without being escaped, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">Si des caractères non valides sont utilisés dans un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> sans être ignorés, un <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following table shows the invalid XML characters and their escaped equivalents.</source>
          <target state="translated">Le tableau suivant présente les caractères XML non valides et leurs équivalents ignorés.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Invalid XML character</source>
          <target state="translated">Caractère XML non valide</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaced with</source>
          <target state="translated">Remplacé par</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> method to replace invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> méthode pour remplacer le code XML non valide de caractères dans une chaîne par leur équivalent XML valide.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>The XML-encoded string from which to create the security element.</source>
          <target state="translated">La chaîne codée en XML à partir de laquelle créer l’élément de sécurité.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Creates a security element from an XML-encoded string.</source>
          <target state="translated">Crée un élément de sécurité à partir d’une chaîne codée en XML.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> created from the XML.</source>
          <target state="translated">Un élément <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> créé à partir de la chaîne XML.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</source>
          <target state="translated">N’utilisez pas de guillemets simples dans la chaîne XML ; au lieu de cela, utilisez des guillemets doubles avec séquence d’échappement.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>For example, instead of "<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> use "<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</source>
          <target state="translated">Par exemple, au lieu de «<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> utiliser «<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</source>
          <target state="translated">À l’aide de guillemets simples peut provoquer une exception levée ou, dans certains cas, les guillemets simples qui est traités comme du texte dans la chaîne.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> contains one or more single quotation mark characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> contient un ou plusieurs caractères de guillemet simple.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The attribute name to test for validity.</source>
          <target state="translated">Nom d'attribut dont la validité doit être vérifiée.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>Determines whether a string is a valid attribute name.</source>
          <target state="translated">Détermine si une chaîne est un nom d'attribut valide.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter is a valid XML attribute name; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="name" /&gt;</ph> est un nom d'attribut XML valide ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Cette méthode peut être utilisée pour tester un attribut avant de l’ajouter à un élément de sécurité.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> method to determine whether a string is a valid attribute name.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> méthode pour déterminer si une chaîne est un nom d’attribut valide.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The attribute value to test for validity.</source>
          <target state="translated">Valeur d'attribut dont la validité doit être vérifiée.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>Determines whether a string is a valid attribute value.</source>
          <target state="translated">Détermine si une chaîne est une valeur d'attribut valide.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid XML attribute value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="value" /&gt;</ph> est une valeur d'attribut XML valide ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">Cette méthode peut être utilisée pour tester un attribut avant de l’ajouter à un élément de sécurité.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> method to determine whether a string is a valid attribute value.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> méthode pour déterminer si une chaîne est une valeur d’attribut valide.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The tag to test for validity.</source>
          <target state="translated">Balise dont la validité doit être vérifiée.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>Determines whether a string is a valid tag.</source>
          <target state="translated">Détermine si une chaîne est une balise valide.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> parameter is a valid XML tag; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> est une balise XML valide ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This can be used to test a <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> before setting it.</source>
          <target state="translated">Cela peut être utilisé pour tester un <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> avant de le définir.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> method to determine whether a string is a valid attribute tag.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> méthode pour déterminer si une chaîne est une balise d’attribut valide.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The text to test for validity.</source>
          <target state="translated">Texte dont la validité doit être vérifiée.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>Determines whether a string is valid as text within an XML element.</source>
          <target state="translated">Détermine si une chaîne correspond à du texte valide dans un élément XML.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is a valid XML text element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="text" /&gt;</ph> est un élément texte XML valide ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This method can be used to test <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> before setting it.</source>
          <target state="translated">Cette méthode peut être utilisée pour tester <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> avant de le définir.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> method to determine whether a string is valid as XML element text.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> méthode pour déterminer si une chaîne est valide en tant que texte de l’élément XML.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Balise à rechercher dans les éléments enfants.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>Finds a child by its tag name.</source>
          <target state="translated">Recherche un enfant par son nom de balise.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The first child XML element with the specified tag value, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no child element with <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> exists.</source>
          <target state="translated">Premier élément enfant XML ayant la valeur de balise spécifiée, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> s'il n'existe aucun élément enfant doté de la balise <ph id="ph2">&lt;paramref name="tag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForChildByTag("second")`</ph> would return the child element <ph id="ph2">`&lt;second&gt;`</ph>.</source>
          <target state="translated">Avec le code XML comme suit, <ph id="ph1">`SearchForChildByTag("second")`</ph> renvoie l’élément enfant <ph id="ph2">`&lt;second&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> method to find a child by its tag name.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> méthode pour rechercher un enfant par son nom de balise.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">Balise à rechercher dans les éléments enfants.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>Finds a child by its tag name and returns the contained text.</source>
          <target state="translated">Recherche un enfant par son nom de balise et retourne le texte qu'il contient.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The text contents of the first child element with the specified tag value.</source>
          <target state="translated">Texte contenu dans le premier élément enfant avec la valeur de balise spécifiée.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This method is equivalent to the following:</source>
          <target state="translated">Cette méthode est équivalente à la suivante :</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForTextOfTag("second")`</ph> would return "text2".</source>
          <target state="translated">Avec le code XML comme suit, <ph id="ph1">`SearchForTextOfTag("second")`</ph> retournerait « Texte2 ».</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> method to find a child by its tag name and return the contained text.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> méthode pour rechercher un enfant par son nom de balise et retourner le texte contenu.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>Gets or sets the tag name of an XML element.</source>
          <target state="translated">Obtient ou définit le nom de balise d'un élément XML.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag name of an XML element.</source>
          <target state="translated">Nom de balise d'un élément XML.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>In XML, the tag appears in the script as appears below:</source>
          <target state="translated">Dans XML, l’étiquette s’affiche dans le script comme suit :</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>If this element has child elements, the children will replace <ph id="ph1">`text`</ph>.</source>
          <target state="translated">Si cet élément a des éléments enfants, les enfants remplacent <ph id="ph1">`text`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Assign only valid XML tag strings to this property.</source>
          <target state="translated">Assignez uniquement des chaînes de balise XML valides à cette propriété.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> pour supprimer des caractères non valides à partir de la chaîne.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> property to get the tag name of an XML element.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> propriété à obtenir le nom de balise d’un élément XML.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La balise est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is not valid in XML.</source>
          <target state="translated">La balise n'est pas valide dans XML.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>Gets or sets the text within an XML element.</source>
          <target state="translated">Obtient ou définit le texte d'un élément XML.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The value of the text within an XML element.</source>
          <target state="translated">Valeur du texte d'un élément XML.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The text should not contain XML special characters.</source>
          <target state="translated">Le texte ne doit pas contenir les caractères spéciaux XML.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> pour supprimer des caractères non valides à partir de la chaîne.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contient à la fois <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> apparaît en premier.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> property to get the text of an XML element.</source>
          <target state="translated">Le code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> propriété à obtenir le texte d’un élément XML.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>The text is not valid in XML.</source>
          <target state="translated">Le texte n'est pas valide dans XML.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>Produces a string representation of an XML element and its constituent attributes, child elements, and text.</source>
          <target state="translated">Produit une représentation sous forme de chaîne d'un élément XML et les attributs, éléments enfants et texte qui la composent.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>The XML element and its contents.</source>
          <target state="translated">Élément XML et son contenu.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.ToString">
          <source>This method is useful in debugging to see the XML representation of the element.</source>
          <target state="translated">Cette méthode est utile dans le débogage pour afficher la représentation XML de l’élément.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>