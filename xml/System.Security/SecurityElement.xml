<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e416aa37fdd8c511588bc34cd3c8ebefa1182814" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39782228" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4702f-101">Représente le modèle d’objet XML pour l’encodage des objets de sécurité.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4702f-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="4702f-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4702f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-103">Cette classe est destinée à être une implémentation légère d’un modèle d’objet XML simple pour une utilisation au sein du système de sécurité et non en tant que modèle objet XML global.</span><span class="sxs-lookup"><span data-stu-id="4702f-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="4702f-104">Cette documentation suppose une connaissance de base de données XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="4702f-105">Le modèle d’objet XML simple pour un élément se compose des éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="4702f-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="4702f-106">La balise est le nom d’élément.</span><span class="sxs-lookup"><span data-stu-id="4702f-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="4702f-107">Les attributs sont zéro ou plusieurs paires d’attribut de nom/valeur sur l’élément.</span><span class="sxs-lookup"><span data-stu-id="4702f-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="4702f-108">Les enfants sont zéro ou plusieurs éléments imbriqués entre `<tag>` et `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="4702f-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="4702f-109">Il est fortement recommandé que représentation sous forme de XML basé sur les attributs est utilisé pour exprimer des éléments de la sécurité et leurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="4702f-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="4702f-110">Cela signifie que les propriétés d’un élément sont exprimées en tant qu’attributs et valeurs de propriété sont exprimées en tant que valeurs d’attribut.</span><span class="sxs-lookup"><span data-stu-id="4702f-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="4702f-111">Évitez d’imbriquer du texte dans les balises.</span><span class="sxs-lookup"><span data-stu-id="4702f-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="4702f-112">Pour toute `<tag>text</tag>` représentation une représentation de type `<tag value="text"/>` est généralement disponible.</span><span class="sxs-lookup"><span data-stu-id="4702f-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="4702f-113">À l’aide de cette représentation XML basé sur attribut améliore la lisibilité et permet la portabilité WMI de la sérialisation XML qui en résulte.</span><span class="sxs-lookup"><span data-stu-id="4702f-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="4702f-114">Un nom d’attribut doit comporter au moins un caractère et ne peut pas être `null`.</span><span class="sxs-lookup"><span data-stu-id="4702f-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="4702f-115">Si la représentation sous forme de valeur basée sur l’élément est utilisé, les éléments avec un texte de chaîne qui est `null` sont représentées dans le `<tag/>` formulaire ; sinon, le texte est délimité par le `<tag>` et `</tag>` jetons.</span><span class="sxs-lookup"><span data-stu-id="4702f-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="4702f-116">Les deux formes peuvent être combinées avec des attributs, qui sont présentées, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="4702f-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="4702f-117">Balises, des attributs et que le texte des éléments, le cas échéant, respectent toujours la casse.</span><span class="sxs-lookup"><span data-stu-id="4702f-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="4702f-118">Le format XML contient des guillemets et échappe lorsque cela est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="4702f-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="4702f-119">Les valeurs de chaîne qui incluent des caractères non valides pour une utilisation dans XML entraînent une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="4702f-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4702f-120">Ces règles s’appliquent à toutes les propriétés et méthodes.</span><span class="sxs-lookup"><span data-stu-id="4702f-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4702f-121">Pour des raisons de performances, validité des caractères est uniquement vérifiée lors de l’élément est encodé au format texte XML et non sur chaque ensemble d’une propriété ou méthode.</span><span class="sxs-lookup"><span data-stu-id="4702f-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="4702f-122">Méthodes statiques autorisent explicites de la vérification si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="4702f-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-123">L’exemple suivant illustre l’utilisation des membres de la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4702f-124">Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="4702f-125">Nom de balise d'un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-126">Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityElement" /> avec la balise spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-127">Le `tag` paramètre doit être constituée d’un nom de balise XML valide.</span><span class="sxs-lookup"><span data-stu-id="4702f-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="4702f-128">Utilisez <xref:System.Security.SecurityElement.Escape%2A> pour supprimer des caractères non valides à partir de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4702f-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-129">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.%23ctor%2A> constructeur pour créer un nouveau <xref:System.Security.SecurityElement> objet.</span><span class="sxs-lookup"><span data-stu-id="4702f-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="4702f-130">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-131">Le paramètre <paramref name="tag" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-132">Le paramètre <paramref name="tag" /> n'est pas valide dans XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="4702f-133">Nom de balise de l'élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="4702f-134">Texte contenu dans l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-135">Initialise une nouvelle instance de la classe <see cref="T:System.Security.SecurityElement" /> avec la balise et le texte spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-136">Si le `text` paramètre est `null` ce constructeur produit un élément identique au constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="4702f-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-137">Le paramètre <paramref name="tag" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-138">
            <paramref name="tag" /> ou <paramref name="text" /> ne sont pas des paramètres valides dans XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4702f-139">Nom de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4702f-140">Valeur de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-141">Ajoute un attribut nom/valeur à un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-142">Noms et valeurs d’attributs doivent contenir uniquement des caractères d’attribut XML valides.</span><span class="sxs-lookup"><span data-stu-id="4702f-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="4702f-143">Noms d’attributs XML doivent être uniques.</span><span class="sxs-lookup"><span data-stu-id="4702f-143">XML attribute names must be unique.</span></span> <span data-ttu-id="4702f-144">Utilisez <xref:System.Security.SecurityElement.Escape%2A> pour supprimer des caractères non valides à partir de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4702f-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="4702f-145">Il n’existe aucune prise en charge pour les chaînes entre guillemets, afin de chaînes pour les paires nom/valeur ne doivent pas contenir de guillemets ou d’autres caractères nécessitant une mise entre guillemets.</span><span class="sxs-lookup"><span data-stu-id="4702f-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-146">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.AddAttribute%2A> méthode pour ajouter un attribut de nom/valeur à un élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="4702f-147">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-148">Le paramètre <paramref name="name" /> ou <paramref name="value" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-149">
            <paramref name="name" /> ou <paramref name="value" /> ne sont pas des paramètres valides dans XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="4702f-150">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-150">-or-</span>
          </span>
          <span data-ttu-id="4702f-151">Un attribut portant le nom spécifié par le paramètre <paramref name="name" /> existe déjà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="4702f-152">Élément enfant à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-152">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-153">Ajoute un élément enfant à l'élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-153">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-154">L’élément enfant est ajouté après n’importe quel élément enfant existant.</span><span class="sxs-lookup"><span data-stu-id="4702f-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-155">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.AddChild%2A> pour ajouter un élément enfant à l’élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="4702f-156">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-157">Le paramètre <paramref name="child" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-157">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4702f-158">Nom de l'attribut à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-158">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-159">Recherche un attribut par nom dans un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-159">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-160">Valeur associée à l'attribut nommé, ou <see langword="null" /> s'il n'existe aucun attribut avec <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-161">Avec XML comme suit, `Attribute("B")` retournerait « 456 ».</span><span class="sxs-lookup"><span data-stu-id="4702f-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4702f-162">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Attribute%2A> méthode pour rechercher un attribut par nom.</span><span class="sxs-lookup"><span data-stu-id="4702f-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="4702f-163">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-164">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-164">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4702f-165">Obtient ou définit les attributs d'un élément XML en tant que paires de nom/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-165">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4702f-166">Objet <see cref="T:System.Collections.Hashtable" /> pour les valeurs d'attributs de l'élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-167">Chaque attribut est stocké dans le <xref:System.Collections.Hashtable> comme une paire nom/valeur.</span><span class="sxs-lookup"><span data-stu-id="4702f-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="4702f-168">Noms et valeurs d’attributs doivent contenir uniquement des caractères d’attribut XML valides.</span><span class="sxs-lookup"><span data-stu-id="4702f-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="4702f-169">Utilisez <xref:System.Security.SecurityElement.Escape%2A> pour supprimer des caractères non valides à partir de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4702f-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="4702f-170">Il n’existe aucune prise en charge pour les chaînes entre guillemets, afin de chaînes pour les paires nom/valeur ne doivent pas contenir de guillemets ou d’autres caractères nécessitant une mise entre guillemets.</span><span class="sxs-lookup"><span data-stu-id="4702f-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-171">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Attributes%2A> propriété à obtenir un attribut d’un élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="4702f-172">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4702f-173">Le nom ou la valeur de l'objet <see cref="T:System.Collections.Hashtable" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-174">Le nom n'est pas un nom d'attribut XML valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-174">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4702f-175">Obtient ou définit le tableau des éléments enfants de l'élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-175">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4702f-176">Les éléments enfants classés de l'élément XML en tant qu'éléments de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-176">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-177">Si un <xref:System.Security.SecurityElement> contient à la fois <xref:System.Security.SecurityElement.Text%2A> et <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> s’affichent en premier.</span><span class="sxs-lookup"><span data-stu-id="4702f-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-178">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Children%2A> propriété à obtenir le tableau d’éléments enfants de l’élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="4702f-179">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-180">Un enfant du nœud parent XML est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-180">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4702f-181">Crée et retourne une copie identique de l'objet <see cref="T:System.Security.SecurityElement" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-182">Copie de l'objet <see cref="T:System.Security.SecurityElement" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-183">La copie inclut à la fois le <xref:System.Security.SecurityElement.Children%2A> et <xref:System.Security.SecurityElement.Attributes%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="4702f-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="4702f-184">Objet élément XML auquel comparer l'objet élément XML en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-184">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-185">Compare si deux objets éléments XML sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-185">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-186">
            <see langword="true" /> si la balise, les noms et les valeurs d'attributs, les éléments enfants et les champs de texte de l'élément XML en cours sont identiques aux éléments correspondants dans le paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-186">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-187">S’il existe des éléments enfants, comparaison s’étend de manière récursive les.</span><span class="sxs-lookup"><span data-stu-id="4702f-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="4702f-188">Il n’existe aucune prise en charge pour la comparaison de différentes représentations XML des caractères.</span><span class="sxs-lookup"><span data-stu-id="4702f-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-189">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Equal%2A> méthode pour comparer deux éléments XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="4702f-190">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="4702f-191">Chaîne dans laquelle ignorer les caractères non valides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-191">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-192">Remplace les caractères XML non valides dans une chaîne par leur équivalent XML valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-193">Chaîne d'entrée avec les caractères non valides remplacés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-193">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-194">Utilisez cette méthode pour remplacer des caractères non valides dans une chaîne avant d’utiliser la chaîne dans un <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="4702f-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="4702f-195">Si les caractères non valides sont utilisés dans un <xref:System.Security.SecurityElement> sans être ignorés, un <xref:System.ArgumentException> est levée.</span><span class="sxs-lookup"><span data-stu-id="4702f-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="4702f-196">Le tableau suivant présente les caractères XML non valides et leurs équivalents avec séquence d’échappement.</span><span class="sxs-lookup"><span data-stu-id="4702f-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="4702f-197">Caractère XML non valide</span><span class="sxs-lookup"><span data-stu-id="4702f-197">Invalid XML character</span></span> | <span data-ttu-id="4702f-198">Remplacé par</span><span class="sxs-lookup"><span data-stu-id="4702f-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="4702f-199">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Escape%2A> méthode pour remplacer le code XML non valide de caractères dans une chaîne par leur équivalent XML valide.</span><span class="sxs-lookup"><span data-stu-id="4702f-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="4702f-200">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="4702f-201">La chaîne codée en XML à partir de laquelle créer l’élément de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-201">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-202">Crée un élément de sécurité à partir d’une chaîne codée en XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-202">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-203">Un élément <see cref="T:System.Security.SecurityElement" /> créé à partir de la chaîne XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-204">N’utilisez pas de guillemets simples dans la chaîne XML ; au lieu de cela, utilisez des guillemets doubles avec séquence d’échappement.</span><span class="sxs-lookup"><span data-stu-id="4702f-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="4702f-205">Par exemple, au lieu de «`<value name='Company'>Microsoft</value>"` utiliser «`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="4702f-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="4702f-206">À l’aide de guillemets simples peut provoquer une exception levée ou, dans certains cas, les guillemets simples qui est traités comme du texte dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4702f-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="4702f-207">
            <paramref name="xml" /> contient un ou plusieurs caractères de guillemet simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-207">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-208">
            <paramref name="xml" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-208">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4702f-209">Nom d'attribut dont la validité doit être vérifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-209">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-210">Détermine si une chaîne est un nom d'attribut valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-210">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-211">
            <see langword="true" /> si le paramètre <paramref name="name" /> est un nom d'attribut XML valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-211">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-212">Cette méthode peut être utilisée pour tester un attribut avant de l’ajouter à un élément de sécurité.</span><span class="sxs-lookup"><span data-stu-id="4702f-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-213">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.IsValidAttributeName%2A> méthode pour déterminer si une chaîne est un nom d’attribut valide.</span><span class="sxs-lookup"><span data-stu-id="4702f-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="4702f-214">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4702f-215">Valeur d'attribut dont la validité doit être vérifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-215">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-216">Détermine si une chaîne est une valeur d'attribut valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-216">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-217">
            <see langword="true" /> si le paramètre <paramref name="value" /> est une valeur d'attribut XML valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-217">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-218">Cette méthode peut être utilisée pour tester un attribut avant de l’ajouter à un élément de sécurité.</span><span class="sxs-lookup"><span data-stu-id="4702f-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-219">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> méthode pour déterminer si une chaîne est une valeur d’attribut valide.</span><span class="sxs-lookup"><span data-stu-id="4702f-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="4702f-220">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="4702f-221">Balise dont la validité doit être vérifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-221">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-222">Détermine si une chaîne est une balise valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-222">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-223">
            <see langword="true" /> si le paramètre <paramref name="tag" /> est une balise XML valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-223">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-224">Cela peut être utilisé pour tester un <xref:System.Security.SecurityElement.Tag%2A> avant de le définir.</span><span class="sxs-lookup"><span data-stu-id="4702f-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-225">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.IsValidTag%2A> méthode pour déterminer si une chaîne est une balise d’attribut valide.</span><span class="sxs-lookup"><span data-stu-id="4702f-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="4702f-226">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4702f-227">Texte dont la validité doit être vérifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-227">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-228">Détermine si une chaîne correspond à du texte valide dans un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-228">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-229">
            <see langword="true" /> si le paramètre <paramref name="text" /> est un élément texte XML valide ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-229">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-230">Cette méthode peut être utilisée pour tester <xref:System.Security.SecurityElement.Text%2A> avant de le définir.</span><span class="sxs-lookup"><span data-stu-id="4702f-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-231">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.IsValidText%2A> méthode pour déterminer si une chaîne est valide en tant que texte de l’élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="4702f-232">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="4702f-233">Balise à rechercher dans les éléments enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-233">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-234">Recherche un enfant par son nom de balise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-234">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-235">Premier élément enfant XML ayant la valeur de balise spécifiée, ou <see langword="null" /> s'il n'existe aucun élément enfant doté de la balise <paramref name="tag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-236">Avec XML comme suit, `SearchForChildByTag("second")` renvoie l’élément enfant `<second>`.</span><span class="sxs-lookup"><span data-stu-id="4702f-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4702f-237">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.SearchForChildByTag%2A> méthode pour rechercher un enfant par son nom de balise.</span><span class="sxs-lookup"><span data-stu-id="4702f-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="4702f-238">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-239">Le paramètre <paramref name="tag" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="4702f-240">Balise à rechercher dans les éléments enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-240">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4702f-241">Recherche un enfant par son nom de balise et retourne le texte qu'il contient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-241">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-242">Texte contenu dans le premier élément enfant avec la valeur de balise spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-242">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-243">Cette méthode est équivalente à la suivante :</span><span class="sxs-lookup"><span data-stu-id="4702f-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="4702f-244">Avec XML comme suit, `SearchForTextOfTag("second")` retournerait « Texte2 ».</span><span class="sxs-lookup"><span data-stu-id="4702f-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4702f-245">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> méthode pour rechercher un enfant par son nom de balise et retourner le texte contenu.</span><span class="sxs-lookup"><span data-stu-id="4702f-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="4702f-246">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-247">
            <paramref name="tag" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-247">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4702f-248">Obtient ou définit le nom de balise d'un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-248">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4702f-249">Nom de balise d'un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-249">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-250">Dans XML, la balise s’affiche dans le script comme suit :</span><span class="sxs-lookup"><span data-stu-id="4702f-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="4702f-251">Si cet élément possède des éléments enfants, les enfants remplacent `text`.</span><span class="sxs-lookup"><span data-stu-id="4702f-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="4702f-252">Affecter uniquement des chaînes de balise XML valides à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="4702f-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="4702f-253">Utilisez <xref:System.Security.SecurityElement.Escape%2A> pour supprimer des caractères non valides à partir de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4702f-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-254">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Tag%2A> propriété pour obtenir le nom de balise d’un élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="4702f-255">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4702f-256">La balise est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-256">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-257">La balise n'est pas valide dans XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-257">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4702f-258">Obtient ou définit le texte d'un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-258">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4702f-259">Valeur du texte d'un élément XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-259">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-260">Le texte ne doit pas contenir les caractères spéciaux XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="4702f-261">Utilisez <xref:System.Security.SecurityElement.Escape%2A> pour supprimer des caractères non valides à partir de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="4702f-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="4702f-262">Si un <xref:System.Security.SecurityElement> contient à la fois <xref:System.Security.SecurityElement.Text%2A> et <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> s’affichent en premier.</span><span class="sxs-lookup"><span data-stu-id="4702f-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4702f-263">Le code suivant illustre l’utilisation de la <xref:System.Security.SecurityElement.Text%2A> propriété à obtenir le texte d’un élément XML.</span><span class="sxs-lookup"><span data-stu-id="4702f-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="4702f-264">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.SecurityElement> classe.</span><span class="sxs-lookup"><span data-stu-id="4702f-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4702f-265">Le texte n'est pas valide dans XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-265">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4702f-266">Produit une représentation sous forme de chaîne d'un élément XML et les attributs, éléments enfants et texte qui la composent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4702f-267">Élément XML et son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4702f-267">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4702f-268">Cette méthode est utile lors du débogage pour afficher la représentation XML de l’élément.</span><span class="sxs-lookup"><span data-stu-id="4702f-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>