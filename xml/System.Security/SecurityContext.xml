<Type Name="SecurityContext" FullName="System.Security.SecurityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62fd0cb8e7ade5e4445cad3e94fcda21484e1435" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37461837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="227b5-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="227b5-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span>
      </span>
      <span data-ttu-id="227b5-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="227b5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-103">Un <xref:System.Security.SecurityContext> objet capture toutes les informations relatives à la sécurité pour un thread logique, y compris les informations contenues dans le <xref:System.Security.Principal.WindowsIdentity> et <xref:System.Threading.CompressedStack> objets.</span><span class="sxs-lookup"><span data-stu-id="227b5-103">A <xref:System.Security.SecurityContext> object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.</span></span>  <span data-ttu-id="227b5-104">Cette configuration permet à l’identité Windows et les éléments de sécurité sur la pile soient propagées automatiquement lorsque le <xref:System.Security.SecurityContext> est copié et transféré entre des threads asynchrones.</span><span class="sxs-lookup"><span data-stu-id="227b5-104">This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <xref:System.Security.SecurityContext> is copied and transferred across asynchronous threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="227b5-105">Le common language runtime (CLR) tient compte d’emprunt d’identité de l’appeler des opérations effectuées utilisant uniquement du code managé, pas de l’emprunt d’identité effectuée en dehors du code managé, telles que via la plateforme au code non managé ou via des appels directs aux fonctions Win32.</span><span class="sxs-lookup"><span data-stu-id="227b5-105">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="227b5-106">Managé <xref:System.Security.Principal.WindowsIdentity> objets peuvent être transmis entre des points asynchrones, à moins que le `alwaysFlowImpersonationPolicy` élément a été défini sur `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span><span class="sxs-lookup"><span data-stu-id="227b5-106">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="227b5-107">Définition de la `alwaysFlowImpersonationPolicy` élément `true` Spécifie que l’identité Windows est toujours transmise entre des points asynchrones, indépendamment du mode d’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="227b5-107">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="227b5-108">Pour plus d’informations sur la transmission non gérés d’emprunt d’identité entre des points asynchrones, consultez [ &lt;alwaysFlowImpersonationPolicy&gt; élément](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span><span class="sxs-lookup"><span data-stu-id="227b5-108">For more information about flowing unmanaged impersonation across asynchronous points, see [&lt;alwaysFlowImpersonationPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 <span data-ttu-id="227b5-109">Le <xref:System.Security.SecurityContext> est la partie la plus grande <xref:System.Threading.ExecutionContext> et circule ou migre lorsque le <xref:System.Threading.ExecutionContext> circule ou migre.</span><span class="sxs-lookup"><span data-stu-id="227b5-109">The <xref:System.Security.SecurityContext> is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="227b5-110">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="227b5-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="227b5-111">Lorsque vous avez fini d’utiliser le type, vous devez supprimer il directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="227b5-111">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="227b5-112">Pour supprimer le type directement, appelez sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="227b5-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="227b5-113">Pour supprimer indirectement, utiliser une construction de langage tel que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="227b5-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="227b5-114">Pour plus d’informations, consultez la section « À l’aide un objet qui implémente IDisposable » dans le <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="227b5-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityContext ^ Capture();" />
      <MemberSignature Language="F#" Value="static member Capture : unit -&gt; System.Security.SecurityContext" Usage="System.Security.SecurityContext.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-115">Captures the security context for the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-115">Captures the security context for the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227b5-116">The security context for the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-116">The security context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-117">Le contexte de sécurité capturé peut être appliqué à un autre thread.</span><span class="sxs-lookup"><span data-stu-id="227b5-117">The captured security context can be applied to another thread.</span></span> <span data-ttu-id="227b5-118">Le <xref:System.Security.SecurityContext> se compose de la <xref:System.Threading.CompressedStack> et <xref:System.Security.Principal.WindowsIdentity> pour le thread en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="227b5-118">The <xref:System.Security.SecurityContext> consists of the <xref:System.Threading.CompressedStack> and the <xref:System.Security.Principal.WindowsIdentity> for the executing thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="member this.CreateCopy : unit -&gt; System.Security.SecurityContext" Usage="securityContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-119">Creates a copy of the current security context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-119">Creates a copy of the current security context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227b5-120">The security context for the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-120">The security context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-121">Le contexte actuel doit avoir été acquis via une capture ou une opération de copie.</span><span class="sxs-lookup"><span data-stu-id="227b5-121">The current context must have been acquired through a capture or a copy operation.</span></span> <span data-ttu-id="227b5-122">Cette méthode est utile pour appliquer un capturée <xref:System.Security.SecurityContext> à plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="227b5-122">This method is useful for applying a captured <xref:System.Security.SecurityContext> to multiple threads.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="227b5-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-125">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Security.SecurityContext>.</span><span class="sxs-lookup"><span data-stu-id="227b5-125">Call `Dispose` when you are finished using the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="227b5-126">La méthode `Dispose` rend le <xref:System.Security.SecurityContext> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="227b5-126">The `Dispose` method leaves the <xref:System.Security.SecurityContext> in an unusable state.</span></span> <span data-ttu-id="227b5-127">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Security.SecurityContext> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Security.SecurityContext> occupée.</span><span class="sxs-lookup"><span data-stu-id="227b5-127">After calling `Dispose`, you must release all references to the <xref:System.Security.SecurityContext> so the garbage collector can reclaim the memory that the <xref:System.Security.SecurityContext> was occupying.</span></span>  
  
 <span data-ttu-id="227b5-128">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="227b5-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="227b5-129">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Security.SecurityContext>.</span><span class="sxs-lookup"><span data-stu-id="227b5-129">Always call `Dispose` before you release your last reference to the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="227b5-130">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Security.SecurityContext> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="227b5-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.SecurityContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-131">Determines whether the flow of the security context has been suppressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-131">Determines whether the flow of the security context has been suppressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227b5-132">
            <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-132">
              <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-133">Le <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> méthode est utilisée par les composants d’infrastructure pour déterminer s’il faut transférer le <xref:System.Security.SecurityContext> informations pendant les opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="227b5-133">The <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Security.SecurityContext> information during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowsIdentityFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsWindowsIdentityFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindowsIdentityFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindowsIdentityFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWindowsIdentityFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsWindowsIdentityFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227b5-135">
            <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-135">
              <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-136">Le <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> méthode est utilisée par les composants d’infrastructure pour déterminer s’il faut transférer les informations d’identité Windows lorsque le <xref:System.Security.SecurityContext> migre pendant des opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="227b5-136">The <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <xref:System.Security.SecurityContext> migrates during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberSignature Language="F#" Value="static member RestoreFlow : unit -&gt; unit" Usage="System.Security.SecurityContext.RestoreFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-137">Restores the flow of the security context across asynchronous threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-137">Restores the flow of the security context across asynchronous threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-138">Le <xref:System.Security.SecurityContext.RestoreFlow%2A> méthode est appelée par le <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> méthode pour inverser l’effet d’un avant <xref:System.Security.SecurityContext.SuppressFlow%2A> appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="227b5-138">The <xref:System.Security.SecurityContext.RestoreFlow%2A> method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> method to reverse the effect of a prior <xref:System.Security.SecurityContext.SuppressFlow%2A> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="227b5-139">The security context is <see langword="null" /> or an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-139">The security context is <see langword="null" /> or an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Security.SecurityContext securityContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Security::SecurityContext ^ securityContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member Run : System.Security.SecurityContext * System.Threading.ContextCallback * obj -&gt; unit" Usage="System.Security.SecurityContext.Run (securityContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContext" Type="System.Security.SecurityContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="securityContext">
          <span data-ttu-id="227b5-140">The security context to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-140">The security context to set.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="227b5-141">The delegate that represents the method to run in the specified security context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-141">The delegate that represents the method to run in the specified security context.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="227b5-142">The object to pass to the callback method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-142">The object to pass to the callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227b5-143">Runs the specified method in the specified security context on the current thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-143">Runs the specified method in the specified security context on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-144">Le contexte de sécurité pour le thread actuel est rétabli à son état précédent lorsque l’appel de méthode est terminé.</span><span class="sxs-lookup"><span data-stu-id="227b5-144">The security context for the current thread is returned to its previous state when the method call is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="227b5-145">L’exemple de code suivant montre comment utiliser le <xref:System.Security.SecurityContext.Run%2A> méthode à exécuter une méthode dans un contexte de sécurité spécifié.</span><span class="sxs-lookup"><span data-stu-id="227b5-145">The following code example shows how to use the <xref:System.Security.SecurityContext.Run%2A> method to execute a method in a specified security context.</span></span>  
  
 [!code-csharp[System.Security.SecurityContext.Run#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/CS/form1.cs#1)]
 [!code-vb[System.Security.SecurityContext.Run#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="227b5-146">
            <paramref name="securityContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-146">
              <paramref name="securityContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="227b5-147">-or-  <paramref name="securityContext" /> was not acquired through a capture operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-147">-or-  <paramref name="securityContext" /> was not acquired through a capture operation.</span>
          </span>
          <span data-ttu-id="227b5-148">-or-  <paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-148">-or-  <paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="227b5-149">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-149">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="227b5-150">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-150">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberSignature Language="F#" Value="static member SuppressFlow : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-151">Suppresses the flow of the security context across asynchronous threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-151">Suppresses the flow of the security context across asynchronous threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227b5-152">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-152">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-153">Utilisez cette méthode pour supprimer le flux de <xref:System.Security.SecurityContext> plus d’informations sur le thread actuel pour les opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="227b5-153">Use this method to suppress the flow of <xref:System.Security.SecurityContext> information on the current thread for asynchronous operations.</span></span>  
  
 <span data-ttu-id="227b5-154">Le common language runtime (CLR) est uniquement prenant en charge des opérations d’emprunt d’identité effectuées à l’aide de code managé.</span><span class="sxs-lookup"><span data-stu-id="227b5-154">The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</span></span> <span data-ttu-id="227b5-155">Le CLR n’a aucune connaissance d’emprunt d’identité effectué en dehors du code managé, telles que les appels de plateforme au code non managé qui effectue l’emprunt d’identité, ou via des appels aux fonctions Win32.</span><span class="sxs-lookup"><span data-stu-id="227b5-155">The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</span></span> <span data-ttu-id="227b5-156">Pour étendre l’identité entre des points asynchrones, vous devez utiliser managé <xref:System.Security.Principal.WindowsIdentity> et <xref:System.Security.Principal.WindowsImpersonationContext> méthodes.</span><span class="sxs-lookup"><span data-stu-id="227b5-156">To flow identity across asynchronous points you must use the managed <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Security.Principal.WindowsImpersonationContext> methods.</span></span>  
  
 <span data-ttu-id="227b5-157">Utilisez le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode sur retourné <xref:System.Threading.AsyncFlowControl> structure pour retourner le <xref:System.Security.SecurityContext> objet à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="227b5-157">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
 <span data-ttu-id="227b5-158">Cette méthode est protégée par un <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> pour <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> autorisation.</span><span class="sxs-lookup"><span data-stu-id="227b5-158">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="227b5-159">Un composant de niveau de confiance suffisant peut appeler cette méthode pour supprimer le flux de la <xref:System.Security.SecurityContext> informations pendant les appels asynchrones.</span><span class="sxs-lookup"><span data-stu-id="227b5-159">A fully trusted component can call this method to suppress the flow of the <xref:System.Security.SecurityContext> information during asynchronous calls.</span></span> <span data-ttu-id="227b5-160">Lorsque le flux est supprimé, le <xref:System.Security.SecurityContext.Capture%2A> retourne de la méthode `null`.</span><span class="sxs-lookup"><span data-stu-id="227b5-160">When the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="227b5-161">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-161">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="227b5-162">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-162">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlowWindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlowWindowsIdentity () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlowWindowsIdentity();" />
      <MemberSignature Language="F#" Value="static member SuppressFlowWindowsIdentity : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlowWindowsIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227b5-163">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-163">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227b5-164">A structure for restoring the flow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-164">A structure for restoring the flow.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227b5-165">Utilisez cette méthode pour supprimer le flux de l’identité Windows lorsque le <xref:System.Security.SecurityContext> migre sur des threads asynchrones.</span><span class="sxs-lookup"><span data-stu-id="227b5-165">Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.</span></span>  
  
 <span data-ttu-id="227b5-166">Utilisez le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode sur retourné <xref:System.Threading.AsyncFlowControl> structure pour retourner le <xref:System.Security.SecurityContext> objet à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="227b5-166">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="227b5-167">Le common language runtime (CLR) tient compte d’emprunt d’identité de l’appeler des opérations effectuées utilisant uniquement du code managé, pas de l’emprunt d’identité effectuée en dehors du code managé, telles que via la plateforme au code non managé ou via des appels directs aux fonctions Win32.</span><span class="sxs-lookup"><span data-stu-id="227b5-167">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="227b5-168">Managé <xref:System.Security.Principal.WindowsIdentity> objets peuvent être transmis entre des points asynchrones, à moins que le `alwaysFlowImpersonationPolicy` élément a été défini sur `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span><span class="sxs-lookup"><span data-stu-id="227b5-168">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="227b5-169">Définition de la `alwaysFlowImpersonationPolicy` élément `true` Spécifie que l’identité Windows est toujours transmise entre des points asynchrones, indépendamment du mode d’emprunt d’identité.</span><span class="sxs-lookup"><span data-stu-id="227b5-169">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="227b5-170">Pour plus d’informations sur la transmission non gérés d’emprunt d’identité entre des points asynchrones, consultez [ \<alwaysFlowImpersonationPolicy > élément](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span><span class="sxs-lookup"><span data-stu-id="227b5-170">For more information about flowing unmanaged impersonation across asynchronous points, see [\<alwaysFlowImpersonationPolicy> Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="227b5-171">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-171">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="227b5-172">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227b5-172">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>