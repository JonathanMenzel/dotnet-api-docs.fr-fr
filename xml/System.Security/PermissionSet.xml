<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PermissionSet.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ef50fe48167ee95c6b53105e01d8ef0b244f9361.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef50fe48167ee95c6b53105e01d8ef0b244f9361</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">Représente une collection qui peut contenir de nombreux types d’autorisations différents.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>You can use <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> to perform operations on several different permissions as a group.</source>
          <target state="translated">Vous pouvez utiliser <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> pour effectuer des opérations sur plusieurs autorisations différentes en tant que groupe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class and members.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe et les membres.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.PermissionSet">
          <source>for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</source>
          <target state="translated">Pour que les héritiers soient entièrement fiables ou dans un assembly est signé avec Microsoft <ph id="ph1">&lt;see cref="T:System.Security.Policy.StrongName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Security.PermissionSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">Une des valeurs d’énumération qui spécifie l’accès du jeu d’autorisations aux ressources.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> avec le <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface, while <ph id="ph3">`None`</ph> allows no permissions.</source>
          <target state="translated">Le <ph id="ph1">`Unrestricted`</ph> état qui permet à toutes les autorisations qui implémentent la <ph id="ph2">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface, tandis que <ph id="ph3">`None`</ph> n’autorise aucune autorisation.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> on an empty <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to define the set in greater detail.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> sur vide <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> pour définir le jeu de manière plus détaillée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> constructor to create a permission set with a permission state of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.%23ctor%2A&gt;</ph> constructeur pour créer une autorisation définie avec un état d’autorisation <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
          <source>The <ph id="ph1">&lt;paramref name="state" /&gt;</ph> parameter is not a valid <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="state" /&gt;</ph> n'est pas un <ph id="ph2">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> valide.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The set from which to take the value of the new <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to create an empty <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Jeu à partir duquel prendre la valeur du nouveau <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> pour créer un <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> class with initial values taken from the <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph> parameter.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> avec des valeurs initiales provenant du paramètre <ph id="ph2">&lt;paramref name="permSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>The new <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains copies of the permissions contained in the specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">La nouvelle <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contient des copies des autorisations contenues dans le texte spécifié <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
          <source>This is equivalent to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Cela est équivalent à <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> lors de la <ph id="ph2">`permSet`</ph> paramètre n’est pas <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">Autorisation à ajouter.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Ajoute une autorisation spécifiée à l’élément <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Union de l’autorisation ajoutée et de toute autorisation du même type qui existe déjà dans l’élément <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Si une autorisation du même type que l’autorisation ajoutée déjà existe dans le <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, la nouvelle autorisation est l’union de l’objet d’autorisation existant et de l’objet d’autorisation spécifié.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Par exemple, si une autorisation qui implémente <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> est ajouté à un <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, l’union qui en résulte est la version d’origine <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method to add a permission to a permission set.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> méthode pour ajouter une autorisation à un jeu d’autorisations.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">La méthode est appelée depuis un <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, vous pouvez modifier le comportement de la <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /&gt;</ph> méthode en remplaçant le <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The permission to add.</source>
          <target state="translated">Autorisation à ajouter.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>Adds a specified permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Ajoute une autorisation spécifiée à l’élément <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The union of the permission added and any permission of the same type that already exists in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Union de l’autorisation ajoutée et de toute autorisation du même type qui existe déjà dans l’élément <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si <ph id="ph3">&lt;paramref name="perm" /&gt;</ph> est <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.PermissionSet.AddPermissionImpl%2A&gt;</ph> méthode est l’implémentation pour la <ph id="ph2">&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>If a permission of the same type as the added permission already exists in the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">Si une autorisation du même type que l’autorisation ajoutée déjà existe dans le <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>, la nouvelle autorisation est l’union de l’objet d’autorisation existant et de l’objet d’autorisation spécifié.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>For example, if a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is added to an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, the resulting union is the original <ph id="ph4">`Unrestricted`</ph><ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Par exemple, si une autorisation qui implémente <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> est ajouté à un <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>, l’union qui en résulte est la version d’origine <ph id="ph4">`Unrestricted`</ph> <ph id="ph5">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">La méthode est appelée depuis un <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">Déclare que le code appelant peut accéder à la ressource protégée par une demande d’autorisation via le code qui appelle cette méthode, même si les appelants situés plus haut dans la pile n’ont pas reçu l’autorisation d’accéder à la ressource.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>Using <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> can create security vulnerabilities.</source>
          <target state="translated">L’utilisation de <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> permet de créer des failles de sécurité.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> can be active on a frame.</source>
          <target state="translated">C’est la seule façon de déclarer plusieurs autorisations en même temps dans un frame, car seul <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> peut être actif sur un frame.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> is only effective for granted permissions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> n’est efficace pour les autorisations accordées.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Call the <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> method to cancel an active <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType&gt;</ph> méthode pour annuler un actif <ph id="ph3">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">Étant donné que l’appel de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.Assert%2A&gt;</ph> supprime de la méthode l’exigence que tout le code dans la chaîne d’appel doit être autorisé à accéder à la ressource spécifiée, il peut ouvrir des failles de sécurité si l’utilisation incorrecte ou inappropriée.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Assert">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">Par conséquent, elle doit être utilisée avec précaution.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> instance asserted has not been granted to the asserting code.</source>
          <target state="translated">L’instance <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> déclarée n’a pas été octroyée au code d’assertion.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Assert">
          <source>There is already an active <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Il existe déjà un <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Assert" /&gt;</ph> actif pour l’image actuelle.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contient des autorisations qui ne sont pas dérivées de <ph id="ph2">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contains permissions that are not derived from <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> contient des autorisations qui ne sont pas dérivées de <ph id="ph3">&lt;see cref="T:System.Security.CodeAccessPermission" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Chaîne représentant un des formats d’encodage suivants : ASCII, Unicode ou binaire.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">Les valeurs possibles sont « XMLASCII » ou « XML », « XMLUNICODE » et « BINARY ».</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An XML-encoded permission set.</source>
          <target state="translated">Jeu d’autorisations encodé en XML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">Chaîne représentant un des formats d’encodage suivants : ASCII, Unicode ou binaire.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">Les valeurs possibles sont « XMLASCII » ou « XML », « XMLUNICODE » et « BINARY ».</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Converts an encoded <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">Convertit un objet <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> encodé d’un format d’encodage XML vers un autre.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">Jeu d’autorisations chiffré selon le format de sortie spécifié.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>Do not use this method.</source>
          <target state="translated">N'utilisez pas cette méthode.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
          <source>In all cases.</source>
          <target state="translated">Dans tous les cas.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>Creates a copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Crée une copie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Copie de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>A copy of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> represents the same access to resources as the original object.</source>
          <target state="translated">Une copie d’un <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> représente le même accès aux ressources de l’objet d’origine.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">Les modifications apportées à la copie n’affectent pas le jeu d’autorisations d’origine.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> method to create a copy of a permission set.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.Copy%2A&gt;</ph> méthode pour créer une copie d’un jeu d’autorisations.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Copy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The target array to which to copy.</source>
          <target state="translated">Tableau destinataire de la copie.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">Position dans le tableau à laquelle doit commencer la copie (base zéro).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>Copies the permission objects of the set to the indicated location in an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated">Copie les objets d’autorisation du jeu à l’emplacement indiqué dans un <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="array" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> parameter has more than one dimension.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="array" /&gt;</ph> possède plusieurs dimensions.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> parameter is out of the range of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> parameter.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est en dehors de la plage du paramètre <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.Count">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">Obtient le nombre d’objets d’autorisation contenus dans le jeu d’autorisations.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The number of permission objects contained in the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Nombre d’objets d’autorisation contenus dans le <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated">Dans le <ph id="ph1">`None`</ph> ou <ph id="ph2">`Unrestricted`</ph> d’état retourne zéro, car aucune instance d’objet réelle d’autorisation n’est utilisées.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> property to get the number of permission objects in a permission set.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.Count%2A&gt;</ph> propriété à obtenir le nombre d’objets d’autorisation dans un jeu d’autorisations.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.Count">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>Forces a <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">Force une <ph id="ph1">&lt;see cref="T:System.Security.SecurityException" /&gt;</ph> au moment de l’exécution si les premiers appelants de la pile des appels n’ont pas reçu les autorisations spécifiées par l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>Use <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> sur un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> pour vous assurer que tous les appelants ont toutes les autorisations dans le jeu en une seule opération.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">Les autorisations du code qui appelle cette méthode ne sont pas examinées ; la vérification commence à partir de l’appelant immédiat de ce code et se déroule la pile.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">La pile des appels est généralement représentée comme étant descendante, afin que le plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> succeeds only if no <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> réussit uniquement si aucune <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>If the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contains permissions that do not inherit from <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, the <ph id="ph3">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> contient des autorisations qui n’héritent pas de <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>, le <ph id="ph3">`Demand`</ph> méthodes de ces autorisations sont également appelées.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> method to demand all the permissions in a permission set.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> méthode pour demander toutes les autorisations dans un jeu d’autorisations.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Demand">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Demand">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">Un appelant de la chaîne d’appel ne dispose pas de l’autorisation requise.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Entraîne l’échec de tout <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> qui passe par le code appelant pour une autorisation qui possède une intersection avec une autorisation d’un type contenu dans le <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">Cette méthode empêche les appelants situés plus haut dans la pile des appels d’accéder à la ressource protégée via le code qui appelle cette méthode, même si les appelants ont reçu l’autorisation d’y accéder.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">La pile des appels est généralement représentée comme étant descendante, afin que le plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> from being used to access the resource protected by the denied permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> peut limiter la responsabilité du programmeur ou éviter de failles de sécurité accidentelle, car elle contribue à empêcher la méthode qui appelle <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> d’être utilisé pour accéder à la ressource protégée par l’autorisation refusée.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source>If a method calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> on a permission, and if a <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</source>
          <target state="translated">Si une méthode appelle <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> sur une autorisation et si un <ph id="ph2">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> pour cette autorisation est appelée par un appelant plus bas dans la pile des appels, cette vérification de sécurité échoue lorsqu’elle atteint la <ph id="ph3">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Deny">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> est ignoré pour une autorisation qui n’est pas accordée, car une demande concernant cette autorisation ne peut pas réussir.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Deny">
          <source>A previous call to <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> has already restricted the permissions for the current stack frame.</source>
          <target state="translated">Un appel précédent à <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Deny" /&gt;</ph> a déjà limité les autorisations pour le frame de pile actuel.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Objet à comparer au <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actif.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> object is equal to the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Détermine si l’objet <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph> spécifié est égal au <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet spécifié est égal à l'objet <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">L’égalité est déterminée par les autorisations contenues dans la jeu d’autorisations spécifié par <ph id="ph1">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source><ph id="ph1">`obj`</ph> can be either a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> peut être un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> objet ou un <ph id="ph3">&lt;xref:System.Security.NamedPermissionSet&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>If <ph id="ph1">`obj`</ph> is a <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, the name and description are ignored.</source>
          <target state="translated">Si <ph id="ph1">`obj`</ph> est un <ph id="ph2">&lt;xref:System.Security.NamedPermissionSet&gt;</ph>, le nom et la description sont ignorés.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Equals(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.FromXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="et" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter is not a valid permission element.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="et" /&gt;</ph> n'est pas un élément d'autorisation valide.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="et" /&gt;</ph> parameter's version number is not supported.</source>
          <target state="translated">Le numéro de version du paramètre <ph id="ph1">&lt;paramref name="et" /&gt;</ph> n'est pas pris en charge.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Retourne un énumérateur pour les autorisations de l’ensemble.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Objet énumérateur pour les autorisations de l’ensemble.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">Utilisez l’énumérateur comme index pour accéder aux objets d’autorisation individuels dans le jeu.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method to list all the permissions in a permission set.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> méthode pour répertorier toutes les autorisations dans un jeu d’autorisations.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumerator">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> method.</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, vous pouvez modifier le comportement de la <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetEnumerator" /&gt;</ph> méthode en remplaçant le <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">Retourne un énumérateur pour les autorisations de l’ensemble.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">Objet énumérateur pour les autorisations de l’ensemble.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetEnumeratorImpl">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetEnumeratorImpl%2A&gt;</ph> méthode est l’implémentation pour la <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>Gets a hash code for the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">Obtient un code de hachage pour l’objet <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> object.</source>
          <target state="translated">Code de hachage pour l’objet <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetHashCode">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> objects.</source>
          <target state="translated">Le code de hachage de deux instances du même jeu d’autorisations peut être différent, un code de hachage ne doit pas être utilisé pour comparer deux <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The type of the desired permission object.</source>
          <target state="translated">Type de l’objet d’autorisation souhaité.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Obtient un objet d’autorisation du type spécifié, s’il existe dans le jeu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>A copy of the permission object of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Copie de l'objet d'autorisation du type spécifié par le paramètre <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> contenu dans <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> si cet objet n'existe pas.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">La méthode retourne <ph id="ph1">`null`</ph> pour un <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Bien qu’un <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> efficacement contient toutes les autorisations, il n’a pas aucune instance réelle à retourner.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, vous pouvez modifier le comportement de la <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /&gt;</ph> méthode en remplaçant le <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The type of the permission object.</source>
          <target state="translated">Type de l’objet d’autorisation.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">Obtient un objet d’autorisation du type spécifié, s’il existe dans le jeu.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>A copy of the permission object, of the type specified by the <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> parameter, contained in the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">Copie de l'objet d'autorisation du type spécifié par le paramètre <ph id="ph1">&lt;paramref name="permClass" /&gt;</ph> dans <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> si cet objet n'existe pas.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.PermissionSet.GetPermissionImpl%2A&gt;</ph> méthode est l’implémentation pour la <ph id="ph2">&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph><ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">La méthode retourne <ph id="ph1">`null`</ph> pour un <ph id="ph2">`Unrestricted`</ph> <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
          <source>Although an <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated">Bien qu’un <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> efficacement contient toutes les autorisations, il n’a pas aucune instance réelle à retourner.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A permission set to intersect with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Jeu d'autorisations à croiser avec le <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Creates and returns a permission set that is the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Crée et retourne un jeu d'autorisations qui est l'intersection entre le <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> en cours et le <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>A new permission set that represents the intersection of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified target.</source>
          <target state="translated">Nouveau jeu d'autorisations qui représente l'intersection entre le <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel et la cible spécifiée.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This object is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the intersection is empty.</source>
          <target state="translated">Si l'intersection est vide, cet objet est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">L’intersection de deux jeux d’autorisations est un jeu d’autorisations qui décrit l’ensemble des opérations qu’elles décrivent en commun.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">Plus précisément, elle représente les autorisations minimales telles que toute demande passant les deux autorisations définit également passe leur intersection.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Pour chaque type d’autorisation qui n’est présente dans les deux jeux, les deux instances de ces autorisations sont mis en correspondance à l’aide de l’autorisation <ph id="ph1">`Intersect`</ph> méthode ; l’autorisation obtenue est incluse dans la boîte <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">Types d’autorisation qui existent dans un seul des deux jeux sont exclus du jeu obtenu.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.Intersect%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> est vide ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> peut être vide et néanmoins contenir des instances d’autorisations si ces autorisations sont en état totalement restreint.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsEmpty">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">Les autorisations sont en état totalement restreint si leurs <ph id="ph1">`IsSubsetOf`</ph> méthodes retournent <ph id="ph2">`true`</ph> lorsque <ph id="ph3">`null`</ph> est passé en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si la collection est en lecture seule.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Toujours <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> cannot be read-only, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> ne peut pas être en lecture seule, de sorte que cette propriété est toujours <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant affiche la valeur retournée par la <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsReadOnly%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">Jeu d’autorisations à tester pour la relation de sous-ensemble.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This must be either a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</source>
          <target state="translated">Il doit s'agir d'un <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> ou d'un <ph id="ph2">&lt;see cref="T:System.Security.NamedPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Détermine si le <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel est un sous-ensemble du <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is a subset of the <ph id="ph3">&lt;paramref name="target" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel est un sous-ensemble du paramètre <ph id="ph3">&lt;paramref name="target" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> is a subset of the target <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> if all demands that succeed for the <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> also succeed for the target.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> est un sous-ensemble de la cible de <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> si toutes les demandes qui aboutissent pour le <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> aboutissent également pour la cible.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">Autrement dit, la cible contient au moins les autorisations contenues dans le sous-ensemble.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSubsetOf%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">Obtient une valeur indiquant si la collection est garantie thread-safe.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Toujours <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> does not automatically handle thread safety, so this property is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> ne gère pas automatiquement sécurité des threads, cette propriété a toujours <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Cette méthode est requise pour prendre en charge <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>The following code example shows the value returned by the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant affiche la valeur retournée par la <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsSynchronized%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.IsSynchronized">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Détermine si <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> est <ph id="ph2">&lt;see langword="Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> is <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> est <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph> ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>An <ph id="ph1">`Unrestricted`</ph><ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> effectively contains all permissions that implement the <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</source>
          <target state="translated">Un <ph id="ph1">`Unrestricted`</ph> <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> efficacement contient toutes les autorisations qui implémentent le <ph id="ph3">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.IsUnrestricted%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.IsUnrestricted">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Causes any <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> that passes through the calling code for any <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is not a subset of the current <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> to fail.</source>
          <target state="translated">Provoque l'échec de tout <ph id="ph1">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph> qui passe par le code appelant pour tout <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> qui n'est pas un sous-ensemble du <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is similar to <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> est semblable à <ph id="ph2">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph>, dans la mesure où les deux font des parcours de pile échouent lorsqu’ils devraient normalement réussir.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The difference is that <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> specifies permissions that will cause the stack walk to fail, but <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">La différence est que <ph id="ph1">&lt;xref:System.Security.PermissionSet.Deny%2A&gt;</ph> spécifie les autorisations qui provoqueront l’échec, le parcours de pile mais <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> spécifie les seules autorisations qui ne provoquent pas l’échec du parcours de pile.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">Appelez cette méthode pour vous assurer que votre code peut être utilisé pour accéder uniquement aux ressources spécifiées.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> est ignoré pour une autorisation refusée, car une demande concernant cette autorisation ne peut pas réussir.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>However, if code lower on the call stack later calls <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> for that permission, a <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the stack walk reaches the code that tried to call <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</source>
          <target state="translated">Toutefois, si le code plus bas dans l’appel de pile ultérieurement les appels <ph id="ph1">&lt;xref:System.Security.PermissionSet.Demand%2A&gt;</ph> pour cette autorisation, un <ph id="ph2">&lt;xref:System.Security.SecurityException&gt;</ph> est levée lorsque le parcours de pile atteint le code qui a tenté d’appeler <ph id="ph3">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>This is because the code that called <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> has not been granted the permission, even though it called <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> for that permission.</source>
          <target state="translated">C’est parce que le code qui a appelé <ph id="ph1">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> n’a pas reçu l’autorisation, même s’il a appelé <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> pour cette autorisation.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.PermitOnly">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">La pile des appels est généralement représentée comme étant descendante, afin que le plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The type of permission to delete.</source>
          <target state="translated">Type d’autorisation à supprimer.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Supprime du jeu une autorisation d’un certain type.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">Autorisation supprimée du jeu.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">Vous ne pouvez pas supprimer des autorisations à partir d’un jeu d’autorisations illimitées.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">Le jeu d’autorisations demeure non restreint une fois que vous tentez de supprimer l’autorisation, et une exception n’est levée.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following C# code attempts to remove the <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from the <ph id="ph2">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">Le code c# suivant tente de supprimer le <ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> à partir de la <ph id="ph2">`FullTrust`</ph> de jeu d’autorisations, mais l’autorisation n’est pas supprimée.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method to remove a <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> from a permission set.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> méthode pour supprimer un <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> à partir d’une autorisation définie.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">La méthode est appelée depuis un <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermission(System.Type)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, vous pouvez modifier le comportement de la <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /&gt;</ph> méthode en remplaçant le <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The type of the permission to remove.</source>
          <target state="translated">Type de l’autorisation à supprimer.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">Supprime du jeu une autorisation d’un certain type.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission removed from the set.</source>
          <target state="translated">Autorisation supprimée du jeu.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.PermissionSet.RemovePermissionImpl%2A&gt;</ph> méthode est l’implémentation pour la <ph id="ph2">&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">Vous ne pouvez pas supprimer des autorisations à partir d’un jeu d’autorisations illimitées.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">Le jeu d’autorisations demeure non restreint une fois que vous tentez de supprimer l’autorisation, et une exception n’est levée.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">La méthode est appelée depuis un <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>Causes any previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">Provoque la suppression et la désactivation du <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> précédent pour le frame en cours.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>If there is no <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> for the current frame, an <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> is thrown.</source>
          <target state="translated">S’il existe aucune <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> pour le frame actuel, un <ph id="ph2">&lt;xref:System.ExecutionEngineException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.RevertAssert">
          <source>There is no previous <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> for the current frame.</source>
          <target state="translated">Il n'existe aucun <ph id="ph1">&lt;see cref="M:System.Security.CodeAccessPermission.Assert" /&gt;</ph> précédent pour le frame en cours.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">Autorisation à définir.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Définit une autorisation à <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> en remplaçant toute autorisation existante du même type.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">Autorisation définie.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Cette méthode supprime tout objet d’autorisation existant du même type à partir de la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> et la remplace par la <ph id="ph2">`perm`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Si une autorisation qui implémente <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> est définie sur une <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> qui est <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, résultant <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> n’est plus <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">La méthode est appelée depuis un <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, you can change the behavior of the <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> method by overriding the <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> method.</source>
          <target state="translated">Lorsque vous héritez de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, vous pouvez modifier le comportement de la <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /&gt;</ph> méthode en remplaçant le <ph id="ph3">&lt;see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The permission to set.</source>
          <target state="translated">Autorisation à définir.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>Sets a permission to the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>, replacing any existing permission of the same type.</source>
          <target state="translated">Définit une autorisation à <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> en remplaçant toute autorisation existante du même type.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The set permission.</source>
          <target state="translated">Autorisation définie.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> method is the implementation for the <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Security.PermissionSet.SetPermissionImpl%2A&gt;</ph> méthode est l’implémentation pour la <ph id="ph2">&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>This method removes any existing permission object of the same type from the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> and replaces it with the <ph id="ph2">`perm`</ph> parameter.</source>
          <target state="translated">Cette méthode supprime tout objet d’autorisation existant du même type à partir de la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> et la remplace par la <ph id="ph2">`perm`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>If a permission that implements <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the resulting <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> is no longer <ph id="ph5">`Unrestricted`</ph>.</source>
          <target state="translated">Si une autorisation qui implémente <ph id="ph1">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> est définie sur une <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> qui est <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, résultant <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph> n’est plus <ph id="ph5">`Unrestricted`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
          <source>The method is called from a <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</source>
          <target state="translated">La méthode est appelée depuis un <ph id="ph1">&lt;see cref="T:System.Security.ReadOnlyPermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">Obtient l’objet racine de la collection actuelle.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The root object of the current collection.</source>
          <target state="translated">Objet racine de la collection actuelle.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This method is required to support <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Cette méthode est requise pour prendre en charge <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> property to get the root object of the current collection.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de <ph id="ph1">&lt;xref:System.Security.PermissionSet.SyncRoot%2A&gt;</ph> propriété à obtenir l’objet racine de la collection actuelle.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.PermissionSet.SyncRoot">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The object that initiated the callback.</source>
          <target state="translated">Objet qui a initié le rappel.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">La fonctionnalité pour ce paramètre n'est pas implémentée actuellement.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">S'exécute une fois que le graphique d'objets est complètement désérialisé.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>Returns a string representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Retourne une représentation sous forme de chaîne de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToString">
          <source>A representation of the <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Représentation de <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The string representation is useful in debugging to see the state of a <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">La représentation sous forme de chaîne est utile pendant le débogage pour vérifier l’état d’un <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToString%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">Crée un codage XML de l’objet de sécurité et de son état actuel.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.ToXml">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.ToXml%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.ToXml">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The permission set to form the union with the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Jeu d'autorisations à unir au <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> that is the union of the current <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> qui est l'union du <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel et du <ph id="ph3">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>A new permission set that represents the union of the current <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> and the specified <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph>.</source>
          <target state="translated">Nouveau jeu d'autorisations qui représente l'union entre le <ph id="ph1">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> actuel et le <ph id="ph2">&lt;see cref="T:System.Security.PermissionSet" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that represents all the operations represented by the current <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> as well as all the operations represented by the specified <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
          <target state="translated">Le résultat d’un appel à <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> est un <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> qui représente toutes les opérations représentées par les <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> , ainsi que toutes les opérations représentées par le <ph id="ph4">&lt;xref:System.Security.PermissionSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">Si l’ensemble est <ph id="ph1">`Unrestricted`</ph>, l’union est <ph id="ph2">`Unrestricted`</ph> également.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Security.PermissionSet.Union%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>