<Type Name="SecureStringMarshal" FullName="System.Security.SecureStringMarshal">
  <TypeSignature Language="C#" Value="public static class SecureStringMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SecureStringMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureStringMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class SecureStringMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStringMarshal abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51971-101">Fournit une collection de méthodes pour l’allocation de mémoire non managée et la copie de blocs de mémoire non managée.</span><span class="sxs-lookup"><span data-stu-id="51971-101">Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="51971-102">Objet managé à copier.</span><span class="sxs-lookup"><span data-stu-id="51971-102">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="51971-103">Copie le contenu d’un objet <see cref="T:System.Security.SecureString" /> managé dans un bloc de mémoire alloué à partir de l’allocateur de tâche COM non managé.</span><span class="sxs-lookup"><span data-stu-id="51971-103">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="51971-104">Adresse, dans la mémoire non managée, où le paramètre <paramref name="s" /> a été copié, ou 0 si un objet null a été fourni.</span><span class="sxs-lookup"><span data-stu-id="51971-104">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51971-105">Le <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A> méthode est utile pour le marshaling personnalisé ou lorsque mélange de code managé et.</span><span class="sxs-lookup"><span data-stu-id="51971-105">The <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="51971-106">Étant donné que cette méthode alloue la mémoire non managée requise pour une chaîne, vous devez toujours libérer la mémoire en appelant <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="51971-106">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="51971-107">Les caractères de la chaîne sont copiés en tant que caractères ANSI.</span><span class="sxs-lookup"><span data-stu-id="51971-107">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51971-108">Le paramètre <paramref name="s" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51971-108">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51971-109">L’ordinateur actuel n’exécute pas Windows 2000 Service Pack 3 ou une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-109">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="51971-110">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="51971-110">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51971-111">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="51971-111">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51971-112">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="51971-112">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="51971-113">Cette méthode est prise en charge uniquement sur les ordinateurs exécutant Windows 2000 Service Pack 3 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-113">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="51971-114">Objet managé à copier.</span><span class="sxs-lookup"><span data-stu-id="51971-114">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="51971-115">Copie le contenu d’un objet <see cref="T:System.Security.SecureString" /> managé dans un bloc de mémoire alloué à partir de l’allocateur de tâche COM non managé.</span><span class="sxs-lookup"><span data-stu-id="51971-115">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="51971-116">Adresse, dans la mémoire non managée, où le paramètre <paramref name="s" /> a été copié, ou 0 si un objet null a été fourni.</span><span class="sxs-lookup"><span data-stu-id="51971-116">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51971-117">Le <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A> méthode est utile pour le marshaling personnalisé ou lorsque mélange de code managé et.</span><span class="sxs-lookup"><span data-stu-id="51971-117">The <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="51971-118">Étant donné que cette méthode alloue la mémoire non managée requise pour une chaîne, vous devez toujours libérer la mémoire en appelant le <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51971-118">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="51971-119">Les caractères de la chaîne sont copiés en tant que caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="51971-119">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51971-120">Le paramètre <paramref name="s" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51971-120">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51971-121">L’ordinateur actuel n’exécute pas Windows 2000 Service Pack 3 ou une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-121">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="51971-122">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="51971-122">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51971-123">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="51971-123">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51971-124">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="51971-124">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="51971-125">Cette méthode est prise en charge uniquement sur les ordinateurs exécutant Windows 2000 Service Pack 3 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-125">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="51971-126">Objet managé à copier.</span><span class="sxs-lookup"><span data-stu-id="51971-126">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="51971-127">Copie le contenu d’un objet <see cref="T:System.Security.SecureString" /> managé dans la mémoire non managée, avec conversion au format ANSI pendant la copie.</span><span class="sxs-lookup"><span data-stu-id="51971-127">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span></span></summary>
        <returns><span data-ttu-id="51971-128">Adresse (dans la mémoire non managée) où le paramètre <paramref name="s" /> a été copié, ou 0 si un objet null a été fourni.</span><span class="sxs-lookup"><span data-stu-id="51971-128">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51971-129">Le <xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A> méthode est utile pour le marshaling personnalisé ou lorsque mélange de code managé et.</span><span class="sxs-lookup"><span data-stu-id="51971-129">The <xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="51971-130">Étant donné que cette méthode alloue la mémoire non managée requise pour une chaîne, vous devez toujours libérer la mémoire en appelant le <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="51971-130">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51971-131">Le paramètre <paramref name="s" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51971-131">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51971-132">L’ordinateur actuel n’exécute pas Windows 2000 Service Pack 3 ou une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-132">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="51971-133">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="51971-133">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="51971-134">requiert une confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="51971-134">requires full trust for the immediate caller.</span></span> <span data-ttu-id="51971-135">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span><span class="sxs-lookup"><span data-stu-id="51971-135">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage">
          <para><span data-ttu-id="51971-136">Cette méthode est prise en charge uniquement sur les ordinateurs exécutant Windows 2000 Service Pack 3 ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-136">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="51971-137">Objet managé à copier.</span><span class="sxs-lookup"><span data-stu-id="51971-137">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="51971-138">Copie le contenu d’un objet <see cref="T:System.Security.SecureString" /> managé dans la mémoire non managée.</span><span class="sxs-lookup"><span data-stu-id="51971-138">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="51971-139">Adresse, dans la mémoire non managée, où <paramref name="s" /> a été copié, ou 0 si <paramref name="s" /> est un objet <see cref="T:System.Security.SecureString" /> dont la longueur est 0.</span><span class="sxs-lookup"><span data-stu-id="51971-139">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51971-140">Le paramètre <paramref name="s" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51971-140">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51971-141">L’ordinateur actuel n’exécute pas Windows 2000 Service Pack 3 ou une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="51971-141">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="51971-142">Il n’y a pas suffisamment de mémoire disponible.</span><span class="sxs-lookup"><span data-stu-id="51971-142">There is insufficient memory available.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>