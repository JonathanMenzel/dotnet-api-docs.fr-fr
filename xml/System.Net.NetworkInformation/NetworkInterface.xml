<Type Name="NetworkInterface" FullName="System.Net.NetworkInformation.NetworkInterface">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a49d55b998949ac7ba1d3af751b8cb35f2f904e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class NetworkInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NetworkInterface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.NetworkInterface" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NetworkInterface" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkInterface abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="67644-101">Fournit des informations statistiques et de configuration pour une interface réseau.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67644-101">Provides configuration and statistical information for a network interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-102">Cette classe encapsule les données pour les interfaces réseau, également appelés adaptateurs, sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-102">This class encapsulates data for network interfaces, also known as adapters, on the local computer.</span></span> <span data-ttu-id="67644-103">Vous ne créez pas d’instances de cette classe ; le <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> méthode retourne un tableau qui contient une instance de cette classe pour chaque interface réseau sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-103">You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-104">L’exemple de code suivant affiche des informations sur les interfaces.</span><span class="sxs-lookup"><span data-stu-id="67644-104">The following code example displays information about interfaces.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]
 [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="67644-105">pour l’exécution de code non managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="67644-105">for executing unmanaged code.</span>
      </span>
      <span data-ttu-id="67644-106">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="67644-106">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NetworkInterface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-107">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-107">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-108">Ce constructeur peut être appelé uniquement par les classes qui dérivent de la <xref:System.Net.NetworkInformation.NetworkInterface> classe.</span><span class="sxs-lookup"><span data-stu-id="67644-108">This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-109">Obtient la description de l'interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-109">Gets the description of the interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-110">
            <see cref="T:System.String" /> qui décrit cette interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-110">A <see cref="T:System.String" /> that describes this interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-111">La description est un texte explicite qui décrit l’interface réseau.</span><span class="sxs-lookup"><span data-stu-id="67644-111">The description is human-readable text that describes the network interface.</span></span> <span data-ttu-id="67644-112">Les informations incluses dans la description varient selon les fonctionnalités du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="67644-112">The information included in the description depends on the capabilities of the operating system.</span></span>  <span data-ttu-id="67644-113">Sous Windows, il décrit en général le fournisseur de l’interface type (par exemple, Ethernet), marque et modèle.</span><span class="sxs-lookup"><span data-stu-id="67644-113">On Windows, it typically describes the interface vendor, type (for example, Ethernet), brand, and model.</span></span> <span data-ttu-id="67644-114">Sur d’autres plateformes, il peut être aussi courte que le nom de l’interface, tel que `eth0`.</span><span class="sxs-lookup"><span data-stu-id="67644-114">On other platforms, it may be as brief as the name of the interface, such as `eth0`.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="67644-115">L’exemple de code suivant affiche un résumé de toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-115">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNetworkInterfaces">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllNetworkInterfaces () As NetworkInterface()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::NetworkInformation::NetworkInterface ^&gt; ^ GetAllNetworkInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterface[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-116">Retourne des objets qui décrivent les interfaces réseau de l'ordinateur local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-116">Returns objects that describe the network interfaces on the local computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-117">Tableau <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> qui contient des objets qui décrivent les interfaces réseau disponibles ou tableau vide si aucune interface n'est détectée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-117">A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-118">Les interfaces réseau sur un ordinateur fournissent la connectivité réseau.</span><span class="sxs-lookup"><span data-stu-id="67644-118">The network interfaces on a computer provide network connectivity.</span></span> <span data-ttu-id="67644-119">Interfaces réseau sont également appelées cartes réseau.</span><span class="sxs-lookup"><span data-stu-id="67644-119">Network interfaces are also known as network adapters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-120">L’exemple de code suivant affiche des informations de configuration de Service DNS (Domain Name) pour les cartes réseau de l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-120">The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.</span></span>  
  
 [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">
          <span data-ttu-id="67644-121">Une fonction système Windows a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-121">A Windows system function call failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPProperties">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPProperties () As IPInterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceProperties ^ GetIPProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-122">Retourne un objet qui décrit la configuration de cette interface réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-122">Returns an object that describes the configuration of this network interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-123">Objet <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> qui décrit cette interface réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-123">An <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> object that describes this network interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-124">Notez que les informations contenues dans l’objet retourné par cette méthode reflètent les interfaces à l’heure de que création du tableau.</span><span class="sxs-lookup"><span data-stu-id="67644-124">Note that the information in the object returned by this method reflects the interfaces as of the time the array is created.</span></span> <span data-ttu-id="67644-125">Ces informations ne sont pas mis à jour dynamiquement.</span><span class="sxs-lookup"><span data-stu-id="67644-125">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-126">L’exemple de code suivant affiche des informations pour les cartes réseau de l’ordinateur local qui prennent en charge IPv4.</span><span class="sxs-lookup"><span data-stu-id="67644-126">The following code example displays information for the local computer's network adapters that support IPv4.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPStatistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPStatistics () As IPInterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceStatistics ^ GetIPStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-127">Récupère les statistiques IP pour cette instance de <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-127">Gets the IP statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-128">Retourne <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-128">Returns <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span>
          </span>
          <span data-ttu-id="67644-129">Statistiques IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-129">The IP statistics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Statistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv4Statistics () As IPv4InterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPv4InterfaceStatistics ^ GetIPv4Statistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-130">Récupère les statistiques IPv4 pour cette instance de <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-130">Gets the IPv4 statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-131">Objet <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-131">An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsNetworkAvailable">
      <MemberSignature Language="C#" Value="public static bool GetIsNetworkAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsNetworkAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsNetworkAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsNetworkAvailable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-132">Indique si une connexion réseau est disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-132">Indicates whether any network connection is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-133">
            <see langword="true" /> si une connexion réseau est disponible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-133">
              <see langword="true" /> if a network connection is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-134">Est considéré comme une connexion réseau est disponible si une interface réseau est marqué comme « vers le haut » et n’est pas une interface de bouclage ou de tunnel.</span><span class="sxs-lookup"><span data-stu-id="67644-134">A network connection is considered to be available if any network interface is marked "up" and is not a loopback or tunnel interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhysicalAddress">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPhysicalAddress () As PhysicalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::PhysicalAddress ^ GetPhysicalAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PhysicalAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67644-135">Retourne l'adresse MAC (Media Access Control) ou physique de cet adaptateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-135">Returns the Media Access Control (MAC) or physical address for this adapter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-136">Objet <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> qui contient l'adresse physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-136">A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object that contains the physical address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-137">L’objet retourné par cette méthode contient une adresse qui est adaptée au média utilisé pour transporter des données dans la couche de liaison de données.</span><span class="sxs-lookup"><span data-stu-id="67644-137">The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer.</span></span> <span data-ttu-id="67644-138">Par exemple, sur un réseau Ethernet, cette méthode retourne l’adresse matérielle Ethernet.</span><span class="sxs-lookup"><span data-stu-id="67644-138">For example, on an Ethernet network, this method returns the Ethernet hardware address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-139">L’exemple de code suivant affiche les adresses physiques de toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-139">The following code example displays the physical addresses of all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-140">Obtient l'identificateur de la carte réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-140">Gets the identifier of the network adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-141">
            <see cref="T:System.String" /> qui contient l'identificateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-141">A <see cref="T:System.String" /> that contains the identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPv6LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int IPv6LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IPv6LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IPv6LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-142">Obtient l'index de l'interface de bouclage IPv6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-142">Gets the index of the IPv6 loopback interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-143">Retourne <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-143">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="67644-144">Index de l'interface de bouclage IPv6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-144">The index for the IPv6 loopback interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-145">Une interface réseau peut avoir des index d’interface différente de l’interface de bouclage IPv4 et IPv6.</span><span class="sxs-lookup"><span data-stu-id="67644-145">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="67644-146">La propriété P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex retourne uniquement l’interface de bouclage IPv6.</span><span class="sxs-lookup"><span data-stu-id="67644-146">The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="IsReceiveOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReceiveOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReceiveOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReceiveOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReceiveOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-147">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si l'interface réseau est configurée pour recevoir uniquement des paquets de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is set to only receive data packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-148">
            <see langword="true" /> si l'interface reçoit uniquement du trafic réseau ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-148">
              <see langword="true" /> if the interface only receives network traffic; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67644-149">L’exemple de code suivant affiche un résumé de toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-149">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="67644-150">Cette propriété n’est pas valide sur les ordinateurs exécutant des systèmes d’exploitation antérieurs à Windows XP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-150">This property is not valid on computers running operating systems earlier than Windows XP.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-151">Obtient l'index de l'interface de bouclage IPv4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-151">Gets the index of the IPv4 loopback interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-152">
            <see cref="T:System.Int32" /> qui contient l'index de l'interface de bouclage IPv4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-152">A <see cref="T:System.Int32" /> that contains the index for the IPv4 loopback interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-153">L’index de l’interface de bouclage est généralement 1, mais vous ne pouvez pas compter sur ce.</span><span class="sxs-lookup"><span data-stu-id="67644-153">The index of the loopback interface is usually 1, but you cannot rely on this.</span></span> <span data-ttu-id="67644-154">Utilisez le <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> propriété à obtenir la valeur correcte.</span><span class="sxs-lookup"><span data-stu-id="67644-154">Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.</span></span>  
  
 <span data-ttu-id="67644-155">Une interface réseau peut avoir des index d’interface différente de l’interface de bouclage IPv4 et IPv6.</span><span class="sxs-lookup"><span data-stu-id="67644-155">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="67644-156">Le <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> propriété renvoie uniquement l’interface de bouclage IPv4.</span><span class="sxs-lookup"><span data-stu-id="67644-156">The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">
          <span data-ttu-id="67644-157">Cette propriété n'est pas valide sur les ordinateurs qui exécutent Ipv6 uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-157">This property is not valid on computers running only Ipv6.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-158">Obtient le nom de la carte réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-158">Gets the name of the network adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-159">
            <see cref="T:System.String" /> qui contient le nom de la carte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-159">A <see cref="T:System.String" /> that contains the adapter name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67644-160">L’exemple de code suivant affiche un résumé de toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-160">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaceType">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NetworkInterfaceType As NetworkInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::NetworkInterfaceType NetworkInterfaceType { System::Net::NetworkInformation::NetworkInterfaceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-161">Obtient le type d'interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-161">Gets the interface type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-162">Valeur <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> qui spécifie le type d'interface réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-162">An <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> value that specifies the network interface type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-163">Les types d’interface sont décrits en détail dans le <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> documentation de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="67644-163">The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> enumeration documentation.</span></span>  

 <span data-ttu-id="67644-164">En principe, cette propriété peut retourner un membre de la <xref:System.Net.NetworkInformation.NetworkInterfaceType> énumération.</span><span class="sxs-lookup"><span data-stu-id="67644-164">In principle, this property can return any member of the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration.</span></span> <span data-ttu-id="67644-165">Il retourne la valeur spécifique est dépendante sur les conditions d’exécution de la topologie du réseau sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="67644-165">The specific value that it does return is dependent on the runtime conditions of the underlying network topology.</span></span> <span data-ttu-id="67644-166">Cela signifie que :</span><span class="sxs-lookup"><span data-stu-id="67644-166">This means that:</span></span>
 
 - <span data-ttu-id="67644-167">Il n’est pas possible de déterminer à l’avance dont la valeur de la propriété retourne pour un réseau particulier.</span><span class="sxs-lookup"><span data-stu-id="67644-167">It is not possible to determine in advance which value the property returns for a particular network.</span></span>
 
 - <span data-ttu-id="67644-168">Il est possible que dans la pratique sur un réseau particulier, la gamme complète des valeurs d’énumération n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="67644-168">It is possible that in practice on a particular network, the full range of enumeration values is not available.</span></span> <span data-ttu-id="67644-169">Par exemple, sur un réseau gigabit Ethernet, il est possible que la propriété retourne <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> plutôt que <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="67644-169">For example, on a gigabit Ethernet network, it is possible that the property returns <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> rather than <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span></span>

## Examples  
 <span data-ttu-id="67644-170">L’exemple suivant affiche des informations de type pour toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-170">The following example displays type information for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationalStatus">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.OperationalStatus OperationalStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OperationalStatus As OperationalStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::OperationalStatus OperationalStatus { System::Net::NetworkInformation::OperationalStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.OperationalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-171">Obtient l'état opérationnel actuel de la connexion réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-171">Gets the current operational state of the network connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-172">Une des valeurs de <see cref="T:System.Net.NetworkInformation.OperationalStatus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-172">One of the <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-173">Les valeurs d’état opérationnel sont décrites en détail dans le <xref:System.Net.NetworkInformation.OperationalStatus> documentation de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="67644-173">The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-174">L’exemple de code suivant affiche un résumé de toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-174">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual long Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Speed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Speed { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-175">Obtient la vitesse de l'interface réseau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-175">Gets the speed of the network interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-176">Valeur <see cref="T:System.Int64" /> qui spécifie la vitesse en bits par seconde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-176">A <see cref="T:System.Int64" /> value that specifies the speed in bits per second.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-177">La valeur retournée par cette propriété est signalée par l’interface réseau.</span><span class="sxs-lookup"><span data-stu-id="67644-177">The value returned by this property is reported by the network interface.</span></span> <span data-ttu-id="67644-178">Il n’est pas calculée dynamiquement.</span><span class="sxs-lookup"><span data-stu-id="67644-178">It is not computed dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-179">L’exemple de code suivant illustre l’affichage de la vitesse des interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-179">The following code example demonstrates displaying the speed of interfaces on the local computer.</span></span>  
  
 [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]
 [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]
 [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceComponent">
          <span data-ttu-id="67644-180">Valeur <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-180">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67644-181">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si l'interface prend en charge le protocole spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-181">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface supports the specified protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67644-182">
            <see langword="true" /> si le protocole spécifié est pris en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-182">
              <see langword="true" /> if the specified protocol is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67644-183">L’exemple de code suivant affiche les statistiques pour les interfaces IPV4 sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-183">The following code example displays statistics for IPV4 interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67644-184">Obtient une valeur <see cref="T:System.Boolean" /> qui indique si l'interface réseau est autorisée à recevoir des paquets de multidiffusion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-184">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is enabled to receive multicast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67644-185">
            <see langword="true" /> si l'interface reçoit des paquets de multidiffusion ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-185">
              <see langword="true" /> if the interface receives multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67644-186">La multidiffusion est le fait de l’envoi d’un paquet de données à plusieurs destinations simultanément.</span><span class="sxs-lookup"><span data-stu-id="67644-186">Multicasting is the act of sending a data packet to multiple destinations simultaneously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67644-187">L’exemple de code suivant affiche un résumé de toutes les interfaces sur l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="67644-187">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="67644-188">Cette propriété n’est pas valide sur les ordinateurs exécutant des systèmes d’exploitation antérieurs à Windows XP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="67644-188">This property is not valid on computers running operating systems earlier than Windows XP.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>