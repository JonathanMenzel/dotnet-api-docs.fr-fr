<Type Name="IPGlobalProperties" FullName="System.Net.NetworkInformation.IPGlobalProperties">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1322796a8046282ca8cdd212dd485f6ba38204e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39958959" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IPGlobalProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IPGlobalProperties extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.IPGlobalProperties" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IPGlobalProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPGlobalProperties abstract" />
  <TypeSignature Language="F#" Value="type IPGlobalProperties = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des informations sur la connectivité réseau de l'ordinateur local.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe fournit des informations de configuration et statistiques sur les interfaces réseau et les connexions réseau de l’ordinateur local.  
  
 Les informations fournies par cette classe sont similaires à celle fournie par les fonctions d’API d’assistance IP. Pour plus d’informations sur l’application d’assistance du protocole Internet, consultez la documentation dans MSDN Library.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations sur l’ordinateur local à l’aide d’une instance de cette classe.  
  
 [!code-cpp[NclNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]
 [!code-csharp[NclNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]
 [!code-vb[NclNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IPGlobalProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IPGlobalProperties();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur peut être appelé uniquement par les classes dérivées de <xref:System.Net.NetworkInformation.IPGlobalProperties>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetUnicastAddresses (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetUnicastAddresses(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetUnicastAddresses (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetUnicastAddresses(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetUnicastAddresses : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetUnicastAddresses : AsyncCallback * obj -&gt; IAsyncResult" Usage="iPGlobalProperties.BeginGetUnicastAddresses (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Objet qui contient les informations d’état de cette demande.</param>
        <summary>Débute une requête asynchrone pour récupérer la table des adresses IP monodiffusion stable sur l'ordinateur local.</summary>
        <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour prendre en charge les connexions sortantes ou pour accepter les connexions entrantes sur une interface Teredo, applications doivent garantir que l’interface Teredo est disponible et prêt à l’emploi. Il s’agit, car Teredo peut être placé dans un état dormant lorsqu’il est ne pas utilisé pendant un certain temps.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> méthode permet à une application récupérer la liste des adresses IP monodiffusion stable de façon asynchrone. Le <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriété peut être utilisée pour déterminer si une adresse IP est une adresse Teredo IPv6 avec le préfixe de 2001 :: / 32.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> méthode retourne également non Teredo adresses et offre un moyen plus pratique pour obtenir la monodiffusion des adresses IP pour un système que l’énumération de tous les <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objets sur un ordinateur local et en interrogeant les adresses IP associées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée sur la plateforme. Cette méthode utilise la fonction <see langword="NotifyStableUnicastIpAddressTable" /> native prise en charge sur Windows Vista et versions ultérieures.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">L'appel à la fonction <see langword="NotifyStableUnicastIpAddressTable" /> native a échoué.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="DhcpScopeName">
      <MemberSignature Language="C#" Value="public abstract string DhcpScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DhcpScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DhcpScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DhcpScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DhcpScopeName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de portée DHCP (Dynamic Host Configuration Protocol).</summary>
        <value>Instance <see cref="T:System.String" /> qui contient le nom de portée DHCP de l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une étendue DHCP est un groupement administratif des ordinateurs en réseau qui se trouvent sur le même sous-réseau.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de réseau pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Un appel de fonction Win32 a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public abstract string DomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.DomainName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DomainName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.DomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le domaine dans lequel l'ordinateur local est enregistré.</summary>
        <value>Instance <see cref="T:System.String" /> qui contient le nom de domaine de l'ordinateur. Si l'ordinateur n'appartient pas à un domaine, retourne <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche des informations de réseau pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Un appel de fonction Win32 a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetUnicastAddresses (asyncResult As IAsyncResult) As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ EndGetUnicastAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetUnicastAddresses : IAsyncResult -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection&#xA;override this.EndGetUnicastAddresses : IAsyncResult -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="iPGlobalProperties.EndGetUnicastAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</param>
        <summary>Termine une requête asynchrone en attente pour récupérer la table des adresses IP monodiffusion stable sur l'ordinateur local.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour prendre en charge les connexions sortantes ou pour accepter les connexions entrantes sur une interface Teredo, applications doivent garantir que l’interface Teredo est disponible et prêt à l’emploi. Il s’agit, car Teredo peut être placé dans un état dormant lorsqu’il est ne pas utilisé pendant un certain temps.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> méthode permet à une application récupérer la liste des adresses IP monodiffusion stable de façon asynchrone. Le <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriété peut être utilisée pour déterminer si une adresse IP est une adresse Teredo IPv6 avec le préfixe de 2001 :: / 32.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> méthode termine une requête asynchrone en attente pour récupérer la table des adresses IP monodiffusion stable.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> méthode retourne également non Teredo adresses et offre un moyen plus pratique pour obtenir la monodiffusion des adresses IP pour un système que l’énumération de tous les <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objets sur un ordinateur local et en interrogeant les adresses IP associées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction <see langword="GetAdaptersAddresses" /> native a échoué.</exception>
        <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée sur la plateforme. Cette méthode utilise la fonction <see langword="NotifyStableUnicastIpAddressTable" /> native prise en charge sur Windows Vista et versions ultérieures.</exception>
        <exception cref="T:System.Security.SecurityException">L'appelant n'a pas les autorisations <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> nécessaires.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="GetActiveTcpConnections">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveTcpConnections () As TcpConnectionInformation()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::NetworkInformation::TcpConnectionInformation ^&gt; ^ GetActiveTcpConnections();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveTcpConnections : unit -&gt; System.Net.NetworkInformation.TcpConnectionInformation[]" Usage="iPGlobalProperties.GetActiveTcpConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpConnectionInformation[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne des informations sur les connexions TCP (Transmission Control Protocol) IPv4 (Internet Protocol version 4) et IPv6 sur l'ordinateur local.</summary>
        <returns>Tableau <see cref="T:System.Net.NetworkInformation.TcpConnectionInformation" /> qui contient des objets qui décrivent les connexions TCP actives ou tableau vide si aucune connexion TCP active n'est détectée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les objets retournés par cette méthode incluent des connexions dans tous les États TCP, à l’exception du <xref:System.Net.NetworkInformation.TcpState.Listen> état. Vous pouvez vérifier l’état d’une connexion en appelant <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.  
  
 Le protocole TCP est défini dans IETF RFC 793. Notez que les objets retournés par cette méthode reflètent les connexions au moment où que le tableau est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de point de terminaison pour les connexions TCP actives.  
  
 [!code-cpp[NCLNetInfoReport#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#17)]
 [!code-csharp[NCLNetInfoReport#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">La fonction Win32 <see langword="GetTcpTable" /> a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveTcpListeners">
      <MemberSignature Language="C#" Value="public abstract System.Net.IPEndPoint[] GetActiveTcpListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.IPEndPoint[] GetActiveTcpListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveTcpListeners () As IPEndPoint()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::IPEndPoint ^&gt; ^ GetActiveTcpListeners();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveTcpListeners : unit -&gt; System.Net.IPEndPoint[]" Usage="iPGlobalProperties.GetActiveTcpListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne des informations sur les points de terminaison des écouteurs TCP (Transmission Control Protocol) IPv4 (Internet Protocol version 4) et IPv6 sur l'ordinateur local.</summary>
        <returns>Tableau <see cref="T:System.Net.IPEndPoint" /> qui contient des objets qui décrivent les écouteurs TCP actifs ou tableau vide si aucun écouteur TCP actif n'est détecté.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les objets retournés par cette méthode incluent des écouteurs dans tous les États TCP, à l’exception du <xref:System.Net.NetworkInformation.TcpState.Listen> état.  
  
 Le protocole TCP est défini dans IETF RFC 793. Notez que les objets retournés par cette méthode reflètent les connexions au moment où que le tableau est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de point de terminaison pour les écouteurs TCP actifs.  
  
 [!code-cpp[NCLNetInfoReport#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#18)]
 [!code-csharp[NCLNetInfoReport#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">La fonction Win32 <see langword="GetTcpTable" /> a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUdpListeners">
      <MemberSignature Language="C#" Value="public abstract System.Net.IPEndPoint[] GetActiveUdpListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.IPEndPoint[] GetActiveUdpListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetActiveUdpListeners () As IPEndPoint()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Net::IPEndPoint ^&gt; ^ GetActiveUdpListeners();" />
      <MemberSignature Language="F#" Value="abstract member GetActiveUdpListeners : unit -&gt; System.Net.IPEndPoint[]" Usage="iPGlobalProperties.GetActiveUdpListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne des informations sur les écouteurs UDP (User Datagram Protocol) IPv4 (Internet Protocol version 4) et IPv6 sur l'ordinateur local.</summary>
        <returns>Tableau <see cref="T:System.Net.IPEndPoint" /> qui contient des objets qui décrivent les écouteurs UDP ou tableau vide si aucun écouteur UDP n'est détecté.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UDP est un protocole de couche de transport sans connexion qui est chargé d’envoyer et recevoir des datagrammes. Il est défini dans IETF RFC 768.  
  
 Un écouteur UDP est un socket ouvert qui attend et reçoit des datagrammes UDP. Étant donné que UDP est un protocole sans connexion, l’écouteur ne maintenance pas une connexion à un point de terminaison distant.  
  
   
  
## Examples  
 L’exemple suivant affiche les écouteurs UDP actifs.  
  
 [!code-cpp[NCLNetInfoReport#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#19)]
 [!code-csharp[NCLNetInfoReport#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 <see langword="GetUdpTable" /> a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIcmpV4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIcmpV4Statistics () As IcmpV4Statistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IcmpV4Statistics ^ GetIcmpV4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIcmpV4Statistics : unit -&gt; System.Net.NetworkInformation.IcmpV4Statistics" Usage="iPGlobalProperties.GetIcmpV4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IcmpV4Statistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques ICMP (Internet Control Message Protocol) version 4 pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.IcmpV4Statistics" /> qui fournit des statistiques sur le trafic ICMP version 4 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP est un ensemble de messages pour une utilisation avec Internet Protocol version 4 (IPv4). ICMP est utilisé par les nœuds pour signaler les erreurs rencontrées lors du traitement des paquets de données et pour exécuter d’autres fonctions de couche Internet IPv4. ICMP version 4 est définie dans IETF RFC 792.  
  
 Pour plus d’informations sur les statistiques de trafic ICMP version 4 qui sont disponibles pour les applications, consultez le <xref:System.Net.NetworkInformation.IcmpV4Statistics> documentation sur la classe. Notez que le <xref:System.Net.NetworkInformation.IcmpV4Statistics> objet retourné par cette méthode reflète les statistiques à l’heure de l’objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche les statistiques ICMPv4 actuelles.  
  
 [!code-cpp[NCLNetInfoReport#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#6)]
 [!code-csharp[NCLNetInfoReport#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">La fonction Win32 <see langword="GetIcmpStatistics" /> a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIcmpV6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIcmpV6Statistics () As IcmpV6Statistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IcmpV6Statistics ^ GetIcmpV6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIcmpV6Statistics : unit -&gt; System.Net.NetworkInformation.IcmpV6Statistics" Usage="iPGlobalProperties.GetIcmpV6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IcmpV6Statistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques ICMP (Internet Control Message Protocol) version 6 pour l’ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.IcmpV6Statistics" /> qui fournit des statistiques sur le trafic ICMP version 6 pour l’ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP version 6 est un ensemble de messages pour une utilisation avec Internet Protocol version 6 (IPv6). ICMP est utilisé par les nœuds pour signaler les erreurs rencontrées lors du traitement des paquets de données et pour exécuter d’autres fonctions de couche Internet IPv6. ICMP version 6 est définie dans IETF RFC 1885.  
  
 Le protocole IPv6 n’est pas pris en charge pour les ordinateurs avec Windows 2000 ou des systèmes d’exploitation antérieurs.  
  
 Pour plus d’informations sur les statistiques de trafic ICMP version 6 disponibles aux applications, consultez le <xref:System.Net.NetworkInformation.IcmpV6Statistics> documentation sur la classe. Notez que le <xref:System.Net.NetworkInformation.IcmpV6Statistics> objet retourné par cette méthode reflète les statistiques à l’heure de l’objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche les statistiques ICMPv6 actuelles.  
  
 [!code-cpp[NCLNetInfoReport#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#7)]
 [!code-csharp[NCLNetInfoReport#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">La fonction Win32 <see langword="GetIcmpStatisticsEx" /> a échoué.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Le système d'exploitation de l'ordinateur local n'est pas Windows XP ou version ultérieure.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIPGlobalProperties">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIPGlobalProperties () As IPGlobalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::NetworkInformation::IPGlobalProperties ^ GetIPGlobalProperties();" />
      <MemberSignature Language="F#" Value="static member GetIPGlobalProperties : unit -&gt; System.Net.NetworkInformation.IPGlobalProperties" Usage="System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un objet qui fournit des informations sur la connectivité réseau et les statistiques de trafic de l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.IPGlobalProperties" /> qui contient des informations sur l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objet retourné par cette méthode est un type fourni par le système qui dérive de la <xref:System.Net.NetworkInformation.IPGlobalProperties> classe.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations sur l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4GlobalStatistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv4GlobalStatistics () As IPGlobalStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPGlobalStatistics ^ GetIPv4GlobalStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv4GlobalStatistics : unit -&gt; System.Net.NetworkInformation.IPGlobalStatistics" Usage="iPGlobalProperties.GetIPv4GlobalStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques IPv4 (Internet Protocol version 4) pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> qui fournit des statistiques de trafic IPv4 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IPv4 est un protocole de couche réseau qui est responsable du routage des paquets de données de l’ordinateur source vers la destination.  
  
 Pour plus d’informations sur les statistiques de trafic IP disponibles pour les applications, consultez le <xref:System.Net.NetworkInformation.IPGlobalStatistics> documentation sur la classe. Notez que l’objet retourné par cette méthode reflète les statistiques à l’heure la <xref:System.Net.NetworkInformation.IPGlobalStatistics> objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple de code suivant affiche les statistiques IP pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 <see langword="GetIpStatistics" /> a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetIPv6GlobalStatistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIPv6GlobalStatistics () As IPGlobalStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::IPGlobalStatistics ^ GetIPv6GlobalStatistics();" />
      <MemberSignature Language="F#" Value="abstract member GetIPv6GlobalStatistics : unit -&gt; System.Net.NetworkInformation.IPGlobalStatistics" Usage="iPGlobalProperties.GetIPv6GlobalStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPGlobalStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques IPv6 (Internet Protocol version 6) pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.IPGlobalStatistics" /> qui fournit des statistiques de trafic IPv6 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IPv6 est un protocole de couche réseau responsable du routage des paquets de données de l’ordinateur source vers la destination. Le protocole IPv6 n’est pas pris en charge sur les ordinateurs avec Windows 2000 ou des systèmes d’exploitation antérieurs.  
  
 Pour plus d’informations sur les statistiques de trafic IP disponibles pour les applications, consultez le <xref:System.Net.NetworkInformation.IPGlobalStatistics> documentation sur la classe. Notez que l’objet retourné par cette méthode reflète les statistiques à l’heure la <xref:System.Net.NetworkInformation.IPGlobalStatistics> objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple de code suivant affiche les statistiques IP pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]
 [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 <see langword="GetIpStatistics" /> a échoué.</exception>
        <exception cref="T:System.PlatformNotSupportedException">L'ordinateur local n'exécute pas un système d'exploitation qui prend en charge le protocole IPv6.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetTcpIPv4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTcpIPv4Statistics () As TcpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::TcpStatistics ^ GetTcpIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetTcpIPv4Statistics : unit -&gt; System.Net.NetworkInformation.TcpStatistics" Usage="iPGlobalProperties.GetTcpIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques TCP/IPv4 (Transmission Control Protocol / Internet Protocol version 4) pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> qui fournit des statistiques de trafic TCP/IPv4 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TCP est un protocole de couche de transport qui est responsable de l’envoi et réception de paquets de données fiables. Il est défini dans IETF RFC 793.  
  
 Pour plus d’informations sur les statistiques de trafic TCP disponibles aux applications, consultez le <xref:System.Net.NetworkInformation.TcpStatistics> documentation sur la classe. Notez que l’objet retourné par cette méthode reflète les statistiques à l’heure la <xref:System.Net.NetworkInformation.TcpStatistics> objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche les statistiques de TCP/IP pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]
 [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 <see langword="GetTcpStatistics" /> a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetTcpIPv6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTcpIPv6Statistics () As TcpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::TcpStatistics ^ GetTcpIPv6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetTcpIPv6Statistics : unit -&gt; System.Net.NetworkInformation.TcpStatistics" Usage="iPGlobalProperties.GetTcpIPv6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.TcpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques TCP/IPv6 (Transmission Control Protocol / Internet Protocol version 6) pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.TcpStatistics" /> qui fournit des statistiques de trafic TCP/IPv6 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TCP est un protocole de couche de transport responsable de l’envoi et réception de paquets de données fiables. Il est défini dans IETF RFC 793.  
  
 Pour plus d’informations sur les statistiques de trafic TCP qui sont disponibles pour les applications, consultez le <xref:System.Net.NetworkInformation.TcpStatistics> documentation sur la classe. Notez que l’objet retourné par cette méthode reflète les statistiques à l’heure la <xref:System.Net.NetworkInformation.TcpStatistics> objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche les statistiques de TCP/IP pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]
 [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 <see langword="GetTcpStatistics" /> a échoué.</exception>
        <exception cref="T:System.PlatformNotSupportedException">L'ordinateur local n'exécute pas un système d'exploitation qui prend en charge le protocole IPv6.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetUdpIPv4Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUdpIPv4Statistics () As UdpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::UdpStatistics ^ GetUdpIPv4Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetUdpIPv4Statistics : unit -&gt; System.Net.NetworkInformation.UdpStatistics" Usage="iPGlobalProperties.GetUdpIPv4Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UdpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques UDP/IPv4 (User Datagram Protocol / Internet Protocol version 4) pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> qui fournit des statistiques de trafic UDP/IPv4 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UDP est un protocole de couche de transport sans connexion qui est chargé d’envoyer et recevoir des datagrammes. Il est défini dans IETF RFC 768.  
  
 Pour plus d’informations sur les statistiques de trafic UDP qui sont disponibles pour les applications, consultez le <xref:System.Net.NetworkInformation.UdpStatistics> documentation sur la classe. Notez que l’objet retourné par cette méthode reflète les statistiques à l’heure la <xref:System.Net.NetworkInformation.UdpStatistics> objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche les statistiques UDP/IP pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]
 [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 GetUdpStatistics a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetUdpIPv6Statistics">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUdpIPv6Statistics () As UdpStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::NetworkInformation::UdpStatistics ^ GetUdpIPv6Statistics();" />
      <MemberSignature Language="F#" Value="abstract member GetUdpIPv6Statistics : unit -&gt; System.Net.NetworkInformation.UdpStatistics" Usage="iPGlobalProperties.GetUdpIPv6Statistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UdpStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit des données statistiques UDP/IPv6 (User Datagram Protocol / Internet Protocol version 6) pour l'ordinateur local.</summary>
        <returns>Objet <see cref="T:System.Net.NetworkInformation.UdpStatistics" /> qui fournit des statistiques de trafic UDP/IPv6 pour l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UDP est un protocole de couche de transport sans connexion qui est chargé d’envoyer et recevoir des datagrammes. Il est défini dans IETF RFC 768.  
  
 Pour plus d’informations sur les statistiques de trafic UDP qui sont disponibles pour les applications, consultez le <xref:System.Net.NetworkInformation.UdpStatistics> documentation sur la classe. Notez que l’objet retourné par cette méthode reflète les statistiques à l’heure la <xref:System.Net.NetworkInformation.UdpStatistics> objet est créé. Ces informations ne sont pas mis à jour dynamiquement.  
  
   
  
## Examples  
 L’exemple suivant affiche les statistiques UDP/IP pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]
 [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction Win32 <see langword="GetUdpStatistics" /> a échoué.</exception>
        <exception cref="T:System.PlatformNotSupportedException">L'ordinateur local n'exécute pas un système d'exploitation qui prend en charge le protocole IPv6.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnicastAddresses">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnicastAddresses () As UnicastIPAddressInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^ GetUnicastAddresses();" />
      <MemberSignature Language="F#" Value="abstract member GetUnicastAddresses : unit -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection&#xA;override this.GetUnicastAddresses : unit -&gt; System.Net.NetworkInformation.UnicastIPAddressInformationCollection" Usage="iPGlobalProperties.GetUnicastAddresses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.UnicastIPAddressInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la table des adresses IP monodiffusion stable sur l'ordinateur local.</summary>
        <returns>
          <see cref="T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection" /> qui contient une liste d'adresses IP monodiffusion stable sur l'ordinateur local.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour prendre en charge les connexions sortantes ou pour accepter les connexions entrantes sur une interface Teredo, applications doivent garantir que l’interface Teredo est disponible et prêt à l’emploi. Il s’agit, car Teredo peut être placé dans un état dormant lorsqu’il est ne pas utilisé pendant un certain temps.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> méthode autorisera à une application de récupérer la liste des adresses IP monodiffusion stable. Le <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriété peut être utilisée pour déterminer si une adresse IP est une adresse Teredo IPv6 avec le préfixe de 2001 :: / 32.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> méthode retourne également non Teredo adresses et offre un moyen plus pratique pour obtenir la monodiffusion des adresses IP pour un système que l’énumération de tous les <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objets sur un ordinateur local et en interrogeant les adresses IP associées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction <see langword="GetAdaptersAddresses" /> native a échoué.</exception>
        <exception cref="T:System.NotImplementedException">Cette méthode n'est pas implémentée sur la plateforme. Cette méthode utilise la fonction <see langword="NotifyStableUnicastIpAddressTable" /> native prise en charge sur Windows Vista et versions ultérieures.</exception>
        <exception cref="T:System.Security.SecurityException">L'appelant n'a pas les autorisations <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> nécessaires.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">L'appel à la fonction <see langword="NotifyStableUnicastIpAddressTable" /> native a échoué.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicastAddressesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnicastAddressesAsync () As Task(Of UnicastIPAddressInformationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::UnicastIPAddressInformationCollection ^&gt; ^ GetUnicastAddressesAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetUnicastAddressesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;&#xA;override this.GetUnicastAddressesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;" Usage="iPGlobalProperties.GetUnicastAddressesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la table des adresses stable sur l'ordinateur local en tant qu'opération asynchrone.</summary>
        <returns>Retourne <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Objet de tâche représentant l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour prendre en charge les connexions sortantes ou pour accepter les connexions entrantes sur une interface Teredo, applications doivent garantir que l’interface Teredo est disponible et prêt à l’emploi. Il s’agit, car Teredo peut être placé dans un état dormant lorsqu’il est ne pas utilisé pendant un certain temps.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> méthode autorisera à une application de récupérer la liste des adresses IP monodiffusion stable en tant qu’opération asynchrone. Le <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=nameWithType> propriété peut être utilisée pour déterminer si une adresse IP est une adresse Teredo IPv6 avec le préfixe de 2001 :: / 32.  
  
 Le <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> méthode retourne également non Teredo adresses et offre un moyen plus pratique pour obtenir la monodiffusion des adresses IP pour un système que l’énumération de tous les <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=nameWithType> objets sur un ordinateur local et en interrogeant les adresses IP associées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">L'appel à la fonction <see langword="GetAdaptersAddresses" /> native a échoué.</exception>
        <exception cref="T:System.Security.SecurityException">L'appelant n'a pas les autorisations <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" /> nécessaires.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">L'appel à la fonction <see langword="NotifyStableUnicastIpAddressTable" /> native a échoué.</exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)" />
        <altmember cref="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses" />
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public abstract string HostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.HostName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ HostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostName : string" Usage="System.Net.NetworkInformation.IPGlobalProperties.HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom d'hôte de l'ordinateur local.</summary>
        <value>Instance <see cref="T:System.String" /> qui contient le nom NetBIOS de l'ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété appelle la fonction d’assistance IP native, GetNetworkParams, qui retourne une structure FIXED_INFO qui contient l’hôte NetBIOS chaîne de nom. La chaîne de nom d’hôte est tronquée lorsqu’il dépasse 15 caractères.  
  
 Un nom d’ordinateur NetBIOS doit être unique au sein d’un réseau et n’est pas qualifié par le nom de domaine.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de réseau pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Un appel de fonction Win32 a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsWinsProxy">
      <MemberSignature Language="C#" Value="public abstract bool IsWinsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWinsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsWinsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsWinsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWinsProxy : bool" Usage="System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui spécifie si l'ordinateur local agit comme proxy WINS (Windows Internet Name Service).</summary>
        <value>
          <see langword="true" /> si l'ordinateur local est un proxy WINS ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WINS fournit une base de données distribuée pour l’inscription et l’interrogation de noms NetBIOS dynamiques à des mappages d’adresses IP.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de réseau pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Un appel de fonction Win32 a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Net.NetworkInformation.NetBiosNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetBiosNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.IPGlobalProperties.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As NetBiosNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Net::NetworkInformation::NetBiosNodeType NodeType { System::Net::NetworkInformation::NetBiosNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Net.NetworkInformation.NetBiosNodeType" Usage="System.Net.NetworkInformation.IPGlobalProperties.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetBiosNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de nœud NetBIOS (Network Basic Input/Output System) de l'ordinateur local.</summary>
        <value>Valeur <see cref="T:System.Net.NetworkInformation.NetBiosNodeType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le type de nœud détermine la façon dans lequel les noms NetBIOS sont résolus en adresses IP. Pour plus d’informations, consultez le <xref:System.Net.NetworkInformation.NetBiosNodeType> vue d’ensemble de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant affiche des informations de réseau pour l’ordinateur local.  
  
 [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]
 [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException">Un appel de fonction Win32 a échoué.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">pour lire les informations sur le réseau. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>