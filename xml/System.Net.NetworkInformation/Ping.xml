<Type Name="Ping" FullName="System.Net.NetworkInformation.Ping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fa7ba6d84ed2623ed1b3610b45ed32260e8d096" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58733789" /></Metadata><TypeSignature Language="C#" Value="public class Ping : System.ComponentModel.Component, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ping extends System.ComponentModel.Component implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.Ping" />
  <TypeSignature Language="VB.NET" Value="Public Class Ping&#xA;Inherits Component&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ping : System::ComponentModel::Component, IDisposable" />
  <TypeSignature Language="F#" Value="type Ping = class&#xA;    inherit Component&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.MonoTODO("IPv6 support is missing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8450-101">Permet à une application de déterminer si un ordinateur distant est accessible sur le réseau.</span><span class="sxs-lookup"><span data-stu-id="a8450-101">Allows an application to determine whether a remote computer is accessible over the network.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-102">Les applications utilisent la <xref:System.Net.NetworkInformation.Ping> classe pour détecter si un ordinateur distant est accessible.</span><span class="sxs-lookup"><span data-stu-id="a8450-102">Applications use the <xref:System.Net.NetworkInformation.Ping> class to detect whether a remote computer is reachable.</span></span>  
  
 <span data-ttu-id="a8450-103">Topologie de réseau peut déterminer si <xref:System.Net.NetworkInformation.Ping> peuvent contacter un hôte distant.</span><span class="sxs-lookup"><span data-stu-id="a8450-103">Network topology can determine whether <xref:System.Net.NetworkInformation.Ping> can successfully contact a remote host.</span></span> <span data-ttu-id="a8450-104">La présence et la configuration des serveurs proxy, le matériel de traduction d’adresses réseau ou un pare-feu peuvent empêcher <xref:System.Net.NetworkInformation.Ping> de réussir.</span><span class="sxs-lookup"><span data-stu-id="a8450-104">The presence and configuration of proxies, network address translation (NAT) equipment, or firewalls can prevent <xref:System.Net.NetworkInformation.Ping> from succeeding.</span></span> <span data-ttu-id="a8450-105">Un bon <xref:System.Net.NetworkInformation.Ping> indique uniquement que l’instance distante est accessible sur le réseau hôte ; la présence de services de niveau supérieur (par exemple, un serveur Web) sur l’hôte distant n’est pas garantie.</span><span class="sxs-lookup"><span data-stu-id="a8450-105">A successful <xref:System.Net.NetworkInformation.Ping> indicates only that the remote host can be reached on the network; the presence of higher level services (such as a Web server) on the remote host is not guaranteed.</span></span>  
  
 <span data-ttu-id="a8450-106">Cette classe fournit des fonctionnalités similaires à l’outil de ligne de commande Ping.exe.</span><span class="sxs-lookup"><span data-stu-id="a8450-106">This class provides functionality similar to the Ping.exe command line tool.</span></span> <span data-ttu-id="a8450-107">Le <xref:System.Net.NetworkInformation.Ping.Send%2A> et <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes envoient un message de demande d’écho ICMP Internet Control Message Protocol () pour un ordinateur distant et attend un message de réponse d’écho ICMP à partir de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-107">The <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods send an Internet Control Message Protocol (ICMP) echo request message to a remote computer and waits for an ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-108">Pour obtenir une description détaillée des messages ICMP, consultez la RFC 792, disponible à l’adresse [ https://www.ietf.org ](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="a8450-108">For a detailed description of ICMP messages, see RFC 792, available at [https://www.ietf.org](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="a8450-109">Les types suivants sont utilisés avec la <xref:System.Net.NetworkInformation.Ping> classe et sont décrites en détail ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="a8450-109">The following types are used with the <xref:System.Net.NetworkInformation.Ping> class and are described in detail below.</span></span>  
  
|<span data-ttu-id="a8450-110">**Nom de type**</span><span class="sxs-lookup"><span data-stu-id="a8450-110">**Type name**</span></span>|<span data-ttu-id="a8450-111">**Description**</span><span class="sxs-lookup"><span data-stu-id="a8450-111">**Description**</span></span>|  
|-------------------|---------------------|  
|<xref:System.Net.NetworkInformation.IPStatus>|<span data-ttu-id="a8450-112">Définit les codes d’état qui décrivent le résultat d’un message de demande d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-112">Defines status codes that describe the outcome of an ICMP echo request message.</span></span>|  
|<xref:System.Net.NetworkInformation.PingOptions>|<span data-ttu-id="a8450-113">Vous permet de configurer ou récupérer les paramètres qui contrôlent le nombre de fois où le paquet de demande peuvent être transférés (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), et si elle peut être fragmenté (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ).</span><span class="sxs-lookup"><span data-stu-id="a8450-113">Allows you to configure or retrieve the settings that control how many times the request packet can be forwarded (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), and whether it can be fragmented (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ).</span></span>|  
|<xref:System.Net.NetworkInformation.PingReply>|<span data-ttu-id="a8450-114">Contient les résultats d’une demande d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-114">Contains the results of an ICMP echo request.</span></span>|  
|<xref:System.Net.NetworkInformation.PingException>|<span data-ttu-id="a8450-115">Levée si une erreur irrécupérable se produit.</span><span class="sxs-lookup"><span data-stu-id="a8450-115">Thrown if an unrecoverable error occurs.</span></span>|  
|<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|<span data-ttu-id="a8450-116">Contient les données associées <xref:System.Net.NetworkInformation.Ping.PingCompleted> événements, qui sont déclenchés lorsqu’un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appel se termine ou est annulé.</span><span class="sxs-lookup"><span data-stu-id="a8450-116">Contains the data associated with <xref:System.Net.NetworkInformation.Ping.PingCompleted> events, which are raised when a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call completes or is canceled.</span></span>|  
|<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|<span data-ttu-id="a8450-117">Délégué qui fournit la méthode de rappel appelée quand un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appel se termine ou est annulé.</span><span class="sxs-lookup"><span data-stu-id="a8450-117">The delegate that provides the callback method invoked when a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call completes or is canceled.</span></span>|  
  
 <span data-ttu-id="a8450-118">Le <xref:System.Net.NetworkInformation.Ping.Send%2A> et <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes retournent la réponse dans un <xref:System.Net.NetworkInformation.PingReply> objet.</span><span class="sxs-lookup"><span data-stu-id="a8450-118">The <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return the reply in a <xref:System.Net.NetworkInformation.PingReply> object.</span></span> <span data-ttu-id="a8450-119">Le <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> propriété retourne un <xref:System.Net.NetworkInformation.IPStatus> valeur pour indiquer le résultat de la demande.</span><span class="sxs-lookup"><span data-stu-id="a8450-119">The <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> property returns an <xref:System.Net.NetworkInformation.IPStatus> value to indicate the outcome of the request.</span></span>  
  
 <span data-ttu-id="a8450-120">Lorsque vous envoyez la demande, vous devez spécifier l’ordinateur distant.</span><span class="sxs-lookup"><span data-stu-id="a8450-120">When sending the request, you must specify the remote computer.</span></span> <span data-ttu-id="a8450-121">Vous pouvez faire en fournissant un hôte de chaîne de nom, une adresse IP au format de chaîne, ou un <xref:System.Net.IPAddress> objet.</span><span class="sxs-lookup"><span data-stu-id="a8450-121">You can do this by providing a host name string, an IP address in string format, or an <xref:System.Net.IPAddress> object.</span></span>  
  
 <span data-ttu-id="a8450-122">Vous pouvez également spécifier un des types suivants d’informations :</span><span class="sxs-lookup"><span data-stu-id="a8450-122">You can also specify any of the following types of information:</span></span>  
  
-   <span data-ttu-id="a8450-123">Données accompagnant la demande.</span><span class="sxs-lookup"><span data-stu-id="a8450-123">Data to accompany the request.</span></span> <span data-ttu-id="a8450-124">Spécification `buffer` permet de connaître la durée nécessaire au déplacement vers et depuis l’hôte distant et l’unité de transmission maximale du chemin d’accès réseau d’un paquet d’une taille particulière.</span><span class="sxs-lookup"><span data-stu-id="a8450-124">Specifying `buffer` allows you to learn the amount of time required for a packet of a particular size to travel to and from the remote host and the maximum transmission unit of the network path.</span></span> <span data-ttu-id="a8450-125">(Consultez le <xref:System.Net.NetworkInformation.Ping.Send%2A> ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharges qui prennent un `buffer` paramètre.)</span><span class="sxs-lookup"><span data-stu-id="a8450-125">(See the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take a `buffer` parameter.)</span></span>  
  
-   <span data-ttu-id="a8450-126">Si le paquet d’écho ICMP peut être fragmenté en transit.</span><span class="sxs-lookup"><span data-stu-id="a8450-126">Whether the ICMP Echo packet can be fragmented in transit.</span></span> <span data-ttu-id="a8450-127">(Consultez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété et la <xref:System.Net.NetworkInformation.Ping.Send%2A> ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharges qui prennent un `options` paramètre.)</span><span class="sxs-lookup"><span data-stu-id="a8450-127">(See the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property and the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take an `options` parameter.)</span></span>  
  
-   <span data-ttu-id="a8450-128">Combien de fois les nœuds de routage, tels que des routeurs ou des passerelles, peuvent transférer le paquet avant qu’il atteigne l’ordinateur de destination ou est ignoré.</span><span class="sxs-lookup"><span data-stu-id="a8450-128">How many times routing nodes, such as routers or gateways, can forward the packet before it either reaches the destination computer or is discarded.</span></span> <span data-ttu-id="a8450-129">(Consultez <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> et <xref:System.Net.NetworkInformation.Ping.Send%2A> ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharges qui prennent un `options` paramètre.)</span><span class="sxs-lookup"><span data-stu-id="a8450-129">(See <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> and the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take an `options` parameter.)</span></span>  
  
-   <span data-ttu-id="a8450-130">La limite de temps au cours duquel la réponse doit être reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-130">The time limit within which the reply must be received.</span></span> <span data-ttu-id="a8450-131">(Consultez le <xref:System.Net.NetworkInformation.Ping.Send%2A> ou <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharges qui prennent un `timeout` paramètre.</span><span class="sxs-lookup"><span data-stu-id="a8450-131">(See the <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overloads that take a `timeout` parameter.</span></span>  
  
 <span data-ttu-id="a8450-132">Le <xref:System.Net.NetworkInformation.Ping> classe propose des méthodes synchrones et asynchrones pour envoyer la requête.</span><span class="sxs-lookup"><span data-stu-id="a8450-132">The <xref:System.Net.NetworkInformation.Ping> class offers both synchronous and asynchronous methods for sending the request.</span></span> <span data-ttu-id="a8450-133">Si votre application doit être bloquée en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-133">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span> <span data-ttu-id="a8450-134">Si votre application ne doit pas bloquer, utilisez asynchrone <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="a8450-134">If your application should not block, use the asynchronous <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods.</span></span> <span data-ttu-id="a8450-135">Un appel à <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> s’exécute dans son propre thread qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-135">A call to <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> executes in its own thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-136">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-136">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-137">Les applications utilisent un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué pour spécifier la méthode est appelée pour <xref:System.Net.NetworkInformation.Ping.PingCompleted> événements.</span><span class="sxs-lookup"><span data-stu-id="a8450-137">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called for <xref:System.Net.NetworkInformation.Ping.PingCompleted> events.</span></span> <span data-ttu-id="a8450-138">Vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-138">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-139">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-139">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a8450-140">Vous ne pouvez pas utiliser la même instance de la <xref:System.Net.NetworkInformation.Ping> classe pour générer plusieurs demandes d’écho ICMP simultanées.</span><span class="sxs-lookup"><span data-stu-id="a8450-140">You cannot use the same instance of the <xref:System.Net.NetworkInformation.Ping> class to generate multiple simultaneous ICMP Echo requests.</span></span> <span data-ttu-id="a8450-141">Appelant <xref:System.Net.NetworkInformation.Ping.Send%2A> pendant un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appel est en cours ou l’appel <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> plusieurs fois avant que tous les appels précédents soient terminés provoque une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="a8450-141">Calling <xref:System.Net.NetworkInformation.Ping.Send%2A> while a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call is in progress or calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> multiple times before all previous calls have completed causes an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-142">L’exemple de code suivant montre comment utiliser le <xref:System.Net.NetworkInformation.Ping> classe de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-142">The following code example demonstrates using the <xref:System.Net.NetworkInformation.Ping> class synchronously.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 <span data-ttu-id="a8450-143">L’exemple de code suivant montre comment utiliser le <xref:System.Net.NetworkInformation.Ping> classe de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-143">The following code example demonstrates using the <xref:System.Net.NetworkInformation.Ping> class asynchronously.</span></span>  
  
 [!code-cpp[NCLPingASync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingASync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/network-programming/how-to-ping-a-host.md"><span data-ttu-id="a8450-144">Procédure : exécution d’une requête ping</span><span class="sxs-lookup"><span data-stu-id="a8450-144">How to: Ping a Host</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/index.md"><span data-ttu-id="a8450-145">Programmation réseau dans le .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a8450-145">Network Programming in the .NET Framework</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md"><span data-ttu-id="a8450-146">Exemples de programmation réseau</span><span class="sxs-lookup"><span data-stu-id="a8450-146">Network Programming Samples</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/networkinformation.md"><span data-ttu-id="a8450-147">NetworkInformation</span><span class="sxs-lookup"><span data-stu-id="a8450-147">NetworkInformation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8450-148">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.Ping" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-148">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.Ping" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8450-149">L’exemple de code suivant illustre la création d’un <xref:System.Net.NetworkInformation.Ping> instance.</span><span class="sxs-lookup"><span data-stu-id="a8450-149">The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance.</span></span> <span data-ttu-id="a8450-150">L’exemple complet est disponible dans le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-150">The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ping.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="ping.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a8450-151"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="a8450-151"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a8450-152">Libère les ressources non managées utilisées par l'objet <see cref="T:System.Net.NetworkInformation.Ping" /> et supprime éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="a8450-152">Releases the unmanaged resources used by the <see cref="T:System.Net.NetworkInformation.Ping" /> object, and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-153">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.ComponentModel.Component.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a8450-153">This method is called by the public `Dispose()` method and the <xref:System.ComponentModel.Component.Finalize%2A> method.</span></span> <span data-ttu-id="a8450-154">Public `Dispose()` méthode appelle la méthode protégée <xref:System.Net.NetworkInformation.Ping.Dispose%2A> méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-154">The public `Dispose()` method invokes the protected <xref:System.Net.NetworkInformation.Ping.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a8450-155"><xref:System.ComponentModel.Component.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="a8450-155"><xref:System.ComponentModel.Component.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a8450-156">Lorsque le `disposing` paramètre est `true`, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Net.NetworkInformation.Ping> références d’objet.</span><span class="sxs-lookup"><span data-stu-id="a8450-156">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.NetworkInformation.Ping> object references.</span></span> <span data-ttu-id="a8450-157">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="a8450-157">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPingCompleted">
      <MemberSignature Language="C#" Value="protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPingCompleted(class System.Net.NetworkInformation.PingCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPingCompleted (e As PingCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPingCompleted(System::Net::NetworkInformation::PingCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnPingCompleted : System.Net.NetworkInformation.PingCompletedEventArgs -&gt; unit" Usage="ping.OnPingCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8450-158">Objet <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> qui contient les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-158">A <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> object that contains event data.</span></span></param>
        <summary><span data-ttu-id="a8450-159">Déclenche l'événement <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-159">Raises the <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-160">Les classes qui héritent de la <xref:System.Net.NetworkInformation.Ping> classe peut substituer cette méthode pour effectuer des tâches supplémentaires, telles que la journalisation des données contenues dans le `e` paramètre.</span><span class="sxs-lookup"><span data-stu-id="a8450-160">Classes that inherit from the <xref:System.Net.NetworkInformation.Ping> class can override this method to perform additional tasks, such as logging the data contained in the `e` parameter.</span></span>  
  
 <span data-ttu-id="a8450-161">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="a8450-161">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a8450-162">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a8450-162">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a8450-163">La méthode <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="a8450-163">The <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a8450-164">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="a8450-164">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a8450-165">Lors de la substitution <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-165">When overriding <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PingCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.NetworkInformation.Ping.PingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PingCompleted As PingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::NetworkInformation::PingCompletedEventHandler ^ PingCompleted;" />
      <MemberSignature Language="F#" Value="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " Usage="member this.PingCompleted : System.Net.NetworkInformation.PingCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8450-166">Se produit quand une opération asynchrone pour envoyer un message ICMP d’écho et recevoir le message ICMP de réponse à écho correspondant se termine ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="a8450-166">Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-167">Les applications utilisent le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement pour obtenir des informations sur l’état d’achèvement et les données collectées par un appel à un de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="a8450-167">Applications use the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event to get information about the completion status and data collected by a call to one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods.</span></span> <span data-ttu-id="a8450-168">Le <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué fournit l’appel de méthode de rappel appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche cet événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-168">The <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate provides the call back method invoked when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-169">L’exemple de code suivant illustre la spécification d’une méthode de rappel pour le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-169">The following code example demonstrates specifying a callback method for the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-170">L’exemple complet est disponible dans le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-170">The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8450-171">Essaie d’envoyer un message ICMP d’écho à un ordinateur distant et de recevoir un message ICMP de réponse à écho correspondant de l’ordinateur distant.</span><span class="sxs-lookup"><span data-stu-id="a8450-171">Attempts to send an Internet Control Message Protocol (ICMP) echo message to a remote computer and receive a corresponding ICMP echo reply message from the remote computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-172">L’adresse IP retournée par une de le <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharges peuvent provenir d’un ordinateur distant malveillant.</span><span class="sxs-lookup"><span data-stu-id="a8450-172">The IP address returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="a8450-173">Ne connectez pas à l’ordinateur distant à l’aide de cela.</span><span class="sxs-lookup"><span data-stu-id="a8450-173">Do not connect to the remote computer using this.</span></span> <span data-ttu-id="a8450-174">Utiliser DNS pour déterminer l’adresse IP de l’ordinateur auquel vous souhaitez vous connecter.</span><span class="sxs-lookup"><span data-stu-id="a8450-174">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-175"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-175">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <summary><span data-ttu-id="a8450-176">Essaie d’envoyer un message ICMP d’écho à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-176">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <returns><span data-ttu-id="a8450-177">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou décrit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-177">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or describes the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-178">Cette méthode envoie à l’hôte spécifié par `address` 32 <xref:System.Byte> mémoire tampon de données avec le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-178">This method sends to the host that is specified by `address` a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="a8450-179">La méthode attend cinq secondes pour un message de réponse d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-179">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="a8450-180">Si elle ne reçoit pas une réponse pendant cette période, la méthode retourne et la <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-180">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="a8450-181">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-181">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-182">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-182">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-183">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-183">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-184">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-184">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-185">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-185">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-186">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-186">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-187">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-187">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-188">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-188">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-189">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-189">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-190">L’exemple de code suivant illustre l’appel de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-190">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NCLPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-191"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-191"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-192">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-192">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-193"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-193"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-194">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-194">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-195">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-195">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-196">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-196">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-197">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-197">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-198">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-198">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-199"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-199">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-200">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-200">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <summary><span data-ttu-id="a8450-201">Essaie d’envoyer un message ICMP d’écho à l’ordinateur spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-201">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <returns><span data-ttu-id="a8450-202">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-202">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-203">Cette méthode envoie un 32 <xref:System.Byte> mémoire tampon de données avec le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-203">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="a8450-204">La méthode attend cinq secondes pour un message de réponse d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-204">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="a8450-205">Si elle ne reçoit pas une réponse pendant cette période, la méthode retourne et la <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-205">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="a8450-206">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-206">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-207">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-207">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-208">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-208">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-209">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-209">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-210">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-210">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-211">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-211">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-212">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-212">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-213">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-213">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-214">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-214">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-215">L’exemple de code suivant illustre l’appel de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-215">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NCLPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-216"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-216"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-217">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-217">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-218"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-218"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-219">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-219">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-220">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-220">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-221">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-221">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-222">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-222">To send an ICMP echo message.</span></span> <span data-ttu-id="a8450-223">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-223">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-224"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-224">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-225">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-225">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="a8450-226">Essaie d’envoyer un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-226">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-227">Cette méthode vous permet de spécifier une valeur de délai d’attente pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-227">This method allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-228">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-228">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-229">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié dans le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-229">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-230">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-230">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-231">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-231">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-232">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-232">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-233">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-233">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-234">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-234">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-235">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-235">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-236">Le paquet ou les fragments de paquet peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-236">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-237">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-237">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-238">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-238">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-239">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-239">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-240">Pour obtenir un exemple qui montre comment appeler un <xref:System.Net.NetworkInformation.Ping.Send%2A> (méthode), consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-240">For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-241"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-241"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-242"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-242"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-243">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-243">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-244"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-244"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-245">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-245">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-246">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-246">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-247">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-247">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-248">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-248">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-249">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-249">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-250"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-250">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-251">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-251">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-252">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-252">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="a8450-253">Essaie d’envoyer un message ICMP d’écho à l’ordinateur spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-253">Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-254">Cette méthode vous permet de spécifier une valeur de délai d’attente pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-254">This method allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-255">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-255">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-256">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié dans le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-256">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-257">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-257">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-258">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-258">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-259">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-259">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-260">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-260">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-261">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-261">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-262">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-262">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-263">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-263">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-264">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-264">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-265">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-265">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-266">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-266">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-267">Pour obtenir un exemple qui montre comment appeler un <xref:System.Net.NetworkInformation.Ping.Send%2A> (méthode), consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-267">For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-268"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-268"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-269"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-269"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-270">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-270">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-271">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-271">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-272">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-272">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-273">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-273">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-274">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-274">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-275">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-275">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-276"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-276">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-277">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-277">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-278">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-278">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-279">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-279">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="a8450-280">Essaie d’envoyer un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-280">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-281">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-281">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-282">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-282">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span></span> <span data-ttu-id="a8450-283">La méthode retourne <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> si le paquet dépasse l’unité de transmission maximale (MTU).</span><span class="sxs-lookup"><span data-stu-id="a8450-283">The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-284">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié dans le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-284">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-285">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-285">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-286">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-286">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-287">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-287">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-288">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-288">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-289">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-289">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-290">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-290">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-291">Le paquet ou les fragments de paquet peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-291">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-292">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-292">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-293">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-293">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-294">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-294">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-295">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-295">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#6)]
 [!code-csharp[NCLPingSampler#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-296">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-296">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-297"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-297"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8450-298">ou</span><span class="sxs-lookup"><span data-stu-id="a8450-298">-or-</span></span> 
 <span data-ttu-id="a8450-299"><paramref name="buffer" /> a la valeur <see langword="null" />, ou la taille de la mémoire <paramref name="buffer" /> est supérieure à 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-299"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-300"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-300"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-301">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-301">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-302"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-302"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-303">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-303">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-304">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-304">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-305">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-305">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-306">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-306">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-307">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-307">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-308"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-308">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-309">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-309">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-310">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-310">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-311">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-311">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-312">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-312">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="a8450-313">Essaie d’envoyer un message ICMP d’écho à l’ordinateur spécifié avec le tampon de données spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-313">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-314">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-314">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-315">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-315">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-316">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié dans le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-316">If the ICMP echo reply message is not received within the time specified in the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-317">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-317">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-318">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-318">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-319">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-319">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-320">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-320">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-321">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-321">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-322">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-322">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-323">Le paquet ou les fragments de paquet peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-323">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-324">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.Send%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-324">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-325">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-325">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-326">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-326">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-327">Pour obtenir un exemple qui montre comment appeler un <xref:System.Net.NetworkInformation.Ping.Send%2A> de surcharge, consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-327">For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-328">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-328">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-329"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-329"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span>  
  
<span data-ttu-id="a8450-330">ou</span><span class="sxs-lookup"><span data-stu-id="a8450-330">-or-</span></span> 
 <span data-ttu-id="a8450-331"><paramref name="buffer" /> a la valeur <see langword="null" />, ou la taille de la mémoire <paramref name="buffer" /> est supérieure à 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-331"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-332"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-332"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-333">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-333">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-334">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-334">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-335">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-335">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-336">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-336">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-337">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-337">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-338">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-338">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-339"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-339">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-340">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-340">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-341">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-341">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-342">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-342">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="a8450-343">Objet <see cref="T:System.Net.NetworkInformation.PingOptions" /> utilisé pour contrôler la fragmentation et les valeurs de la durée de vie (Time-to-Live) du paquet de messages ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-343">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="a8450-344">Essaie d’envoyer un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-344">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" /> and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-345">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération et de contrôler la fragmentation et les valeurs de durée de vie pour le paquet de message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-345">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <returns><span data-ttu-id="a8450-346">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-346">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</span></span> <span data-ttu-id="a8450-347">La méthode retourne <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> si le paquet dépasse l’unité de transmission maximale (MTU).</span><span class="sxs-lookup"><span data-stu-id="a8450-347">The method will return <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" /> if the packet exceeds the Maximum Transmission Unit (MTU).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-348">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-348">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-349">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-349">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-350">Si le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-350">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-351">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-351">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-352">Utilisez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété pour spécifier le nombre maximal de fois où le message ICMP d’écho peut être transféré avant d’atteindre sa destination.</span><span class="sxs-lookup"><span data-stu-id="a8450-352">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="a8450-353">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-353">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-354">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-354">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-355">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-355">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#5)]
 [!code-csharp[NCLPingSampler#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-356">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-356">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-357"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-357"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8450-358">ou</span><span class="sxs-lookup"><span data-stu-id="a8450-358">-or-</span></span> 
 <span data-ttu-id="a8450-359"><paramref name="buffer" /> a la valeur <see langword="null" />, ou la taille de la mémoire <paramref name="buffer" /> est supérieure à 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-359"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-360"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-360"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-361">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-361">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-362"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-362"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-363">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-363">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-364">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-364">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-365">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-365">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-366">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-366">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-367">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-367">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.Send : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Net.NetworkInformation.PingReply" Usage="ping.Send (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-368"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-368">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-369">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-369">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-370">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-370">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-371">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-371">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-372">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-372">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="a8450-373">Objet <see cref="T:System.Net.NetworkInformation.PingOptions" /> utilisé pour contrôler la fragmentation et les valeurs de la durée de vie (Time-to-Live) du paquet de messages ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-373">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="a8450-374">Essaie d’envoyer un message ICMP d’écho à l’ordinateur spécifié avec le tampon de données spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-374">Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-375">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération et de contrôler la fragmentation et les valeurs de durée de vie pour le paquet ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-375">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</span></span></summary>
        <returns><span data-ttu-id="a8450-376">Objet <see cref="T:System.Net.NetworkInformation.PingReply" /> qui fournit des informations à propos du message ICMP de réponse à écho (le cas échéant) ou fournit la raison de l’échec si aucun message n’a été reçu.</span><span class="sxs-lookup"><span data-stu-id="a8450-376">A <see cref="T:System.Net.NetworkInformation.PingReply" /> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-377">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-377">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-378">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-378">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-379">Si le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-379">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-380">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-380">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-381">Utilisez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété pour spécifier le nombre maximal de fois où le message ICMP d’écho peut être transféré avant d’atteindre sa destination.</span><span class="sxs-lookup"><span data-stu-id="a8450-381">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="a8450-382">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-382">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-383">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-383">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-384">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-384">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NCLPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-385">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-385">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-386"><paramref name="hostNameOrAddress" /> est <see langword="null" /> ou est une chaîne de longueur zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-386"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is a zero length string.</span></span>  
  
<span data-ttu-id="a8450-387">ou</span><span class="sxs-lookup"><span data-stu-id="a8450-387">-or-</span></span> 
 <span data-ttu-id="a8450-388"><paramref name="buffer" /> a la valeur <see langword="null" />, ou la taille de la mémoire <paramref name="buffer" /> est supérieure à 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-388"><paramref name="buffer" /> is <see langword="null" />, or the <paramref name="buffer" /> size is greater than 65500 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-389"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-389"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-390">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-390">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-391"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-391"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-392">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-392">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-393">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-393">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-394">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-394">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-395">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-395">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-396">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-396">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8450-397">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à un ordinateur et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-397">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to a computer, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-398">Ces méthodes ne provoquent pas le thread principal de votre application bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-398">These methods do not cause your application's main thread to block.</span></span> <span data-ttu-id="a8450-399">Si vous souhaitez bloquer en attendant le message ICMP de réponse à écho, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="a8450-399">If you want to block while waiting for the ICMP echo reply message, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-400">L’adresse IP retournée par une de le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes peuvent provenir d’un ordinateur distant malveillant.</span><span class="sxs-lookup"><span data-stu-id="a8450-400">The IP address returned by any of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods can originate from a malicious remote computer.</span></span> <span data-ttu-id="a8450-401">Ne connectez pas à l’ordinateur distant à l’aide de cela.</span><span class="sxs-lookup"><span data-stu-id="a8450-401">Do not connect to the remote computer using this.</span></span> <span data-ttu-id="a8450-402">Utiliser DNS pour déterminer l’adresse IP de l’ordinateur auquel vous souhaitez vous connecter.</span><span class="sxs-lookup"><span data-stu-id="a8450-402">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * obj -&gt; unit" Usage="ping.SendAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-403"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-403">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-404">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-404">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-405">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-405">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-406">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-406">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-407">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-407">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="a8450-408">Chaque appel à cette méthode s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-408">Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-409">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-409">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-410">Pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement, vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-410">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-411">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-411">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-412">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-412">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-413">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-413">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-414">Si votre application doit être bloquée en attendant une réponse, utilisez une de la <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-414">If your application should block while waiting for a reply, use one of the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-415">Cette méthode envoie un 32 <xref:System.Byte> mémoire tampon de données avec le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-415">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="a8450-416">La méthode attend cinq secondes pour un message de réponse d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-416">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="a8450-417">Si elle ne reçoit pas une réponse pendant cette période, la méthode retourne et la <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-417">If it does not receive a reply in that time, the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="a8450-418">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-418">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-419">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-419">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-420">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-420">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-421">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-421">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-422">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-422">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-423">Le paquet ou les fragments de paquet peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-423">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-424">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-424">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-425">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-425">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-426">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-426">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-427">Pour obtenir un exemple de code qui montre comment appeler un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> (méthode), consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-427">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-428"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-428"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-429">Un appel à la méthode <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-429">A call to the <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> method is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-430"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-430"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-431">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-431">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-432">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-432">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-433"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-433"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-434">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-434">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-435">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-435">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-436">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-436">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-437"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-437">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-438">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-438">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-439">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-439">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-440">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à l’ordinateur spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-440">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-441">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-441">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-442">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-442">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="a8450-443">Chaque appel à cette méthode s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-443">Each call to this method executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-444">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-444">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-445">Pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement, vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-445">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-446">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-446">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-447">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-447">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-448">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-448">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-449">Si votre application doit être bloquée en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-449">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-450">Cette méthode envoie un 32 <xref:System.Byte> mémoire tampon de données avec le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-450">This method sends a 32 <xref:System.Byte> data buffer with the ICMP echo message.</span></span> <span data-ttu-id="a8450-451">La méthode attend cinq secondes pour un message de réponse d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-451">The method waits five seconds for an ICMP echo reply message.</span></span> <span data-ttu-id="a8450-452">Si elle ne reçoit pas une réponse pendant cette période la méthode est retournée et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-452">If it does not receive a reply in that time the method returns and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
 <span data-ttu-id="a8450-453">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-453">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-454">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-454">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-455">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-455">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-456">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-456">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-457">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-457">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-458">Le paquet ou les fragments de paquet peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-458">The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-459">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-459">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-460">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-460">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-461">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-461">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-462">Pour obtenir un exemple de code qui montre comment appeler le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> (méthode), consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-462">For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-463"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-463"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-464">Un appel à la méthode <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-464">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> method is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-465"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-465"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-466">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-466">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-467">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-467">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-468"><paramref name="hostNameOrAddress" /> n’a pas pu être résolu en adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-468"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-469">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-469">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-470">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-470">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-471">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-471">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-472"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-472">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-473">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-473">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-474">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-474">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-475">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-475">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-476">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-476">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-477">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-477">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-478">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-478">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="a8450-479">Chaque appel s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-479">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-480">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-480">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-481">Les applications utilisent un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-481">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="a8450-482">Vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-482">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-483">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-483">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-484">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-484">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-485">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-485">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a8450-486">Si votre application doit être bloquée en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-486">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-487">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-487">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-488">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-488">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-489">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-489">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-490">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-490">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-491">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-491">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-492">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-492">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-493">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-493">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-494">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-494">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-495">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-495">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-496">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-496">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-497">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-497">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-498">Pour obtenir un exemple de code qui montre comment appeler un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> de surcharge, consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-498">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-499"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-499"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-500"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-500"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-501">Un appel à la méthode <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-501">A call to <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> method is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-502"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-502"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-503">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-503">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-504">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-504">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-505"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-505"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-506">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-506">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-507">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-507">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-508">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-508">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-509"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-509">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-510">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-510">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-511">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-511">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-512">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-512">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-513">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à l’ordinateur spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-513">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-514">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-514">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-515">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-515">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-516">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-516">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="a8450-517">Chaque appel s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-517">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-518">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-518">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-519">Les applications utilisent un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-519">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="a8450-520">Vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-520">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-521">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-521">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-522">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-522">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-523">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-523">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a8450-524">Si votre application doit être bloquée en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-524">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-525">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-525">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-526">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-526">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-527">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-527">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-528">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-528">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-529">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-529">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-530">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-530">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-531">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-531">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-532">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-532">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-533">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-533">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-534">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-534">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-535">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-535">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-536">Pour obtenir un exemple de code qui montre comment appeler le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> (méthode), consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-536">For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-537"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-537"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-538"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-538"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-539">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-539">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-540"><paramref name="hostNameOrAddress" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-540"><paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-541">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-541">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-542">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-542">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-543"><paramref name="hostNameOrAddress" /> n’a pas pu être résolu en adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-543"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-544">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-544">This object has been disposed.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-545">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-545">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-546">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-546">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-547"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-547">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-548">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-548">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-549">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-549">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-550">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-550">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-551">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-551">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-552">Essaie d’envoyer un message ICMP d’écho de manière asynchrone avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-552">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-553">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-553">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-554">Cette méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-554">This method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-555">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-555">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="a8450-556">Chaque appel s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-556">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-557">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-557">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-558">Pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement, vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-558">To specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event, you must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-559">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-559">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-560">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-560">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-561">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-561">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-562">Si votre application se bloque en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-562">If your application blocks while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-563">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-563">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-564">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-564">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-565">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-565">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-566">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-566">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-567">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-567">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-568">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-568">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-569">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-569">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-570">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-570">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-571">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-571">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-572">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-572">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-573">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-573">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-574">Pour obtenir un exemple de code qui montre comment appeler un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> de surcharge, consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-574">For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-575"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-575"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8450-576">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8450-576">-or-</span></span> 
 <span data-ttu-id="a8450-577"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-577"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-578"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-578"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-579">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-579">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-580"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-580"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-581">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-581">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-582">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-582">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-583"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-583"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-584">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-584">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-585">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-585">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-586">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-586">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-587">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-587">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-588"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-588">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-589">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-589">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-590">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-590">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-591">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-591">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-592">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-592">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-593">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-593">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-594">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à l’ordinateur spécifié avec le tampon de données spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-594">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-595">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-595">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-596">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-596">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-597">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-597">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application should not block.</span></span> <span data-ttu-id="a8450-598">Chaque appel s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-598">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-599">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-599">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-600">Les applications utilisent un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-600">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="a8450-601">Vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-601">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-602">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet contenant un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-602">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object containing a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-603">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-603">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-604">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-604">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a8450-605">Si votre application doit être bloquée en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-605">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-606">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-606">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-607">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-607">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-608">Cette surcharge utilise les paramètres par défaut pour la fragmentation des paquets et le transfert des paquets.</span><span class="sxs-lookup"><span data-stu-id="a8450-608">This overload uses default settings for packet fragmentation and packet forwarding.</span></span> <span data-ttu-id="a8450-609">Le paquet qui contient le message d’écho ICMP peut être fragmenté en transit si la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants.</span><span class="sxs-lookup"><span data-stu-id="a8450-609">The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers.</span></span> <span data-ttu-id="a8450-610">Pour empêcher la fragmentation, utilisez une de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthodes acceptant une `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="a8450-610">To prevent fragmentation, use one of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property to `true`.</span></span> <span data-ttu-id="a8450-611">Lorsque <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-611">When <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-612">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-612">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span> <span data-ttu-id="a8450-613">Le paquet ou les fragments de paquet (en cas de fragmentation) peuvent être transférés par les nœuds de routage 128 fois avant d’être supprimés.</span><span class="sxs-lookup"><span data-stu-id="a8450-613">The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded.</span></span> <span data-ttu-id="a8450-614">Pour modifier ce paramètre, utilisez un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> surcharge qui accepte un `options` paramètre et affectez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété la valeur souhaitée.</span><span class="sxs-lookup"><span data-stu-id="a8450-614">To change this setting, use a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload that takes an `options` parameter, and set the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to the desired value.</span></span> <span data-ttu-id="a8450-615">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-615">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-616">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-616">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-617">L’exemple de code suivant montre comment appeler un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> de surcharge, consultez le <xref:System.Net.NetworkInformation.Ping> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="a8450-617">The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-618"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-618"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span>  
  
<span data-ttu-id="a8450-619">ou</span><span class="sxs-lookup"><span data-stu-id="a8450-619">-or-</span></span> 
 <span data-ttu-id="a8450-620"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-620"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-621"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-621"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-622">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-622">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-623"><paramref name="hostNameOrAddress" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-623"><paramref name="hostNameOrAddress" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-624">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-624">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-625">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-625">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-626"><paramref name="hostNameOrAddress" /> n’a pas pu être résolu en adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-626"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-627">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-627">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-628">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-628">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-629">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-629">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-630">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-630">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (address, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-631"><see cref="T:System.Net.IPAddress" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-631">An <see cref="T:System.Net.IPAddress" /> that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-632">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-632">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-633">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-633">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-634">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-634">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="a8450-635">Objet <see cref="T:System.Net.NetworkInformation.PingOptions" /> utilisé pour contrôler la fragmentation et les valeurs de la durée de vie (Time-to-Live) du paquet de messages ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-635">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-636">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-636">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-637">Essaie d’envoyer un message ICMP d’écho de manière asynchrone avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-637">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-638">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération et de contrôler la fragmentation et les valeurs de durée de vie pour le paquet de message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-638">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-639">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-639">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-640">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-640">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application must not block.</span></span> <span data-ttu-id="a8450-641">Chaque appel s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-641">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-642">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-642">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-643">Les applications utilisent un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-643">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="a8450-644">Vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-644">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-645">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-645">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-646">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-646">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-647">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-647">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a8450-648">Si votre application se bloque en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-648">If your application blocks while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-649">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-649">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-650">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-650">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-651">Si le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-651">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-652">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-652">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-653">Utilisez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété pour spécifier le nombre maximal de fois où le message ICMP d’écho peut être transféré avant d’atteindre sa destination.</span><span class="sxs-lookup"><span data-stu-id="a8450-653">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="a8450-654">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-654">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-655">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-655">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-656">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-656">The following code example demonstrates how to call this method.</span></span> <span data-ttu-id="a8450-657">Pour une implémentation de la méthode de rappel, consultez la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> section exemple de la surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-657">For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.</span></span>  
  
 <span data-ttu-id="a8450-658">L’exemple de code suivant requiert des espaces de noms suivants :</span><span class="sxs-lookup"><span data-stu-id="a8450-658">The following code example requires the following namespaces:</span></span>  
  
 [!code-cpp[NCLPingSampler#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#0)]
 [!code-csharp[NCLPingSampler#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#0)]  
  
 <span data-ttu-id="a8450-659">L’exemple de code suivant envoie un message ICMP d’écho de manière asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-659">The following code example sends an ICMP echo message asynchronously.</span></span>  
  
 [!code-cpp[NCLPingSampler#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#7)]
 [!code-csharp[NCLPingSampler#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-660"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-660"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8450-661">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8450-661">-or-</span></span> 
 <span data-ttu-id="a8450-662"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-662"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-663"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-663"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-664">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-664">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-665"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-665"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-666">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-666">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-667">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-667">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-668"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-668"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-669">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-669">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-670">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-670">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-671">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-671">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-672">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-672">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions * obj -&gt; unit" Usage="ping.SendAsync (hostNameOrAddress, timeout, buffer, options, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userToken" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-673"><see cref="T:System.String" /> qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-673">A <see cref="T:System.String" /> that identifies the computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-674">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-674">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-675">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-675">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-676">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-676">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-677">Valeur <see cref="T:System.Int32" /> qui spécifie le nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-677">An <see cref="T:System.Int32" /> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="options"><span data-ttu-id="a8450-678">Objet <see cref="T:System.Net.NetworkInformation.PingOptions" /> utilisé pour contrôler la fragmentation et les valeurs de la durée de vie (Time-to-Live) du paquet de messages ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-678">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <param name="userToken"><span data-ttu-id="a8450-679">Objet passé à la méthode appelée quand l’opération asynchrone est terminée.</span><span class="sxs-lookup"><span data-stu-id="a8450-679">An object that is passed to the method invoked when the asynchronous operation completes.</span></span></param>
        <summary><span data-ttu-id="a8450-680">Essaie d’envoyer un message ICMP d’écho de manière asynchrone à l’ordinateur spécifié avec le tampon de données spécifié et de recevoir un message ICMP de réponse à écho correspondant de cet ordinateur.</span><span class="sxs-lookup"><span data-stu-id="a8450-680">Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</span></span> <span data-ttu-id="a8450-681">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération et de contrôler la fragmentation et les valeurs de durée de vie pour le paquet ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-681">This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-682">Le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode envoie le message d’écho de manière asynchrone et, lorsque l’opération se termine (ou non), retourne l’état à votre application.</span><span class="sxs-lookup"><span data-stu-id="a8450-682">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application.</span></span> <span data-ttu-id="a8450-683">Appelez le <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> méthode quand votre application ne doit pas bloquer.</span><span class="sxs-lookup"><span data-stu-id="a8450-683">Call the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method when your application must not block.</span></span> <span data-ttu-id="a8450-684">Chaque appel s’exécute dans un thread distinct qui est alloué automatiquement du pool de threads.</span><span class="sxs-lookup"><span data-stu-id="a8450-684">Each call executes in a separate thread that is automatically allocated from the thread pool.</span></span> <span data-ttu-id="a8450-685">Quand l’opération asynchrone se termine, elle déclenche le <xref:System.Net.NetworkInformation.Ping.PingCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-685">When the asynchronous operation completes, it raises the <xref:System.Net.NetworkInformation.Ping.PingCompleted> event.</span></span> <span data-ttu-id="a8450-686">Les applications utilisent un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué pour spécifier la méthode est appelée lorsque <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> déclenche l’événement.</span><span class="sxs-lookup"><span data-stu-id="a8450-686">Applications use a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to specify the method that is called when <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> raises the event.</span></span> <span data-ttu-id="a8450-687">Vous devez ajouter un <xref:System.Net.NetworkInformation.PingCompletedEventHandler> délégué à l’événement avant d’appeler <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="a8450-687">You must add a <xref:System.Net.NetworkInformation.PingCompletedEventHandler> delegate to the event before calling <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</span></span> <span data-ttu-id="a8450-688">La méthode du délégué reçoit un <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet qui contient un <xref:System.Net.NetworkInformation.PingReply> objet qui décrit le résultat de la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-688">The delegate's method receives a <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object that contains a <xref:System.Net.NetworkInformation.PingReply> object that describes the result of the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span> <span data-ttu-id="a8450-689">Le <xref:System.Net.NetworkInformation.PingCompletedEventArgs> objet hérite les <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="a8450-689">The <xref:System.Net.NetworkInformation.PingCompletedEventArgs> object inherits the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="a8450-690">Cette propriété comporte le `userToken` objet passé à la <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="a8450-690">This property contains the `userToken` object passed into the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a8450-691">Si votre application doit être bloquée en attendant une réponse, utilisez le <xref:System.Net.NetworkInformation.Ping.Send%2A> méthodes ; ces méthodes sont synchrones.</span><span class="sxs-lookup"><span data-stu-id="a8450-691">If your application should block while waiting for a reply, use the <xref:System.Net.NetworkInformation.Ping.Send%2A> methods; these methods are synchronous.</span></span>  
  
 <span data-ttu-id="a8450-692">Si le message de réponse d’écho ICMP n’est pas reçu dans le délai spécifié par le `timeout` paramètre, le message ICMP d’écho échoue et le <xref:System.Net.NetworkInformation.PingReply.Status%2A> propriété est définie sur <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span><span class="sxs-lookup"><span data-stu-id="a8450-692">If the ICMP echo reply message is not received within the time specified by the `timeout` parameter, the ICMP echo fails, and the <xref:System.Net.NetworkInformation.PingReply.Status%2A> property is set to <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8450-693">Lors de la spécification des nombres très petits pour `timeout`, la réponse Ping peut être reçue même si `timeout` millisecondes écoulées.</span><span class="sxs-lookup"><span data-stu-id="a8450-693">When specifying very small numbers for `timeout`, the Ping reply can be received even if `timeout` milliseconds have elapsed.</span></span>  
  
 <span data-ttu-id="a8450-694">Si le <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> propriété est `true` et la taille totale du paquet dépasse la taille de paquet maximale pouvant être transmise par un des nœuds de routage entre les ordinateurs locaux et distants, la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-694">If the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property is `true` and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-695">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span><span class="sxs-lookup"><span data-stu-id="a8450-695">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.</span></span>  
  
 <span data-ttu-id="a8450-696">Utilisez le <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> propriété pour spécifier le nombre maximal de fois où le message ICMP d’écho peut être transféré avant d’atteindre sa destination.</span><span class="sxs-lookup"><span data-stu-id="a8450-696">Use the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination.</span></span> <span data-ttu-id="a8450-697">Si le paquet n’atteint pas sa destination après avoir été transféré le nombre de fois spécifié, le paquet est rejeté et la demande d’écho ICMP échoue.</span><span class="sxs-lookup"><span data-stu-id="a8450-697">If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails.</span></span> <span data-ttu-id="a8450-698">Dans ce cas, le <xref:System.Net.NetworkInformation.PingReply.Status%2A> est défini sur <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span><span class="sxs-lookup"><span data-stu-id="a8450-698">When this happens, the <xref:System.Net.NetworkInformation.PingReply.Status%2A> is set to <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8450-699">L’exemple de code suivant montre comment appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="a8450-699">The following code example demonstrates how to call this method.</span></span>  
  
 [!code-cpp[NCLPingAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-700"><paramref name="hostNameOrAddress" /> a la valeur <see langword="null" /> ou est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="a8450-700"><paramref name="hostNameOrAddress" /> is <see langword="null" /> or is an empty string ("").</span></span>  
  
<span data-ttu-id="a8450-701">ou</span><span class="sxs-lookup"><span data-stu-id="a8450-701">-or-</span></span> 
 <span data-ttu-id="a8450-702"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-702"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-703"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-703"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-704">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-704">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8450-705"><paramref name="address" /> est une adresse IPv6 et l’ordinateur local exécute un système d’exploitation antérieur à Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="a8450-705"><paramref name="address" /> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-706">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-706">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-707">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-707">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-708"><paramref name="hostNameOrAddress" /> n’a pas pu être résolu en adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-708"><paramref name="hostNameOrAddress" /> could not be resolved to a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-709">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-709">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-710">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-710">The size of <paramref name="buffer" /> exceeds 65500 bytes.</span></span></exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission"><span data-ttu-id="a8450-711">Pour envoyer un message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-711">To send an ICMP echo message.</span></span>  
  
<span data-ttu-id="a8450-712">Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span><span class="sxs-lookup"><span data-stu-id="a8450-712">Associated enumeration: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="ping.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8450-713">Annule toutes les demandes asynchrones en attente pour envoyer un message ICMP d’écho et reçoit un message ICMP de réponse à écho correspondant.</span><span class="sxs-lookup"><span data-stu-id="a8450-713">Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-714">Appelez cette méthode pour mettre fin à tous les appels à <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> qui ne sont pas terminées.</span><span class="sxs-lookup"><span data-stu-id="a8450-714">Call this method to terminate any calls to <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> that have not completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendPingAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8450-715">Envoie un message ICMP d’écho à un ordinateur et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-715">Sends an Internet Control Message Protocol (ICMP) echo message to a computer, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-716">Adresse IP qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-716">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <summary><span data-ttu-id="a8450-717">Envoie un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-717">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-718">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-718">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-719">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-719">This operation will not block.</span></span> <span data-ttu-id="a8450-720">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-720">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-721"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-721"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-722">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-722">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-723">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-723">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-724">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-724">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-725"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-725"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-726">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-726">This object has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-727">Ordinateur de destination pour le message d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-727">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-728">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-728">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <summary><span data-ttu-id="a8450-729">Envoie un message ICMP d’écho à l’ordinateur spécifié avec le tampon de données spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-729">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-730">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-730">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-731">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-731">This operation will not block.</span></span> <span data-ttu-id="a8450-732">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-732">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-733">Adresse IP qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-733">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-734">Nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-734">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="a8450-735">Envoie un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-735">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="a8450-736">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-736">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-737">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-737">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-738">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-738">This operation will not block.</span></span> <span data-ttu-id="a8450-739">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-739">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-740">Ordinateur de destination pour le message d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-740">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-741">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-741">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-742">Nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-742">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <summary><span data-ttu-id="a8450-743">Envoie un message ICMP d’écho à l’ordinateur spécifié avec le tampon de données spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-743">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="a8450-744">Cette surcharge vous permet de spécifier une valeur de délai pour l’opération.</span><span class="sxs-lookup"><span data-stu-id="a8450-744">This overload allows you to specify a time-out value for the operation.</span></span></summary>
        <returns><span data-ttu-id="a8450-745">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-745">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-746">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-746">This operation will not block.</span></span> <span data-ttu-id="a8450-747">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-747">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-748">Adresse IP qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-748">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-749">Nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-749">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-750">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-750">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-751">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-751">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="a8450-752">Envoie un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-752">Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="a8450-753">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération et une mémoire tampon à utiliser pour l’envoi et la réception.</span><span class="sxs-lookup"><span data-stu-id="a8450-753">This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</span></span></summary>
        <returns><span data-ttu-id="a8450-754">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-754">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-755">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-755">This operation will not block.</span></span> <span data-ttu-id="a8450-756">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-756">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-757"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-757"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8450-758">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8450-758">-or-</span></span> 
 <span data-ttu-id="a8450-759"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-759"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-760"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-760"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-761">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-761">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-762">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-762">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-763">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-763">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-764"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-764"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-765">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-765">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-766">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-766">The size of <paramref name="buffer" /> exceeds 65,500 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-767">Ordinateur de destination pour le message d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-767">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-768">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-768">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-769">Nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-769">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-770">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-770">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-771">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-771">The array cannot contain more than 65,500 bytes.</span></span></param>
        <summary><span data-ttu-id="a8450-772">Envoie un message ICMP d’écho à l’ordinateur spécifié avec le tampon de données spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-772">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="a8450-773">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération et une mémoire tampon à utiliser pour l’envoi et la réception.</span><span class="sxs-lookup"><span data-stu-id="a8450-773">This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</span></span></summary>
        <returns><span data-ttu-id="a8450-774">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-774">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-775">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-775">This operation will not block.</span></span> <span data-ttu-id="a8450-776">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-776">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : System.Net.IPAddress * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (address, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="a8450-777">Adresse IP qui identifie l’ordinateur de destination pour le message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-777">An IP address that identifies the computer that is the destination for the ICMP echo message.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-778">Nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-778">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-779">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-779">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-780">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-780">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="a8450-781">Objet <see cref="T:System.Net.NetworkInformation.PingOptions" /> utilisé pour contrôler la fragmentation et les valeurs de la durée de vie (Time-to-Live) du paquet de messages ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-781">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="a8450-782">Envoie un message ICMP d’écho avec le tampon de données spécifié à l’ordinateur qui a le <see cref="T:System.Net.IPAddress" /> spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-782">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <see cref="T:System.Net.IPAddress" />, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="a8450-783">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération, une mémoire tampon à utiliser pour les envois et les réceptions, et de contrôler la fragmentation et les valeurs de durée de vie pour le paquet de message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-783">This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <returns><span data-ttu-id="a8450-784">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-784">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-785">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-785">This operation will not block.</span></span> <span data-ttu-id="a8450-786">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-786">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8450-787"><paramref name="address" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-787"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8450-788">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8450-788">-or-</span></span> 
 <span data-ttu-id="a8450-789"><paramref name="buffer" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-789"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8450-790"><paramref name="timeout" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="a8450-790"><paramref name="timeout" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8450-791">Un appel à <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> est en cours.</span><span class="sxs-lookup"><span data-stu-id="a8450-791">A call to <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" /> is in progress.</span></span></exception>
        <exception cref="T:System.Net.NetworkInformation.PingException"><span data-ttu-id="a8450-792">Une exception a été levée lors de l’envoi ou de la réception des messages ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-792">An exception was thrown while sending or receiving the ICMP messages.</span></span> <span data-ttu-id="a8450-793">Consultez l’exception interne de l’exception exacte qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="a8450-793">See the inner exception for the exact exception that was thrown.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8450-794"><paramref name="address" /> n’est pas une adresse IP valide.</span><span class="sxs-lookup"><span data-stu-id="a8450-794"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8450-795">Cet objet a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="a8450-795">This object has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8450-796">La taille de <paramref name="buffer" /> dépasse 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-796">The size of <paramref name="buffer" /> exceeds 65,500 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.SendPingAsync : string * int * byte[] * System.Net.NetworkInformation.PingOptions -&gt; System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;" Usage="ping.SendPingAsync (hostNameOrAddress, timeout, buffer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="a8450-797">Ordinateur de destination pour le message d’écho ICMP.</span><span class="sxs-lookup"><span data-stu-id="a8450-797">The computer that is the destination for the ICMP echo message.</span></span> <span data-ttu-id="a8450-798">La valeur spécifiée pour ce paramètre peut être un nom d’hôte ou la représentation sous forme de chaîne d’une adresse IP.</span><span class="sxs-lookup"><span data-stu-id="a8450-798">The value specified for this parameter can be a host name or a string representation of an IP address.</span></span></param>
        <param name="timeout"><span data-ttu-id="a8450-799">Nombre maximal de millisecondes (après envoi du message d’écho) d’attente du message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-799">The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</span></span></param>
        <param name="buffer"><span data-ttu-id="a8450-800">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer avec le message ICMP d’écho et à retourner dans le message ICMP de réponse à écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-800">A <see cref="T:System.Byte" /> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message.</span></span> <span data-ttu-id="a8450-801">Le tableau ne peut pas contenir plus de 65 500 octets.</span><span class="sxs-lookup"><span data-stu-id="a8450-801">The array cannot contain more than 65,500 bytes.</span></span></param>
        <param name="options"><span data-ttu-id="a8450-802">Objet <see cref="T:System.Net.NetworkInformation.PingOptions" /> utilisé pour contrôler la fragmentation et les valeurs de la durée de vie (Time-to-Live) du paquet de messages ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-802">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></param>
        <summary><span data-ttu-id="a8450-803">Envoie un message ICMP d’écho à l’ordinateur spécifié avec le tampon de données spécifié et reçoit un message ICMP de réponse à écho correspondant de cet ordinateur en tant qu’opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-803">Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</span></span> <span data-ttu-id="a8450-804">Cette surcharge vous permet de spécifier une valeur de délai d’attente pour l’opération, une mémoire tampon à utiliser pour les envois et les réceptions, et de contrôler la fragmentation et les valeurs de durée de vie pour le paquet de message ICMP d’écho.</span><span class="sxs-lookup"><span data-stu-id="a8450-804">This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</span></span></summary>
        <returns><span data-ttu-id="a8450-805">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="a8450-805">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8450-806">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="a8450-806">This operation will not block.</span></span> <span data-ttu-id="a8450-807">Retourné <xref:System.Threading.Tasks.Task%601>> objet se termine une fois que le paquet ICMP a été envoyé et la réponse a été reçue.</span><span class="sxs-lookup"><span data-stu-id="a8450-807">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the ICMP packet has been sent and the response has been received.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8450-808">Libère toutes les ressources utilisées par des instances de la classe <see cref="T:System.Net.NetworkInformation.Ping" />.</span><span class="sxs-lookup"><span data-stu-id="a8450-808">Releases all resources used by instances of the <see cref="T:System.Net.NetworkInformation.Ping" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="a8450-809">Si vous appelez une méthode sur un <xref:System.Net.NetworkInformation.Ping> objet qui a été supprimé, vous recevez un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="a8450-809">If you call any method on a <xref:System.Net.NetworkInformation.Ping> object that has been disposed, you receive an <xref:System.ObjectDisposedException>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>