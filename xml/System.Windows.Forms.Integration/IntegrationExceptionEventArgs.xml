<Type Name="IntegrationExceptionEventArgs" FullName="System.Windows.Forms.Integration.IntegrationExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1905a8e46abe5872b242ba7b7ae942c98f44675" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30627093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IntegrationExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntegrationExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class IntegrationExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntegrationExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsFormsIntegration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe de base pour les classes <see cref="T:System.EventArgs" /> qui prennent éventuellement en charge la levée d'exceptions.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs> classe permet à l’utilisateur afficher un aperçu d’une exception avant qu’elle soit générée.  
  
 Dans votre gestionnaire d’événements, définissez la valeur de la <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> propriété `true` pour indiquer que l’exception doit être déclenchée.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
    <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegrationExceptionEventArgs (bool throwException, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool throwException, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.#ctor(System.Boolean,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegrationExceptionEventArgs(bool throwException, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwException" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="throwException">
          <see langword="true" /> pour lever la <see cref="T:System.Exception" /> spécifiée par <c>exception</c> ; sinon, <see langword="false" />.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> à lever.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exception" /> est <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
        <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'<see cref="T:System.Exception" /> associée à cette <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</summary>
        <value>
          <see cref="T:System.Exception" /> associé à ce <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
        <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant s'il convient de lever <see cref="T:System.Exception" /> spécifié par la propriété <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />.</summary>
        <value>
          <see langword="true" /> si <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" /> est levé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans votre gestionnaire d’événements, définissez la valeur de la <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> propriété `true` pour indiquer que l’exception doit être déclenchée.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />
        <altmember cref="T:System.Windows.Forms.Integration.ElementHost" />
      </Docs>
    </Member>
  </Members>
</Type>