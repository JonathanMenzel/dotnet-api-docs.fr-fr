<Type Name="MetaAccessor" FullName="System.Data.Linq.Mapping.MetaAccessor">
  <TypeSignature Language="C#" Value="public abstract class MetaAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaAccessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaAccessor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaAccessor abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c6f4c-101">Représente un accesseur à un membre.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-101">Represents an accessor to a member.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaAccessor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6f4c-102">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.Mapping.MetaAccessor" />.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaAccessor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoxedValue">
      <MemberSignature Language="C#" Value="public abstract object GetBoxedValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetBoxedValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoxedValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetBoxedValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c6f4c-103">Instance à partir de laquelle obtenir la valeur ou sur laquelle définir la valeur.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-103">The instance from which to get the value or on which to set the value.</span></span></param>
        <summary><span data-ttu-id="c6f4c-104">Spécifie un objet sur lequel définir une valeur ou à partir duquel obtenir une valeur.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-104">Specifies an object on which to set a value or from which to get a value.</span></span></summary>
        <returns><span data-ttu-id="c6f4c-105">Valeur boxed de cette instance.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-105">The boxed value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedValue">
      <MemberSignature Language="C#" Value="public virtual bool HasAssignedValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAssignedValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAssignedValue (instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAssignedValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c6f4c-106">Instance regardée.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-106">The instance being looked at.</span></span></param>
        <summary><span data-ttu-id="c6f4c-107">Spécifie si l'instance a une valeur assignée.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-107">Specifies whether the instance has an assigned value.</span></span></summary>
        <returns>
          <span data-ttu-id="c6f4c-108"><see langword="true" /> si l'instance a actuellement une valeur assignée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-108"><see langword="true" /> if the instance currently has an assigned value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedValue">
      <MemberSignature Language="C#" Value="public virtual bool HasLoadedValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLoadedValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasLoadedValue (instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLoadedValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c6f4c-109">Instance regardée.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-109">The instance being looked at.</span></span></param>
        <summary><span data-ttu-id="c6f4c-110">Spécifie si l'instance a une valeur chargée à partir d'une source différée.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-110">Specifies whether the instance has a value loaded from a deferred source.</span></span></summary>
        <returns>
          <span data-ttu-id="c6f4c-111"><see langword="true" /> si la valeur actuelle de l'instance est chargée à partir d'une source différée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-111"><see langword="true" /> if the instance currently has a value loaded from a deferred source; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual bool HasValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c6f4c-112">Instance regardée.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-112">The instance being looked at.</span></span></param>
        <summary><span data-ttu-id="c6f4c-113">Spécifie si l'instance a une valeur chargée ou assignée.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-113">Specifies whether the instance has a loaded or assigned value.</span></span></summary>
        <returns>
          <span data-ttu-id="c6f4c-114"><see langword="true" /> si l'instance a actuellement une valeur chargée ou assignée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-114"><see langword="true" /> if the instance currently has a loaded or assigned value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoxedValue">
      <MemberSignature Language="C#" Value="public abstract void SetBoxedValue (ref object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBoxedValue(object&amp; instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetBoxedValue (ByRef instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetBoxedValue(System::Object ^ % instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="c6f4c-115">Instance dans laquelle définir la valeur.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-115">The instance into which to set the value.</span></span></param>
        <param name="value"><span data-ttu-id="c6f4c-116">Valeur à définir.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-116">The value to set.</span></span></param>
        <summary><span data-ttu-id="c6f4c-117">Définit la valeur en tant qu'objet.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-117">Sets the value as an object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAccessor.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6f4c-118">Obtient le type du membre auquel cet accesseur accède.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-118">Gets the type of the member accessed by this accessor.</span></span></summary>
        <value><span data-ttu-id="c6f4c-119">Type du membre.</span><span class="sxs-lookup"><span data-stu-id="c6f4c-119">The type of the member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>