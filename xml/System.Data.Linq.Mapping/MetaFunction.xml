<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetaFunction.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac509c366e4b506bbfa68cd1b66d8a9825c1aa7a1d8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09c366e4b506bbfa68cd1b66d8a9825c1aa7a1d8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Mapping.MetaFunction">
          <source>Represents the mapping between a context method and a database function.</source>
          <target state="translated">Représente le mappage entre une méthode de contexte et une fonction de base de données.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaFunction.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaFunction" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaFunction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults">
          <source>Gets whether or not the stored procedure has multiple result types.</source>
          <target state="translated">Obtient une valeur indiquant si la procédure stockée a ou non plusieurs types de résultats.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stored procedure has multiple result types.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la procédure stockée a plusieurs types de résultats.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.IsComposable">
          <source>Gets whether the function can be composed within a query.</source>
          <target state="translated">Obtient une valeur indiquant si la fonction peut être composée dans une requête.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.IsComposable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the function can be composed within a query.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la fonction peut être composée dans une requête.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.IsComposable">
          <source>A stored procedure cannot be composed within a query.</source>
          <target state="translated">Une procédure stockée ne peut pas être composée dans une requête.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.IsComposable">
          <source>Methods that represent stored procedures return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Les méthodes qui représentent des procédures stockées retournent <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.MappedName">
          <source>Gets the name of the database function or procedure.</source>
          <target state="translated">Obtient le nom de la fonction de base de données ou de la procédure.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.MappedName">
          <source>A string representing the name of the database function or procedure.</source>
          <target state="translated">Chaîne représentant le nom de la procédure ou de la fonction de base de données.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.Method">
          <source>Gets the underlying context method.</source>
          <target state="translated">Obtient la méthode de contexte sous-jacente.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.Method">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds with the underlying context method.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> qui correspond à la méthode de contexte sous-jacente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.Model">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> that contains this function.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> qui contient cette fonction.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.Model">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> object that contains this function.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> qui contient cette fonction.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.Name">
          <source>Gets the name of the method.</source>
          <target state="translated">Obtient le nom de la méthode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.Name">
          <source>A <ph id="ph1">&lt;see langword="string" /&gt;</ph> that represents the name of the method.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="string" /&gt;</ph> qui représente le nom de la méthode.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.Name">
          <source>This is the same name as the <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> name.</source>
          <target state="translated">Il s’agit du même nom que le <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> nom.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.Parameters">
          <source>Gets an enumeration of the function parameters.</source>
          <target state="translated">Obtient une énumération des paramètres de fonction.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.Parameters">
          <source>A collection of the parameters.</source>
          <target state="translated">Collection des paramètres.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes">
          <source>Gets the enumeration of possible result row types.</source>
          <target state="translated">Obtient l'énumération des types de lignes de résultats possibles.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes">
          <source>A collection of possible types.</source>
          <target state="translated">Collection de types possibles.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter">
          <source>Gets the return parameter.</source>
          <target state="translated">Obtient le paramètre de retour.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaParameter" /&gt;</ph> that corresponds to the return parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaParameter" /&gt;</ph> qui correspond au paramètre de retour.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>