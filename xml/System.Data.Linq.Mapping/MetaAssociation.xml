<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetaAssociation.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5be78e0da3129064b4c247800e736da72c7c2064b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be78e0da3129064b4c247800e736da72c7c2064b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Mapping.MetaAssociation">
          <source>Represents an association relationship between two entity types.</source>
          <target state="translated">Représente une relation d'association entre deux types d'entité.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaAssociation.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaAssociation" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaAssociation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull">
          <source>Gets whether the object should be deleted when the association is set to null.</source>
          <target state="translated">Obtient une valeur indiquant si l'objet doit être supprimé lorsque l'association a la valeur null.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the object is deleted when the association is set to null.</source>
          <target state="translated">Si l'objet a la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il est supprimé lorsque l'association a la valeur null.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
          <source>Gets the behavior when the child is deleted.</source>
          <target state="translated">Obtient le comportement lorsque l'enfant est supprimé.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
          <source>The string representing the rule, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no action is specified on delete.</source>
          <target state="translated">Chaîne qui représente la règle, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si aucune action n'est spécifiée sur la suppression.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule">
          <source>Examples of rules are "CASCADE", "SET NULL", and so forth.</source>
          <target state="translated">Exemples de règles sont « CASCADE », « SET NULL » et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey">
          <source>Gets whether the other type is the parent of this type.</source>
          <target state="translated">Obtient une valeur indiquant si l'autre type est le parent de ce type.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> is the other type is the parent of this type.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'autre type est le parent de ce type.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsMany">
          <source>Gets whether the association represents a one-to-many relationship.</source>
          <target state="translated">Obtient une valeur indiquant si l'association représente une relation de type un-à-plusieurs.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsMany">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the association represents a one-to-many relationship.</source>
          <target state="translated">Retourne la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'association représente une relation de type un-à-plusieurs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable">
          <source>Gets whether the association can be null.</source>
          <target state="translated">Obtient une valeur indiquant si l'association peut être null.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the association can be null.</source>
          <target state="translated">Retourne la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'association peut être null.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
          <source>Gets whether the association is unique.</source>
          <target state="translated">Obtient une valeur indiquant si l'association est unique.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the association is unique.</source>
          <target state="translated">Retourne la valeur <ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'association est unique.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique">
          <source>This property indicates a uniqueness constraint in the database.</source>
          <target state="translated">Cette propriété indique une contrainte d’unicité dans la base de données.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey">
          <source>Gets a list of members that represents the values on the other side of the association.</source>
          <target state="translated">Obtient une liste de membres qui représente les valeurs de l'autre côté de l'association.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey">
          <source>Returns a collection representing values on the other side of the association.</source>
          <target state="translated">Retourne une collection qui représente les valeurs de l'autre côté de l'association.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey">
          <source>Gets whether the <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forms the identity of the other type.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forme l'identité de l'autre type.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forms the identity (primary key) of the other type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /&gt;</ph> forme l'identité (clé primaire) de l'autre type.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
          <source>Gets the member on the other side of this association that represents the reverse association.</source>
          <target state="translated">Obtient le membre de l'autre côté de cette association qui représente l'association inverse.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
          <source>The member on the other side.</source>
          <target state="translated">Membre de l'autre côté.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember">
          <source>This value can be null.</source>
          <target state="translated">Cette valeur peut être null.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherType">
          <source>Gets the type on the other side of the association.</source>
          <target state="translated">Obtient le type de l'autre côté de l'association.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.OtherType">
          <source>The type.</source>
          <target state="translated">Type.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey">
          <source>Gets a list of members representing the values on this side of the association.</source>
          <target state="translated">Obtient une liste des membres qui représentent les valeurs de ce côté de l'association.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey">
          <source>A collection.</source>
          <target state="translated">Collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forms the identity of this type.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forme l'identité de ce type.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forms the identity (primary key) of the association.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /&gt;</ph> forme l'identité (clé primaire) de l'association.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember">
          <source>Gets the member on this side that represents the association.</source>
          <target state="translated">Obtient le membre de ce côté qui représente l'association.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember">
          <source>The member.</source>
          <target state="translated">Membre.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>