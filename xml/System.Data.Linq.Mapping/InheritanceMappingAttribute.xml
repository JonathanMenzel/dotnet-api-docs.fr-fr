<Type Name="InheritanceMappingAttribute" FullName="System.Data.Linq.Mapping.InheritanceMappingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3e656a4c730a4067e203463ec7ba596afd76f70" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48633303" /></Metadata><TypeSignature Language="C#" Value="public sealed class InheritanceMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InheritanceMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InheritanceMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceMappingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InheritanceMappingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4bdaa-101">Mappe une hiérarchie d’héritage dans une application LINQ to SQL.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-101">Maps an inheritance hierarchy in a LINQ to SQL application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bdaa-102">Un <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> est spécifié par classe mappée.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-102">One <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> is specified per mapped class.</span></span>  
  
 <span data-ttu-id="4bdaa-103">Notez les points suivants lorsque vous mappez des hiérarchies d’héritage :</span><span class="sxs-lookup"><span data-stu-id="4bdaa-103">Note the following when you map inheritance hierarchies:</span></span>  
  
-   <span data-ttu-id="4bdaa-104">Toutes les classes dans une hiérarchie doivent être mappés à une seule table.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-104">All classes in a hierarchy must be mapped to a single table.</span></span>  
  
-   <span data-ttu-id="4bdaa-105">La table pour une hiérarchie d’héritage doit être déclarée sur le type mappé qui s’affiche en haut de la hiérarchie.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-105">The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy.</span></span> <span data-ttu-id="4bdaa-106">Vous ne pouvez pas spécifier les attributs de tableau ou un mappage dans une classe dérivée de la classe supérieure.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-106">You cannot specify the table or mapping attributes in a class that is derived from the top class.</span></span>  
  
-   <span data-ttu-id="4bdaa-107">Vous pouvez utiliser une interface dans une hiérarchie, mais [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] le n’est pas mappé.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-107">You can use an interface in a hierarchy, but [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] does not map it.</span></span>  
  
-   <span data-ttu-id="4bdaa-108">Vous pouvez ignorer une classe dans la hiérarchie lorsque vous mappez des classes, mais vous pouvez interroger sur des classes mappées uniquement.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-108">You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.</span></span>  
  
 <span data-ttu-id="4bdaa-109">Pour la matérialisation correcte, les valeurs de discriminateur code doivent être unique et correspondent aux valeurs dans la base de données.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-109">For correct materialization, discriminator code values must be unique and match the values in the database.</span></span> <span data-ttu-id="4bdaa-110">Une ligne avec une valeur de code du discriminateur qui ne correspond pas exactement à (même par la casse) instancie la classe à l’aide de <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-110">A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bdaa-111">Cet exemple montre le mappage d’héritage pour une hiérarchie où mappées de la partie supérieure, classe (`Shape`) est abstraite.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-111">This example shows inheritance mapping for a hierarchy where the top, mapped class (`Shape`) is abstract.</span></span>  
  
 [!code-csharp[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/vb/Module1.vb#1)]  
  
 <span data-ttu-id="4bdaa-112">L’exemple suivant montre l’inclusion de classes non mappées.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-112">The following example shows the inclusion of unmapped classes.</span></span> <span data-ttu-id="4bdaa-113">Vous pouvez placer des classes non mappés n’importe où dans la hiérarchie.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-113">You can put unmapped classes anywhere in the hierarchy.</span></span>  
  
 [!code-csharp[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/vb/Module1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceMappingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceMappingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bdaa-114">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-114">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Code">
      <MemberSignature Language="C#" Value="public object Code { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Code" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
      <MemberSignature Language="VB.NET" Value="Public Property Code As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Code { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Code : obj with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bdaa-115">Obtient ou définit la valeur de code du discriminateur dans une hiérarchie d'héritage mappée.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-115">Gets or sets the discriminator code value in a mapped inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="4bdaa-116">Doit être spécifié par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-116">Must be user-specified.</span></span> <span data-ttu-id="4bdaa-117">Il n'y a pas de valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-117">There is no default value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bdaa-118">Obtient ou définit si un objet de ce type est instancié lorsque la valeur du discriminateur ne correspond pas à une valeur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-118">Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.</span></span></summary>
        <value><span data-ttu-id="4bdaa-119">Valeur par défaut = <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-119">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bdaa-120">Un seul de la <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributs doivent être déclarés avec <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> comme `true`.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-120">Exactly one of the <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributes must be declared with <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bdaa-121">Obtient ou définit le type de la classe dans la hiérarchie.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-121">Gets or sets the type of the class in the hierarchy.</span></span></summary>
        <value><span data-ttu-id="4bdaa-122">Doit être spécifié par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-122">Must be user-specified.</span></span> <span data-ttu-id="4bdaa-123">Il n'y a pas de valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-123">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bdaa-124">Utilisez n’importe quel type non abstrait dans la hiérarchie d’héritage, y compris le type racine.</span><span class="sxs-lookup"><span data-stu-id="4bdaa-124">Use any non-abstract type in the inheritance hierarchy, including the root type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>