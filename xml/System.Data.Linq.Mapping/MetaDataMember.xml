<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="195f8be7eea6436f98a825616ab87802912d8f7f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b49ec-101">Représente le mappage entre un champ ou une propriété d'un objet de domaine dans une colonne d'une table de base de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b49ec-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-102">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Linq.Mapping.MetaDataMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-103">Obtient l'objet <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> qui correspond à ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-103">Gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-104">Objet <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> correspondant s'il en existe un ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-105">Cette propriété représente une association de base de données comme une clé étrangère à une relation de clé primaire.</span><span class="sxs-lookup"><span data-stu-id="b49ec-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-106">Obtient le comportement de relecture de ce membre pour les opérations d'insertion et de mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-106">Gets the read-back behavior for this member for insert and update operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-107">Énumération <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-107">An <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-108">Obtient une valeur indiquant si la valeur <see langword="null" /> peut être affectée à ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-108">Gets whether the value of this member can be assigned the <see langword="null" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-109">
            <see langword="true" /> si la valeur <see langword="null" /> peut être assignée à ce membre ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-109">
              <see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-110">Cette propriété est dépendante de la <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> propriété et est fournie pour des raisons pratiques.</span><span class="sxs-lookup"><span data-stu-id="b49ec-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-111">Obtient le type de la colonne de base de données correspondante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-111">Gets the type of the corresponding database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-112">Type de la colonne de base de données sous la forme d'une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-112">The type of the database column as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-113">Il s’agit du texte exact utilisé pour définir la colonne dans une commande de déclaration de table Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="b49ec-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="b49ec-114">Si non défini, le type de colonne de base de données est déduit du type de membre.</span><span class="sxs-lookup"><span data-stu-id="b49ec-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-115">Obtient l'objet <see cref="T:System.Data.Linq.Mapping.MetaType" /> qui contient ce membre de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-115">Gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-116">Type méta contenant le membre actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-116">The meta-type that contains the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-117">Obtient l'accesseur utilisé pour obtenir et définir la source différée de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-117">Gets the accessor that is used to get and set the deferred source of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-118">Accesseur utilisé pour accéder à la source différée de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-118">The accessor used to access the deferred source for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-119">Obtient l'accesseur utilisé pour obtenir et définir la valeur différée de ce membre (sans provoquer l'extraction).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-119">Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-120">Accesseur utilisé pour accéder à la valeur différée de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-120">The accessor used to access the deferred value for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-121">Obtient l'expression qui définit une colonne calculée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-121">Gets the expression that defines a computed column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-122">Expression de la colonne calculée comme une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-122">The expression for the computed column as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-123">Obtient une valeur indiquant si ce membre définit une relation d'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-123">Gets whether this member defines an association relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-124">
            <see langword="true" /> si ce membre définit une relation d'association ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-124">
              <see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-125">Obtient une valeur indiquant si ce membre est généré automatiquement par la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-125">Gets whether this member is automatically generated by the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-126">
            <see langword="true" /> si ce membre est généré automatiquement par la base de données ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-126">
              <see langword="true" /> if this member is automatically generated by the database; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-127">Les membres générés automatiquement sont synchronisés immédiatement après que la ligne de données correspondante est insérée.</span><span class="sxs-lookup"><span data-stu-id="b49ec-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="b49ec-128">Insérer la clé générée par le déclencheur de valeurs ne sont pas prises en charge.</span><span class="sxs-lookup"><span data-stu-id="b49ec-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b49ec-129">Type à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-129">The type to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b49ec-130">Spécifie si ce membre est déclaré par le type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-130">Specifies whether this member is declared by the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b49ec-131">
            <see langword="true" /> si ce membre est déclaré par le type spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-131">
              <see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-132">Obtient une valeur indiquant si le comportement par défaut consiste à charger ce membre sur une base différée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-132">Gets whether the default behavior is to load this member on a deferred basis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-133">
            <see langword="true" /> si ce membre est chargé par défaut sur une base différée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-133">
              <see langword="true" /> if this member loaded on a deferred basis by default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-134">Obtient une valeur indiquant si ce membre représente le discriminateur d'héritage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-134">Gets whether this member represents the inheritance discriminator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-135">
            <see langword="true" /> si ce membre représente le discriminateur d'héritage ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-135">
              <see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-136">Cette propriété peut être `true` pour au plus un membre de la plus haute classe mappée dans une hiérarchie.</span><span class="sxs-lookup"><span data-stu-id="b49ec-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-137">Obtient une valeur indiquant si ce membre est mappé à une colonne (ou une contrainte).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-137">Gets whether this member is mapped to a column (or constraint).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-138">
            <see langword="true" /> si ce membre est mappé à une colonne (ou une contrainte) ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-138">
              <see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-139">Une classe peut avoir une combinaison de membres persistantes et non persistantes.</span><span class="sxs-lookup"><span data-stu-id="b49ec-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="b49ec-140">Membres persistants sont mappés alors que les membres non persistants ne sont pas mappés.</span><span class="sxs-lookup"><span data-stu-id="b49ec-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="b49ec-141">Une classe mappée doit avoir au moins un membre persistant.</span><span class="sxs-lookup"><span data-stu-id="b49ec-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-142">Obtient une valeur indiquant si ce membre fait partie de l'identité du type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-142">Gets whether this member is part of the type's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-143">
            <see langword="true" /> si ce membre fait partie de l'identité du type ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-143">
              <see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-144">Si cette propriété est `true`, le membre de classe représente une colonne qui fait partie de clé unique de la table.</span><span class="sxs-lookup"><span data-stu-id="b49ec-144">If this property is `true`, the class member represents a column that is part of the table’s unique key.</span></span> <span data-ttu-id="b49ec-145">Cette propriété la valeur peut avoir à plusieurs membres de la classe `true` pour une clé qui est un composite des colonnes associées.</span><span class="sxs-lookup"><span data-stu-id="b49ec-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="b49ec-146">Pour une classe d’entité, au moins un membre et doit être cet attribut doit être mappé à la clé primaire ou une clé unique dans la table ou vue correspondante.</span><span class="sxs-lookup"><span data-stu-id="b49ec-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="b49ec-147">Sinon, LINQ to SQL prend en compte les instances de la classe en lecture seule à des fins de soumettre des modifications à la base de données.</span><span class="sxs-lookup"><span data-stu-id="b49ec-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="b49ec-148">Le jeu de colonnes identifié avec <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> ne doivent pas être la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="b49ec-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="b49ec-149">Il désigne simplement un ensemble qui identifie de façon unique l’entité.</span><span class="sxs-lookup"><span data-stu-id="b49ec-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="b49ec-150">Les alternatives communes comprennent le clustering des colonnes d’index ou d’autres colonnes de clé uniques.</span><span class="sxs-lookup"><span data-stu-id="b49ec-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-151">Obtient une valeur indiquant si ce membre représente la version de ligne ou l'horodatage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-151">Gets whether this member represents the row version or timestamp.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-152">
            <see langword="true" /> si ce membre représente la version de ligne ou l'horodatage ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-152">
              <see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-153">Numéros de version sont incrémentés et les colonnes timestamp sont mis à jour chaque fois que la ligne associée est mis à jour.</span><span class="sxs-lookup"><span data-stu-id="b49ec-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-154">Obtient la méthode <see cref="T:System.Data.Linq.DataContext" /> utilisée pour effectuer des opérations de chargement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-154">Gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-155">Méthode de chargement comme <see cref="T:System.Reflection.MethodInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-156">Place le nom de la colonne (ou de la contrainte) dans la base de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-156">Gets the name of the column (or constraint) in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-157">Nom de la colonne (ou de la contrainte) sous la forme d'une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-157">The name of the column (or constraint) as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-158">Obtient le <see cref="T:System.Reflection.MemberInfo" /> sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-158">Gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-159">Informations d'attribut de membre et de métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-159">Member attribute and metadata information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-160">Obtient l'accesseur utilisé pour obtenir ou définir la valeur de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-160">Gets the accessor that is used to get or set the value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-161">Accesseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-161">The accessor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-162">Obtient le nom du membre, identique au nom <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-162">Gets the name of the member, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-163">Nom, identique au nom <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-163">The name, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-164">Obtient la position ordinale de ce membre dans la disposition par défaut des résultats de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-164">Gets the ordinal position of this member in the default layout of query results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-165">Position ordinale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-165">The ordinal position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-166">Obtient l'accesseur utilisé pour obtenir ou définir la valeur de stockage de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-166">Gets the accessor that is used to get or set the storage value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-167">Accesseur de la valeur de stockage de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-167">The accessor for the storage value of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-168">Obtient le membre qui stocke les données pour ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-168">Gets the member that stores the data for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-169">Membre de stockage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-169">The storage member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-170">Obtient le type de ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-170">Gets the type of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-171">Type du membre actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-171">The type of the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b49ec-172">Obtient la stratégie de contrôle d'accès concurrentiel optimiste pour ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-172">Gets the optimistic concurrency check policy for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b49ec-173">Enum <see cref="T:System.Data.Linq.Mapping.UpdateCheck" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b49ec-173">An <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> enum.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b49ec-174">Si la classe n’a pas un membre de version (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> la valeur `true`), la détection est effectuée en comparant les valeurs de membre d’origine avec l’état actuel de la base de données.</span><span class="sxs-lookup"><span data-stu-id="b49ec-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="b49ec-175">Le <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> propriété détermine la manière dont LINQ to SQL implémente la détection de conflit sous l’accès concurrentiel optimiste.</span><span class="sxs-lookup"><span data-stu-id="b49ec-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="b49ec-176">Seuls les membres dont cette propriété est définie sur <xref:System.Data.Linq.Mapping.UpdateCheck.Always> ou <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> sont considérées pendant la détection de conflit.</span><span class="sxs-lookup"><span data-stu-id="b49ec-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>