<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueSource.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c64500fcc9768d42490c1ff18e54293bdc46149c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c64500fcc9768d42490c1ff18e54293bdc46149c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ValueSource">
          <source>Reports the information returned from <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</source>
          <target state="translated">Signale les informations retournées par <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Most of the information that <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> transmits is contained in the <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> property.</source>
          <target state="translated">La plupart des informations qui <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> transmet est contenue dans le <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This property contains an enumeration value that specifies exactly one aspect of the overall <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.</source>
          <target state="translated">Cette propriété contient une valeur d’énumération qui spécifie un seul aspect du <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> système de propriété qui est responsable de la valeur effective d’une propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</source>
          <target state="translated">Outre la valeur de base, les autres informations qui peuvent s’avérer intéressantes sur une valeur de propriété de dépendance sont est animée, et si la valeur implique une expression (par exemple, une liaison ou une référence de ressource dynamique).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This information is reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectively.</source>
          <target state="translated">Ces informations sont signalées par <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectivement.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">En outre, si la contrainte agit sur une valeur de propriété, la propriété conserve la valeur souhaitée et la valeur de propriété tente d’atteindre cette valeur souhaitée si les contraintes de la contrainte spécifique sont modifiés ou petit à petit.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Une propriété forcée n’est pas la valeur souhaitée signalera que <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> est <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Gets a value of the <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph> enumeration, which reports the source that provided the dependency property system with a value.</source>
          <target state="translated">Obtient une valeur de l'énumération <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph> qui signale la source ayant fourni le système de propriétés de dépendance avec une valeur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>A value of the enumeration.</source>
          <target state="translated">Valeur de l’énumération.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>The base value is not the effective value if either coercion or animation is acting on the property.</source>
          <target state="translated">La valeur de base n’est pas la valeur effective si la contrainte ou animation agit sur la propriété.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> if you want to determine whether the base value is the effective value.</source>
          <target state="translated">Vérifiez <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> si vous souhaitez déterminer si la valeur de base est la valeur effective.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>You might also want to check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> to see if the base value was evaluated out of an expression.</source>
          <target state="translated">Vous pouvez souhaiter également vérifier <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> pour voir si la valeur de base a été évaluée à partir d’une expression.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>The object to compare with this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">Objet à comparer à ce <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>Returns a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> is equal to a specified object.</source>
          <target state="translated">Retourne une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> équivaut à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the provided object is equivalent to the current <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet fourni est équivalent au <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> actuel ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>This implementation supports value equality, based on each of the property values of each <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> structure.</source>
          <target state="translated">Cette implémentation prend en charge l’égalité des valeurs, en fonction de chacune des valeurs de chaque propriété <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">Retourne le code de hachage pour ce <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>A 32-bit unsigned integer hash code.</source>
          <target state="translated">Code de hachage d’un entier non signé 32 bits.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>This hash code is based on the <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> value.</source>
          <target state="translated">Ce code de hachage est basé sur le <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>Gets a value that declares whether the property is being animated.</source>
          <target state="translated">Obtient une valeur qui déclare si la propriété est animée.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is animated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété est animée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For any property that is currently being animated, the source reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</source>
          <target state="translated">Pour toute propriété qui est actuellement en cours d’animation, la source est signalée par <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> ne concerne pas immédiatement, car l’animation fonctionne au niveau de la propriété de dépendance supérieure à la valeur de base.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For more information about precedence and animations, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la priorité et les animations, consultez <bpt id="p1">[</bpt>valeur de propriété de dépendance<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Gets a value that declares whether this value resulted from a <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property.</source>
          <target state="translated">Obtient une valeur qui déclare si cette valeur est le résultat d’une implémentation de <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> appliquée à une propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value resulted from a <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur provient d'une implémentation <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> appliquée à une propriété de dépendance ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">Si la contrainte agit sur une valeur de propriété, la propriété conserve la valeur souhaitée et la valeur de propriété tente d’atteindre cette valeur souhaitée si les contraintes de la contrainte spécifique sont modifiés ou petit à petit.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Une propriété forcée n’est pas la valeur souhaitée signalera que <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> est <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</source>
          <target state="translated">La contrainte fonctionne au niveau de priorité plus élevée que la valeur de base et n’est pas parler un participant à la façon dont la valeur de base est définie.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Therefore the state of being coerced is reported by this property, rather than by a value of the <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumeration.</source>
          <target state="translated">Par conséquent, l’état de forçage est signalé par cette propriété, plutôt que par une valeur de la <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>For more information about coercion, base values, and precedence, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la contrainte, les valeurs de base et les priorités, consultez <bpt id="p1">[</bpt>valeur de propriété de dépendance<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCurrent">
          <source>Gets whether the value was set by the <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Indique si la valeur a été définie par la méthode <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCurrent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was set by the <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur a été définie par la méthode <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Gets a value that declares whether this value resulted from an evaluated expression.</source>
          <target state="translated">Obtient une valeur qui déclare si cette valeur provient d'une expression évaluée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>This might be a <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> supporting a binding, or an internal expression such as those that support the <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</source>
          <target state="translated">Il peut s’agir d’une <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> qui prend en charge une liaison ou d’une expression interne qui prend en charge <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value came from an evaluated expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur provient d'une expression évaluée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">Une expression évaluée signale également la valeur de base spécifique définissant condition sous laquelle l’expression a été appliquée, en tant que valeur dans <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is still very relevant for any property where <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> est toujours très pertinent pour les propriétés où <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</source>
          <target state="translated">Le fait de savoir si une valeur provient d’une expression peut être particulièrement utile si la valeur a été définie indirectement, par exemple via un modèle ou une valeur de propriété héritée.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</source>
          <target state="translated">Si l’évaluation une expression d'échoue (la liaison a échoué : aucune ressource portant ce nom a été trouvée), la valeur proviendra d’un autre participant dans le système de propriétés, probablement la valeur par défaut.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>That source is then reported in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">Cette source est ensuite signalée dans <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Failed expression evaluations will return <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</source>
          <target state="translated">Évaluation d’une expression ayant échoué retournera <ph id="ph1">`false`</ph> pour <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Premier <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Deuxième <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances have the same value.</source>
          <target state="translated">Détermine si deux instances <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> ont la même valeur.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux instances <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> sont équivalentes ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">Cette implémentation appelle <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, et prend en charge l’égalité en fonction de toutes les propriétés de la valeur <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Premier <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Deuxième <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances do not have the same value.</source>
          <target state="translated">Détermine si deux instances de <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> n'ont pas la même valeur.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are not equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux instances de <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> ne sont pas équivalentes ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, returning its negation, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">Cette implémentation appelle <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, retournant son opposé et prend en charge l’égalité des valeurs en fonction de toutes les propriétés de <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>