<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="875922a29025a1905bbd42d8323d52ca6e8ff7b1" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48702875" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie qu'un contrôle peut être dans un certain état et qu'un <see cref="T:System.Windows.VisualState" /> est attendu dans le <see cref="T:System.Windows.Controls.ControlTemplate" /> du contrôle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les auteurs de contrôle utilisent cet attribut pour spécifier le <xref:System.Windows.VisualState> et <xref:System.Windows.VisualStateGroup> objets qui appartiennent à leur contrôle <xref:System.Windows.Controls.ControlTemplate>.  Par exemple, supposons que vous créez un nouveau contrôle qui a deux états visuels nommés `Focused` et `Unfocused`, à la fois de qui sont dans un <xref:System.Windows.VisualStateGroup> nommé `FocusStates`.  Pour indiquer à <xref:System.Windows.Controls.ControlTemplate> auteurs qu’ils peuvent utiliser ces états visuels, ajoutez deux <xref:System.Windows.TemplateVisualStateAttribute> des attributs pour la signature de classe du contrôle.  Spécifier que le <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> propriété est `FocusStates` et que le <xref:System.Windows.TemplateVisualStateAttribute.Name%2A> propriété est `Focused` pour l’une et `Unfocused` pour l’autre.  
  
   
  
## Examples  
 L’exemple suivant montre la signature de classe pour le `NumericUpDown` contrôle.  Cet exemple spécifie que le `NumericUpDown` contrôle utilise quatre états visuels.  Deux États, nommés `Positive` et `Negative`, se trouvent dans le <xref:System.Windows.VisualStateGroup> nommé `ValueStates`.  Les deux autres États, nommez `Focused` et `Unfocused`, se trouvent dans le <xref:System.Windows.VisualStateGroup> nommé `FocusedStates`.  Pour l’exemple complet, consultez [création d’un contrôle qu’a une apparence personnalisable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.TemplateVisualStateAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du groupe auquel appartient l'état.</summary>
        <value>Nom du <see cref="T:System.Windows.VisualStateGroup" /> auquel l'état appartient.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> propriété correspond à la <xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType> propriété d’un <xref:System.Windows.VisualStateGroup> objet. Pour spécifier les éléments <xref:System.Windows.VisualStateGroup> un <xref:System.Windows.VisualState> appartient, définissez la <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre la signature de classe pour le `NumericUpDown` contrôle.  Cet exemple spécifie que le `NumericUpDown` contrôle utilise quatre états visuels.  Deux États, nommés `Positive` et `Negative`, se trouvent dans le <xref:System.Windows.VisualStateGroup> nommé `ValueStates`.  Les deux autres États, nommez `Focused` et `Unfocused`, se trouvent dans le <xref:System.Windows.VisualStateGroup> nommé `FocusedStates`.  Pour l’exemple complet, consultez [création d’un contrôle qu’a une apparence personnalisable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'état dans lequel le contrôle se trouve.</summary>
        <value>Nom de l'état dans lequel le contrôle se trouve.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> propriété correspond à la <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> propriété d’un <xref:System.Windows.VisualState>. Pour spécifier les éléments <xref:System.Windows.VisualState> appartient à un contrôle <xref:System.Windows.Controls.ControlTemplate>, définissez le <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre la signature de classe pour le `NumericUpDown` contrôle.  Cet exemple spécifie que le `NumericUpDown` contrôle utilise quatre états visuels.  Deux États, nommés `Positive` et `Negative`, se trouvent dans le <xref:System.Windows.VisualStateGroup> nommé `ValueStates`.  Les deux autres États, nommez `Focused` et `Unfocused`, se trouvent dans le <xref:System.Windows.VisualStateGroup> nommé `FocusedStates`.  Pour l’exemple complet, consultez [création d’un contrôle qu’a une apparence personnalisable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>