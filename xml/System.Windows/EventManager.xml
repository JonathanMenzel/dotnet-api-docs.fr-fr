<Type Name="EventManager" FullName="System.Windows.EventManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c07ba11c7438326eddb5331a443033c7ee73acb9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39844481" /></Metadata><TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <TypeSignature Language="F#" Value="type EventManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ee5aa-101">Fournit des méthodes utilitaires liées aux événements qui inscrivent les événements routés pour les propriétaires de classe et ajoutent des gestionnaires de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee5aa-102">Cette classe est couramment utilisée pour inscrire un nouvel événement routé, avec <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="ee5aa-103">Le deuxième plus courantes [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] utilisation est <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="ee5aa-104">Cette méthode vous permet d’activer la gestion de classe d’un événement routé sur la classe ou un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="ee5aa-105">Pour plus d’informations, consultez [marquage des événements routés comme gérés et gestion de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="ee5aa-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee5aa-106">L’exemple suivant montre comment utiliser cette classe pour inscrire un nouvel événement routé comme un membre de classe, ainsi que de la technique de « wrapper » d’événement routé de substitution de l’ajouter et supprimer des implémentations pour un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberSignature Language="F#" Value="static member GetRoutedEvents : unit -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee5aa-107">Retourne des identificateurs pour des événements routés qui ont été enregistrés sur le système d'événements.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-107">Returns identifiers for routed events that have been registered to the event system.</span></span></summary>
        <returns><span data-ttu-id="ee5aa-108">Tableau de type <see cref="T:System.Windows.RoutedEvent" /> qui contient les objets enregistrés.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee5aa-109">Plus <xref:System.Windows.RoutedEvent> objets peuvent être enregistrés ultérieurement.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="ee5aa-110">Cette méthode obtient une capture instantanée et la collection d’événements routés est accessible en écriture tout au long de durée de vie d’une application.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="ee5aa-111">La collection retournée peut être assez volumineuse.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-111">The collection returned might be quite large.</span></span> <span data-ttu-id="ee5aa-112">Seulement avec les événements qui font partie de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], le décompte de collections est centaines.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member GetRoutedEventsForOwner : Type -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEventsForOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="ee5aa-113">Type avec lequel démarrer la recherche.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-113">The type to start the search with.</span></span> <span data-ttu-id="ee5aa-114">Les classes de base sont incluses dans la recherche.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-114">Base classes are included in the search.</span></span></param>
        <summary><span data-ttu-id="ee5aa-115">Recherche tous les identificateurs d'événement routé pour des événements qui sont enregistrés avec le type de propriétaire fourni.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span></span></summary>
        <returns><span data-ttu-id="ee5aa-116">Tableau d'identificateurs d'événement routé correspondants si une correspondance est trouvée ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee5aa-117">Enregistre un gestionnaire de classe pour un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-117">Registers a class handler for a particular routed event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="ee5aa-118">Type de la classe qui déclare la gestion de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-118">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="ee5aa-119">Identificateur d'événement routé de l'événement à gérer.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-119">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="ee5aa-120">Référence à l'implémentation du gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-120">A reference to the class handler implementation.</span></span></param>
        <summary><span data-ttu-id="ee5aa-121">Enregistre un gestionnaire de classe pour un événement routé particulier.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-121">Registers a class handler for a particular routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee5aa-122">Gestion de classe est une fonctionnalité qui est disponible pour les événements routés, y compris les événements attachés qui sont implémentés avec la sauvegarde d’événement routé.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="ee5aa-123">Un gestionnaire de classe ressemble à un gestionnaire statique qui existe pour toutes les instances de la classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="ee5aa-124">Étant donné que le gestionnaire est statique, vous ne pouvez pas modifier les propriétés d’instance directement avec un gestionnaire de classe, mais vous pouvez accéder aux instances via le `sender` paramètre et/ou les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="ee5aa-125">Gestionnaires de classe sont appelés avant les gestionnaires d’instance.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="ee5aa-126">Vous pouvez implémenter un gestionnaire de classe qui a le comportement de marquer l’événement comme géré.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="ee5aa-127">Par conséquent, les gestionnaires d’instance pour un événement géré à la classe ne sont pas appelés à moins que les gestionnaires d’instance inscrire spécifiquement pour les événements gérés.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="ee5aa-128">Un grand nombre de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] les événements d’élément de base fournissent des méthodes virtuelles de gestion de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="ee5aa-129">En substituant ces méthodes dans les classes qui héritent des classes de base, vous pouvez implémenter la gestion de classe sans appeler <xref:System.Windows.EventManager.RegisterClassHandler%2A> dans les constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="ee5aa-130">En règle générale, ces méthodes de gestion de classe existent pour les événements d’entrée et ont des noms qui commencent par « On » et se terminent par le nom de l’événement de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="ee5aa-131">Pour plus d’informations sur la gestion de classe, consultez [marquage des événements routés comme gérés et gestion de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="ee5aa-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="ee5aa-132">À l’aide de cette signature, les gestionnaires de classe seront inscrit pour appeler uniquement en réponse aux événements non gérés.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="ee5aa-133">Vous pouvez également inscrire des gestionnaires de classe à appeler même si les arguments d’événement sont marqué comme gérés, à l’aide de la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, avec `handledEventsToo` défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee5aa-134">L’exemple suivant ajoute un gestionnaire pour <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, l’appel <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="ee5aa-135">Type de la classe qui déclare la gestion de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-135">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="ee5aa-136">Identificateur d'événement routé de l'événement à gérer.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-136">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="ee5aa-137">Référence à l'implémentation du gestionnaire de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-137">A reference to the class handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="ee5aa-138"><see langword="true" /> pour appeler ce gestionnaire de classe même si les arguments de l'événement routé ont été marqués comme gérés ; <see langword="false" /> pour conserver le comportement par défaut qui consiste à ne pas appeler le gestionnaire sur tout événement marqué géré.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-138"><see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span></span></param>
        <summary><span data-ttu-id="ee5aa-139">Enregistre un gestionnaire de classe pour un événement routé particulier, avec la possibilité de gérer des événements dans lesquels les données d'événement sont déjà marquées gérées.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee5aa-140">Gestion de classe est une fonctionnalité qui est disponible pour les événements routés, y compris les événements attachés qui sont implémentés avec la sauvegarde d’événement routé.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="ee5aa-141">Un gestionnaire de classe ressemble à un gestionnaire statique qui existe pour toutes les instances de la classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="ee5aa-142">Étant donné que le gestionnaire est statique, vous ne pouvez pas modifier les propriétés d’instance directement avec un gestionnaire de classe, mais vous pouvez accéder aux instances via le `sender` paramètre et/ou les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="ee5aa-143">Gestionnaires de classe sont appelés avant les gestionnaires d’instance.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="ee5aa-144">Vous pouvez implémenter un gestionnaire de classe qui a le comportement de marquer l’événement comme géré.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="ee5aa-145">Par conséquent, les gestionnaires d’instance pour un événement géré à la classe ne sont pas appelés à moins que les gestionnaires d’instance inscrire spécifiquement pour les événements gérés.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="ee5aa-146">Un grand nombre de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] les événements d’élément de base fournissent des méthodes virtuelles de gestion de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="ee5aa-147">En substituant ces méthodes dans les classes qui héritent des classes de base, vous pouvez implémenter la gestion de classe sans appeler <xref:System.Windows.EventManager.RegisterClassHandler%2A> dans les constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="ee5aa-148">En règle générale, ces méthodes de gestion de classe existent pour les événements d’entrée et ont des noms qui commencent par « On » et se terminent par le nom de l’événement de classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="ee5aa-149">Pour plus d’informations sur la gestion de classe, consultez [marquage des événements routés comme gérés et gestion de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="ee5aa-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="ee5aa-150">À l’aide de cette signature, les gestionnaires de classe peuvent être enregistrés pour appeler des événements gérés, en définissant `handledEventsToo` défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="ee5aa-151">En règle générale, vous devez le faire uniquement s’il existe un problème de gestion connu que vous voulez contourner, tels que système d’entrée gestion à partir d’événements de souris ou le clavier.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member RegisterRoutedEvent : string * System.Windows.RoutingStrategy * Type * Type -&gt; System.Windows.RoutedEvent" Usage="System.Windows.EventManager.RegisterRoutedEvent (name, routingStrategy, handlerType, ownerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ee5aa-152">Nom de l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-152">The name of the routed event.</span></span> <span data-ttu-id="ee5aa-153">Le nom doit être unique dans le type de propriétaire et ne peut pas être <see langword="null" /> ou une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span></span></param>
        <param name="routingStrategy"><span data-ttu-id="ee5aa-154">Stratégie de routage de l’événement en tant que valeur de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-154">The routing strategy of the event as a value of the enumeration.</span></span></param>
        <param name="handlerType"><span data-ttu-id="ee5aa-155">Type du gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-155">The type of the event handler.</span></span> <span data-ttu-id="ee5aa-156">Il doit être du type délégué et ne peut pas être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-156">This must be a delegate type and cannot be <see langword="null" />.</span></span></param>
        <param name="ownerType"><span data-ttu-id="ee5aa-157">Le type de classe propriétaire de l’événement routé.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-157">The owner class type of the routed event.</span></span> <span data-ttu-id="ee5aa-158">Il ne peut pas s'agir de la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-158">This cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ee5aa-159">Inscrit un nouvel événement routé avec le système d’événements [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ee5aa-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span></span></summary>
        <returns><span data-ttu-id="ee5aa-160">Identificateur de l’événement routé qui vient d’être inscrit.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-160">The identifier for the newly registered routed event.</span></span> <span data-ttu-id="ee5aa-161">Cet objet d’identificateur peut maintenant être stocké en tant que champ statique dans une classe, puis utilisé en tant que paramètre pour les méthodes qui attachent des gestionnaires à l’événement.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span></span> <span data-ttu-id="ee5aa-162">L'identificateur d'événement routé est également utilisé pour d'autres systèmes d'événements [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ee5aa-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee5aa-163">La valeur de retour de cette méthode permet de créer la déclaration statique pour un unique <xref:System.Windows.RoutedEvent> champ d’identificateur.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="ee5aa-164">Ce champ doit être stocké dans le type de propriétaire.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="ee5aa-165">Il existe un nombre considérable de conventions et meilleures pratiques associés aux événements routés comment doivent être nommés, inscrit et exposées dans une classe.</span><span class="sxs-lookup"><span data-stu-id="ee5aa-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="ee5aa-166">Pour plus d’informations, consultez [vue d’ensemble des événements routés](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ee5aa-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>