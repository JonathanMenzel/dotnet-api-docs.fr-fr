<Type Name="EventManager" FullName="System.Windows.EventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c77ae0f0dbeb2878102af1c07c306ec83ccf92c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b9212-101">Fournit des méthodes utilitaires liées aux événements qui inscrivent les événements routés pour les propriétaires de classe et ajoutent des gestionnaires de classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9212-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9212-102">Cette classe est couramment utilisée pour inscrire un nouvel événement routé, avec <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9212-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="b9212-103">Le deuxième principales [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] utilisation est <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9212-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="b9212-104">Cette méthode vous permet d’activer la gestion de classe d’un événement routé sur la classe ou d’un événement attaché.</span><span class="sxs-lookup"><span data-stu-id="b9212-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="b9212-105">Pour plus d’informations, consultez [le marquage des événements routés comme Handled et de gestion de la classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="b9212-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9212-106">L’exemple suivant montre comment utiliser cette classe pour inscrire un nouvel événement routé en tant qu’un membre de classe, ainsi que de la technique de « wrapper » d’événement routé de substitution de l’ajouter et supprimer des implémentations pour un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] événement.</span><span class="sxs-lookup"><span data-stu-id="b9212-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b9212-107">Retourne des identificateurs pour des événements routés qui ont été enregistrés sur le système d'événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-107">Returns identifiers for routed events that have been registered to the event system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9212-108">Tableau de type <see cref="T:System.Windows.RoutedEvent" /> qui contient les objets enregistrés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9212-109">Plus <xref:System.Windows.RoutedEvent> objets peuvent être enregistrés ultérieurement.</span><span class="sxs-lookup"><span data-stu-id="b9212-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="b9212-110">Cette méthode obtient un instantané et la collection d’événements routés est accessible en écriture dans l’ensemble de durée de vie d’une application.</span><span class="sxs-lookup"><span data-stu-id="b9212-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="b9212-111">La collection retournée peut être assez volumineuse.</span><span class="sxs-lookup"><span data-stu-id="b9212-111">The collection returned might be quite large.</span></span> <span data-ttu-id="b9212-112">Seulement avec les événements qui font partie de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], le nombre de collections est centaines.</span><span class="sxs-lookup"><span data-stu-id="b9212-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">
          <span data-ttu-id="b9212-113">Type avec lequel démarrer la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-113">The type to start the search with.</span>
          </span>
          <span data-ttu-id="b9212-114">Les classes de base sont incluses dans la recherche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-114">Base classes are included in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9212-115">Recherche tous les identificateurs d'événement routé pour des événements qui sont enregistrés avec le type de propriétaire fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9212-116">Tableau d'identificateurs d'événement routé correspondants si une correspondance est trouvée ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b9212-117">Enregistre un gestionnaire de classe pour un événement routé particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-117">Registers a class handler for a particular routed event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType">
          <span data-ttu-id="b9212-118">Type de la classe qui déclare la gestion de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-118">The type of the class that is declaring class handling.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="b9212-119">Identificateur d'événement routé de l'événement à gérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-119">The routed event identifier of the event to handle.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="b9212-120">Référence à l'implémentation du gestionnaire de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-120">A reference to the class handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9212-121">Enregistre un gestionnaire de classe pour un événement routé particulier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-121">Registers a class handler for a particular routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9212-122">La gestion de classe est une fonctionnalité qui est disponible pour les événements routés, y compris les événements attachés qui sont implémentés avec la sauvegarde d’événement routé.</span><span class="sxs-lookup"><span data-stu-id="b9212-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="b9212-123">Un gestionnaire de classe ressemble à un gestionnaire statique qui existe pour toutes les instances de la classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="b9212-124">Étant donné que le gestionnaire est statique, vous ne pouvez pas modifier les propriétés d’instance directement avec un gestionnaire de classe, mais vous pouvez accéder aux instances via le `sender` paramètre et/ou les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="b9212-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="b9212-125">Gestionnaires de classe sont appelés avant les gestionnaires d’instance.</span><span class="sxs-lookup"><span data-stu-id="b9212-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="b9212-126">Vous pouvez implémenter un gestionnaire de classe qui a le comportement de marquage de l’événement comme géré.</span><span class="sxs-lookup"><span data-stu-id="b9212-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="b9212-127">Par conséquent, les gestionnaires d’instance pour un événement gérées par la classe ne sont pas appelés à moins que les gestionnaires d’instance inscrire spécifiquement pour les événements gérés.</span><span class="sxs-lookup"><span data-stu-id="b9212-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="b9212-128">Un grand nombre du [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] les événements d’élément de base fournissent des méthodes virtuelles de gestion de classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="b9212-129">En substituant ces méthodes dans les classes qui héritent des classes de base, vous pouvez implémenter la gestion de classe sans appeler <xref:System.Windows.EventManager.RegisterClassHandler%2A> dans des constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="b9212-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="b9212-130">En général, ces méthodes de gestion de classe existent pour les événements d’entrée et ont des noms qui commencent par « On » et se terminent par le nom de l’événement de classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="b9212-131">Pour plus d’informations sur la gestion de classe, consultez [le marquage des événements routés comme Handled et de gestion de la classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="b9212-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="b9212-132">À l’aide de cette signature, les gestionnaires de classe seront inscrit pour appeler uniquement en réponse aux événements non gérés.</span><span class="sxs-lookup"><span data-stu-id="b9212-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="b9212-133">Vous pouvez également enregistrer des gestionnaires de classe à appeler même si les arguments d’événement sont marqués gérés, à l’aide de la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, avec `handledEventsToo` la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="b9212-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9212-134">L’exemple suivant ajoute un gestionnaire pour <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, l’appel <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9212-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType">
          <span data-ttu-id="b9212-135">Type de la classe qui déclare la gestion de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-135">The type of the class that is declaring class handling.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="b9212-136">Identificateur d'événement routé de l'événement à gérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-136">The routed event identifier of the event to handle.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="b9212-137">Référence à l'implémentation du gestionnaire de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-137">A reference to the class handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="b9212-138">
            <see langword="true" /> pour appeler ce gestionnaire de classe même si les arguments de l'événement routé ont été marqués comme gérés ; <see langword="false" /> pour conserver le comportement par défaut qui consiste à ne pas appeler le gestionnaire sur tout événement marqué géré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-138">
              <see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9212-139">Enregistre un gestionnaire de classe pour un événement routé particulier, avec la possibilité de gérer des événements dans lesquels les données d'événement sont déjà marquées gérées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9212-140">La gestion de classe est une fonctionnalité qui est disponible pour les événements routés, y compris les événements attachés qui sont implémentés avec la sauvegarde d’événement routé.</span><span class="sxs-lookup"><span data-stu-id="b9212-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="b9212-141">Un gestionnaire de classe ressemble à un gestionnaire statique qui existe pour toutes les instances de la classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="b9212-142">Étant donné que le gestionnaire est statique, vous ne pouvez pas modifier les propriétés d’instance directement avec un gestionnaire de classe, mais vous pouvez accéder aux instances via le `sender` paramètre et/ou les données d’événement.</span><span class="sxs-lookup"><span data-stu-id="b9212-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="b9212-143">Gestionnaires de classe sont appelés avant les gestionnaires d’instance.</span><span class="sxs-lookup"><span data-stu-id="b9212-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="b9212-144">Vous pouvez implémenter un gestionnaire de classe qui a le comportement de marquage de l’événement comme géré.</span><span class="sxs-lookup"><span data-stu-id="b9212-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="b9212-145">Par conséquent, les gestionnaires d’instance pour un événement gérées par la classe ne sont pas appelés à moins que les gestionnaires d’instance inscrire spécifiquement pour les événements gérés.</span><span class="sxs-lookup"><span data-stu-id="b9212-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="b9212-146">Un grand nombre du [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] les événements d’élément de base fournissent des méthodes virtuelles de gestion de classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="b9212-147">En substituant ces méthodes dans les classes qui héritent des classes de base, vous pouvez implémenter la gestion de classe sans appeler <xref:System.Windows.EventManager.RegisterClassHandler%2A> dans des constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="b9212-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="b9212-148">En général, ces méthodes de gestion de classe existent pour les événements d’entrée et ont des noms qui commencent par « On » et se terminent par le nom de l’événement de classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="b9212-149">Pour plus d’informations sur la gestion de classe, consultez [le marquage des événements routés comme Handled et de gestion de la classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="b9212-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="b9212-150">À l’aide de cette signature, les gestionnaires de classe peuvent être enregistrés pour appeler des événements gérés, en définissant `handledEventsToo` la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="b9212-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="b9212-151">En règle générale, vous devez le faire uniquement s’il existe un problème de gestion connu que vous essayez de contourner, tel que système d’entrée, gestion des événements de souris ou le clavier.</span><span class="sxs-lookup"><span data-stu-id="b9212-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b9212-152">Nom de l’événement routé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-152">The name of the routed event.</span>
          </span>
          <span data-ttu-id="b9212-153">Le nom doit être unique dans le type de propriétaire et ne peut pas être <see langword="null" /> ou une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="routingStrategy">
          <span data-ttu-id="b9212-154">Stratégie de routage de l’événement en tant que valeur de l’énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-154">The routing strategy of the event as a value of the enumeration.</span>
          </span>
        </param>
        <param name="handlerType">
          <span data-ttu-id="b9212-155">Type du gestionnaire d’événements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-155">The type of the event handler.</span>
          </span>
          <span data-ttu-id="b9212-156">Il doit être du type délégué et ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-156">This must be a delegate type and cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="b9212-157">Le type de classe propriétaire de l’événement routé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-157">The owner class type of the routed event.</span>
          </span>
          <span data-ttu-id="b9212-158">Il ne peut pas s'agir de la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-158">This cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9212-159">Inscrit un nouvel événement routé avec le système d’événements [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9212-160">Identificateur de l’événement routé qui vient d’être inscrit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-160">The identifier for the newly registered routed event.</span>
          </span>
          <span data-ttu-id="b9212-161">Cet objet d’identificateur peut maintenant être stocké en tant que champ statique dans une classe, puis utilisé en tant que paramètre pour les méthodes qui attachent des gestionnaires à l’événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span>
          </span>
          <span data-ttu-id="b9212-162">L'identificateur d'événement routé est également utilisé pour d'autres systèmes d'événements [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9212-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9212-163">La valeur de retour de cette méthode permet de créer la déclaration statique pour un unique <xref:System.Windows.RoutedEvent> champ d’identificateur.</span><span class="sxs-lookup"><span data-stu-id="b9212-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="b9212-164">Ce champ doit être stocké dans le type de propriétaire.</span><span class="sxs-lookup"><span data-stu-id="b9212-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="b9212-165">Il existe un nombre considérable de conventions et meilleures pratiques associés aux événements routés comment doivent être nommés, inscrits et exposés dans une classe.</span><span class="sxs-lookup"><span data-stu-id="b9212-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="b9212-166">Pour plus d’informations, consultez [vue d’ensemble des événements routés](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b9212-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>