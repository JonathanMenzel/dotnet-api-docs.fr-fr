<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d5b29-101">Contient des propriétés qui spécifient le comportement que doit avoir une application par rapport aux fonctionnalités WPF qui se trouvent dans l’assembly PresentationFramework.</span><span class="sxs-lookup"><span data-stu-id="d5b29-101">Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5b29-102">Obtient ou définit une valeur qui indique si l'application doit utiliser les propriétés <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> et <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> pour les couleurs des éléments sélectionnés inactifs.</span><span class="sxs-lookup"><span data-stu-id="d5b29-102">Gets or sets a value that indicates whether the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items.</span></span></summary>
        <value>
          <span data-ttu-id="d5b29-103"><see langword="true" /> si l'application doit utiliser les propriétés <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> et <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> pour les couleurs des éléments sélectionnés inactifs ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5b29-103"><see langword="true" /> if the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items; otherwise, <see langword="false" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5b29-104">La valeur par défaut de cette propriété dépend de la version de WPF que votre application cible.</span><span class="sxs-lookup"><span data-stu-id="d5b29-104">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="d5b29-105">Si votre application cible WPF 4.0 ou version antérieure, la valeur par défaut est `false`.</span><span class="sxs-lookup"><span data-stu-id="d5b29-105">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="d5b29-106">Si votre application cible WPF 4.5, la valeur par défaut est `true`.</span><span class="sxs-lookup"><span data-stu-id="d5b29-106">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="d5b29-107">Si vous utilisez cette propriété pour modifier le comportement de WPF, vous devez modifier la valeur de propriété au début de la durée de vie de l’application, par exemple dans le constructeur de la classe qui hérite de l’Application.</span><span class="sxs-lookup"><span data-stu-id="d5b29-107">If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="d5b29-108">Une fois que la valeur est lue, vous ne pouvez pas le modifier à nouveau.</span><span class="sxs-lookup"><span data-stu-id="d5b29-108">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5b29-109">Obtient ou définit une valeur qui indique si <see cref="T:System.Windows.Controls.TextBox" /> liée aux données affiche une chaîne identique à la valeur de la source de sa propriété <see cref="P:System.Windows.Controls.TextBox.Text" />.</span><span class="sxs-lookup"><span data-stu-id="d5b29-109">Gets or sets a value that indicates whether a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property</span></span></summary>
        <value>
          <span data-ttu-id="d5b29-110"><see langword="true" /> si un <see cref="T:System.Windows.Controls.TextBox" /> lié aux données doit afficher une chaîne identique à la valeur de la source de sa propriété <see cref="P:System.Windows.Controls.TextBox.Text" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5b29-110"><see langword="true" /> if a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5b29-111">La valeur par défaut de cette propriété dépend de la version de WPF que votre application cible.</span><span class="sxs-lookup"><span data-stu-id="d5b29-111">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="d5b29-112">Si votre application cible WPF 4.0 ou version antérieure, la valeur par défaut est `false`.</span><span class="sxs-lookup"><span data-stu-id="d5b29-112">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="d5b29-113">Si votre application cible WPF 4.5, la valeur par défaut est `true`.</span><span class="sxs-lookup"><span data-stu-id="d5b29-113">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="d5b29-114">Si vous utilisez cette propriété pour modifier le comportement de WPF, vous devez modifier la valeur de propriété au début de la durée de vie de l’application, par exemple dans le constructeur de la classe qui hérite de l’Application.</span><span class="sxs-lookup"><span data-stu-id="d5b29-114">If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="d5b29-115">Une fois que la valeur est lue, vous ne pouvez pas le modifier à nouveau.</span><span class="sxs-lookup"><span data-stu-id="d5b29-115">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5b29-116">Récupère ou définit une valeur qui indique si l’échec d’une opération de copie ou de coupe dans une instance <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> entraîne un <see cref="T:System.Runtime.InteropServices.ExternalException" />.</span><span class="sxs-lookup"><span data-stu-id="d5b29-116">Gets or sets a value that indicates whether a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />.</span></span></summary>
        <value>
          <span data-ttu-id="d5b29-117"><see langword="true" /> si l’échec d’une opération de copie ou de coupe dans une instance <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> entraîne un <see cref="T:System.Runtime.InteropServices.ExternalException" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5b29-117"><see langword="true" /> if a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5b29-118">Si une opération du Presse-papiers échoue, comme avec un **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** erreur correspondante <xref:System.Runtime.InteropServices.ExternalException> (qui est un type de ExternalException) est levée.</span><span class="sxs-lookup"><span data-stu-id="d5b29-118">If a clipboard operation fails, such as with a **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** error, a corresponding <xref:System.Runtime.InteropServices.ExternalException> (which is a type of ExternalException) is thrown.</span></span>  
  
 <span data-ttu-id="d5b29-119">Étant donné que Win32 `OpenClipboard` API actes globalement, applications bien écrites doivent appeler correspondant `CloseClipboard` API dès qu’ils ont terminé leurs opérations du Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="d5b29-119">Because the Win32 `OpenClipboard` API acts globally, well-written applications should call the corresponding `CloseClipboard` API as soon as they have completed their clipboard operations.</span></span> <span data-ttu-id="d5b29-120">Sinon, les autres applications s’exécutant dans la même session ne pourront pas à accéder aux fonctions du Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="d5b29-120">Otherwise, other applications running in the same session will be unable to access clipboard functions.</span></span>  
  
 <span data-ttu-id="d5b29-121">Dans WPF, tels un refus d’accès dans le Presse-papiers est normalement ignoré en mode silencieux.</span><span class="sxs-lookup"><span data-stu-id="d5b29-121">In WPF, such a denial of access to the clipboard is normally ignored silently.</span></span> <span data-ttu-id="d5b29-122">Toutefois, les applications peuvent choisir de recevoir un `ExternalException` en cas d’échec en définissant le <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> indicateur `true`.</span><span class="sxs-lookup"><span data-stu-id="d5b29-122">However, applications can opt to receive an `ExternalException` upon failure by setting the <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> flag to `true`.</span></span> <span data-ttu-id="d5b29-123">Toutefois, vous inscrire pour recevoir des exceptions requiert également l’application pour gérer <xref:System.Windows.Input.ApplicationCommands.Cut%2A> et <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands via un <xref:System.Windows.Input.CommandBinding>, puis appliquez que la liaison à tous les contrôles de TextBoxBase (<xref:System.Windows.Controls.TextBox> et <xref:System.Windows.Controls.RichTextBox>) dans le application.</span><span class="sxs-lookup"><span data-stu-id="d5b29-123">However, opting to receive exceptions also requires the application to handle <xref:System.Windows.Input.ApplicationCommands.Cut%2A> and <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands through a <xref:System.Windows.Input.CommandBinding>, and then apply that binding to all TextBoxBase controls (<xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>)  in the application.</span></span> <span data-ttu-id="d5b29-124">L’application doit s’assurer qu’elle gère ExternalExceptions résultant d’opérations de copier et Couper dans Gestionnaire d’exécutées de la CommandBinding.</span><span class="sxs-lookup"><span data-stu-id="d5b29-124">The application should ensure that it handles ExternalExceptions resulting from copy and cut operations in the CommandBinding's Executed handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>