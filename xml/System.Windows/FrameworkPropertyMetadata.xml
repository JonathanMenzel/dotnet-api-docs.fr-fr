<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FrameworkPropertyMetadata.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c70304d7b52b8f4e76c37fd1e35de0928f9619c7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c70304d7b52b8f4e76c37fd1e35de0928f9619c7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>Reports or applies metadata for a dependency property, specifically adding framework-specific property system characteristics.</source>
          <target state="translated">Signale ou applique des métadonnées pour une propriété de dépendance, en ajoutant des caractéristiques de propriétés système spécifiques à l’infrastructure.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>This class derives from <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> (through <ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph>) .</source>
          <target state="translated">Cette classe dérive <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> (via <ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>For most WPF framework-level application development purposes, <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> is the type used for dependency property metadata, rather than the base metadata types <ph id="ph2">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph>.</source>
          <target state="translated">La plupart des cas de développement d’applications au niveau de l’infrastructure WPF, <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> est le type utilisé pour les métadonnées de propriété de dépendance, plutôt que les types de métadonnées de base <ph id="ph2">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>This is true both for existing dependency properties and for most custom dependency property scenarios.</source>
          <target state="translated">Cela est vrai pour les propriétés de dépendance existantes et pour la plupart des scénarios de propriété de dépendance personnalisée.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>The members declared by this class that supplement the <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> base class include various Boolean properties that specify or report WPF framework-level property system behavior such as property inheritance, data binding, and layout.</source>
          <target state="translated">Les membres déclarés par cette classe qui complètent la <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> classe de base incluent différentes propriétés booléennes qui spécifient ou signalent le comportement de système de propriété de niveau infrastructure WPF telles que l’héritage de propriété, la liaison de données et la disposition.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>Several constructor signatures for creating a <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> instance take a <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> parameter.</source>
          <target state="translated">Plusieurs signatures de constructeur pour créer un <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> instance prennent un <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> enumeration is used only to specify initial behavior in the constructor, and is not otherwise exposed after <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> is constructed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> énumération est utilisée uniquement pour spécifier le comportement initial dans le constructeur et n’est pas exposée après <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> est construit.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>From a constructed instance, you can get or set the corresponding information through various properties that share the name of the enumeration values used in the constructor call.</source>
          <target state="translated">À partir d’une instance construite, vous pouvez obtenir ou définir les informations correspondantes à travers différentes propriétés qui partagent le nom des valeurs d’énumération utilisées dans l’appel de constructeur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>This class is not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Cette classe n’est pas utilisée en général dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>The following example gets metadata for a dependency property on a particular owner as the initial base <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> type.</source>
          <target state="translated">L’exemple suivant obtient des métadonnées pour une propriété de dépendance sur un propriétaire particulier en tant que la première base <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> type.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>That metadata is cast to <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph>.</source>
          <target state="translated">Ces métadonnées sont effectuée en <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>If the cast returned a valid <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph>, then various <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> property values are reported through a simple UI (not shown).</source>
          <target state="translated">Si la conversion a retourné un valide <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph>, puis diverses <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> valeurs de propriété sont signalés via une interface simple (non affichée).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkPropertyMetadata">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor">
          <source>This signature initializes all values of <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.%23ctor%2A&gt;</ph> to their property defaults.</source>
          <target state="translated">Cette signature initialise toutes les valeurs de <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.%23ctor%2A&gt;</ph> à leurs valeurs par défaut de la propriété.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor">
          <source><ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</ph> will be <ph id="ph2">`null`</ph>, and the various <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> Boolean properties will be <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.DefaultValue%2A&gt;</ph> sera <ph id="ph2">`null`</ph>et les différentes <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés booléennes sera <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the specified default value.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut spécifiée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.PropertyChangedCallback" /&gt;</ph> callback.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec le rappel <ph id="ph2">&lt;see cref="T:System.Windows.PropertyChangedCallback" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>The metadata option flags (a combination of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph> values).</source>
          <target state="translated">Indicateurs d'option de métadonnées (combinaison des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Ces options spécifient les caractéristiques de la propriété de dépendance qui interagissent avec les systèmes tels qu'une présentation ou une liaison de données.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and framework-level metadata options.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut et les options de métadonnées au niveau de l'infrastructure fournies.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties that match that <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> flag's name to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Les valeurs marquées comme indicateurs définis dans le <ph id="ph1">`flags`</ph> paramètre définit la valeur booléenne de <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés qui correspondent au <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> nom de cet indicateur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>You can subsequently change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Vous pouvez ensuite modifier les valeurs des propriétés dans les métadonnées, tant que les métadonnées n’a pas encore été appliquées à une opération de système de propriétés spécifique.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and specified <ph id="ph2">&lt;see cref="T:System.Windows.PropertyChangedCallback" /&gt;</ph> callback.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut fournie et le rappel <ph id="ph2">&lt;see cref="T:System.Windows.PropertyChangedCallback" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>A reference to a handler implementation will be called whenever the property system calls <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> for this dependency property.</source>
          <target state="translated">Une référence à l'implémentation d'un gestionnaire sera appelée à chaque fois que le système de propriétés appelle <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> pour cette propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the specified callbacks.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec les rappels spécifiés.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>This implementation calls a base initializer and then adds the <ph id="ph1">`coerceValueCallback`</ph> by setting the property on the base instance.</source>
          <target state="translated">Cette implémentation appelle un initialiseur de base, puis ajoute le <ph id="ph1">`coerceValueCallback`</ph> en définissant la propriété sur l’instance de base.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>The default value of the dependency property, usually provided as a value of a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme valeur d'un type spécifique.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>The metadata option flags (a combination of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph> values).</source>
          <target state="translated">Indicateurs d'option de métadonnées (combinaison des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Ces options spécifient les caractéristiques de la propriété de dépendance qui interagissent avec les systèmes tels qu'une présentation ou une liaison de données.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and framework metadata options, and specified <ph id="ph2">&lt;see cref="T:System.Windows.PropertyChangedCallback" /&gt;</ph> callback.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut et les options de métadonnées au niveau de l'infrastructure fournies, et le rappel <ph id="ph2">&lt;see cref="T:System.Windows.PropertyChangedCallback" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties that match that <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> flag's name to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Les valeurs marquées comme indicateurs définis dans le <ph id="ph1">`flags`</ph> paramètre définit la valeur booléenne de <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés qui correspondent au <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> nom de cet indicateur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Vous pouvez toujours modifier les valeurs des propriétés dans les métadonnées, tant que les métadonnées n’a pas encore été appliquées à une opération de système de propriétés spécifique.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme un type spécifique.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>A reference to a handler implementation that will be called whenever the property system calls <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> for this dependency property.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire qui sera appelée à chaque fois que le système de propriétés appelle <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> pour cette propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and specified callbacks.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut fournie et les rappels spécifiés.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme un type spécifique.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The metadata option flags (a combination of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph> values).</source>
          <target state="translated">Indicateurs d'option de métadonnées (combinaison des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Ces options spécifient les caractéristiques de la propriété de dépendance qui interagissent avec les systèmes tels qu'une présentation ou une liaison de données.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>A reference to a handler implementation that will be called whenever the property system calls <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> against this property.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire qui sera appelée à chaque fois que le système de propriétés appelle <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> à l'aide de cette propriété.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and framework metadata options, and specified callbacks.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut et les options de métadonnées au niveau de l'infrastructure fournies, et les rappels spécifiés.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties that match that <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> flag's name to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Les valeurs marquées comme indicateurs définis dans le <ph id="ph1">`flags`</ph> paramètre définit la valeur booléenne de <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés qui correspondent au <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> nom de cet indicateur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Vous pouvez toujours modifier les valeurs des propriétés dans les métadonnées, tant que les métadonnées n’a pas encore été appliquées à une opération de système de propriétés spécifique.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme un type spécifique.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The metadata option flags (a combination of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph> values).</source>
          <target state="translated">Indicateurs d'option de métadonnées (combinaison des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Ces options spécifient les caractéristiques de la propriété de dépendance qui interagissent avec les systèmes tels qu'une présentation ou une liaison de données.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>A reference to a handler implementation that will be called whenever the property system calls <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> on this dependency property.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire qui sera appelée à chaque fois que le système de propriétés appelle <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> sur cette propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to prevent the property system from animating the property that this metadata is applied to.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour éviter que le système de propriétés anime la propriété à laquelle ces métadonnées sont appliquées.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>Such properties will raise a run-time exception originating from the property system if animations of them are attempted.</source>
          <target state="translated">De telles propriétés déclenchent une exception runtime qui provient du système de propriétés si des tentatives d'animation ont lieu.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to permit animating the property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> pour autoriser l'animation de la propriété.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and framework metadata options, specified callbacks, and a Boolean that can be used to prevent animation of the property.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut et les options de métadonnées au niveau de l'infrastructure fournies, les rappels spécifiés et une valeur booléenne qui peut être utilisée pour empêcher l'animation de la propriété.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The <ph id="ph1">`isAnimationProhibited`</ph> parameter sets the initial value of the <ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</ph> property declared by the immediate base <ph id="ph3">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">`isAnimationProhibited`</ph> paramètre définit la valeur initiale de la <ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</ph> propriété déclarée par la base immédiate <ph id="ph3">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties that match that <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> flag's name to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Les valeurs marquées comme indicateurs définis dans le <ph id="ph1">`flags`</ph> paramètre définit la valeur booléenne de <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés qui correspondent au <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> nom de cet indicateur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Vous pouvez toujours modifier les valeurs des propriétés dans les métadonnées, tant que les métadonnées n’a pas encore été appliquées à une opération de système de propriétés spécifique.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source>The following example calls this constructor signature:</source>
          <target state="translated">L’exemple suivant appelle cette signature de constructeur :</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The default value of the dependency property, usually provided as a specific type.</source>
          <target state="translated">Valeur par défaut de la propriété de dépendance, habituellement fournie comme un type spécifique.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The metadata option flags (a combination of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph> values).</source>
          <target state="translated">Indicateurs d'option de métadonnées (combinaison des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</source>
          <target state="translated">Ces options spécifient les caractéristiques de la propriété de dépendance qui interagissent avec les systèmes tels qu'une présentation ou une liaison de données.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire que le système de propriétés appelle à chaque fois que la valeur effective de la propriété change.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>A reference to a handler implementation that will be called whenever the property system calls <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> against this property.</source>
          <target state="translated">Référence à l'implémentation d'un gestionnaire qui sera appelée à chaque fois que le système de propriétés appelle <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /&gt;</ph> à l'aide de cette propriété.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to prevent the property system from animating the property that this metadata is applied to.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour éviter que le système de propriétés anime la propriété à laquelle ces métadonnées sont appliquées.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>Such properties will raise a run-time exception originating from the property system if animations of them are attempted.</source>
          <target state="translated">De telles propriétés déclenchent une exception runtime qui provient du système de propriétés si des tentatives d'animation ont lieu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> to use when bindings for this property are applied that have their <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> set to <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> à utiliser lorsque les liaisons pour cette propriété sont appliquées et dont la valeur de leur <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> est <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> class with the provided default value and framework metadata options, specified callbacks, a Boolean that can be used to prevent animation of the property, and a data-binding update trigger default.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> avec la valeur par défaut et les options de métadonnées au niveau de l'infrastructure fournies, les rappels spécifiés, une valeur booléenne qui peut être utilisée pour empêcher l'animation de la propriété, et un déclencheur de mise à jour de liaison de données par défaut.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The type of the value provided for <ph id="ph1">`defaultValue`</ph> must match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to.</source>
          <target state="translated">Le type de la valeur fournie pour <ph id="ph1">`defaultValue`</ph> doit correspondre ou être lié au type spécifié dans l’inscription d’origine de la propriété de dépendance qui seront appliquées à ces métadonnées.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation.</source>
          <target state="translated">Les incompatibilités entre le type de valeur par défaut de métadonnées et le type de la propriété de dépendance qu'il est appliqué peuvent être difficiles à déboguer, car elles ne sont pas détectables lors de la compilation.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The property system does not evaluate the effective value of a property until run time, so the result of a default value type/property type mismatch is a run-time error.</source>
          <target state="translated">Le système de propriétés n’évalue pas la valeur effective d’une propriété jusqu’au moment de l’exécution, le résultat d’une incompatibilité de type de propriété/type de valeur par défaut est une erreur d’exécution.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> has special meaning in the property system, and cannot be used as a dependency property default value.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> a une signification spéciale dans le système de propriétés et ne peut pas être utilisé comme une valeur par défaut de propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>The <ph id="ph1">`isAnimationProhibited`</ph> parameter sets the initial value of the <ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</ph> property declared by the immediate base <ph id="ph3">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">`isAnimationProhibited`</ph> paramètre définit la valeur initiale de la <ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</ph> propriété déclarée par la base immédiate <ph id="ph3">&lt;xref:System.Windows.UIPropertyMetadata&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>For more information about the update source behavior for bindings, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le comportement de source de mise à jour pour les liaisons, consultez <bpt id="p1">[</bpt>vue d’ensemble de la liaison de données<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>Values marked as set flags in the <ph id="ph1">`flags`</ph> parameter will set the Boolean value of <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties that match that <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> flag's name to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Les valeurs marquées comme indicateurs définis dans le <ph id="ph1">`flags`</ph> paramètre définit la valeur booléenne de <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés qui correspondent au <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> nom de cet indicateur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source>You can still change the values of the properties in the metadata, as long as the metadata has not yet been applied to a specific property system operation.</source>
          <target state="translated">Vous pouvez toujours modifier les valeurs des propriétés dans les métadonnées, tant que les métadonnées n’a pas encore été appliquées à une opération de système de propriétés spécifique.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
          <source><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="defaultValue" /&gt;</ph> a la valeur <ph id="ph2">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si une propriété de dépendance peut affecter la passe de réorganisation durant les opérations du moteur de disposition.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property on which this metadata exists potentially affects the arrange pass; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété de dépendance sur laquelle ces métadonnées existent peut affecter la passe de réorganisation ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> include an implementation of <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> incluent une implémentation de <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> qui surveille les modifications de valeur effective de toutes les propriétés de dépendance qui existent sur un élément.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>As part of that logic, dependency properties that change effective value and have metadata with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> set to <ph id="ph2">`true`</ph> will initiate a deferred request to invalidate the visuals for that element (a call to <ph id="ph3">&lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</ph>).</source>
          <target state="translated">Dans le cadre de cette logique, des propriétés de dépendance qui modifient l’effet valeur et qui ont des métadonnées avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph> va lancer une demande différée pour invalider les visuels de cet élément (un appel à <ph id="ph3">&lt;xref:System.Windows.UIElement.InvalidateArrange%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Étant donné que cette implémentation de niveau infrastructure WPF est déjà en place, en général inutile rechercher des propriétés de dépendance avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> , sauf si vous sont essentiellement de remplacer ou de modifier le comportement de mise en page de niveau infrastructure WPF.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>Custom <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementations might choose to have similar behavior for dependency property changes where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Personnalisé <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implémentations peuvent choisir d’avoir un comportement similaire pour les modifications de propriété de dépendance où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>Members of this class are either not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisés en <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>The following example obtains the default metadata from various dependency property fields, queries the value of various <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties on it, and uses the information to populate a table to implement a "metadata browser".</source>
          <target state="translated">L’exemple suivant récupère les métadonnées de la dépendance différents champs de propriété, la valeur de différentes des requêtes <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés et utilise ces informations pour remplir une table pour implémenter un « navigateur de métadonnées ».</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si une propriété de dépendance peut affecter la passe de mesure pendant des opérations du moteur de présentation.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property on which this metadata exists potentially affects the measure pass; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété de dépendance sur laquelle ces métadonnées existent peut affecter la passe de mesure ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> include an implementation of <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> incluent une implémentation de <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> qui surveille les modifications de valeur effective de toutes les propriétés de dépendance qui existent sur un élément.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>As part of that logic, dependency properties that change effective value and have metadata with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> set to <ph id="ph2">`true`</ph> will initiate a deferred request to invalidate the visuals for that element.</source>
          <target state="translated">Dans le cadre de cette logique, des propriétés de dépendance qui modifient l’effet valeur et qui ont des métadonnées avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph> va lancer une demande différée pour invalider les visuels de cet élément.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Étant donné que cette implémentation de niveau infrastructure WPF est déjà en place, en général inutile rechercher des propriétés de dépendance avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> , sauf si vous sont essentiellement de remplacer ou de modifier le comportement de mise en page de niveau infrastructure WPF.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>Custom <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementations might choose to have similar behavior for dependency property changes where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Personnalisé <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implémentations peuvent choisir d’avoir un comportement similaire pour les modifications de propriété de dépendance où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>The following example obtains the default metadata from various dependency property fields, queries the value of various <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties on it, and uses the information to populate a table to implement a "metadata browser".</source>
          <target state="translated">L’exemple suivant récupère les métadonnées de la dépendance différents champs de propriété, la valeur de différentes des requêtes <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés et utilise ces informations pour remplir une table pour implémenter un « navigateur de métadonnées ».</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element's layout during layout engine operations.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si une propriété de dépendance peut affecter la passe de réorganisation de la disposition de son élément parent durant les opérations du moteur de disposition.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property on which this metadata exists potentially affects the arrange pass specifically on its parent element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété de dépendance sur laquelle ces métadonnées existent peut affecter la passe de réorganisation spécifiquement sur son élément parent ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> include an implementation of <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> incluent une implémentation de <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> qui surveille les modifications de valeur effective de toutes les propriétés de dépendance qui existent sur un élément.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>As part of that logic, dependency properties that change effective value and have metadata with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> set to <ph id="ph2">`true`</ph> will initiate a deferred request to invalidate the visuals for the parent element.</source>
          <target state="translated">Dans le cadre de cette logique, des propriétés de dépendance qui modifient l’effet valeur et qui ont des métadonnées avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph> va lancer une demande différée pour invalider les visuels de l’élément parent.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Generally, you do not need to report changes of a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> property to a parent element using <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> because the element itself would already have its own <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> as <ph id="ph4">`true`</ph>.</source>
          <target state="translated">En règle générale, vous n’avez pas besoin de signaler les modifications d’un <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> propriété à un élément parent à l’aide <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> , car l’élément lui-même aurait déjà son propre <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A&gt;</ph> comme <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>That is usually sufficient, because changes in the child element generally initiate a parent arrange when appropriate.</source>
          <target state="translated">Qui est généralement suffisant, car les modifications apportées à l’élément enfant déclenchent généralement une organisation du parent lorsque cela est approprié.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> is sometimes used for a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> est parfois utilisé pour une <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> classe dérivée.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>In this case, the child element sets a property, but a <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived class does not control its own rendering.</source>
          <target state="translated">Dans ce cas, l’élément enfant définit une propriété, mais qu’une <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> classe dérivée ne contrôle pas son propre rendu.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>The rendering is handled by a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> parent element that serves as the content host.</source>
          <target state="translated">Le rendu est contrôlé par un <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> élément parent qui sert de l’hôte de contenu.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>For instance, a change to the value of the <ph id="ph1">&lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType&gt;</ph> attached property by a child element invalidates arrange of the parent, because the position of the child in the parent must be changed.</source>
          <target state="translated">Par exemple, une modification à la valeur de la <ph id="ph1">&lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType&gt;</ph> propriété attachée à un élément enfant invalide organisation du parent, parce que la position de l’enfant du parent doit être modifiée.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType&gt;</ph> attached property has metadata where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">&lt;xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=nameWithType&gt;</ph> propriété jointe possède des métadonnées où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Another example is <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Padding%2A&gt;</ph>; when this property changes, the parent might change the positioning of the child, depending on available space.</source>
          <target state="translated">Un autre exemple est <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Padding%2A&gt;</ph>; lorsque cette propriété est modifiée, le parent peut modifier le positionnement de l’enfant, en fonction de l’espace disponible.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Étant donné que cette implémentation de niveau infrastructure WPF est déjà en place, en général inutile rechercher des propriétés de dépendance avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> , sauf si vous sont essentiellement de remplacer ou de modifier le comportement de mise en page de niveau infrastructure WPF.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Custom <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementations might choose to have similar behavior for dependency property changes where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Personnalisé <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implémentations peuvent choisir d’avoir un comportement similaire pour les modifications de propriété de dépendance où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Properties on any derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés de toutes les classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element's layout during layout engine operations.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si une propriété de dépendance peut affecter la passe de mesure de la disposition de son élément parent durant les opérations du moteur de disposition.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property on which this metadata exists potentially affects the measure pass specifically on its parent element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.The default is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété de dépendance sur laquelle ces métadonnées existent peut affecter la passe de mesure spécifiquement sur son élément parent ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>. La valeur par défaut est <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> include an implementation of <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> incluent une implémentation de <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> qui surveille les modifications de valeur effective de toutes les propriétés de dépendance qui existent sur un élément.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>As part of that logic, dependency properties that change effective value and have metadata with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> set to <ph id="ph2">`true`</ph> will initiate a deferred request to invalidate the visuals for the parent element.</source>
          <target state="translated">Dans le cadre de cette logique, des propriétés de dépendance qui modifient l’effet valeur et qui ont des métadonnées avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph> va lancer une demande différée pour invalider les visuels de l’élément parent.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Étant donné que cette implémentation de niveau infrastructure WPF est déjà en place, en général inutile rechercher des propriétés de dépendance avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> , sauf si vous sont essentiellement de remplacer ou de modifier le comportement de mise en page de niveau infrastructure WPF.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Generally, you do not need to report changes of a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> property to a parent element using <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> because the element itself would already have its own <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> as <ph id="ph4">`true`</ph>.</source>
          <target state="translated">En règle générale, vous n’avez pas besoin de signaler les modifications d’un <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> propriété à un élément parent à l’aide <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> , car l’élément lui-même aurait déjà son propre <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph> comme <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>That is usually sufficient, because changes in the child element generally initiate a parent measure pass when appropriate.</source>
          <target state="translated">Qui est généralement suffisant, car les modifications dans l’élément enfant déclenchent généralement une passe de mesure parent lorsque cela est approprié.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> is sometimes used for a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> est parfois utilisé pour une <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> classe dérivée.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>In this case, the child element sets a property, but a <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> derived class does not control its own rendering.</source>
          <target state="translated">Dans ce cas, l’élément enfant définit une propriété, mais qu’une <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> classe dérivée ne contrôle pas son propre rendu.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>The rendering is handled by a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> parent element that serves as the content host.</source>
          <target state="translated">Le rendu est contrôlé par un <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> élément parent qui sert de l’hôte de contenu.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>For instance, a change to the value of the <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType&gt;</ph> property by a child element invalidates measure of the parent, because the relative spacing of paragraphs might change and might increase or decrease the content host size.</source>
          <target state="translated">Par exemple, une modification à la valeur de la <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType&gt;</ph> propriété par un élément enfant invalide la mesure du parent, parce que l’espacement relatif des paragraphes peut changer et peut augmenter ou diminuer la taille de l’hôte de contenu.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType&gt;</ph> property has metadata where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Par conséquent, le <ph id="ph1">&lt;xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=nameWithType&gt;</ph> propriété possède des métadonnées où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Content host elements also frequently look for changes in dependency properties where <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> is <ph id="ph2">`true`</ph>, as part of content host rendering logic.</source>
          <target state="translated">Éléments de l’hôte de contenu fréquemment rechercher les modifications apportées à des propriétés de dépendance où <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> est <ph id="ph2">`true`</ph>, dans le cadre de la logique de rendu de l’hôte.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>For instance, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> element must respond to certain changes within text that might require that the bounding box of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> itself be changed.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> élément doit répondre à certaines modifications dans le texte qui peut requérir que le cadre englobant de le <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> lui-même soit modifié.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Custom <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementations might choose to have similar behavior for dependency property changes where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Personnalisé <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implémentations peuvent choisir d’avoir un comportement similaire pour les modifications de propriété de dépendance où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Properties on any derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés de toutes les classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si une propriété de dépendance peut affecter la disposition générale d’une façon qui n’influence pas spécifiquement l’organisation ou la mesure, mais qui nécessiterait un nouveau dessin.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property on which this metadata exists affects rendering; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété de dépendance sur laquelle ces métadonnées existent affecte le rendu ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> include an implementation of <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> that monitors effective value changes to all dependency properties that exist on an element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> incluent une implémentation de <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A&gt;</ph> qui surveille les modifications de valeur effective de toutes les propriétés de dépendance qui existent sur un élément.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>As part of that logic, dependency properties that change effective value and have metadata with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> set to <ph id="ph2">`true`</ph> will initiate a deferred request to invalidate the visuals for that element.</source>
          <target state="translated">Dans le cadre de cette logique, des propriétés de dépendance qui modifient l’effet valeur et qui ont des métadonnées avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph> va lancer une demande différée pour invalider les visuels de cet élément.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>Because this WPF framework-level implementation is already in place, you typically do not need to look for dependency properties with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> unless you are substantially replacing or modifying the WPF framework-level layout behavior.</source>
          <target state="translated">Étant donné que cette implémentation de niveau infrastructure WPF est déjà en place, en général inutile rechercher des propriétés de dépendance avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> , sauf si vous sont essentiellement de remplacer ou de modifier le comportement de mise en page de niveau infrastructure WPF.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>Custom <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implementations might choose to have similar behavior for dependency property changes where <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Personnalisé <ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> implémentations peuvent choisir d’avoir un comportement similaire pour les modifications de propriété de dépendance où <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> est <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>Properties on any derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés de toutes les classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>The following example obtains the default metadata from various dependency property fields, queries the value of various <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties on it, and uses the information to populate a table to implement a "metadata browser".</source>
          <target state="translated">L’exemple suivant récupère les métadonnées de la dépendance différents champs de propriété, la valeur de différentes des requêtes <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés et utilise ces informations pour remplir une table pour implémenter un « navigateur de métadonnées ».</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>Gets or sets a value that indicates whether the property binds two-way by default.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la propriété établit une liaison bidirectionnelle par défaut.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property on which this metadata exists binds two-way by default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété de dépendance sur laquelle figurent ces métadonnées établit une liaison bidirectionnelle par défaut ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>In absence of this property being <ph id="ph1">`true`</ph>, binding updates are one-way by default, based on the default behavior of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> constructors or equivalent <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">En l’absence de cette propriété en cours de <ph id="ph1">`true`</ph>, mises à jour de la liaison sont unidirectionnelles par défaut, en fonction du comportement par défaut de la <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> constructeurs ou équivalent <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntaxe.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>In existing elements, you will usually find this property set to <ph id="ph1">`true`</ph> in metadata for dependency properties that both report state and are modifiable by user action, for example <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dans les éléments existants, vous trouvez généralement cette propriété définie sur <ph id="ph1">`true`</ph> dans les métadonnées pour les propriétés de dépendance qui signalent l’état et sont modifiables par l’utilisateur, par exemple <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>This property only reports the default binding update characteristics of the dependency property in general.</source>
          <target state="translated">En règle générale, cette propriété indique uniquement les caractéristiques de mise à jour de liaison par défaut de la propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>Any binding set to this property on an instance can locally set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property of the binding and change this default.</source>
          <target state="translated">Toute liaison définie sur cette propriété sur une instance peut définir localement la <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> propriété de la liaison et modifier cette valeur par défaut.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>Properties on any derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés de toutes les classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>The following example obtains the default metadata from various dependency property fields, queries the value of various <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties on it, and uses the information to populate a table to implement a "metadata browser".</source>
          <target state="translated">L’exemple suivant récupère les métadonnées de la dépendance différents champs de propriété, la valeur de différentes des requêtes <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés et utilise ces informations pour remplir une table pour implémenter un « navigateur de métadonnées ».</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>Gets or sets the default for <ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> to use when bindings for the property with this metadata are applied, which have their <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> set to <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit la valeur par défaut pour <ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> à utiliser lorsque les liaisons pour la propriété avec ces métadonnées sont appliquées, lesquelles ont leur <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> dont la valeur est <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>A value of the enumeration, other than <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>.</source>
          <target state="translated">Valeur de l'énumération, autre que <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>This property is set to <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>; the value you set is supposed to become the default when requested by bindings.</source>
          <target state="translated">Cette propriété a la valeur <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph> ; la valeur que vous définissez est supposée devenir la valeur par défaut lorsqu'elle est demandée par des liaisons.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Gets or sets a value that indicates whether the value of the dependency property is inheritable.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la valeur de la propriété de dépendance peut être héritée.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value is inheritable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur de propriété peut être héritée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Property value inheritance is a feature of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system at the WPF framework level, whereby certain dependency properties can be locally set on an element at or near the root of a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> element tree and then have their value inherited by all elements within the logical tree of child elements that also possess that property.</source>
          <target state="translated">L’héritage de valeur de propriété est une fonctionnalité de la <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> système de propriétés au niveau de l’infrastructure WPF, dans laquelle certaines propriétés de dépendance peuvent être définies localement sur un élément à ou près de la racine d’un <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> élément d’arborescence et ont leur valeur héritée par tous les éléments dans l’arborescence logique d’éléments enfants qui possèdent également cette propriété.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Property value inheritance is not enabled by default, and enabling it does have some performance implications.</source>
          <target state="translated">L’héritage de valeur de propriété n’est pas activé par défaut, et son activation a certaines implications en matière de performances.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>For details, see <bpt id="p1">[</bpt>Property Value Inheritance<ept id="p1">](~/docs/framework/wpf/advanced/property-value-inheritance.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Héritage de la valeur de propriété<ept id="p1">](~/docs/framework/wpf/advanced/property-value-inheritance.md)</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Although property value inheritance might appear to work for nonattached dependency properties, the inheritance behavior for a nonattached property through certain object-object divisions in the runtime tree is undefined.</source>
          <target state="translated">Bien que l’héritage de valeur de propriété puisse sembler fonctionner pour les propriétés de dépendance non attachées, le comportement d’héritage d’une propriété non attachée par certaines divisions objet-objet dans l’arborescence d’exécution n’est pas défini.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Always use <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> to register properties where you specify <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</ph> in the metadata.</source>
          <target state="translated">Toujours utiliser <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> pour inscrire des propriétés où vous spécifiez <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</ph> dans les métadonnées.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>The following example obtains the default metadata from various dependency property fields, queries the value of various <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties on it, and uses the information to populate a table to implement a "metadata browser".</source>
          <target state="translated">L’exemple suivant récupère les métadonnées de la dépendance différents champs de propriété, la valeur de différentes des requêtes <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés et utilise ces informations pour remplir une table pour implémenter un « navigateur de métadonnées ».</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.Inherits">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>Gets a value that indicates whether data binding is supported for the dependency property.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la liaison de données est prise en charge pour la propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data binding is supported on the dependency property to which this metadata applies; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la liaison de données est prise en charge sur la propriété de dépendance à laquelle ces métadonnées s'appliquent ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>This property reports <ph id="ph1">`false`</ph> for one of two possible conditions: either data binding to a dependency property is not allowed because the dependency property is read-only (as reported in the dependency property identifier, not the metadata), or the value of another metadata property, <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>, is set to <ph id="ph3">`true`</ph> in this metadata.</source>
          <target state="translated">Cette propriété signale <ph id="ph1">`false`</ph> pour l’une des deux conditions possibles : liaison de données à une propriété de dépendance n’est pas autorisée, car la propriété de dépendance est en lecture seule (comme indiqué dans l’identificateur de propriété de dépendance, pas les métadonnées), ou la valeur de une autre propriété de métadonnées, <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>, a la valeur <ph id="ph3">`true`</ph> dans ces métadonnées.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>This property is exposed as a convenience so that callers do not have to check both <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>.</source>
          <target state="translated">Cette propriété est exposée en tant que pour des raisons pratiques afin que les appelants ne disposent pas activer les deux <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>If you are attempting to create metadata that specifies that an otherwise read/write property should not support data binding, specify the flag <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable&gt;</ph> (note the slight naming convention difference versus <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>).</source>
          <target state="translated">Si vous tentez de créer des métadonnées qui spécifie qu’une propriété en lecture/écriture ne doit pas prendre en charge la liaison de données, spécifiez l’indicateur <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable&gt;</ph> (Notez la légère différence de convention d’affectation de noms et <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
          <source>The following example obtains the default metadata from various dependency property fields, queries the value of various <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> properties on it, and uses the information to populate a table to implement a "metadata browser".</source>
          <target state="translated">L’exemple suivant récupère les métadonnées de la dépendance différents champs de propriété, la valeur de différentes des requêtes <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> propriétés et utilise ces informations pour remplir une table pour implémenter un « navigateur de métadonnées ».</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Gets or sets a value that indicates whether the dependency property supports data binding.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si la propriété de dépendance prend en charge la liaison de données.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property does not support data binding; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété ne prend pas en charge la liaison de données ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Note that this metadata property is set to <ph id="ph1">`true`</ph> specifically for properties that should not support data binding, despite being read-write properties.</source>
          <target state="translated">Notez que cette propriété de métadonnées a la valeur <ph id="ph1">`true`</ph> spécifiquement pour les propriétés qui ne doivent pas prendre en charge la liaison de données, en dépit de propriétés en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>The expectation is that in most cases where a dependency property is declared, data binding is desired, because data binding is one of the key scenarios where a dependency property is useful.</source>
          <target state="translated">Il est courant que la plupart des cas où une propriété de dépendance est déclarée, liaison de données est souhaitée, car la liaison de données est un des principaux scénarios où une propriété de dépendance est utile.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Unlike <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;</ph>, this does not merely change a default that can later be changed on a specific binding.</source>
          <target state="translated">Contrairement à <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;</ph>, cela ne change pas simplement une valeur par défaut peut être modifiée ultérieurement sur une liaison spécifique.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Setting this property <ph id="ph1">`true`</ph> in the metadata for a dependency property metadata will disable all bindings from applying their values through expressions to that dependency property.</source>
          <target state="translated">Définition de cette propriété <ph id="ph1">`true`</ph> dans les métadonnées pour une propriété de dépendance les métadonnées désactivera toutes les liaisons de l’application de leurs valeurs à travers des expressions à cette propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Read-only dependency properties do not support data binding (because they have no setter that can apply changed values), but will still report <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>.</source>
          <target state="translated">Propriétés de dépendance en lecture seule ne prennent pas en charge une liaison de données (car ils n’ont aucun accesseur Set peut appliquer des valeurs modifiées), mais ils signalent <ph id="ph1">`false`</ph> pour <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>This is because properties that correspond to a <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> values will report parity with how the metadata was actually established, rather than always reporting the end result behavior that the naming of the property might imply.</source>
          <target state="translated">C’est parce que les propriétés qui correspondent à un <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadataOptions&gt;</ph> valeurs signalent la parité de la façon dont les métadonnées étaient réellement établies, au lieu de toujours signaler le comportement de résultat final que la désignation de la propriété peut impliquer.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>To determine whether a given dependency property permits data binding, you should usually check <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;</ph> instead.</source>
          <target state="translated">Pour déterminer si une propriété de dépendance donnée autorise la liaison de données, vous devez vérifier généralement <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;</ph> à la place.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;</ph> is a convenience for checking both <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph> as a single operation, yielding the expected result.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A&gt;</ph> est une commodité pour la vérification à la fois <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A&gt;</ph> comme une seule opération, générant le résultat attendu.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si cette propriété contient des informations de journalisation que les applications peuvent ou doivent stocker dans le cadre d’une implémentation de journalisation.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if journaling should be performed on the dependency property that this metadata is applied to; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si la journalisation doit être effectuée sur la propriété de dépendance ces métadonnées sont appliquées ; dans le cas contraire, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.Journal">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>The base metadata to merge.</source>
          <target state="translated">Métadonnées de base à fusionner.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>The dependency property this metadata is being applied to.</source>
          <target state="translated">Propriété de dépendance à laquelle ces métadonnées sont appliquées.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>Enables a merge of the source metadata with base metadata.</source>
          <target state="translated">Active une fusion des métadonnées sources avec des métadonnées de base.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>This method is used internally when metadata is being overridden.</source>
          <target state="translated">Cette méthode est utilisée en interne lorsque les métadonnées sont substituées.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>Classes that derive from <ph id="ph1">&lt;see cref="T:System.Windows.PropertyMetadata" /&gt;</ph> (or this class particularly) should override this method to account for any metadata properties they have added in their implementations.</source>
          <target state="translated">Les classes qui dérivent de <ph id="ph1">&lt;see cref="T:System.Windows.PropertyMetadata" /&gt;</ph> (ou cette classe en particulier) doivent substituer cette méthode pour prendre en compte pour toutes les propriétés de métadonnées qu’ils ont ajoutées dans leurs implémentations.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>For instance, your implementation might have added a new flagwise enumeration value, and the <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /&gt;</ph> implementation should then be able to combine those flags correctly.</source>
          <target state="translated">Par exemple, votre implémentation peut ajouter une nouvelle valeur de l’énumération d’indicateurs et le <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /&gt;</ph> implémentation doit pouvoir ensuite combiner ces indicateurs correctement.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>Always call the base implementation prior to your own implementation, because the base implementation takes care of merging all the properties already defined on previous types in the hierarchy.</source>
          <target state="translated">Appelez toujours l’implémentation de base avant votre propre implémentation, car l’implémentation de base prend en charge de la fusion de toutes les propriétés déjà définies sur les types précédents dans la hiérarchie.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>The behavior added by the <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /&gt;</ph> implementation in <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> is that specific WPF framework-level properties in the metadata such as <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.AffectsRender" /&gt;</ph> are combined in a bitwise or operation.</source>
          <target state="translated">Le comportement ajouté par le <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /&gt;</ph> mise en œuvre dans <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> est que les propriétés de niveau infrastructure WPF spécifiques dans les métadonnées comme <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.AffectsRender" /&gt;</ph> sont combinées dans une opération de bits ou l’opération.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /&gt;</ph> behavior also implements the behavior when you override the property metadata on an existing dependency property by calling <ph id="ph2">&lt;see cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" /&gt;</ph>., using override metadata that is <ph id="ph3">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)" /&gt;</ph> comportement implémente également le comportement lorsque vous substituez les métadonnées de propriété sur une propriété de dépendance existante en appelant <ph id="ph2">&lt;see cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" /&gt;</ph>., à l’aide de métadonnées de substitution qui sont <ph id="ph3">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
          <source>The dependency property to which the metadata has been applied.</source>
          <target state="translated">Propriété de dépendance à laquelle les métadonnées ont été appliquées.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
          <source>The type associated with this metadata if this is type-specific metadata.</source>
          <target state="translated">Type associé à ces métadonnées s'il s'agit de métadonnées spécifiques au type.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
          <source>If this is default metadata, this value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">S'il s'agit de métadonnées par défaut, cette valeur peut être <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
          <source>Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.</source>
          <target state="translated">Appelé lorsque ces métadonnées ont été appliquées à une propriété qui indique que les métadonnées sont sealed.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
          <source>Any mutability of the data structure of a <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> instance should be marked as immutable when this method is invoked.</source>
          <target state="translated">Toute mutabilité de la structure de données d’un <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> instance doit être marquée comme étant immuable lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> implementation of this method does nothing beyond calling the base implementation.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkPropertyMetadata" /&gt;</ph> implémentation de cette méthode n’a aucun effet au-delà de l’appel de l’implémentation de base.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si l’évaluation de l’héritage de valeur de propriété doit s’étendre sur certaines limites de contenu dans l’arborescence logique d’éléments.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value inheritance should span across certain content boundaries; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'héritage de la valeur de propriété doit s'étendre sur certaines limites de contenu ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>This metadata reports a seldom-applied modification to property value inheritance behavior across special parent element-child element boundaries.</source>
          <target state="translated">Ces métadonnées signalent une modification de comportement de l’héritage de valeur de propriété rarement appliqué au-delà des limites d’élément spécial parent-enfant de l’élément.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>The canonical example of such a boundary is the contents of a <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>, where the <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph> content might get reloaded independently of the existence of the <ph id="ph3">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">L’exemple canonique d’une telle limite est le contenu d’un <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>, où le <ph id="ph2">&lt;xref:System.Windows.Controls.Frame&gt;</ph> contenu peut être rechargé indépendamment de l’existence de la <ph id="ph3">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>The desired property system behavior is that property value inheritance should not traverse into the contents of the <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>, because these contents might be elements that the application hosting the frame does not own or control.</source>
          <target state="translated">Le comportement de système de propriété de votre choix est que l’héritage de valeur de propriété ne doit pas parcourir le contenu de la <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>, car ces éléments de l’application qui héberge la trame ne possède ni contrôler peut être.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>Specifying metadata with <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior%2A&gt;</ph> set to <ph id="ph2">`true`</ph>, as well as specifying <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</ph> as <ph id="ph4">`true`</ph>, will cause the property on which the metadata is applied to be inheritable even across the <ph id="ph5">&lt;xref:System.Windows.Controls.Frame&gt;</ph> boundary or similar boundaries.</source>
          <target state="translated">Spécification des métadonnées avec <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph>, ainsi <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</ph> en tant que <ph id="ph4">`true`</ph>, entraîne la propriété sur laquelle les métadonnées sont appliquées pour être héritées même à travers la <ph id="ph5">&lt;xref:System.Windows.Controls.Frame&gt;</ph> limite ou des limites semblables.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>However, after the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si les sous-propriétés de la propriété de dépendance n’affectent pas le rendu de l’objet conteneur.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if changes to sub-property values do not affect rendering if changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les modifications des valeurs de sous-propriété n'affectent pas le rendu si celui-ci est modifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>This metadata option is pertinent for dependency properties that are reference types, where that type has property values of its own.</source>
          <target state="translated">Cette option de métadonnées est pertinente pour les propriétés de dépendance qui sont des types de référence, où ce type a ses propres valeurs de propriété.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>Typically, the layout system logic is to assume that any dependency property with sub-properties potentially will affect layout, because checking all sub-properties for changes is more time consuming than actually running another render pass.</source>
          <target state="translated">En règle générale, la logique de système de disposition est de supposer que n’importe quelle propriété de dépendance avec des sous-propriétés peut affecter la disposition, car la vérification de toutes les sous-propriétés de modifications est beaucoup plus de temps que l’exécution une autre passe de rendu.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>Setting this option to <ph id="ph1">`true`</ph> is useful for optimizing performance of the WPF framework level layout system implementation.</source>
          <target state="translated">Cette option <ph id="ph1">`true`</ph> est utile pour optimiser les performances de l’implémentation de système de disposition de niveau infrastructure WPF.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>Properties on derived classes of <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> are typically defined in the object model as read-write.</source>
          <target state="translated">Propriétés des classes dérivées de <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata&gt;</ph> sont généralement définis dans le modèle objet en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>This is so they can be adjusted after initialization of the instance.</source>
          <target state="translated">Il s’agit afin qu’ils peuvent être ajustées après initialisation de l’instance.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>However, once the metadata is consumed as part of a call to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, the property system will seal that metadata instance and properties that convey the specifics of the metadata are now considered immutable.</source>
          <target state="translated">Toutefois, une fois que les métadonnées sont consommées dans le cadre d’un appel à <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.AddOwner%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph>, le système de propriétés scelle l’instance des métadonnées et propriétés qui transmettent les caractéristiques des métadonnées sont maintenant considérées comme immuables.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>Attempting to set this property after <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> is <ph id="ph2">`true`</ph> on this metadata instance will raise an exception.</source>
          <target state="translated">Tentative de définition de cette propriété après <ph id="ph1">&lt;xref:System.Windows.PropertyMetadata.IsSealed%2A&gt;</ph> est <ph id="ph2">`true`</ph> sur les métadonnées de cette instance lève une exception.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>Members of this class are not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Membres de cette classe ne sont généralement pas utilisées dans <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
          <source>The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</source>
          <target state="translated">Les métadonnées ont déjà été appliquées à une opération de propriété de dépendance : elles sont donc sealed et les propriétés des métadonnées ne peuvent pas être définies.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>