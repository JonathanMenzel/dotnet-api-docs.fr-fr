<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Rect.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cf7d1387ee03ec7cae439135fbd676179308311f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf7d1387ee03ec7cae439135fbd676179308311f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Describes the width, height, and location of a rectangle.</source>
          <target state="translated">Décrit la largeur, la hauteur et l’emplacement d’un rectangle.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>XAML Attribute Usage</source>
          <target state="translated">Utilisation d'attributs XAML</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>XAML Values</source>
          <target state="translated">Valeurs XAML</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>x<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The x-coordinate location of the left side of the rectangle.</source>
          <target state="translated">L’emplacement de la coordonnée x du côté gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>y<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The y-coordinate location of the top side of the rectangle.</source>
          <target state="translated">L’emplacement de la coordonnée y du côté supérieur du rectangle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>width<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>width<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the rectangle.</source>
          <target state="translated">Une valeur non négative qui représente le <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> du rectangle.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source><bpt id="p1">*</bpt>height<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>height<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>A non-negative value that represents the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the rectangle.</source>
          <target state="translated">Une valeur non négative qui représente le <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> du rectangle.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Rect">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">Une structure <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> qui spécifie la hauteur et la largeur du rectangle.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is of the specified size and is located at (0,0).</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> qui fait la taille spécifiée et est localisée à (0,0).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Size)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29&gt;</ph> constructor.</source>
          <target state="translated">L’exemple suivant montre comment créer un nouveau <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The first point that the new rectangle must contain.</source>
          <target state="translated">Le premier point que doit contenir le nouveau rectangle.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The second point that the new rectangle must contain.</source>
          <target state="translated">Le deuxième point que doit contenir le nouveau rectangle.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is exactly large enough to contain the two specified points.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> qui est exactement assez  grande pour contenir les deux points spécifiés.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29&gt;</ph> constructor.</source>
          <target state="translated">L’exemple suivant montre comment créer un nouveau <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>A point that specifies the location of the top-left corner of the rectangle.</source>
          <target state="translated">Un point qui spécifie l'emplacement du coin supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">Une structure <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> qui spécifie la hauteur et la largeur du rectangle.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that has the specified top-left corner location and the specified width and height.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> qui a l'emplacement de coin supérieur gauche, et la largeur et la hauteur spécifiés.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29&gt;</ph> constructor.</source>
          <target state="translated">L’exemple suivant montre comment créer un nouveau <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The first point the rectangle must contain.</source>
          <target state="translated">Le premier point que doit contenir le rectangle.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The amount to offset the specified point.</source>
          <target state="translated">Le taux d'offset du point spécifié.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The resulting rectangle will be exactly large enough to contain both points.</source>
          <target state="translated">Le rectangle résultant sera exactement assez grand pour contenir les deux points.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> qui est exactement assez grande pour contenir le point spécifié et la somme du point et du vecteur spécifiés.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29&gt;</ph> constructor.</source>
          <target state="translated">L’exemple suivant montre comment créer un nouveau <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The x-coordinate of the top-left corner of the rectangle.</source>
          <target state="translated">Coordonnée X du coin supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The y-coordinate of the top-left corner of the rectangle.</source>
          <target state="translated">Coordonnée y du coin supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The width of the rectangle.</source>
          <target state="translated">Largeur du rectangle.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The height of the rectangle.</source>
          <target state="translated">Hauteur du rectangle.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure that has the specified x-coordinate, y-coordinate, width, and height.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> qui a les coordonnées x et y, et la largeur et la hauteur spécifiées.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure by using the <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> constructor.</source>
          <target state="translated">L’exemple suivant montre comment créer un nouveau <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="width" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="width" /&gt;</ph> est une valeur négative.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="height" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="height" /&gt;</ph> est une valeur négative.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Bottom">
          <source>Gets the y-axis value of the bottom of the rectangle.</source>
          <target state="translated">Obtient la valeur d'axe y du bas du rectangle.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The y-axis value of the bottom of the rectangle.</source>
          <target state="translated">La valeur d'axe y du bas du rectangle.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>If the rectangle is empty, the value is <ph id="ph1">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph> .</source>
          <target state="translated">Si le rectangle est vide, la valeur est <ph id="ph1">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The y-axis value of the bottom of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> properties.</source>
          <target state="translated">La valeur de l’axe y du bas du rectangle est égale à la somme de la <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Bottom">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.BottomLeft">
          <source>Gets the position of the bottom-left corner of the rectangle</source>
          <target state="translated">Obtient la position du coin inférieur gauche du rectangle</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The position of the bottom-left corner of the rectangle.</source>
          <target state="translated">La position du coin inférieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The position of the bottom-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph3"> + </ph><ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
          <target state="translated">La position de l’angle inférieur gauche du rectangle est égale à (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> <ph id="ph3"> + </ph> <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomLeft">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.BottomRight">
          <source>Gets the position of the bottom-right corner of the rectangle.</source>
          <target state="translated">Obtient la position du coin inférieur droit du rectangle</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The position of the bottom-right corner of the rectangle.</source>
          <target state="translated">La position du coin inférieur droit du rectangle.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The position of the bottom-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</source>
          <target state="translated">La position de l’angle inférieur droit du rectangle est égale à (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> <ph id="ph5"> + </ph> <ph id="ph6">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.BottomRight">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Indicates whether the rectangle contains the specified point or rectangle.</source>
          <target state="translated">Indique si le rectangle contient le point ou le rectangle spécifiés.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>The point to check.</source>
          <target state="translated">Point à vérifier.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>Indicates whether the rectangle contains the specified point.</source>
          <target state="translated">Indique si le rectangle contient le point spécifié.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle contains the specified point; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le rectangle contient le point spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Point%29&gt;</ph> method to determine if the rectangle contains the specified <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Point%29&gt;</ph> méthode pour déterminer si le rectangle contient le texte spécifié <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>The rectangle to check.</source>
          <target state="translated">Le rectangle à vérifier.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>Indicates whether the rectangle contains the specified rectangle.</source>
          <target state="translated">Indique si le rectangle contient le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> is entirely contained by the rectangle; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> est entièrement contenu par le rectangle ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Rect%29&gt;</ph> method to determine if one rectangle is contained by another rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Windows.Rect%29&gt;</ph> méthode pour déterminer si un rectangle est contenu par un autre rectangle.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The x-coordinate of the point to check.</source>
          <target state="translated">Coordonnée x du point à vérifier.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The y-coordinate of the point to check.</source>
          <target state="translated">Coordonnée y du point à vérifier.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</source>
          <target state="translated">Indique si le rectangle contient les coordonnées x et y spécifiées.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if (<ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>) is contained by the rectangle; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si (<ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>) est contenu par le rectangle ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Contains(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29&gt;</ph> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29&gt;</ph> méthode pour déterminer si le rectangle contient le point spécifié par les coordonnées x et y.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Empty">
          <source>Gets a special value that represents a rectangle with no position or area.</source>
          <target state="translated">Obtient une valeur spéciale qui représente un rectangle sans position ou zone.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>The empty rectangle, which has <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> property values of <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, and has <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> property values of <ph id="ph6">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">Le rectangle vide qui a <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> et des valeurs de propriété <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> de <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>et a <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> et des valeurs de propriété <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> de <ph id="ph6">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Avoid mathematical computations involving empty rectangles.</source>
          <target state="translated">Évitez des calculs mathématiques qui impliquent des rectangles vides.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Because both <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> are infinite values, processor operations are severely impaired by these operations.</source>
          <target state="translated">Étant donné que les deux <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> sont des valeurs infinies, les opérations sont affaiblies sévèrement par ces opérations de processeur.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Empty">
          <source>Comparisons involving these values will not affect application performance.</source>
          <target state="translated">Les comparaisons qui impliquent ces valeurs n’affectent pas les performances de l’application.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Indicates whether two rectangles are equal.</source>
          <target state="translated">Indique si deux rectangles sont égaux.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>The object to compare to the current rectangle.</source>
          <target state="translated">Objet à comparer avec le rectangle actuel.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>Indicates whether the specified object is equal to the current rectangle.</source>
          <target state="translated">Détermine si l'objet spécifié est égal au rectangle actuel.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> and has the same <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values as the current rectangle; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="o" /&gt;</ph> est un <ph id="ph3">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> et qu'il possède les mêmes propriétés <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> et <ph id="ph5">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> que le rectangle actuel ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>This operation tests for object equality.</source>
          <target state="translated">Cette opération teste l’égalité des objets.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">Dans cette comparaison, deux instances de <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Position et les dimensions d’un rectangle sont décrites par <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux valeurs logiquement égales peut échouer.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Object%29&gt;</ph> method to determine if a rectangle is equal to a specified object.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Object%29&gt;</ph> méthode pour déterminer si un rectangle est égal à un objet spécifié.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>The rectangle to compare to the current rectangle.</source>
          <target state="translated">Le rectangle à comparer avec le rectangle actuel.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>Indicates whether the specified rectangle is equal to the current rectangle.</source>
          <target state="translated">Indique si le rectangle spécifié est égal au rectangle actuel.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified rectangle has the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values as the current rectangle; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le rectangle spécifié a les mêmes valeurs <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> que le rectangle actuel ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">Cette opération teste l’égalité des objets.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">Dans cette comparaison, deux instances de <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Position et les dimensions d’un rectangle sont décrites par <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux valeurs logiquement égales peut échouer.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%29&gt;</ph> method to determine if a rectangle is equal to a specified rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%29&gt;</ph> méthode pour déterminer si un rectangle est égal à un rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">Premier rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">Deuxième rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>Indicates whether the specified rectangles are equal.</source>
          <target state="translated">Indique si les rectangles spécifiés sont égaux.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les rectangles ont les mêmes <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> et valeurs <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph>; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">Cette opération teste l’égalité des objets.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">Dans cette comparaison, deux instances de <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Position et les dimensions d’un rectangle sont décrites par <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux valeurs logiquement égales peut échouer.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to determine if one rectangle is equal to another.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> méthode pour déterminer si un rectangle est égal à un autre.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.GetHashCode">
          <source>Creates a hash code for the rectangle.</source>
          <target state="translated">Crée un code de hachage pour le rectangle.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure.</source>
          <target state="translated">Code de hachage pour la structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> actuelle.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.GetHashCode">
          <source>This method creates a hash code by using the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> property values.</source>
          <target state="translated">Cette méthode crée un code de hachage à l’aide de la <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> les valeurs de propriété.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.GetHashCode">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.GetHashCode%2A&gt;</ph> method to get the hash code of a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.GetHashCode%2A&gt;</ph> méthode pour obtenir le code de hachage d’un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source>Gets or sets the height of the rectangle.</source>
          <target state="translated">Obtient ou définit la hauteur du rectangle.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>A positive number that represents the height of the rectangle.</source>
          <target state="translated">Un nombre positif qui représente la hauteur du rectangle.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The default is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle a un <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> de <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> cannot not be changed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle est en lecture seule ; sa <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Height">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> is set to a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> a une valeur négative.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Height">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> est définie sur un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</source>
          <target state="translated">Crée un rectangle qui résulte du développement ou de la réduction d'un rectangle par le taux spécifié.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Specifies the amount to expand the rectangle.</source>
          <target state="translated">Spécifie le taux de développement du rectangle.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> properties.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> de la structure <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> spécifie la valeur à laquelle augmenter les propriétés <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> du rectangle.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> properties.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> de la structure <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> spécifie la valeur à laquelle augmenter les propriétés <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> du rectangle.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Expands the rectangle by using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, in all directions.</source>
          <target state="translated">Développe le rectangle en utilisant la <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>spécifiée, dans toutes les directions.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> du rectangle résultant est augmentée par deux fois la <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> spécifié <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, car à la fois les côtés gauche et droit du rectangle sont agrandies.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
          <target state="translated">De même, la <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> du rectangle résultant est augmentée par deux fois la <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> spécifié <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Size%29&gt;</ph> method to increase the size of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Size%29&gt;</ph> méthode pour augmenter la taille d’un rectangle.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Size)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">Cette méthode est appelée sur le rectangle <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
          <target state="translated">Le taux de développement ou de réduction des côtés gauche et droit d'un rectangle.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
          <target state="translated">Le taux de développement ou de réduction du haut et du bas d'un rectangle.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</source>
          <target state="translated">Développe ou réduit le rectangle en utilisant les taux de largeur et de hauteur spécifiés, dans toutes les directions.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> du rectangle résultant est augmenté ou diminué par deux fois le décalage de la largeur spécifiée, car il est appliqué à la fois les côtés gauche et droit du rectangle.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
          <target state="translated">De même, le <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> du rectangle résultant est augmenté ou diminué par deux fois la hauteur spécifiée.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>If the specified width or height shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—the rectangle becomes the <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
          <target state="translated">Si la largeur spécifiée ou la hauteur réduire le rectangle plus qu’actuel <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>— donnant au rectangle une zone négative — le rectangle devient le <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29&gt;</ph> méthode pour modifier la taille d’un rectangle.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">Cette méthode est appelée sur le rectangle <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure to modify.</source>
          <target state="translated">La structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> à modifier.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Specifies the amount to expand the rectangle.</source>
          <target state="translated">Spécifie le taux de développement du rectangle.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> properties.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> de la structure <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> spécifie la valeur à laquelle augmenter les propriétés <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Left" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Right" /&gt;</ph> du rectangle.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure's <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> property specifies the amount to increase the rectangle's <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> properties.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> de la structure <ph id="ph2">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> spécifie la valeur à laquelle augmenter les propriétés <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Top" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Rect.Bottom" /&gt;</ph> du rectangle.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Returns the rectangle that results from expanding the specified rectangle by the specified <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, in all directions.</source>
          <target state="translated">Renvoie le rectangle qui résulte du développement du rectangle spécifié par la <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>spécifiée, dans toutes les directions.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The resulting rectangle.</source>
          <target state="translated">Le rectangle résultant.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, because both the left and right sides of the rectangle are inflated.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> du rectangle résultant est augmentée par deux fois la <ph id="ph2">&lt;xref:System.Windows.Size.Width%2A&gt;</ph> spécifié <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure, car à la fois les côtés gauche et droit du rectangle sont agrandies.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased by twice the <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> of the specified <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</source>
          <target state="translated">De même, la <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> du rectangle résultant est augmentée par deux fois la <ph id="ph2">&lt;xref:System.Windows.Size.Height%2A&gt;</ph> spécifié <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29&gt;</ph> méthode pour modifier la taille d’un rectangle.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> est un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> structure to modify.</source>
          <target state="translated">La structure <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> à modifier.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The amount by which to expand or shrink the left and right sides of the rectangle.</source>
          <target state="translated">Le taux de développement ou de réduction des côtés gauche et droit d'un rectangle.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The amount by which to expand or shrink the top and bottom sides of the rectangle.</source>
          <target state="translated">Le taux de développement ou de réduction du haut et du bas d'un rectangle.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</source>
          <target state="translated">Crée un rectangle qui résulte du développement ou de la réduction du rectangle spécifié par les taux de largeur ou de hauteur spécifiés, dans toutes les directions.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The resulting rectangle.</source>
          <target state="translated">Le rectangle résultant.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> du rectangle résultant est augmenté ou diminué par deux fois le décalage de la largeur spécifiée, car il est appliqué à la fois les côtés gauche et droit du rectangle.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> of the resulting rectangle is increased or decreased by twice the specified height.</source>
          <target state="translated">De même, le <ph id="ph1">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph> du rectangle résultant est augmenté ou diminué par deux fois la hauteur spécifiée.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>If the specified width or height modifiers shrink the rectangle by more than its current <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>—giving the rectangle a negative area—this method returns <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si les modificateurs de largeur ou hauteur spécifiés réduisent le rectangle plus qu’actuel <ph id="ph1">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Rect.Height%2A&gt;</ph>— donnant au rectangle une zone négative, cette méthode retourne <ph id="ph3">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> method to change the size of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> méthode pour modifier la taille d’un rectangle.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> est un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Finds the intersection of two rectangles.</source>
          <target state="translated">Trouve l'intersection de deux rectangles.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>The rectangle to intersect with the current rectangle.</source>
          <target state="translated">Le rectangle devant trouver l'intersection avec le rectangle actuel.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</source>
          <target state="translated">Trouve l'intersection du rectangle actuel et du rectangle spécifié, et stocke le résultat comme le rectangle actuel.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>If no intersection exists, the current rectangle becomes <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si aucune intersection n’existe, le rectangle actuel devient <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles and store the result as a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29&gt;</ph> pour trouver l’intersection de deux rectangles et stocker le résultat comme un rectangle.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">Premier rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">Deuxième rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>Returns the intersection of the specified rectangles.</source>
          <target state="translated">Renvoie l'intersection des rectangles spécifiés.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The intersection of the two rectangles, or <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> if no intersection exists.</source>
          <target state="translated">L'intersection des deux rectangles, ou <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> si aucune intersection n'existe.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to find the intersection of two rectangles.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> méthode pour trouver l’intersection de deux rectangles.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>The rectangle to check.</source>
          <target state="translated">Le rectangle à vérifier.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>Indicates whether the specified rectangle intersects with the current rectangle.</source>
          <target state="translated">Indique si le rectangle spécifié se croise avec le rectangle actuel.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified rectangle intersects with the current rectangle; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le rectangle spécifié se croise avec le rectangle actuel ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.IntersectsWith%2A&gt;</ph> method to determine if two rectangles intersect.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.IntersectsWith%2A&gt;</ph> méthode pour déterminer si deux rectangles se croisent.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.IsEmpty">
          <source>Gets a value that indicates whether the rectangle is the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">Obtient une valeur qui indique si le rectangle est le rectangle <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle is the <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le rectangle est le rectangle<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source>Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</source>
          <target state="translated">N’utilisez pas cette propriété pour tester pour zone zéro ; un rectangle avec une zone zéro n’est pas nécessairement le <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.IsEmpty">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> property.</source>
          <target state="translated">Pour plus d'informations, consultez la propriété <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Left">
          <source>Gets the x-axis value of the left side of the rectangle.</source>
          <target state="translated">Obtient la valeur d'axe x du côté gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The x-axis value of the left side of the rectangle.</source>
          <target state="translated">La  valeur d'axe x du côté gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> property.</source>
          <target state="translated">L’obtention de cette propriété est équivalente à l’obtention de la <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Left">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Location">
          <source>Gets or sets the position of the top-left corner of the rectangle.</source>
          <target state="translated">Obtient ou définit la position de l'angle supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The position of the top-left corner of the rectangle.</source>
          <target state="translated">La position du coin supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The default is (0, 0).</source>
          <target state="translated">La valeur par défaut est (0, 0).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">La position de l’angle supérieur gauche du rectangle est égale à (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Location">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Location">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> est définie sur un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Moves a rectangle by the specified amount.</source>
          <target state="translated">Déplace un rectangle par le taux spécifié.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>A vector that specifies the horizontal and vertical amounts to move the rectangle.</source>
          <target state="translated">Un vecteur qui spécifie les taux horizontal et vertical auxquels déplacer le rectangle.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Moves the rectangle by the specified vector.</source>
          <target state="translated">Déplace le rectangle par le vecteur spécifié.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">Appel de cette méthode sur un rectangle vide (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) n’est pas autorisée.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
          <target state="translated">Notez que l’appel du <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> méthode a un effet uniquement si vous pouvez modifier le <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> propriétés directement.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> est un type valeur, si vous référencez un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> objet en utilisant une propriété ou un indexeur, vous obtenez une copie de l’objet, pas une référence à l’objet.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
          <target state="translated">Si vous tentez de modifier <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> sur une référence de propriété ou un indexeur, une erreur de compilation se produit.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
          <target state="translated">De même, l’appel <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> sur la propriété ou l’indexeur ne changera pas l’objet sous-jacent.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
          <target state="translated">Si vous souhaitez modifier la valeur d’un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> qui est référencée comme une propriété ou un indexeur, créez un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modifiez ses champs, puis attribuez le <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> à la propriété ou l’indexeur.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Vector%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Vector%29&gt;</ph> méthode pour modifier la position d’un rectangle.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Vector)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">Cette méthode est appelée sur le rectangle <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The amount to move the rectangle horizontally.</source>
          <target state="translated">Le taux auquel déplacer le rectangle horizontalement.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The amount to move the rectangle vertically.</source>
          <target state="translated">Le taux auquel déplacer le rectangle verticalement.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Moves the rectangle by the specified horizontal and vertical amounts.</source>
          <target state="translated">Déplace le rectangle par les taux horizontal et vertical spécifiés.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Calling this method on an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">Appel de cette méthode sur un rectangle vide (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) n’est pas autorisée.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Note that calling the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> method will only have an effect if you can change the <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> properties directly.</source>
          <target state="translated">Notez que l’appel du <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> méthode a un effet uniquement si vous pouvez modifier le <ph id="ph2">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> propriétés directement.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> is a value type, if you reference a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> object by using a property or indexer, you get a copy of the object, not a reference to the object.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> est un type valeur, si vous référencez un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> objet en utilisant une propriété ou un indexeur, vous obtenez une copie de l’objet, pas une référence à l’objet.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>If you attempt to change <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> on a property or indexer reference, a compiler error occurs.</source>
          <target state="translated">Si vous tentez de modifier <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> sur une référence de propriété ou un indexeur, une erreur de compilation se produit.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>Similarly, calling <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> on the property or indexer will not change the underlying object.</source>
          <target state="translated">De même, l’appel <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%2A&gt;</ph> sur la propriété ou l’indexeur ne changera pas l’objet sous-jacent.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>If you want to change the value of a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> that is referenced as a property or indexer, create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modify its fields, and then assign the <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> back to the property or indexer.</source>
          <target state="translated">Si vous souhaitez modifier la valeur d’un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> qui est référencée comme une propriété ou un indexeur, créez un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph>, modifiez ses champs, puis attribuez le <ph id="ph3">&lt;xref:System.Windows.Rect&gt;</ph> à la propriété ou l’indexeur.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29&gt;</ph> méthode pour modifier la position d’un rectangle.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Double,System.Double)">
          <source>This method is called on the <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated">Cette méthode est appelée sur le rectangle <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The original rectangle.</source>
          <target state="translated">Le rectangle d'origine.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>A vector that specifies the horizontal and vertical offsets for the new rectangle.</source>
          <target state="translated">Un vecteur qui spécifie les décalages horizontal et vertical pour le nouveau rectangle.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified vector.</source>
          <target state="translated">Renvoie un rectangle qui est décalé du rectangle spécifié en utilisant le vecteur spécifié.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The resulting rectangle.</source>
          <target state="translated">Le rectangle résultant.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">Appel de cette méthode avec un rectangle vide (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) n’est pas autorisée.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29&gt;</ph> méthode pour modifier la position d’un rectangle.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> est <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The rectangle to move.</source>
          <target state="translated">Le rectangle à déplacer.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The horizontal offset for the new rectangle.</source>
          <target state="translated">Le décalage horizontal pour le nouveau rectangle.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The vertical offset for the new rectangle.</source>
          <target state="translated">Le décalage vertical pour le nouveau rectangle.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</source>
          <target state="translated">Renvoie un rectangle qui est décalé du rectangle spécifié en utilisant les taux horizontal et vertical spécifiés.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The resulting rectangle.</source>
          <target state="translated">Le rectangle résultant.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>Calling this method with an empty rectangle (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) is not allowed.</source>
          <target state="translated">Appel de cette méthode avec un rectangle vide (<ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType&gt;</ph>) n’est pas autorisée.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> method to change the position of a rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29&gt;</ph> méthode pour modifier la position d’un rectangle.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
          <source><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> is <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rect" /&gt;</ph> est <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">Premier rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">Deuxième rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>Compares two rectangles for exact equality.</source>
          <target state="translated">Compare l'égalité exacte de deux rectangles.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les rectangles ont les mêmes <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> et valeurs <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph>; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object equality.</source>
          <target state="translated">Cette opération teste l’égalité des objets.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">Dans cette comparaison, deux instances de <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Position et les dimensions d’un rectangle sont décrites par <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux valeurs logiquement égales peut échouer.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.op_Equality%2A&gt;</ph> operator to determine if two rectangles are exactly equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.op_Equality%2A&gt;</ph> opérateur afin de déterminer si deux rectangles sont exactement égaux.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to compare.</source>
          <target state="translated">Premier rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to compare.</source>
          <target state="translated">Deuxième rectangle à comparer.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>Compares two rectangles for inequality.</source>
          <target state="translated">Compare si deux rectangles sont inégaux.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangles do not have the same <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> values; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les rectangles n'ont pas les mêmes valeurs  <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Location" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph>; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>This operation tests for object inequality.</source>
          <target state="translated">Cette opération teste l’inégalité de l’objet.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>In this comparison, two instances of <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> are considered equal.</source>
          <target state="translated">Dans cette comparaison, deux instances de <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> sont considérées comme égales.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>A rectangle's position and dimensions are described by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Position et les dimensions d’un rectangle sont décrites par <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>Because <ph id="ph1">&lt;xref:System.Double&gt;</ph> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux valeurs logiquement égales peut échouer.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.op_Inequality%2A&gt;</ph> operator to determine if two rectangles are not exactly equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.op_Inequality%2A&gt;</ph> opérateur afin de déterminer si deux rectangles ne sont pas égales.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The string representation of the rectangle, in the form "x, y, width, height".</source>
          <target state="translated">La représentation sous forme de chaîne du rectangle, sous la forme « x, y, largeur, hauteur ».</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>Creates a new rectangle from the specified string representation.</source>
          <target state="translated">Crée un nouveau rectangle à partir de la représentation sous forme de chaîne spécifiée.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The resulting rectangle.</source>
          <target state="translated">Le rectangle résultant.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Parse(System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Parse%2A&gt;</ph> method to convert a string representation of a rectangle into a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Parse%2A&gt;</ph> méthode pour convertir une représentation sous forme de chaîne d’un rectangle dans un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Right">
          <source>Gets the x-axis value of the right side of the rectangle.</source>
          <target state="translated">Obtient la valeur d'axe x du côté droit du rectangle.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The x-axis value of the right side of the rectangle.</source>
          <target state="translated">La valeur d'axe x du côté droit du rectangle.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The x-axis value of the right side of the rectangle is equal to the sum of the <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> properties.</source>
          <target state="translated">La valeur de l’axe x du côté droit du rectangle est égale à la somme de la <ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Right">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The scale factor in the x-direction.</source>
          <target state="translated">Le facteur d'échelle sur l'axe x.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The scale factor in the y-direction.</source>
          <target state="translated">Le facteur d'échelle sur l'axe y.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>Multiplies the size of the current rectangle by the specified x and y values.</source>
          <target state="translated">Multiplie la taille du rectangle actuel par les valeurs x et y spécifiées.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Scale(System.Double,System.Double)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Scale%2A&gt;</ph> method to multiply the width and height of a rectangle by the specified amount.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Scale%2A&gt;</ph> méthode par laquelle multiplier la largeur et la hauteur d’un rectangle la quantité spécifiée.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Size">
          <source>Gets or sets the width and height of the rectangle.</source>
          <target state="translated">Obtient ou définit la largeur et la hauteur du rectangle.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> structure that specifies the width and height of the rectangle.</source>
          <target state="translated">Une structure <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> qui spécifie la hauteur et la largeur du rectangle.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Size">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Size">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Size" /&gt;</ph> est définie sur un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The format to use.</source>
          <target state="translated">Format à utiliser.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated">Référence null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) pour utiliser le format par défaut défini pour le type de l'implémentation <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The provider to use to format the value.</source>
          <target state="translated">Fournisseur à utiliser pour mettre en forme la valeur.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
          <target state="translated">Référence null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>Formats the value of the current instance using the specified format.</source>
          <target state="translated">Met en forme la valeur de l’instance actuelle en utilisant le format spécifié.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string representation of the rectangle.</source>
          <target state="translated">Représentation sous forme de chaîne du rectangle.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ce membre est une implémentation d'un membre d'interface explicite.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated">Il peut uniquement être utilisé lorsque l'instance de <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> est castée en interface <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Top">
          <source>Gets the y-axis position of the top of the rectangle.</source>
          <target state="translated">Obtient la position de l'axe y du haut du rectangle.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The y-axis position of the top of the rectangle.</source>
          <target state="translated">La  position de l'axe y du haut du rectangle.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> property.</source>
          <target state="translated">L’obtention de cette propriété est équivalente à l’obtention de la <ph id="ph1">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Top">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.TopLeft">
          <source>Gets the position of the top-left corner of the rectangle.</source>
          <target state="translated">Obtient la position du coin supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The position of the top-left corner of the rectangle.</source>
          <target state="translated">La position du coin supérieur gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The position of the top-left corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">La position de l’angle supérieur gauche du rectangle est égale à (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopLeft">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.TopRight">
          <source>Gets the position of the top-right corner of the rectangle.</source>
          <target state="translated">Obtient la position du coin supérieur droit du rectangle.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The position of the top-right corner of the rectangle.</source>
          <target state="translated">La position du coin supérieur droit du rectangle.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The position of the top-right corner of the rectangle is equal to (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</source>
          <target state="translated">La position de l’angle supérieur droit du rectangle est égale à (<ph id="ph1">&lt;xref:System.Windows.Rect.X%2A&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Rect.Y%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.TopRight">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Returns a string representation of the rectangle.</source>
          <target state="translated">Renvoie une représentation sous forme de chaîne du rectangle.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>Returns a string representation of the rectangle.</source>
          <target state="translated">Renvoie une représentation sous forme de chaîne du rectangle.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>A string representation of the current rectangle.</source>
          <target state="translated">Une représentation sous forme de chaîne du rectangle actuel.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString">
          <source>The string has the following form: "<ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>,<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>,<ph id="ph3">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>,<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph>".</source>
          <target state="translated">La chaîne a la forme suivante : « <ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph>,<ph id="ph2">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph>,<ph id="ph3">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph>,<ph id="ph4">&lt;see cref="P:System.Windows.Rect.Height" /&gt;</ph> ».</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.ToString">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.ToString&gt;</ph> method to get a string representation of a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.ToString&gt;</ph> méthode pour obtenir une représentation sous forme de chaîne d’un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>Culture-specific formatting information.</source>
          <target state="translated">Informations de mise en forme spécifiques à la culture.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>Returns a string representation of the rectangle by using the specified format provider.</source>
          <target state="translated">Renvoie une représentation sous forme de chaîne du rectangle en utilisant le fournisseur de format spécifié.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.ToString(System.IFormatProvider)">
          <source>A string representation of the current rectangle that is determined by the specified format provider.</source>
          <target state="translated">Une représentation sous forme de chaîne du rectangle actuel qui est déterminée par le fournisseur de format spécifié.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Transforms a rectangle by using the specified matrix.</source>
          <target state="translated">Transforme un rectangle en utilisant la matrice spécifiée.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>A matrix that specifies the transformation to apply.</source>
          <target state="translated">Une matrice qui spécifie la transformation à appliquer.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>Transforms the rectangle by applying the specified matrix.</source>
          <target state="translated">Transforme le rectangle en appliquant la matrice spécifiée.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29&gt;</ph> method to transform a <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure by using a <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29&gt;</ph> méthode pour transformer un <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure en utilisant un <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>A rectangle that is the basis for the transformation.</source>
          <target state="translated">Un rectangle qui est la base pour la transformation.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>A matrix that specifies the transformation to apply.</source>
          <target state="translated">Une matrice qui spécifie la transformation à appliquer.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>Returns the rectangle that results from applying the specified matrix to the specified rectangle.</source>
          <target state="translated">Renvoie le rectangle qui résulte de l'application de la matrice spécifiée au rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>The rectangle that results from the operation.</source>
          <target state="translated">Le rectangle qui résulte de l'opération.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure that results from applying a <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph> to an existing rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29&gt;</ph> pour créer une nouvelle méthode <ph id="ph2">&lt;xref:System.Windows.Rect&gt;</ph> structure qui résulte de l’application d’un <ph id="ph3">&lt;xref:System.Windows.Media.Matrix&gt;</ph> à un rectangle existant.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.Windows.Rect">
          <source>Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</source>
          <target state="translated">Crée un rectangle qui est exactement assez grand pour contenir un rectangle donné et un point spécifié ou un deuxième rectangle.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>The point to include.</source>
          <target state="translated">Le point à inclure.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>Expands the current rectangle exactly enough to contain the specified point.</source>
          <target state="translated">Développe le rectangle actuel exactement assez pour contenir le point spécifié.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Point%29&gt;</ph> method to expand the current rectangle exactly enough to contain a given <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Point%29&gt;</ph> (méthode) pour développer le rectangle actuel exactement assez pour contenir un donné <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>The rectangle to include.</source>
          <target state="translated">Le rectangle à inclure.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>Expands the current rectangle exactly enough to contain the specified rectangle.</source>
          <target state="translated">Développe le rectangle actuel exactement assez pour contenir le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%29&gt;</ph> method to expand the current rectangle exactly enough to contain the specified rectangle.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%29&gt;</ph> (méthode) pour développer le rectangle actuel exactement assez pour contenir le rectangle spécifié.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The rectangle to include.</source>
          <target state="translated">Le rectangle à inclure.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The point to include.</source>
          <target state="translated">Le point à inclure.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</source>
          <target state="translated">Crée un rectangle qui est exactement assez grand pour inclure le rectangle et le point spécifiés.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</source>
          <target state="translated">Un rectangle qui est exactement assez grand pour contenir le rectangle et le point spécifiés.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29&gt;</ph> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29&gt;</ph> méthode pour créer un rectangle qui est exactement assez grand pour contenir un rectangle et un donné <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The first rectangle to include.</source>
          <target state="translated">Le premier rectangle à inclure.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The second rectangle to include.</source>
          <target state="translated">Le deuxième rectangle à inclure.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>Creates a rectangle that is exactly large enough to contain the two specified rectangles.</source>
          <target state="translated">Crée un rectangle qui est exactement assez grand pour contenir les deux rectangles spécifiés.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The resulting rectangle.</source>
          <target state="translated">Le rectangle résultant.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> method to create a rectangle that is exactly large enough to contain two given rectangles.</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29&gt;</ph> méthode pour créer un rectangle qui est exactement assez grand pour contenir deux rectangles donnés.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source>Gets or sets the width of the rectangle.</source>
          <target state="translated">Obtient ou définit la largeur du rectangle.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>A positive number that represents the width of the rectangle.</source>
          <target state="translated">Un nombre positif qui représente la largeur du rectangle.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The default is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle has a <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle a un <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> de <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle is read-only; its <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> cannot not be changed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> rectangle est en lecture seule ; sa <ph id="ph2">&lt;xref:System.Windows.Rect.Width%2A&gt;</ph> ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Width">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> is set to a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> a une valeur négative.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Width">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Width" /&gt;</ph> est définie sur un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.X">
          <source>Gets or sets the x-axis value of the left side of the rectangle.</source>
          <target state="translated">Obtient ou définit la valeur d'axe x du côté gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The x-axis value of the left side of the rectangle.</source>
          <target state="translated">La  valeur d'axe x du côté gauche du rectangle.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> property.</source>
          <target state="translated">L’obtention de cette propriété est équivalente à l’obtention de la <ph id="ph1">&lt;xref:System.Windows.Rect.Left%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.X">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.X">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.X" /&gt;</ph> est définie sur un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Y">
          <source>Gets or sets the y-axis value of the top side of the rectangle.</source>
          <target state="translated">Obtient ou définit la valeur d'axe y du côté supérieur du rectangle.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The y-axis value of the top side of the rectangle.</source>
          <target state="translated">La valeur d'axe y du côté supérieur du rectangle.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>Getting this property is equivalent to getting the <ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> property.</source>
          <target state="translated">L’obtention de cette propriété est équivalente à l’obtention de la <ph id="ph1">&lt;xref:System.Windows.Rect.Top%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> structure to specify the dimensions and location of a rectangle using XAML.</source>
          <target state="translated">L’exemple suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Windows.Rect&gt;</ph> pour spécifier les dimensions et l’emplacement d’un rectangle à l’aide de XAML.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The following example shows how to use code to create a rectangle and add it to the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le code pour créer un rectangle et l’ajouter à la page.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Rect.Y">
          <source>The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> below the rectangle.</source>
          <target state="translated">L’exemple illustre également comment rechercher des informations de taille et de coordonnées sur le nouveau rectangle et de rendre les informations contenues dans un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> sous le rectangle.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Windows.Rect.Y">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> is set on an <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph> rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Rect.Y" /&gt;</ph> est définie sur un rectangle <ph id="ph2">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>