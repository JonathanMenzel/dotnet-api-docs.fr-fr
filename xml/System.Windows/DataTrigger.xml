<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de0965cfdc64d456bea916d5e5903000759abc8d" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56401729" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un déclencheur qui applique des valeurs de propriété ou exécute des actions lorsque les données liées répondent à une condition spécifiée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, et <xref:System.Windows.DataTemplate> tous ont une collection de déclencheurs. Un <xref:System.Windows.DataTrigger> vous permet de définir les valeurs de propriété lorsque la valeur de propriété de l’objet de données correspond à une certaine <xref:System.Windows.Condition.Value%2A>. Par exemple, si vous affichez une liste de `Employee` objets, vous souhaiterez peut-être la couleur de premier plan différents en fonction de chaque `Employee's` participation actuelle. (Par exemple, `Employees` qui sont actuellement en vacances sont affichés avec un premier plan violet.) Dans certains scénarios, il peut être plus approprié pour créer un convertisseur ou d’utiliser un <xref:System.Windows.Controls.DataTemplateSelector>. Pour plus d’informations, consultez le [vue d’ensemble de la création de modèles de données](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Notez que vous devez spécifier à la fois le <xref:System.Windows.DataTrigger.Binding%2A> et <xref:System.Windows.DataTrigger.Value%2A> propriétés sur un <xref:System.Windows.DataTrigger> pour le déclencheur de données explicite. Si un ou les deux propriétés ne sont pas spécifiées, une exception est levée.  
  
 Le <xref:System.Windows.DataTrigger.Setters%2A> propriété d’un <xref:System.Windows.DataTrigger> objet peut contenir uniquement des <xref:System.Windows.Setter> objets. Ajout d’un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.DataTrigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour le <xref:System.Windows.DataTrigger> objet. <xref:System.Windows.EventSetter> objets ne sont pas pris en charge ; uniquement <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> prend en charge <xref:System.Windows.EventSetter> objets.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> de la <xref:System.Windows.Controls.ListBox> est lié à *emplacements*, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de *Place* objets. *Place* objets ont des propriétés *nom* et *état*.  
  
 Chaque <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> affiche un *Place* objet. Le <xref:System.Windows.Style> dans l’exemple est appliqué à chacune <xref:System.Windows.Controls.ListBoxItem>.  
  
 Le <xref:System.Windows.DataTrigger> est spécifié telles que si le *état* de la *Place* élément de données est « WA », puis le premier plan de le correspondantes <xref:System.Windows.Controls.ListBoxItem> est défini sur rouge.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 L’exemple suivant montre comment utiliser un <xref:System.Windows.DataTrigger>, un <xref:System.Windows.Media.Animation.BeginStoryboard> action et un <xref:System.Windows.Media.Animation.Storyboard> pour animer une propriété lorsque les données liées répondent à une condition spécifiée. L’exemple affiche les informations d’inventaire dans un <xref:System.Windows.Controls.ListBox> contrôle. Il utilise un <xref:System.Windows.DataTrigger> pour animer la <xref:System.Windows.UIElement.Opacity%2A> de chaque <xref:System.Windows.Controls.ListBoxItem> qui contient un livre de rupture de stock.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introduction aux modèles de données exemple</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la liaison qui produit la valeur de la propriété de l'objet de données.</summary>
        <value>La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de propriété produite par cette liaison est comparée à la valeur spécifiée par le <xref:System.Windows.DataTrigger.Value%2A> propriété. Cette valeur est d’abord convertie vers le type de la valeur de la liaison (si possible), puis les deux valeurs sont comparées à l’aide de la `Object.Equals` (méthode). Si les deux valeurs sont égales, les actions associées ou Set des propriétés sont appliquées.  
  
 Vous créez une liaison et que vous utilisez le <xref:System.Windows.Data.Binding.Path%2A> propriété à lier à une propriété d’un objet (l’objet de source de liaison). Par exemple, vous pouvez lier à la *priorité* propriété d’un *tâche*. Pour plus d’informations, consultez [Vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Notez que vous devez spécifier à la fois le <xref:System.Windows.DataTrigger.Binding%2A> et <xref:System.Windows.DataTrigger.Value%2A> propriétés sur un <xref:System.Windows.DataTrigger> pour le déclencheur de données explicite. Si un ou les deux propriétés ne sont pas définies, une exception est levée.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *déclaration*  
 Zéro ou plusieurs clauses assignation d’attribut séparées par des virgules (,). Consultez [Extension de balisage Binding](~/docs/framework/wpf/advanced/binding-markup-extension.md) pour plus d’informations.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Windows.DataTrigger> définit le <xref:System.Windows.Controls.Border.BorderBrush%2A> de l’élément nommé `border` à `Yellow` si le `TaskType` propriété est `TaskType.Home`.  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 Pour obtenir une présentation détaillée de cet exemple, consultez [vue d’ensemble de la création de modèles de données](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introduction aux modèles de données exemple</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Objet où l'extension de balisage définit la valeur.</param>
        <param name="eventArgs">Données pertinentes pour le traitement de l'extension de balisage.</param>
        <summary>Gère des cas où une extension de balisage fournit une valeur pour une propriété d'un objet <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 C’est la méthode référencée par un appliqué <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attribut au niveau de la classe, ce qui signifie que cette méthode traite toutes les tentatives de définir des valeurs de <xref:System.Windows.DataTrigger> avec une extension de balisage. Vous n’en général, appelez pas cette méthode directement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets <see cref="T:System.Windows.Setter" />, qui décrivent les valeurs de propriété à appliquer lorsque l'élément de données répond à la condition spécifiée.</summary>
        <value>La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *ZeroOrMoreSetters*  
 Zéro ou plusieurs <xref:System.Windows.Setter> objets.  
  
 Un <xref:System.Windows.DataTrigger> vous permet de démarrer des actions ou à utiliser <xref:System.Windows.Setter>pour appliquer la propriété des valeurs lors de l’élément de données rencontre une condition spécifiée.  
  
 S’il existe plusieurs accesseurs Set définissant la même propriété dans la même collection de méthode setter, l’accesseur Set est déclaré dernier est utilisé.  
  
 Le <xref:System.Windows.DataTrigger.Setters%2A> propriété d’un <xref:System.Windows.DataTrigger> objet peut contenir uniquement des <xref:System.Windows.Setter> objets. Ajout d’un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.DataTrigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour le <xref:System.Windows.DataTrigger> objet. <xref:System.Windows.EventSetter> objets ne sont pas pris en charge ; uniquement <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> prend en charge <xref:System.Windows.EventSetter> objets.  
  
   
  
## Examples  
 L’exemple suivant montre deux <xref:System.Windows.DataTrigger> objets qui sont définis dans un <xref:System.Windows.DataTemplate>. Le <xref:System.Windows.DataTemplate> est appliquée à *AuctionItem* objets de données (non illustrés dans cet exemple), dont la propriété *SpecialFeatures*.  
  
 La première <xref:System.Windows.DataTrigger> est spécifié telles que si l’objet de données a un *SpecialFeatures* valeur *couleur*, puis l’élément est affiché avec un `DodgerBlue` arrière-plan avec des titres bleu foncés. Si l’objet de données a un *SpecialFeatures* valeur *mettre en surbrillance*, puis la deuxième <xref:System.Windows.DataTrigger> sera actif, à l’origine de l’élément à afficher avec une bordure Orange avec une étoile.  
  
 Pour obtenir un exemple complet, consultez [démonstration de liaison de données](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introduction aux modèles de données exemple</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet enfant à ajouter.</param>
        <summary>Ajoute un objet enfant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataTrigger> est castée en interface <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à ajouter à l’objet.</param>
        <summary>Ajoute le contenu textuel d’un nœud à l’objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataTrigger> est castée en interface <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur à comparer à la valeur de la propriété de l’objet de données.</summary>
        <value>La valeur par défaut est <see langword="null" />. Consultez également la section Exceptions.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 Cette valeur est comparée à la valeur de propriété générée par le <xref:System.Windows.DataTrigger.Binding%2A> propriété de la <xref:System.Windows.DataTrigger>. La comparaison est un contrôle de l'égalité de la référence. Si les deux valeurs sont égales, les actions associées ou Set des propriétés sont appliquées.  
  
 Notez que vous devez spécifier à la fois le <xref:System.Windows.DataTrigger.Binding%2A> et <xref:System.Windows.DataTrigger.Value%2A> propriétés sur un <xref:System.Windows.DataTrigger> pour le déclencheur de données explicite. Si une ou les deux propriétés ne sont pas définies, une exception sera levée.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> de la <xref:System.Windows.Controls.ListBox> est lié à *emplacements*, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de *Place* objets. *Place* objets ont des propriétés *nom* et *état*.  
  
 Chaque <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> affiche un *Place* objet. Le <xref:System.Windows.Style> dans l’exemple est appliqué à chacune <xref:System.Windows.Controls.ListBoxItem>.  
  
 Le <xref:System.Windows.DataTrigger> est spécifié telles que si le *état* de la *Place* élément de données est « WA », puis le premier plan de le correspondantes <xref:System.Windows.Controls.ListBoxItem> est défini sur rouge.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 L’exemple suivant montre deux <xref:System.Windows.DataTrigger>s qui sont définies dans un <xref:System.Windows.DataTemplate>. Le <xref:System.Windows.DataTemplate> est appliquée à *AuctionItem* objets de données (non illustrés dans cet exemple), dont la propriété *SpecialFeatures*. Consultez [démonstration de liaison de données](https://go.microsoft.com/fwlink/?LinkID=163703) pour obtenir un exemple complet.  
  
 La première <xref:System.Windows.DataTrigger> est spécifié telles que si l’objet de données a un *SpecialFeatures* valeur *couleur*, puis l’élément est affiché avec un arrière-plan bleuté avec des titres bleu foncé. Si l’objet de données a un *SpecialFeatures* valeur *mettre en surbrillance*, puis la deuxième <xref:System.Windows.DataTrigger> sera actif, à l’origine de l’élément à afficher avec une bordure Orange avec une étoile.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Les expressions ne sont pas prises en charge. Les liaisons ne sont pas prises en charge.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introduction aux modèles de données exemple</related>
      </Docs>
    </Member>
  </Members>
</Type>