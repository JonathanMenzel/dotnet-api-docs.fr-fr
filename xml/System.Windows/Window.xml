<Type Name="Window" FullName="System.Windows.Window">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3ce18d907c9a62eb3028b633e6c5cb8652cbfbd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39845099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="04b69-101">Permet de créer, configurer, afficher et gérer la durée de vie des fenêtres et boîtes de dialogue.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04b69-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-102">Le point d’interaction entre un utilisateur et une application autonome est une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="04b69-103">Un [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] fenêtre se compose de deux zones distinctes :</span><span class="sxs-lookup"><span data-stu-id="04b69-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="04b69-104">Une zone non cliente, qui héberge les ornements de windows, y compris une icône, le titre, le menu système, les boutons réduire, agrandir le bouton, bouton Restaurer, le bouton Fermer et une bordure.</span><span class="sxs-lookup"><span data-stu-id="04b69-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="04b69-105">Une zone cliente, qui héberge le contenu spécifique à l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="04b69-106">Une fenêtre standard est illustrée dans la figure suivante :</span><span class="sxs-lookup"><span data-stu-id="04b69-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="04b69-107">![Éléments de fenêtre](~/add/media/windowoverviewfigure1.PNG "éléments de fenêtre")</span><span class="sxs-lookup"><span data-stu-id="04b69-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="04b69-108"><xref:System.Windows.Window> encapsule la possibilité de créer, configurer, afficher et gérer la durée de vie des fenêtres et boîtes de dialogue et fournit les services clés suivants :</span><span class="sxs-lookup"><span data-stu-id="04b69-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="04b69-109">**Gestion de la durée de vie**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="04b69-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="04b69-110">**Gestion des fenêtres**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="04b69-111">**Apparence et le comportement**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="04b69-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="04b69-112">**Boîtes de dialogue**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="04b69-113">En outre, <xref:System.Windows.Application> expose la prise en charge spéciale pour la gestion de toutes les fenêtres dans une application :</span><span class="sxs-lookup"><span data-stu-id="04b69-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="04b69-114">Application conserve une liste de toutes les fenêtres qui sont actuellement instanciés dans l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="04b69-115">Cette liste est exposée par le <xref:System.Windows.Application.Windows%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="04b69-116">Par défaut, <xref:System.Windows.Application.MainWindow%2A> est automatiquement définie avec une référence à la première <xref:System.Windows.Window> qui est instancié dans une application.</span><span class="sxs-lookup"><span data-stu-id="04b69-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="04b69-117">Cela rendant ainsi la fenêtre de la fenêtre principale de l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="04b69-118">Un <xref:System.Windows.Window> peut être implémentée à l’aide du balisage, balisage et code-behind ou code.</span><span class="sxs-lookup"><span data-stu-id="04b69-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="04b69-119"><xref:System.Windows.Window> est principalement utilisée pour afficher les fenêtres et boîtes de dialogue pour les applications autonomes.</span><span class="sxs-lookup"><span data-stu-id="04b69-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="04b69-120">Toutefois, pour les applications qui requièrent une navigation au niveau de la fenêtre, telles que des Assistants, vous pouvez utiliser <xref:System.Windows.Navigation.NavigationWindow> à la place. <xref:System.Windows.Navigation.NavigationWindow> dérive <xref:System.Windows.Window> et l’étend avec la prise en charge de la navigation de style navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-121">Îles du contenu navigable peuvent être incorporés dans d’autres conteneurs de contenu et le contenu à l’aide de <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="04b69-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="04b69-122"><xref:System.Windows.Window> doit `UnmanagedCode` autorisation de sécurité pour être instancié.</span><span class="sxs-lookup"><span data-stu-id="04b69-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="04b69-123">Cela entraîne les conséquences suivantes :</span><span class="sxs-lookup"><span data-stu-id="04b69-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="04b69-124">-applications autonomes déployées demande l’élévation d’autorisations lorsque lancée à partir de zones Internet ou Intranet Local.</span><span class="sxs-lookup"><span data-stu-id="04b69-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]<span data-ttu-id="04b69-125"> Cette demande quoi que ce soit inférieur à toutes les autorisations ne seront pas en mesure d’instancier des fenêtres ou boîtes de dialogue.</span><span class="sxs-lookup"><span data-stu-id="04b69-125"> that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="04b69-126">Pour plus d’informations sur les considérations de sécurité et de déploiement d’applications autonomes, consultez [stratégie de sécurité de WPF - sécurité de la plateforme](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="04b69-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="04b69-127">Un <xref:System.Windows.Window> est un <xref:System.Windows.Controls.ContentControl>, ce qui signifie qu’il peut contenir un seul objet de tout type (par exemple, une chaîne, une image ou un panneau).</span><span class="sxs-lookup"><span data-stu-id="04b69-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="04b69-128">Pour plus d'informations, consultez la classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="04b69-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="04b69-129">En outre, <xref:System.Windows.Window> est un élément racine et, par conséquent, ne peut pas être partie du contenu d’un autre élément.</span><span class="sxs-lookup"><span data-stu-id="04b69-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-130">Le <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, et <xref:System.Windows.Window.Left%2A> propriétés définies sur un <xref:System.Windows.Window> via un style s’appliquera pas en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="04b69-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="04b69-131">Personnalisation du contrôle de fenêtre</span><span class="sxs-lookup"><span data-stu-id="04b69-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="04b69-132">Pour appliquer les mêmes paramètres de propriété à plusieurs <xref:System.Windows.Window> contrôles, utiliser le <xref:System.Windows.FrameworkElement.Style%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="04b69-133">Vous pouvez modifier la valeur par défaut <xref:System.Windows.Controls.ControlTemplate> pour donner le contrôle une apparence unique.</span><span class="sxs-lookup"><span data-stu-id="04b69-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="04b69-134">Pour plus d’informations sur la création d’un <xref:System.Windows.Controls.ControlTemplate>, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="04b69-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="04b69-135">Pour afficher les parties et les États qui sont spécifiques à la <xref:System.Windows.Window>, consultez [fenêtre Styles et modèles](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="04b69-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="04b69-136">Les propriétés de dépendance pour ce contrôle peuvent être définies par le style par défaut.</span><span class="sxs-lookup"><span data-stu-id="04b69-136">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="04b69-137">Si une propriété est définie par un style par défaut, la propriété peut changer à partir de sa valeur par défaut lorsque le contrôle s’affiche dans l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="04b69-138">Le style par défaut est déterminé par le thème de bureau est utilisé lors de l’exécution de l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="04b69-139">Pour plus d’informations, consultez [thèmes WPF par défaut](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="04b69-139">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-140">Définition d’une propriété visual uniquement aura un effet si cette propriété est à la fois présents dans <xref:System.Windows.Window> contrôle du modèle par défaut et est définie à l’aide d’un.</span><span class="sxs-lookup"><span data-stu-id="04b69-140">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Window> control's default template and is set by using a .</span></span> <span data-ttu-id="04b69-141">Vous trouverez une liste de propriétés visuelles dans la section « Modification de la Visual Structure d’un contrôle » dans [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="04b69-141">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-142">L’exemple suivant montre comment une fenêtre standard est défini à l’aide de balisage uniquement :</span><span class="sxs-lookup"><span data-stu-id="04b69-142">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="04b69-143">L’exemple suivant montre comment une fenêtre standard est définie à l’aide de code :</span><span class="sxs-lookup"><span data-stu-id="04b69-143">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="04b69-144">L’exemple suivant montre comment une fenêtre standard est défini à l’aide d’une combinaison de balisage et code-behind.</span><span class="sxs-lookup"><span data-stu-id="04b69-144">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-145">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-145">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-146">Le constructeur initialise la <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, et <xref:System.Windows.Window.Left%2A> propriétés leurs valeurs par défaut <xref:System.Windows.Window> valeurs.</span><span class="sxs-lookup"><span data-stu-id="04b69-146">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="04b69-147">Si une fenêtre est créée dans un <xref:System.AppDomain> qui a un <xref:System.Windows.Application> de l’objet, le constructeur ajoute le <xref:System.Windows.Window> objet à l’ensemble de <xref:System.Windows.Application>-gérés windows via le <xref:System.Windows.Application.Windows%2A> propriété de la <xref:System.Windows.Application> objet.</span><span class="sxs-lookup"><span data-stu-id="04b69-147">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="04b69-148">pour l’autorisation pour cet objet appeler des méthodes natives non sécurisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-148">for permission for this object to call unsafe native methods.</span>
          </span>
          <span data-ttu-id="04b69-149">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-150">Essaie de mettre la fenêtre au premier plan et l'active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-150">Attempts to bring the window to the foreground and activates it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04b69-151">
            <see langword="true" /> si la <see cref="T:System.Windows.Window" /> a pu être activée ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-151">
              <see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-152">Les règles qui déterminent si la fenêtre est activée sont les mêmes que celles utilisées par le [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` (fonction) (User32.dll).</span><span class="sxs-lookup"><span data-stu-id="04b69-152">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="04b69-153">Si la fenêtre est activée dans une application Windows Presentation Foundation qui n’est pas application de premier plan de l’utilisateur, <xref:System.Windows.Application.Activated> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-153">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-154">Cette méthode ne peut pas être appelée lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-154">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-155">pour l’autorisation d’activer une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-155">for permission to activate a window.</span>
          </span>
          <span data-ttu-id="04b69-156">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-156">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-157">Se produit lorsqu'une fenêtre devient la fenêtre de premier plan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-157">Occurs when a window becomes the foreground window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-158">Une fenêtre est activée (devient la fenêtre de premier plan) lorsque :</span><span class="sxs-lookup"><span data-stu-id="04b69-158">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="04b69-159">La première ouverture de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-159">The window is first opened.</span></span>  
  
-   <span data-ttu-id="04b69-160">Un utilisateur bascule vers une fenêtre en la sélectionnant avec la souris, en appuyant sur ALT + TAB, ou dans le Gestionnaire des tâches.</span><span class="sxs-lookup"><span data-stu-id="04b69-160">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="04b69-161">Un utilisateur clique sur le bouton de fenêtre barre des tâches.</span><span class="sxs-lookup"><span data-stu-id="04b69-161">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="04b69-162">Windows qui doivent détecter lorsqu’elles deviennent actives peuvent gérer le <xref:System.Windows.Window.Activated> événement.</span><span class="sxs-lookup"><span data-stu-id="04b69-162">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="04b69-163">Une fois une fenêtre est activée tout d’abord, peuvent être désactivé et réactivé autant de fois pendant sa durée de vie.</span><span class="sxs-lookup"><span data-stu-id="04b69-163">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="04b69-164">Si le comportement ou l’état d’une application dépend de son état d’activation, il peut inspecter <xref:System.Windows.Window.IsActive%2A> pour déterminer l’état d’activation dans lequel il se trouve dans.</span><span class="sxs-lookup"><span data-stu-id="04b69-164">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="04b69-165">Une application peut également être <xref:System.Windows.Application.Activated>.</span><span class="sxs-lookup"><span data-stu-id="04b69-165">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-166">Obtient ou définit une valeur qui indique si la zone cliente d'une fenêtre prend en charge la transparence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-166">Gets or sets a value that indicates whether a window's client area supports transparency.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-167">
            <see langword="true" /> si la fenêtre prend en charge la transparence ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-167">
              <see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-168">Lorsque le <xref:System.Windows.Controls.Control.Background%2A> propriété d’une fenêtre est définie sur un transparent à l’aide de la couleur <xref:System.Windows.Media.Brushes.Transparent%2A> , par exemple, la fenêtre reste opaque.</span><span class="sxs-lookup"><span data-stu-id="04b69-168">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="04b69-169">Cela signifie que le bureau et toutes les applications en cours d’exécution la fenêtre « beneath » ne peut pas être visibles.</span><span class="sxs-lookup"><span data-stu-id="04b69-169">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="04b69-170">Pour activer ce type de transparence, <xref:System.Windows.Window.AllowsTransparency%2A> doit être définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="04b69-170">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="04b69-171"><xref:System.Windows.Window.AllowsTransparency%2A> Pour faciliter la création de fenêtres non rectangulaires, il existe et, par conséquent, lorsque <xref:System.Windows.Window.AllowsTransparency%2A> a la valeur `true`, d’une fenêtre <xref:System.Windows.Window.WindowStyle%2A> propriété doit être définie sur <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="04b69-171"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-172">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-173">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-173">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="04b69-174">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-175">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-175">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-176">Fenêtre qui a une valeur <see cref="P:System.Windows.Window.WindowStyle" /> autre que <see cref="F:System.Windows.WindowStyle.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-176">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-177">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.AllowsTransparency" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-177">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds">
          <span data-ttu-id="04b69-178">
            <see cref="T:System.Windows.Size" /> qui reflète la taille finale que la fenêtre doit utiliser pour se réorganiser elle et ses enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-178">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-179">Substituez cette méthode pour réorganiser et dimensionner une fenêtre et ses éléments enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-179">Override this method to arrange and size a window and its child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04b69-180">
            <see cref="T:System.Windows.Size" /> qui reflète la taille réelle utilisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-180">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-181"><xref:System.Windows.Window.ArrangeOverride%2A> n’est pas appelée lorsque le <xref:System.Windows.UIElement.Visibility%2A> propriété a la valeur <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="04b69-181"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="04b69-182">Si la valeur de la <xref:System.Windows.UIElement.Visibility%2A> propriété est <xref:System.Windows.Visibility.Hidden> ou <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="04b69-182">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-183">Lorsque soit <xref:System.Windows.Window.Show%2A> ou <xref:System.Windows.Window.ShowDialog%2A> sont appelées, le <xref:System.Windows.UIElement.Visibility%2A> propriété d’un <xref:System.Windows.Window> est défini sur <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="04b69-183">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-184">Ferme manuellement une <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-184">Manually closes a <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-185">Un <xref:System.Windows.Window> peut être fermé à l’aide d’un des mécanismes bien connues, fournie par le système se trouve dans sa barre de titre, y compris :</span><span class="sxs-lookup"><span data-stu-id="04b69-185">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="04b69-186">ALT + F4.</span><span class="sxs-lookup"><span data-stu-id="04b69-186">ALT+F4.</span></span>  
  
-   <span data-ttu-id="04b69-187">Menu système &#124; **fermer**.</span><span class="sxs-lookup"><span data-stu-id="04b69-187">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="04b69-188">**Fermer** bouton.</span><span class="sxs-lookup"><span data-stu-id="04b69-188">**Close** button.</span></span>  
  
 <span data-ttu-id="04b69-189">Un <xref:System.Windows.Window> peut également être fermée à l’aide d’un des mécanismes bien connus dans la zone cliente qui sont fournies par les développeurs, notamment :</span><span class="sxs-lookup"><span data-stu-id="04b69-189">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="04b69-190">**Fichier** &#124; **Exit** sur une fenêtre principale.</span><span class="sxs-lookup"><span data-stu-id="04b69-190">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="04b69-191">**Fichier** &#124; **fermer** ou un **fermer** bouton sur une fenêtre enfant.</span><span class="sxs-lookup"><span data-stu-id="04b69-191">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-192">**OK** et **Annuler** sont également des boutons sur une boîte de dialogue fournie par le développeur, bien que s’ils définissent probablement <xref:System.Windows.Window.DialogResult%2A>, qui ferme automatiquement une fenêtre qui a été ouverte en appelant <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-192">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="04b69-193">Ces mécanismes exigent que vous puissiez appeler explicitement <xref:System.Windows.Window.Close%2A> pour fermer une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-193">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-194">Si une fenêtre ouverte en appelant <xref:System.Windows.Window.ShowDialog%2A>et avec un <xref:System.Windows.Controls.Button> avec son <xref:System.Windows.Controls.Button.IsCancel%2A> propriété définie sur true, se ferme automatiquement lorsque le bouton est activé soit, ou ÉCHAP est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="04b69-194">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="04b69-195">Si la fenêtre a été ouvert à l’aide de <xref:System.Windows.Window.Show%2A>, toutefois, <xref:System.Windows.Window.Close%2A> doit être appelé explicitement, comme celui <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Gestionnaire d’événements pour le <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="04b69-195">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="04b69-196">Fermeture d’une fenêtre entraîne la <xref:System.Windows.Window.Closing> déclenchement d’événement.</span><span class="sxs-lookup"><span data-stu-id="04b69-196">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="04b69-197">Si le <xref:System.Windows.Window.Closing> événement n’est pas annulé, ce qui suit se produit :</span><span class="sxs-lookup"><span data-stu-id="04b69-197">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="04b69-198">Le <xref:System.Windows.Window> est supprimé de <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (si un <xref:System.Windows.Application> objet existe).</span><span class="sxs-lookup"><span data-stu-id="04b69-198">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="04b69-199">Le <xref:System.Windows.Window> est supprimé du propriétaire <xref:System.Windows.Window> si la relation parent/enfant a été établie avant le détenu <xref:System.Windows.Window> a été indiqué et après le propriétaire <xref:System.Windows.Window> a été ouvert.</span><span class="sxs-lookup"><span data-stu-id="04b69-199">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="04b69-200">L'événement <xref:System.Windows.Window.Closed> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-200">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="04b69-201">Ressources non managées créées par le <xref:System.Windows.Window> sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="04b69-201">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="04b69-202">Si <xref:System.Windows.Window.ShowDialog%2A> a été appelée pour afficher le <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> retourne.</span><span class="sxs-lookup"><span data-stu-id="04b69-202">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="04b69-203">Fermeture d’un <xref:System.Windows.Window> provoque des fenêtres qu’il possède pour être fermé.</span><span class="sxs-lookup"><span data-stu-id="04b69-203">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="04b69-204">En outre, fermeture un <xref:System.Windows.Window> peut entraîner une application interrompre l’exécution en fonction de la façon dont le <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="04b69-204">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-205">Cette méthode ne peut pas être appelée lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-205">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-206">L’exemple suivant montre un **fichier** &#124; **Exit** menu géré pour appeler explicitement <xref:System.Windows.Window.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-206">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-207">autorisation d’utiliser toutes les fenêtres et événements d’entrée d’utilisateur sans restriction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-207">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="04b69-208">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-208">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-209">Se produit lorsque la fenêtre est sur le point de se fermer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-209">Occurs when the window is about to close.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-210">Une fois que cet événement est déclenché, une fenêtre ne peut être évitée de se fermer.</span><span class="sxs-lookup"><span data-stu-id="04b69-210">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-211">
            <see cref="P:System.Windows.UIElement.Visibility" /> est défini, ou <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> ou <see cref="M:System.Windows.Window.Hide" /> est appelé pendant la fermeture d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-211">
              <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-212">Se produit directement après l'appel de <see cref="M:System.Windows.Window.Close" /> et peut être géré pour annuler la fermeture de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-212">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-213"><xref:System.Windows.Window.Closing> peut être géré pour détecter si une fenêtre est en cours de fermeture (par exemple, lorsque <xref:System.Windows.Window.Close%2A> est appelée).</span><span class="sxs-lookup"><span data-stu-id="04b69-213"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="04b69-214">En outre, <xref:System.Windows.Window.Closing> peut être utilisé pour empêcher la fermeture d’une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-214">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="04b69-215">Pour empêcher une fenêtre de fermeture, vous pouvez définir le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.ComponentModel.CancelEventArgs> argument `true`.</span><span class="sxs-lookup"><span data-stu-id="04b69-215">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="04b69-216">Le <xref:System.Windows.Window.Closing> événement est déclenché lorsque <xref:System.Windows.Window.Close%2A> est appelée, si l’utilisateur clique sur le bouton Fermer d’une fenêtre, ou si l’utilisateur appuie sur ALT + F4.</span><span class="sxs-lookup"><span data-stu-id="04b69-216">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="04b69-217">Si une fenêtre enfant a été ouverte par sa fenêtre propriétaire en utilisant <xref:System.Windows.Window.Show%2A>et le propriétaire de la fenêtre est fermée, la fenêtre possédée <xref:System.Windows.Window.Closing> événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-217">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="04b69-218">Si le propriétaire d’une fenêtre est fermé (consultez <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> n’est pas déclenché sur la fenêtre enfant.</span><span class="sxs-lookup"><span data-stu-id="04b69-218">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="04b69-219">Si <xref:System.Windows.Application.Shutdown%2A> est appelée, le <xref:System.Windows.Window.Closing> déclenché pour chaque fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-219">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="04b69-220">Toutefois, si <xref:System.Windows.Window.Closing> est annulée, l’annulation est ignorée.</span><span class="sxs-lookup"><span data-stu-id="04b69-220">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="04b69-221">Si une session se termine, car un utilisateur se déconnecte ou arrête, <xref:System.Windows.Window.Closing> n’est pas déclenché ; gérer <xref:System.Windows.Application.SessionEnding> pour implémenter le code qui annule la fermeture de l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-221">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="04b69-222">Si vous souhaitez afficher et masquer une fenêtre plusieurs fois pendant la durée de vie d’une application, et vous ne souhaitez pas réinstancier la fenêtre chaque fois que vous l’afficher, vous pouvez gérer le <xref:System.Windows.Window.Closing> événement, cliquez sur Annuler et appeler le <xref:System.Windows.Window.Hide%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="04b69-222">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="04b69-223">Ensuite, vous pouvez appeler <xref:System.Windows.Window.Show%2A> sur la même instance pour la rouvrir.</span><span class="sxs-lookup"><span data-stu-id="04b69-223">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-224">L’exemple suivant montre un <xref:System.Windows.Window> qui détermine s’il doit l’intervention de l’utilisateur à fermer.</span><span class="sxs-lookup"><span data-stu-id="04b69-224">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-225">
            <see cref="P:System.Windows.UIElement.Visibility" /> est défini, ou <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> ou <see cref="M:System.Windows.Window.Close" /> est appelé pendant la fermeture d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-225">
              <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-226">Se produit après que le contenu de la fenêtre a été affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-226">Occurs after a window's content has been rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-227">Si la fenêtre n’a aucun contenu, cet événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-227">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-228">Se produit lorsqu'une fenêtre devient une fenêtre d'arrière-plan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-228">Occurs when a window becomes a background window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-229">Une fenêtre est désactivée (devient une fenêtre d’arrière-plan) lorsque :</span><span class="sxs-lookup"><span data-stu-id="04b69-229">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="04b69-230">Un utilisateur bascule vers une autre fenêtre de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="04b69-230">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="04b69-231">Un utilisateur bascule vers la fenêtre dans une autre application à l’aide de ALT + TAB ou à l’aide du Gestionnaire des tâches.</span><span class="sxs-lookup"><span data-stu-id="04b69-231">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="04b69-232">Un utilisateur clique sur le bouton de barre des tâches pour une fenêtre dans une autre application.</span><span class="sxs-lookup"><span data-stu-id="04b69-232">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="04b69-233">Windows qui doivent détecter lorsqu’elles sont désactivées en gérant la <xref:System.Windows.Window.Deactivated> événement.</span><span class="sxs-lookup"><span data-stu-id="04b69-233">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="04b69-234">Une fois une fenêtre est désactivée, peut être réactivé et plusieurs reprises au cours de sa durée de vie.</span><span class="sxs-lookup"><span data-stu-id="04b69-234">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="04b69-235">Si le comportement ou l’état d’une application dépend de son état d’activation, il peut inspecter <xref:System.Windows.Window.IsActive%2A> pour déterminer l’état d’activation dans lequel il se trouve dans.</span><span class="sxs-lookup"><span data-stu-id="04b69-235">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="04b69-236">Une application peut également être <xref:System.Windows.Application.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="04b69-236">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-237">Obtient ou définit la valeur du résultat de la boîte de dialogue, qui est la valeur retournée depuis la méthode <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-237">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-238">Valeur <see cref="T:System.Nullable`1" /> de type <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-238">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="04b69-239">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-239">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-240"><xref:System.Windows.Window.DialogResult%2A> peut être utilisé à partir du code qui vous a montré une boîte de dialogue pour déterminer si un utilisateur a accepté (`true`) ou annulée (`false`) la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="04b69-240"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="04b69-241">Si une boîte de dialogue a été acceptée, cela signifie pour le code qui a ouvert la boîte de dialogue pour récupérer les données qui ont été collectées par l’utilisateur et les traiter.</span><span class="sxs-lookup"><span data-stu-id="04b69-241">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="04b69-242">Si une boîte de dialogue a été annulée, toutefois, autres que le code appelant doit s’arrêter tout traitement supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="04b69-242">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="04b69-243">Par défaut, une boîte de dialogue est annulée lorsqu’un utilisateur effectue une des opérations suivantes :</span><span class="sxs-lookup"><span data-stu-id="04b69-243">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="04b69-244">PressesALT + F4.</span><span class="sxs-lookup"><span data-stu-id="04b69-244">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="04b69-245">Clique sur le **fermer** bouton.</span><span class="sxs-lookup"><span data-stu-id="04b69-245">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="04b69-246">Sélectionne **fermer** à partir du menu système.</span><span class="sxs-lookup"><span data-stu-id="04b69-246">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="04b69-247">Dans tous ces cas, <xref:System.Windows.Window.DialogResult%2A> est `false` par défaut.</span><span class="sxs-lookup"><span data-stu-id="04b69-247">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="04b69-248">Une boîte de dialogue propose généralement un bouton spécial pour annuler une boîte de dialogue, qui est le bouton dont <xref:System.Windows.Controls.Button.IsCancel%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="04b69-248">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="04b69-249">Un bouton configuré de cette façon fermera automatiquement une fenêtre lorsqu’elle est soit activée, ou lorsque la touche ÉCHAP est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="04b69-249">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="04b69-250">Dans ces cas, <xref:System.Windows.Window.DialogResult%2A> reste `false`.</span><span class="sxs-lookup"><span data-stu-id="04b69-250">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="04b69-251">Une boîte de dialogue fournit également généralement un bouton Accepter, qui est le bouton dont <xref:System.Windows.Controls.Button.IsDefault%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="04b69-251">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="04b69-252">Un bouton configuré de cette manière déclenche son <xref:System.Windows.Controls.Primitives.ButtonBase.Click> événement lorsqu’il ou la touche entrée est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="04b69-252">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="04b69-253">Toutefois, il ne ferme pas automatiquement la boîte de dialogue, n’est pas la valeur <xref:System.Windows.Window.DialogResult%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="04b69-253">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="04b69-254">Vous devez écrire ce code manuellement, généralement à partir de la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Gestionnaire d’événements pour le bouton par défaut.</span><span class="sxs-lookup"><span data-stu-id="04b69-254">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="04b69-255"><xref:System.Windows.Window.DialogResult%2A> est `null` lorsque la boîte de dialogue s’affiche, mais ni acceptée ni annulée.</span><span class="sxs-lookup"><span data-stu-id="04b69-255"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="04b69-256">Une fois une boîte de dialogue se ferme, vous pouvez obtenir le résultat de la boîte de dialogue à partir de la valeur retournée par <xref:System.Windows.Window.ShowDialog%2A> (méthode), ou en examinant la <xref:System.Windows.Window.DialogResult%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-256">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="04b69-257"><xref:System.Windows.Window.DialogResult%2A> peut uniquement être définie lorsque un <xref:System.Windows.Window> est ouvert en appelant son <xref:System.Windows.Window.ShowDialog%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="04b69-257"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-258">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-258">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-259">L’exemple suivant montre comment configurer un bouton OK et un bouton Annuler pour retourner le texte approprié <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-259">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-260">
            <see cref="P:System.Windows.Window.DialogResult" /> est défini avant qu'une fenêtre ne soit ouverte en appelant <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-260">
              <see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          </span>
          <span data-ttu-id="04b69-261">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-261">-or-</span>
          </span>
          <span data-ttu-id="04b69-262">
            <see cref="P:System.Windows.Window.DialogResult" /> est défini sur une fenêtre qui est ouverte en appelant <see cref="M:System.Windows.Window.Show" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-262">
              <see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-263">Se produit après la modification de la résolution de l’écran d’affichage de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-263">Occurs after the DPI of the screen on which the Window is displayed changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-264">
            <see cref="T:System.Windows.RoutedEvent" /> lorsque la résolution de l’écran de la fenêtre est modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-264">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-265">Permet de faire glisser une fenêtre à l'aide du bouton gauche de la souris au-dessus d'une zone exposée de la zone cliente de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-265">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-266">Le bouton gauche de la souris doit être enfoncé lorsque <xref:System.Windows.Window.DragMove%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="04b69-266">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="04b69-267">La première consiste à détecter lorsque le bouton gauche de la souris est enfoncé pour gérer le <xref:System.Windows.UIElement.MouseLeftButtonDown> événement.</span><span class="sxs-lookup"><span data-stu-id="04b69-267">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="04b69-268">Lorsque <xref:System.Windows.Window.DragMove%2A> est appelée, la gauche bouton de la souris doit être relâché au-dessus d’une zone exposée de la zone cliente de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-268">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-269">Cette méthode ne peut pas être appelée lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-269">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-270">L’exemple suivant montre comment substituer <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> pour appeler <xref:System.Windows.Window.DragMove%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-270">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-271">Le bouton gauche de la souris n'est pas enfoncé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-271">The left mouse button is not down.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-272">pour l’autorisation de faire glisser une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-272">for permission to drag a window.</span>
          </span>
          <span data-ttu-id="04b69-273">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-273">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="04b69-274">Objet de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-274">The dependency object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-275">Retourne une référence à l'objet <see cref="T:System.Windows.Window" /> qui héberge l'arborescence de contenu à l'intérieur de laquelle se trouve l'objet de dépendance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-275">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04b69-276">Référence <see cref="T:System.Windows.Window" /> à la fenêtre hôte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-276">A <see cref="T:System.Windows.Window" /> reference to the host window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04b69-277">
            <paramref name="dependencyObject" /> a la valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-277">
              <paramref name="dependencyObject" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-278">Rend une fenêtre invisible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-278">Makes a window invisible.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-279">Une fenêtre n’est pas fermée lorsqu’elle est masquée et ni le <xref:System.Windows.Window.Closing> ni <xref:System.Windows.Window.Closed> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-279">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="04b69-280">Au lieu de cela, la fenêtre <xref:System.Windows.UIElement.Visibility%2A> propriété est définie sur <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="04b69-280">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04b69-281">Si une fenêtre est l’application <xref:System.Windows.Application.MainWindow%2A> et l’application <xref:System.Windows.Application.ShutdownMode%2A> est <xref:System.Windows.ShutdownMode.OnMainWindowClose>, l’application ne s’arrête pas.</span><span class="sxs-lookup"><span data-stu-id="04b69-281">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="04b69-282">De même, l’application ne s’arrête pas si une fenêtre est la seule fenêtre et le mode d’arrêt de l’application est <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="04b69-282">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="04b69-283">Si vous souhaitez afficher et masquer une fenêtre plusieurs fois pendant la durée de vie d’une application, et vous ne souhaitez pas ré-instancier la fenêtre à chaque fois que vous l’afficher, vous pouvez gérer le <xref:System.Windows.Window.Closing> événement, cliquez sur Annuler et appeler le <xref:System.Windows.Window.Hide%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="04b69-283">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="04b69-284">Ensuite, vous pouvez appeler <xref:System.Windows.Window.Show%2A> sur la même instance pour la rouvrir.</span><span class="sxs-lookup"><span data-stu-id="04b69-284">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-285">
            <see cref="M:System.Windows.Window.Hide" /> est appelé sur une fenêtre qui se ferme (<see cref="E:System.Windows.Window.Closing" />) ou a été fermée (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-285">
              <see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-286">Obtient ou définit une icône de fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-286">Gets or sets a window's icon.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-287">Objet <see cref="T:System.Windows.Media.ImageSource" /> qui représente l'icône.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-287">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-288">Les applications autonomes Windows Presentation Foundation (WPF) ont deux types d’icônes :</span><span class="sxs-lookup"><span data-stu-id="04b69-288">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="04b69-289">Une icône d’assembly, qui est spécifiée à l’aide de la `<ApplicationIcon>` fichier de génération de propriété dans le projet de l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-289">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="04b69-290">Cette icône est utilisée en tant que l’icône du bureau pour un assembly.</span><span class="sxs-lookup"><span data-stu-id="04b69-290">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="04b69-291">Lors du débogage dans Visual Studio, votre icône ne peut pas apparaître en raison du processus d’hébergement.</span><span class="sxs-lookup"><span data-stu-id="04b69-291">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="04b69-292">Si vous exécutez le fichier exécutable, l’icône s’affiche.</span><span class="sxs-lookup"><span data-stu-id="04b69-292">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="04b69-293">Pour plus d’informations, consultez [Processus d’hébergement (vshost.exe)](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="04b69-293">For more information, see [Hosting Process (vshost.exe)](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="04b69-294">Une icône par fenêtre spécifiée en définissant <xref:System.Windows.Window.Icon%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-294">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="04b69-295">Pour chaque fenêtre, cette icône est utilisée dans sa barre de titre, son bouton de barre de tâche et dans son entrée de liste de sélection d’application ALT-TAB.</span><span class="sxs-lookup"><span data-stu-id="04b69-295">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="04b69-296">Une fenêtre WPF affiche toujours une icône.</span><span class="sxs-lookup"><span data-stu-id="04b69-296">A WPF window always displays an icon.</span></span> <span data-ttu-id="04b69-297">Lorsque un n’est pas fourni en définissant <xref:System.Windows.Window.Icon%2A>, WPF choisit une icône à afficher selon les règles suivantes :</span><span class="sxs-lookup"><span data-stu-id="04b69-297">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="04b69-298">Utilisez l’icône de l’assembly, s’il est spécifié.</span><span class="sxs-lookup"><span data-stu-id="04b69-298">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="04b69-299">Si l’icône de l’assembly n’est pas spécifié, utilisez l’icône de Microsoft Windows par défaut.</span><span class="sxs-lookup"><span data-stu-id="04b69-299">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="04b69-300">Si vous utilisez <xref:System.Windows.Window.Icon%2A> pour spécifier une icône de fenêtre personnalisée, vous pouvez restaurer l’icône d’application par défaut en définissant <xref:System.Windows.Window.Icon%2A> à `null`.</span><span class="sxs-lookup"><span data-stu-id="04b69-300">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="04b69-301">Une seule icône peut être utilisée de plusieurs façons dans Windows, y compris affichées dans la barre de titre d’une fenêtre, la barre des tâches pour une fenêtre, la liste de sélection de fichier ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="04b69-301">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="04b69-302">Chacune de ces affiche l’icône à l’aide d’une taille différente ; une icône de 16 x 16 pixels s’affiche dans la barre de titre d’une fenêtre et dans la barre des tâches, tandis qu’une icône 32 x 32 pixels s’affiche dans la liste de sélection de fichier ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="04b69-302">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="04b69-303">Certaines applications, telles que [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], fournir un **vue** menu qui vous permet de choisir la taille de l’icône que vous souhaitez afficher.</span><span class="sxs-lookup"><span data-stu-id="04b69-303">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="04b69-304">Afin de répondre aux différentes tailles d’affichage, un fichier icône se compose d’un ou plusieurs icônes réelles où chacun d’eux représente une version de l’icône qui cible une profondeur de couleur et de taille spécifique.</span><span class="sxs-lookup"><span data-stu-id="04b69-304">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="04b69-305">Par exemple, une icône peut avoir uniquement une seule icône 16 x 16 pixels avec 16 couleurs, tandis qu’un autre peut contenir 16 x 16 pixels et des icônes de 32 x 32 pixels avec 16 couleurs et 256 couleurs.</span><span class="sxs-lookup"><span data-stu-id="04b69-305">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="04b69-306">Si les icônes pour toutes les tailles et couleurs profondeurs possibles existent au sein d’un fichier icône, <xref:System.Windows.Window> utilisera l’icône appropriée.</span><span class="sxs-lookup"><span data-stu-id="04b69-306">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="04b69-307">Si un fichier icône contient uniquement un sous-ensemble de toutes les icônes possibles, <xref:System.Windows.Window> utilise l’icône la plus appropriée suivante par ordre décroissant de taille et profondeur de couleur.</span><span class="sxs-lookup"><span data-stu-id="04b69-307">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="04b69-308">Il en résulte qu’une icône sera toujours utilisée par <xref:System.Windows.Window>, même si le n’a pas la profondeur de couleur et la taille requise.</span><span class="sxs-lookup"><span data-stu-id="04b69-308">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="04b69-309">Par exemple, une icône de 16 x 16 pixels avec 16 couleurs peut être utilisée pour l’affichage sous forme d’icône 32 x 32 pixels avec 256 couleurs.</span><span class="sxs-lookup"><span data-stu-id="04b69-309">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="04b69-310">Cela peut entraîner des effets visuels indésirables, tels que pixellisation, mais peut être évité en créant des icônes pour tous les tailles et palettes de couleurs.</span><span class="sxs-lookup"><span data-stu-id="04b69-310">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-311">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-311">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-312">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-312">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-313">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-313">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="04b69-314">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-314">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-315">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-315">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="04b69-316">L’exemple suivant montre comment définir une icône de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-316">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-317">pour l’autorisation définir l’icône.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-317">for permission to set the icon.</span>
          </span>
          <span data-ttu-id="04b69-318">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-318">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-319">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-319">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-320">Obtient une valeur qui indique si la fenêtre est active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-320">Gets a value that indicates whether the window is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-321">
            <see langword="true" /> si la fenêtre est active ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-321">
              <see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="04b69-322">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-322">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-323">Une fenêtre active est la fenêtre de premier plan actuelle de l’utilisateur et a le focus, ce qui est signalé par l’apparence de la barre de titre active.</span><span class="sxs-lookup"><span data-stu-id="04b69-323">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="04b69-324">Une fenêtre active est toujours le plus élevé de toutes les fenêtres de niveau supérieur qui ne définissent pas explicitement le <xref:System.Windows.Window.Topmost%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-324">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-325">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-325">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-326">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-326">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="04b69-327">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-327">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-328">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-328">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-329">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.IsActive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-329">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-330">Obtient ou définit la position du bord gauche de la fenêtre par rapport au bureau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-330">Gets or sets the position of the window's left edge, in relation to the desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-331">Position du bord gauche de la fenêtre, en unités logiques (1/96e de pouce).</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-331">The position of the window's left edge, in logical units (1/96th of an inch).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-332">Lorsque le <xref:System.Windows.Window> est agrandie ou réduite, cette valeur représente le bord gauche de la restauration point pour le <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="04b69-332">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="04b69-333">Cette propriété ne peut pas être définie via un style.</span><span class="sxs-lookup"><span data-stu-id="04b69-333">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="04b69-334">Si vous ne spécifiez pas une valeur, <xref:System.Windows.Window.Left%2A> est définie sur la valeur par défaut du système.</span><span class="sxs-lookup"><span data-stu-id="04b69-334">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="04b69-335">Vous pouvez également spécifier la valeur par défaut du système en définissant <xref:System.Windows.Window.Left%2A> à <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="04b69-335">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="04b69-336">Ni <xref:System.Double.NegativeInfinity> ni <xref:System.Double.PositiveInfinity> est une valeur valide pour <xref:System.Windows.Window.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-336">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-337">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-337">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-338">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-338">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-339">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-339">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="04b69-340">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-340">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-341">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-341">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-342">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-342">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-343">Se produit lorsque l’emplacement de la fenêtre est modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-343">Occurs when the window's location changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-344">Emplacement d’une fenêtre change lorsque :</span><span class="sxs-lookup"><span data-stu-id="04b69-344">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="04b69-345">Un utilisateur déplace une fenêtre en faisant glisser avec la barre de titre de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-345">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="04b69-346">Une fenêtre est déplacée après <xref:System.Windows.Window.DragMove%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="04b69-346">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="04b69-347">Soit le <xref:System.Windows.Window.Left%2A> ou <xref:System.Windows.Window.Top%2A> propriété est définie par programmation.</span><span class="sxs-lookup"><span data-stu-id="04b69-347">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="04b69-348">Le **déplacer** élément de menu du menu du système d’une fenêtre est sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="04b69-348">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="04b69-349">Le <xref:System.Windows.Window.WindowState%2A> propriété est modifiée.</span><span class="sxs-lookup"><span data-stu-id="04b69-349">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-350">Reçoit un énumérateur pour les éléments enfants logiques d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-350">Gets an enumerator for a window's logical child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-351">
            <see cref="T:System.Collections.IEnumerator" /> des éléments enfants logiques d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-351">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="04b69-352">
            <see cref="T:System.Windows.Size" /> qui reflète la taille disponible que cette fenêtre peut donner à l'enfant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-352">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span>
          </span>
          <span data-ttu-id="04b69-353">L'infini peut être renseigné comme valeur pour que la fenêtre soit redimensionnée en fonction du contenu disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-353">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-354">Substituez cette méthode pour mesurer la taille d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-354">Override this method to measure the size of a window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04b69-355">
            <see cref="T:System.Windows.Size" /> qui reflète la taille dont la fenêtre estime avoir besoin pendant la disposition, en fonction du calcul de la taille de ses enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-355">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-356"><xref:System.Windows.Window.MeasureOverride%2A> n’est pas appelée lorsque le <xref:System.Windows.UIElement.Visibility%2A> propriété a la valeur <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="04b69-356"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="04b69-357">Si la valeur de la <xref:System.Windows.UIElement.Visibility%2A> propriété est <xref:System.Windows.Visibility.Hidden> ou <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="04b69-357">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-358">Lorsque soit <xref:System.Windows.Window.Show%2A> ou <xref:System.Windows.Window.ShowDialog%2A> sont appelées, le <xref:System.Windows.UIElement.Visibility%2A> propriété d’un <xref:System.Windows.Window> est défini sur <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="04b69-358">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-359">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-359">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-360">Déclenche l'événement <see cref="E:System.Windows.Window.Activated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-360">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-361"><xref:System.Windows.Window.OnActivated%2A> déclenche l'événement <xref:System.Windows.Window.Activated>.</span><span class="sxs-lookup"><span data-stu-id="04b69-361"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="04b69-362">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnActivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-362">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="04b69-363">La méthode substituée doit appeler <xref:System.Windows.Window.OnActivated%2A> sur la classe de base si <xref:System.Windows.Window.Activated> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-363">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-364">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-364">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-365">Déclenche l'événement <see cref="E:System.Windows.Window.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-365">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-366"><xref:System.Windows.Window.OnClosed%2A> déclenche l'événement <xref:System.Windows.Window.Closed>.</span><span class="sxs-lookup"><span data-stu-id="04b69-366"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="04b69-367">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnClosed%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-367">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="04b69-368">La méthode substituée doit appeler <xref:System.Windows.Window.OnClosed%2A> sur la classe de base si <xref:System.Windows.Window.Closed> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-368">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-369">
            <see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-369">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-370">Déclenche l'événement <see cref="E:System.Windows.Window.Closing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-370">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-371"><xref:System.Windows.Window.OnClosing%2A> déclenche l'événement <xref:System.Windows.Window.Closing>.</span><span class="sxs-lookup"><span data-stu-id="04b69-371"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="04b69-372">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnClosing%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-372">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="04b69-373">La méthode substituée doit appeler <xref:System.Windows.Window.OnClosing%2A> sur la classe de base si <xref:System.Windows.Window.Closing> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-373">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent">
          <span data-ttu-id="04b69-374">Référence à la racine de l'ancienne arborescence de contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-374">A reference to the root of the old content tree.</span>
          </span>
        </param>
        <param name="newContent">
          <span data-ttu-id="04b69-375">Référence à la racine de la nouvelle arborescence de contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-375">A reference to the root of the new content tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-376">Appelée lorsque la propriété <see cref="P:System.Windows.Controls.ContentControl.Content" /> est modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-376">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-377">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-377">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-378">Déclenche l'événement <see cref="E:System.Windows.Window.ContentRendered" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-378">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-379"><xref:System.Windows.Window.OnContentRendered%2A> déclenche l'événement <xref:System.Windows.Window.ContentRendered>.</span><span class="sxs-lookup"><span data-stu-id="04b69-379"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="04b69-380">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnContentRendered%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-380">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="04b69-381">La méthode substituée doit appeler <xref:System.Windows.Window.OnContentRendered%2A> sur la classe de base si <xref:System.Windows.Window.ContentRendered> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-381">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-382">Crée et retourne un objet <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> pour ce <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-382">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04b69-383">Objet <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> pour ce <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-383">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-384">Cette méthode se substitue à <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-384">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-385">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-385">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-386">Déclenche l'événement <see cref="E:System.Windows.Window.Deactivated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-386">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-387"><xref:System.Windows.Window.OnDeactivated%2A> déclenche l'événement <xref:System.Windows.Window.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="04b69-387"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="04b69-388">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnDeactivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-388">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="04b69-389">La méthode substituée doit appeler <xref:System.Windows.Window.OnDeactivated%2A> sur la classe de base si <xref:System.Windows.Window.Deactivated> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-389">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi">
          <span data-ttu-id="04b69-390">Le paramètre d’échelle ppp précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-390">The previous DPI scale setting.</span>
          </span>
        </param>
        <param name="newDpi">
          <span data-ttu-id="04b69-391">Le nouveau paramètre d’échelle ppp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-391">The new DPI scale setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-392">Appelé lorsque la résolution d’affichage de cette fenêtre change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-392">Called when the DPI at which this window is rendered changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-393">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-394">Déclenche l'événement <see cref="E:System.Windows.Window.LocationChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-394">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-395"><xref:System.Windows.Window.OnLocationChanged%2A> déclenche l'événement <xref:System.Windows.Window.LocationChanged>.</span><span class="sxs-lookup"><span data-stu-id="04b69-395"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="04b69-396">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnLocationChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-396">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="04b69-397">La méthode substituée doit appeler <xref:System.Windows.Window.OnLocationChanged%2A> sur la classe de base si <xref:System.Windows.Window.LocationChanged> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-397">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-398">Données de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-398">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-399">Appelée lorsque l'événement <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-399">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-400">Cette implémentation ne modifie pas l’état géré (les <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété) de la <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> données d’événement.</span><span class="sxs-lookup"><span data-stu-id="04b69-400">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="04b69-401">
            <para>Si vous substituez <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, toujours appeler l’implémentation de base votre <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implémentation. Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement, ce qui peut modifier le comportement au moment de l’exécution de la classe finale. Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-401">
              <para>If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-402">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-403">Déclenche l'événement <see cref="E:System.Windows.Window.SourceInitialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-403">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-404"><xref:System.Windows.Window.OnSourceInitialized%2A> déclenche l'événement <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="04b69-404"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="04b69-405">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnSourceInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-405">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="04b69-406">La méthode substituée doit appeler <xref:System.Windows.Window.OnSourceInitialized%2A> sur la classe de base si <xref:System.Windows.Window.SourceInitialized> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-406">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="04b69-407">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-408">Déclenche l'événement <see cref="E:System.Windows.Window.StateChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-408">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-409"><xref:System.Windows.Window.OnStateChanged%2A> déclenche l'événement <xref:System.Windows.Window.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="04b69-409"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="04b69-410">Un type qui dérive de <xref:System.Windows.Window> peuvent substituer <xref:System.Windows.Window.OnStateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-410">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="04b69-411">La méthode substituée doit appeler <xref:System.Windows.Window.OnStateChanged%2A> sur la classe de base si <xref:System.Windows.Window.StateChanged> doit être déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-411">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="04b69-412">Parent précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-412">The previous parent.</span>
          </span>
          <span data-ttu-id="04b69-413">Valeur null si le <see cref="T:System.Windows.DependencyObject" /> n'avait pas de parent précédent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-413">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04b69-414">Appelé lorsque le parent de la fenêtre est modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-414">Called when the parent of the window is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-415">Obtient une collection de fenêtres dont cette fenêtre est propriétaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-415">Gets a collection of windows for which this window is the owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-416">
            <see cref="T:System.Windows.WindowCollection" /> qui contient des références aux fenêtres dont cette fenêtre est propriétaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-416">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-417">Une fenêtre enfant est une dont <xref:System.Windows.Window.Owner%2A> propriété est définie avec une référence à une autre fenêtre, qui est connue en tant que la fenêtre propriétaire.</span><span class="sxs-lookup"><span data-stu-id="04b69-417">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="04b69-418">Pour rechercher toutes les fenêtres une fenêtre propriétaire, vous pouvez énumérer <xref:System.Windows.WindowCollection> qui est retourné par la <xref:System.Windows.Window.OwnedWindows%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-418">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-419">L’exemple suivant montre comment énumérer <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-419">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-420">Obtient ou définit la <see cref="T:System.Windows.Window" /> qui possède cette <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-420">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-421">Objet <see cref="T:System.Windows.Window" /> qui représente le propriétaire de cette <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-421">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-422">Quand une fenêtre enfant est ouverte par une fenêtre parente en appelant <xref:System.Windows.Window.ShowDialog%2A>, une relation implicite est établie entre parent et enfant.</span><span class="sxs-lookup"><span data-stu-id="04b69-422">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="04b69-423">Cette relation applique certains comportements, notamment en ce qui concerne la réduction, l’optimisation et la restauration.</span><span class="sxs-lookup"><span data-stu-id="04b69-423">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="04b69-424">Quand une fenêtre enfant est créée par une fenêtre parente en appelant <xref:System.Windows.Window.Show%2A>, toutefois, la fenêtre enfant n’a pas d’une relation avec la fenêtre parente.</span><span class="sxs-lookup"><span data-stu-id="04b69-424">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="04b69-425">Cela signifie que :</span><span class="sxs-lookup"><span data-stu-id="04b69-425">This means that:</span></span>  
  
-   <span data-ttu-id="04b69-426">La fenêtre enfant n’a pas une référence à la fenêtre parente.</span><span class="sxs-lookup"><span data-stu-id="04b69-426">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="04b69-427">Le comportement de la fenêtre enfant n’est pas dépendant sur le comportement de la fenêtre parente. une fenêtre peut couvrir l’autre, ou être réduite, agrandie et restaurée indépendamment de l’autre.</span><span class="sxs-lookup"><span data-stu-id="04b69-427">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="04b69-428">Vous permet de créer une relation entre une fenêtre enfant et une fenêtre parente, <xref:System.Windows.Window> prend en charge la notion de propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-428">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="04b69-429">La propriété est établie lorsque la <xref:System.Windows.Window.Owner%2A> propriété d’une fenêtre (la fenêtre enfant) est définie avec une référence à une autre fenêtre (la fenêtre propriétaire).</span><span class="sxs-lookup"><span data-stu-id="04b69-429">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="04b69-430">Une fois que cette relation est établie, les comportements suivants sont d’application :</span><span class="sxs-lookup"><span data-stu-id="04b69-430">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="04b69-431">Si une fenêtre propriétaire est réduite, ses fenêtres enfants sont ainsi réduits.</span><span class="sxs-lookup"><span data-stu-id="04b69-431">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="04b69-432">Si une fenêtre enfant est réduite, son propriétaire n’est pas réduite.</span><span class="sxs-lookup"><span data-stu-id="04b69-432">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="04b69-433">Si une fenêtre propriétaire est réduite, la fenêtre propriétaire et ses fenêtres enfants sont restaurés.</span><span class="sxs-lookup"><span data-stu-id="04b69-433">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="04b69-434">Une fenêtre propriétaire ne peut jamais couvrir une fenêtre enfant.</span><span class="sxs-lookup"><span data-stu-id="04b69-434">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="04b69-435">Fenêtres enfants qui n’ont pas été ouvertes à l’aide de <xref:System.Windows.Window.ShowDialog%2A> ne sont pas modales.</span><span class="sxs-lookup"><span data-stu-id="04b69-435">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="04b69-436">L’utilisateur peut toujours interagir avec la fenêtre propriétaire.</span><span class="sxs-lookup"><span data-stu-id="04b69-436">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="04b69-437">Si vous fermez une fenêtre propriétaire, ses fenêtres enfants sont également fermés.</span><span class="sxs-lookup"><span data-stu-id="04b69-437">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="04b69-438">Si une fenêtre enfant a été ouverte par sa fenêtre propriétaire en utilisant <xref:System.Windows.Window.Show%2A>et le propriétaire de la fenêtre est fermée, la fenêtre possédée <xref:System.Windows.Window.Closing> événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-438">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="04b69-439">Lorsque vous ouvrez une fenêtre enfant en appelant <xref:System.Windows.Window.ShowDialog%2A>, vous devez également définir le <xref:System.Windows.Window.Owner%2A> propriété de la fenêtre enfant.</span><span class="sxs-lookup"><span data-stu-id="04b69-439">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="04b69-440">Si vous ne le faites pas, vos utilisateurs ne sont pas être en mesure de restaurer la fenêtre enfant et fenêtre parente en appuyant sur le bouton de barre des tâches.</span><span class="sxs-lookup"><span data-stu-id="04b69-440">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="04b69-441">Au lieu de cela, en appuyant sur le bouton de barre des tâches génèrera une liste de windows, y compris la fenêtre enfant et parent, pour les utilisateurs ; seule la fenêtre sélectionnée est restaurée.</span><span class="sxs-lookup"><span data-stu-id="04b69-441">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04b69-442">Vous devez également définir le <xref:System.Windows.Window.Owner%2A> propriété sur une fenêtre ouverte en appelant <xref:System.Windows.Window.ShowDialog%2A> pour garantir un comportement correct avec.</span><span class="sxs-lookup"><span data-stu-id="04b69-442">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-443">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-443">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-444">L’exemple suivant montre comment établir la relation parentes.</span><span class="sxs-lookup"><span data-stu-id="04b69-444">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04b69-445">Une fenêtre essaie d'être son propre propriétaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-445">A window tries to own itself</span>
          </span>
          <span data-ttu-id="04b69-446">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-446">-or-</span>
          </span>
          <span data-ttu-id="04b69-447">Deux fenêtres essaient de se posséder l'une l'autre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-447">Two windows try to own each other.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-448">La propriété <see cref="P:System.Windows.Window.Owner" /> est définie sur une fenêtre visible affichée à l'aide de <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-448">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" /></span>
          </span>
          <span data-ttu-id="04b69-449">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-449">-or-</span>
          </span>
          <span data-ttu-id="04b69-450">La propriété <see cref="P:System.Windows.Window.Owner" /> est définie avec une fenêtre qui n'a pas été affichée auparavant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-450">The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-451">autorisation d’utiliser toutes les fenêtres et événements d’entrée d’utilisateur sans restriction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-451">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="04b69-452">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-452">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-453">Obtient ou définit le mode de redimensionnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-453">Gets or sets the resize mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-454">Valeur <see cref="T:System.Windows.ResizeMode" /> spécifiant le mode de redimensionnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-454">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-455">Il existe quatre options :</span><span class="sxs-lookup"><span data-stu-id="04b69-455">There are four options:</span></span>  
  
-   <span data-ttu-id="04b69-456">**NoResize**.</span><span class="sxs-lookup"><span data-stu-id="04b69-456">**NoResize**.</span></span> <span data-ttu-id="04b69-457">L’utilisateur ne peut pas redimensionner la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-457">The user cannot resize the window.</span></span> <span data-ttu-id="04b69-458">Les zones d’agrandissement et réduction ne sont pas affichés.</span><span class="sxs-lookup"><span data-stu-id="04b69-458">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="04b69-459">**CanMinimize**.</span><span class="sxs-lookup"><span data-stu-id="04b69-459">**CanMinimize**.</span></span> <span data-ttu-id="04b69-460">L’utilisateur peut uniquement réduire la fenêtre et restaurez-la à partir de la barre des tâches.</span><span class="sxs-lookup"><span data-stu-id="04b69-460">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="04b69-461">Les cases Réduire et Agrandir sont affichés, mais seule la case réduire est activée.</span><span class="sxs-lookup"><span data-stu-id="04b69-461">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="04b69-462">**CanResize**.</span><span class="sxs-lookup"><span data-stu-id="04b69-462">**CanResize**.</span></span> <span data-ttu-id="04b69-463">L’utilisateur a la pleine possibilité de redimensionner la fenêtre, en utilisant les cases Réduire et agrandir et un plan déplaçable autour de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-463">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="04b69-464">Les cases Réduire et Agrandir sont affichés et activés.</span><span class="sxs-lookup"><span data-stu-id="04b69-464">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="04b69-465">(Valeur par défaut).</span><span class="sxs-lookup"><span data-stu-id="04b69-465">(Default).</span></span>  
  
-   <span data-ttu-id="04b69-466">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="04b69-466">**CanResizeWithGrip**.</span></span> <span data-ttu-id="04b69-467">Cette option a la même fonctionnalité que <xref:System.Windows.ResizeMode.CanResize>, mais ajoute une « poignée de redimensionnement » vers le coin inférieur droit de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-467">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-468">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-468">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-469">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-469">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-470">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-470">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="04b69-471">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-471">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-472">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.ResizeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-472">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-473">Obtient la taille et l'emplacement d'une fenêtre avant qu'elle ne soit réduite ou agrandie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-473">Gets the size and location of a window before being either minimized or maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-474">
            <see cref="T:System.Windows.Rect" /> qui spécifie la taille et l'emplacement d'une fenêtre avant sa réduction ou son agrandissement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-474">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-475">Le rectangle de restauration est la région occupée par la fenêtre avant qu’il a été réduite ou agrandie.</span><span class="sxs-lookup"><span data-stu-id="04b69-475">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="04b69-476">Vous pouvez utiliser <xref:System.Windows.Window.RestoreBounds%2A> pour enregistrer la dernière taille et l’emplacement d’une fenêtre avant la fermeture d’une application et récupérer ces valeurs la prochaine fois qu’une application commence à restaurer une fenêtre à la façon dont un utilisateur l’a laissé.</span><span class="sxs-lookup"><span data-stu-id="04b69-476">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="04b69-477">Si vous interrogez <xref:System.Windows.Window.RestoreBounds%2A> avant l’affichage de la fenêtre ou qui a été fermée, <xref:System.Windows.Rect.Empty%2A> est retournée.</span><span class="sxs-lookup"><span data-stu-id="04b69-477">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-478">Impossible d’obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-478">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-479">L’exemple suivant utilise <xref:System.Windows.Window.RestoreBounds%2A> et le stockage isolé pour vérifier que la taille et l’emplacement d’une fenêtre sont les mêmes qu’ils lors du dernier affichage de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-479">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-480">pour l’autorisation de requête pour la taille et l’emplacement d’une fenêtre rectangle englobant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-480">for permission to query for the size and location of a window's bounding rectangle.</span>
          </span>
          <span data-ttu-id="04b69-481">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-481">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-482">Ouvre une fenêtre et retourne sans attendre la fermeture de la nouvelle fenêtre ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-482">Opens a window and returns without waiting for the newly opened window to close.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-483">Lorsque la <xref:System.Windows.Window> classe est instanciée, elle n’est pas visible par défaut.</span><span class="sxs-lookup"><span data-stu-id="04b69-483">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="04b69-484"><xref:System.Windows.Window.Show%2A> affiche une fenêtre et retourne immédiatement, sans attendre que la fenêtre à fermer.</span><span class="sxs-lookup"><span data-stu-id="04b69-484"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="04b69-485">Par conséquent, la fenêtre ouverte n’empêche pas les utilisateurs d’interagir avec d’autres fenêtres dans l’application.</span><span class="sxs-lookup"><span data-stu-id="04b69-485">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="04b69-486">Ce type de fenêtre est appelé un *non modale* fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-486">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="04b69-487">Des exemples courants de windows non modales sont palettes, boîtes à outils et fenêtres de propriétés.</span><span class="sxs-lookup"><span data-stu-id="04b69-487">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="04b69-488">Pour empêcher un utilisateur à l’interaction avec une fenêtre spécifique, la fenêtre doit être ouverte en appelant <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-488">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="04b69-489">Une fenêtre est ouverte en appelant <xref:System.Windows.Window.Show%2A> est pas automatiquement ont une relation avec la fenêtre qui l’a ouverte ; plus précisément, la fenêtre ouverte ne sait pas quelle fenêtre ouverte.</span><span class="sxs-lookup"><span data-stu-id="04b69-489">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="04b69-490">Cette relation peut être établie à l’aide de la <xref:System.Windows.Window.Owner%2A> propriété et géré à l’aide du <xref:System.Windows.Window.OwnedWindows%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-490">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="04b69-491">Appel <xref:System.Windows.Window.Show%2A> donne le même résultat final en tant que paramètre <xref:System.Windows.UIElement.Visibility%2A> propriété de la <xref:System.Windows.Window> objet <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="04b69-491">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="04b69-492">Toutefois, il est une différence entre les deux à partir d’une perspective de minutage.</span><span class="sxs-lookup"><span data-stu-id="04b69-492">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="04b69-493">Appel <xref:System.Windows.Window.Show%2A> est une opération synchrone qui retourne uniquement une fois que le <xref:System.Windows.FrameworkElement.Loaded> événement sur la fenêtre enfant a été déclenché :</span><span class="sxs-lookup"><span data-stu-id="04b69-493">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="04b69-494">Paramètre <xref:System.Windows.UIElement.Visibility%2A>, toutefois, est une opération asynchrone qui retourne immédiatement :</span><span class="sxs-lookup"><span data-stu-id="04b69-494">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="04b69-495">Lors de la définition <xref:System.Windows.UIElement.Visibility%2A>, les événements de fenêtre enregistrés avant de définir <xref:System.Windows.UIElement.Visibility%2A> ne peut pas être déclenché jusqu'à ce que la méthode dans laquelle vous définissez <xref:System.Windows.UIElement.Visibility%2A> a terminé son exécution.</span><span class="sxs-lookup"><span data-stu-id="04b69-495">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-496">L’exemple suivant montre comment ouvrir une fenêtre non modale.</span><span class="sxs-lookup"><span data-stu-id="04b69-496">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-497">
            <see cref="M:System.Windows.Window.Show" /> est appelé sur une fenêtre qui se ferme (<see cref="E:System.Windows.Window.Closing" />) ou a été fermée (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-497">
              <see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-498">Obtient ou définit une valeur qui indique si une fenêtre est activée lors de son premier affichage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-498">Gets or sets a value that indicates whether a window is activated when first shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-499">
            <see langword="true" /> si une fenêtre est activée lors de son premier affichage ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-499">
              <see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="04b69-500">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-500">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-501">Lorsqu’une fenêtre avec sa <xref:System.Windows.Window.ShowActivated%2A> propriété définie sur `false` est ouvert, la fenêtre n’est pas activée et que sa <xref:System.Windows.Window.Activated> événement n’est pas déclenché manuellement que lorsqu’un utilisateur Active la fenêtre en la sélectionnant.</span><span class="sxs-lookup"><span data-stu-id="04b69-501">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="04b69-502">Une fois que la fenêtre est sélectionnée, il active et désactive normalement.</span><span class="sxs-lookup"><span data-stu-id="04b69-502">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="04b69-503">Pour empêcher une fenêtre d’en cours d’activation quand il s’ouvre, le <xref:System.Windows.Window.ShowActivated%2A> propriété doit être définie sur `false` avant l’affichage de la fenêtre (en appelant <xref:System.Windows.Window.Show%2A>) ; le paramètre <xref:System.Windows.Window.ShowActivated%2A> à `false` après une fenêtre a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="04b69-503">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="04b69-504">Paramètre <xref:System.Windows.Window.ShowActivated%2A> à `false` sur une fenêtre qui est ouvert de façon modale, en appelant <xref:System.Windows.Window.ShowDialog%2A>, n’a aucun impact réel.</span><span class="sxs-lookup"><span data-stu-id="04b69-504">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="04b69-505">Bien que la fenêtre modale ne sera pas activée, la fenêtre modale empêche l’utilisateur d’activer d’autres fenêtres de l’application ouverte.</span><span class="sxs-lookup"><span data-stu-id="04b69-505">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-506">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-506">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-507">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-507">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="04b69-508">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-508">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-509">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-509">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="04b69-510">L’exemple suivant montre comment utiliser le balisage pour configurer une fenêtre s’ouvre sans en cours d’activation.</span><span class="sxs-lookup"><span data-stu-id="04b69-510">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="04b69-511">L’exemple suivant montre comment utiliser le code pour configurer une fenêtre à ouvrir sans être activée.</span><span class="sxs-lookup"><span data-stu-id="04b69-511">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-512">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.ShowActivated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-512">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04b69-513">Ouvre une fenêtre et retourne uniquement lorsque la nouvelle fenêtre ouverte est fermée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-513">Opens a window and returns only when the newly opened window is closed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04b69-514">Valeur <see cref="T:System.Nullable`1" /> de type <see cref="T:System.Boolean" /> qui spécifie si l'activité a été acceptée (<see langword="true" />) ou annulée (<see langword="false" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-514">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span>
          </span>
          <span data-ttu-id="04b69-515">La valeur de retour est la valeur de la propriété <see cref="P:System.Windows.Window.DialogResult" /> avant la fermeture d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-515">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-516">Quand un <xref:System.Windows.Window> classe est instanciée, elle n’est pas visible par défaut.</span><span class="sxs-lookup"><span data-stu-id="04b69-516">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="04b69-517"><xref:System.Windows.Window.ShowDialog%2A> Affiche la fenêtre, désactive toutes les autres fenêtres dans l’application et retourne uniquement lorsque la fenêtre est fermée.</span><span class="sxs-lookup"><span data-stu-id="04b69-517"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="04b69-518">Ce type de fenêtre est appelé un *modale* fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-518">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="04b69-519">Fenêtres modales sont principalement utilisées en tant que boîtes de dialogue.</span><span class="sxs-lookup"><span data-stu-id="04b69-519">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="04b69-520">Une boîte de dialogue est un type spécial de fenêtre que les applications utilisent pour interagir avec les utilisateurs pour effectuer des tâches, telles que l’ouverture de fichiers ou de l’impression de documents.</span><span class="sxs-lookup"><span data-stu-id="04b69-520">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="04b69-521">Boîtes de dialogue permettent généralement aux utilisateurs d’accepter ou annuler la tâche pour laquelle elles ont été affichées avant la fermeture de la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="04b69-521">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="04b69-522"><xref:System.Windows.Window.ShowDialog%2A> Retourne un <xref:System.Nullable%601> <xref:System.Boolean> valeur qui spécifie si l’activité a été acceptée ou annulée.</span><span class="sxs-lookup"><span data-stu-id="04b69-522"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="04b69-523">La valeur de retour est la valeur de la propriété <xref:System.Windows.Window.DialogResult%2A> avant la fermeture d'une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-523">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="04b69-524">Pour plus d'informations, consultez <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-524">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="04b69-525">Une fenêtre est ouverte en appelant le <xref:System.Windows.Window.ShowDialog%2A> méthode n’a pas automatiquement une relation avec la fenêtre qui l’a ouverte ; plus précisément, la fenêtre ouverte ne sait pas quelle fenêtre ouverte.</span><span class="sxs-lookup"><span data-stu-id="04b69-525">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="04b69-526">Cette relation peut être établie à l’aide de la <xref:System.Windows.Window.Owner%2A> propriété et géré à l’aide du <xref:System.Windows.Window.OwnedWindows%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-526">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="04b69-527">Pour prendre en charge [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (consultez [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> doit être définie pour une fenêtre ouverte en appelant <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-527">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="04b69-528">Quand une fenêtre modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] fenêtre (une fenêtre ouverte en appelant <xref:System.Windows.Window.ShowDialog%2A>) est fermée, activée précédemment fenêtre est réactivée.</span><span class="sxs-lookup"><span data-stu-id="04b69-528">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="04b69-529">Si une fenêtre modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] fenêtre a une fenêtre propriétaire (consultez <xref:System.Windows.Window.Owner%2A>), la fenêtre propriétaire n’est pas réactivée lorsque la fenêtre modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] fenêtre est fermée, sauf si elle a été la fenêtre activée précédemment.</span><span class="sxs-lookup"><span data-stu-id="04b69-529">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-530">Cette méthode ne peut pas être appelée lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-530">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04b69-531">L’exemple suivant montre comment ouvrir une fenêtre modale.</span><span class="sxs-lookup"><span data-stu-id="04b69-531">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04b69-532">
            <see cref="M:System.Windows.Window.ShowDialog" /> est appelé sur une fenêtre qui se ferme (<see cref="E:System.Windows.Window.Closing" />) ou a été fermée (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-532">
              <see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="04b69-533">pour l’autorisation d’activer une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-533">for permission to activate a window.</span>
          </span>
          <span data-ttu-id="04b69-534">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-534">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-535">Obtient ou définit une valeur qui indique si la fenêtre possède un bouton dans la barre des tâches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-535">Gets or sets a value that indicates whether the window has a task bar button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-536">
            <see langword="true" /> si la fenêtre possède un bouton dans la barre des tâches ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-536">
              <see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="04b69-537">Ne s'applique pas lorsque la fenêtre est hébergée dans un navigateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-537">Does not apply when the window is hosted in a browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-538">Si <xref:System.Windows.Window.ShowInTaskbar%2A> est défini sur `true`, la fenêtre s’affiche également dans la liste de sélection d’application ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="04b69-538">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="04b69-539">L’icône qui est utilisé pour le bouton de barre des tâches et la liste de sélection d’application ALT + TAB est la valeur de la <xref:System.Windows.Window.Icon%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-539">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-540">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-540">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-541">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-541">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-542">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-542">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="04b69-543">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-543">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-544">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-544">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-545">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.ShowInTaskbar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-545">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-546">Obtient ou définit une valeur qui indique si une fenêtre est automatiquement redimensionnée en fonction de la taille de son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-546">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-547">Valeur <see cref="T:System.Windows.SizeToContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-547">A <see cref="T:System.Windows.SizeToContent" /> value.</span>
          </span>
          <span data-ttu-id="04b69-548">La valeur par défaut est <see cref="F:System.Windows.SizeToContent.Manual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-548">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-549">Lorsque <xref:System.Windows.Window.SizeToContent%2A> a la valeur <xref:System.Windows.SizeToContent.WidthAndHeight>, paramètre <xref:System.Windows.FrameworkElement.Height%2A> ou <xref:System.Windows.FrameworkElement.Width%2A> n’a aucun effet ; les deux propriétés peuvent être définies, mais les valeurs qu’ils sont définis avec ne sont pas appliquées à la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-549">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="04b69-550">Lorsque <xref:System.Windows.Window.SizeToContent%2A> a la valeur <xref:System.Windows.SizeToContent.Height>, la définition <xref:System.Windows.FrameworkElement.Height%2A> ne modifie pas la hauteur de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-550">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="04b69-551">Lorsque <xref:System.Windows.Window.SizeToContent%2A> a la valeur <xref:System.Windows.SizeToContent.Width>, la définition <xref:System.Windows.FrameworkElement.Width%2A> ne modifie pas la largeur de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="04b69-551">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="04b69-552">Si <xref:System.Windows.Window.SizeToContent%2A> a une valeur autre que <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="04b69-552">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="04b69-553"><xref:System.Windows.Window.SizeToContent%2A> est automatiquement défini sur <xref:System.Windows.SizeToContent.Manual> si un utilisateur redimensionne la fenêtre à l’aide de la poignée de redimensionnement ou en faisant glisser la bordure.</span><span class="sxs-lookup"><span data-stu-id="04b69-553"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="04b69-554">Si la taille du contenu change d’une manière qui entraîne le redimensionnement, la fenêtre <xref:System.Windows.FrameworkElement.SizeChanged> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-554">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="04b69-555">Si une fenêtre est transparente (consultez <xref:System.Windows.Window.AllowsTransparency%2A>), vous devez envisager de définir <xref:System.Windows.Window.SizeToContent%2A> à <xref:System.Windows.SizeToContent.WidthAndHeight> pour vous assurer de la fenêtre ne dépasse pas son contenu visible.</span><span class="sxs-lookup"><span data-stu-id="04b69-555">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-556">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-556">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-557">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-557">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-558">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-558">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="04b69-559">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-559">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-560">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-560">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="04b69-561">L’exemple suivant montre comment définir le <xref:System.Windows.Window.SizeToContent%2A> propriété dans le code pour spécifier la façon dont une fenêtre se redimensionne en fonction de son contenu.</span><span class="sxs-lookup"><span data-stu-id="04b69-561">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-562">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.SizeToContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-562">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-563">Cet événement est déclenché afin de prendre en charge l'interopérabilité avec [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-563">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span>
          </span>
          <span data-ttu-id="04b69-564">Consultez <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-564">See <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-565">Se produit lorsque la propriété <see cref="P:System.Windows.Window.WindowState" /> de la fenêtre change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-565">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-566">Obtient ou définit la miniature de barre des tâches [!INCLUDE[win7](~/includes/win7-md.md)] pour <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-566">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-567">Miniature de la barre des tâches [!INCLUDE[win7](~/includes/win7-md.md)] pour <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-567">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-568">Pour plus d’informations sur l’utilisation de la [!INCLUDE[win7](~/includes/win7-md.md)] voir miniatures, la barre des tâches la <xref:System.Windows.Shell.TaskbarItemInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="04b69-568">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-569">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.TaskbarItemInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-569">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-570">Obtient ou définit le titre d’une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-570">Gets or sets a window's title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-571">
            <see cref="T:System.String" /> qui contient le titre de la fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-571">A <see cref="T:System.String" /> that contains the window's title.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-572">Le titre d’un <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, ou [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], peut également être définie à l’aide de <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="04b69-572">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-573">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-573">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-574">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-574">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="04b69-575">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-575">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-576">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-576">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-577">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.Title" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-577">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-578">Obtient ou définit la position du bord supérieur de la fenêtre par rapport au bureau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-578">Gets or sets the position of the window's top edge, in relation to the desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-579">Position du haut de la fenêtre, en unités logiques (1/96").</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-579">The position of the window's top, in logical units (1/96").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-580">Lorsque le <xref:System.Windows.Window> est agrandie ou réduite, cette valeur représente le bord supérieur de la restauration point pour le <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="04b69-580">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="04b69-581">Cette propriété ne peut pas être définie via un style.</span><span class="sxs-lookup"><span data-stu-id="04b69-581">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="04b69-582">Si vous ne spécifiez pas une valeur, <xref:System.Windows.Window.Top%2A> est définie sur la valeur par défaut du système.</span><span class="sxs-lookup"><span data-stu-id="04b69-582">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="04b69-583">Vous pouvez également spécifier la valeur par défaut du système en définissant <xref:System.Windows.Window.Top%2A> à <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="04b69-583">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="04b69-584">Ni <xref:System.Double.NegativeInfinity> ni <xref:System.Double.PositiveInfinity> est une valeur valide pour <xref:System.Windows.Window.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-584">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-585">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-585">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-586">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-586">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-587">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-587">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="04b69-588">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-588">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-589">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-589">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-590">Obtient ou définit une valeur qui indique si une fenêtre apparaît dans l'ordre de plan le plus haut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-590">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-591">
            <see langword="true" /> si la fenêtre est l'élément le plus haut ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-591">
              <see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-592">Une fenêtre dont <xref:System.Windows.Window.Topmost%2A> propriété est définie sur `true` apparaît au-dessus de toutes les fenêtres dont <xref:System.Windows.Window.Topmost%2A> propriétés sont définies sur `false`.</span><span class="sxs-lookup"><span data-stu-id="04b69-592">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="04b69-593">Dans le groupe de windows qui ont <xref:System.Windows.Window.Topmost%2A> propriété est définie sur `true`, la fenêtre actuellement active est la fenêtre au premier plan.</span><span class="sxs-lookup"><span data-stu-id="04b69-593">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="04b69-594">De même pour le groupe de windows qui ont <xref:System.Windows.Window.Topmost%2A> propriété est définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="04b69-594">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-595">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-595">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-596">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-596">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-597">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-597">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="04b69-598">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-598">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-599">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-599">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-600">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.Topmost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-600">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-601">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.Top" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-601">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-602">Obtient ou définit la position de la fenêtre lors de son premier affichage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-602">Gets or sets the position of the window when first shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-603">Valeur <see cref="T:System.Windows.WindowStartupLocation" /> qui spécifie la position supérieure gauche d'une fenêtre lorsqu'elle s'affiche pour la première fois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-603">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span>
          </span>
          <span data-ttu-id="04b69-604">La valeur par défaut est <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-604">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-605">Paramètre <xref:System.Windows.WindowStartupLocation> à <xref:System.Windows.WindowStartupLocation.Manual> provoque une fenêtre doit être positionné en fonction de son <xref:System.Windows.Window.Left%2A> et <xref:System.Windows.Window.Top%2A> les valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="04b69-605">Setting <xref:System.Windows.WindowStartupLocation> to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="04b69-606">Si le <xref:System.Windows.Window.Left%2A> ou <xref:System.Windows.Window.Top%2A> propriétés ne sont pas spécifiées, leurs valeurs sont déterminées par Windows.</span><span class="sxs-lookup"><span data-stu-id="04b69-606">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="04b69-607">Paramètre <xref:System.Windows.WindowStartupLocation.CenterScreen> entraîne une fenêtre doit être positionné dans le centre de l’écran qui contient le curseur de souris.</span><span class="sxs-lookup"><span data-stu-id="04b69-607">Setting <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="04b69-608">Paramètre <xref:System.Windows.WindowStartupLocation> à <xref:System.Windows.WindowStartupLocation.CenterOwner> provoque une fenêtre doit être positionné au centre de sa fenêtre propriétaire (consultez <xref:System.Windows.Window.Owner%2A>), si spécifiée.</span><span class="sxs-lookup"><span data-stu-id="04b69-608">Setting <xref:System.Windows.WindowStartupLocation> to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A>), if specified.</span></span> <span data-ttu-id="04b69-609">La fenêtre propriétaire peut être une autre fenêtre WPF ou une fenêtre non WPF.</span><span class="sxs-lookup"><span data-stu-id="04b69-609">The owner window can be either another WPF window or a non-WPF window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-610">Pour plus d’informations sur les fenêtres WPF avec les fenêtres non-WPF, consultez [interopérabilité WPF et Win32](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) et <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="04b69-610">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span>  
  
 <span data-ttu-id="04b69-611">Si la fenêtre propriétaire n’est pas spécifiée, la position de la fenêtre est déterminée de la même façon que si <xref:System.Windows.WindowStartupLocation> est défini sur <xref:System.Windows.WindowStartupLocation.Manual>.</span><span class="sxs-lookup"><span data-stu-id="04b69-611">If an owner window is not specified, the position of the window is determined in the same way as if <xref:System.Windows.WindowStartupLocation> is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-612">Vous ne pouvez pas définir ou obtenir la valeur de cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-612">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-613">Obtient ou définit une valeur qui indique si une fenêtre est restaurée, réduite ou agrandie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-613">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-614">
            <see cref="T:System.Windows.WindowState" /> qui détermine si une fenêtre est restaurée, réduite ou agrandie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-614">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span>
          </span>
          <span data-ttu-id="04b69-615">La valeur par défaut est <see cref="F:System.Windows.WindowState.Normal" /> (restaurée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-615">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-616">Avant d’une fenêtre est réduite ou agrandie, sa taille et son emplacement sont stockés dans <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-616">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="04b69-617">Lorsqu’une fenêtre est restaurée par la suite, ses valeurs de taille et l’emplacement sont restaurés avec les valeurs de <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="04b69-617">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="04b69-618">Lorsque le <xref:System.Windows.Window.WindowState%2A> propriété est modifiée, <xref:System.Windows.Window.StateChanged> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="04b69-618">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-619">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-619">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-620">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-620">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-621">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-621">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="04b69-622">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-622">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-623">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.WindowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-623">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-624">Obtient ou définit le style de bordure d’une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-624">Gets or sets a window's border style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04b69-625">
            <see cref="T:System.Windows.WindowStyle" /> qui spécifie le style de bordure d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-625">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span>
          </span>
          <span data-ttu-id="04b69-626">La valeur par défaut est <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-626">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04b69-627"><xref:System.Windows.Window.WindowStyle%2A> peut s’agir de la <xref:System.Windows.WindowStyle> des valeurs d’énumération, y compris <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (valeur par défaut), et <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span><span class="sxs-lookup"><span data-stu-id="04b69-627"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="04b69-628">La figure suivante montre les styles de fenêtre sur [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (thème Windows Vista Aero avec transparence activée) :</span><span class="sxs-lookup"><span data-stu-id="04b69-628">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="04b69-629">![Styles de fenêtre](~/add/media/windowoverviewfigure6.PNG "styles de fenêtre")</span><span class="sxs-lookup"><span data-stu-id="04b69-629">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04b69-630">Vous ne pouvez pas définir ou obtenir cette propriété lorsqu’une fenêtre est hébergée dans un navigateur.</span><span class="sxs-lookup"><span data-stu-id="04b69-630">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="04b69-631">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="04b69-631">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="04b69-632">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="04b69-632">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="04b69-633">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="04b69-633">Metadata properties set to `true`</span></span>|<span data-ttu-id="04b69-634">Aucun.</span><span class="sxs-lookup"><span data-stu-id="04b69-634">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04b69-635">Identifie la propriété de dépendance <see cref="P:System.Windows.Window.WindowStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04b69-635">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>