<Type Name="LocalValueEnumerator" FullName="System.Windows.LocalValueEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87419407c964ec6edfc3c1c4babfb741dcb7db0b" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46677311" /></Metadata><TypeSignature Language="C#" Value="public struct LocalValueEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEnumerator extends System.ValueType implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type LocalValueEnumerator = struct&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2a834-101">Fournit la prise en charge de l’énumération pour les valeurs locales de toutes les propriétés de dépendance qui existent sur un <see cref="T:System.Windows.DependencyObject" />.</span><span class="sxs-lookup"><span data-stu-id="2a834-101">Provides enumeration support for the local values of any dependency properties that exist on a <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-102">Un *valeur locale* est une valeur pour une propriété de dépendance qui a été définie directement sur une propriété de dépendance, en appelant <xref:System.Windows.DependencyObject.SetValue%2A>, ou plus généralement à l’aide de l’accesseur set d’une [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper de propriété qui appelle <xref:System.Windows.DependencyObject.SetValue%2A> en interne.</span><span class="sxs-lookup"><span data-stu-id="2a834-102">A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally.</span></span> <span data-ttu-id="2a834-103">Exemples d’autres déterminants du système de propriété qui ne sont pas des valeurs locales sont des valeurs définies avec des styles ou des valeurs de valeur par défaut de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="2a834-103">Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.</span></span> <span data-ttu-id="2a834-104">Pour plus d’informations, consultez [Priorité de la valeur de propriété de dépendance](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="2a834-104">For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="2a834-105">Un <xref:System.Windows.LocalValueEnumerator> est retourné par la <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> (méthode) et implémente la <xref:System.Collections.IEnumerator> interface.</span><span class="sxs-lookup"><span data-stu-id="2a834-105">A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface.</span></span> <span data-ttu-id="2a834-106">Publique <xref:System.Windows.LocalValueEnumerator> constructeur n’existe pas ; par conséquent, vous devez appeler <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> pour obtenir une instance de cette classe.</span><span class="sxs-lookup"><span data-stu-id="2a834-106">A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.</span></span>  
  
 <span data-ttu-id="2a834-107">Ne modifiez pas les valeurs locales (en appelant <xref:System.Windows.DependencyObject.SetValue%2A> ou <xref:System.Windows.DependencyObject.ClearValue%2A>) lors de l’énumération des valeurs locales.</span><span class="sxs-lookup"><span data-stu-id="2a834-107">Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values.</span></span> <span data-ttu-id="2a834-108">Si vous modifiez ou désactivez les valeurs de propriété selon les propriétés qui sont retournées par l’énumérateur, la modification ou l’effacement n’invalident pas la collection de l’énumérateur, comme c’est le cas pour de nombreuses <xref:System.Collections.IEnumerator> implémentations.</span><span class="sxs-lookup"><span data-stu-id="2a834-108">If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations.</span></span> <span data-ttu-id="2a834-109">En outre, la vue de l’énumérateur est une capture instantanée.</span><span class="sxs-lookup"><span data-stu-id="2a834-109">Also, the enumerator view is a snapshot.</span></span> <span data-ttu-id="2a834-110">Une modification de la collection n’est pas garantie pour être thread-safe et aucun verrou n’est appliquée.</span><span class="sxs-lookup"><span data-stu-id="2a834-110">A change to the collection is not guaranteed to be thread safe, and no lock is enforced.</span></span> <span data-ttu-id="2a834-111">Autres threads ont toujours un accès gratuit aux valeurs locales à partir d’un contexte autre que l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="2a834-111">Other threads still have free access to the local values from a context other than the enumerator.</span></span>  
  
 <span data-ttu-id="2a834-112">Utilisez ce type si vous avez des opérations dans votre classe où il est important de savoir si la valeur d’une propriété provient d’une valeur locale.</span><span class="sxs-lookup"><span data-stu-id="2a834-112">Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.</span></span> <span data-ttu-id="2a834-113">Par exemple, utilisez ce type dans un <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implémentation, ou définie les propriétés où vous souhaitez interroger les métadonnées sur tous les localement.</span><span class="sxs-lookup"><span data-stu-id="2a834-113">For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.LocalValueEnumerator.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a834-114">Obtient le nombre des éléments représentés dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-114">Gets the number of items that are represented in the collection.</span></span></summary>
        <value><span data-ttu-id="2a834-115">Nombre d’éléments dans la collection</span><span class="sxs-lookup"><span data-stu-id="2a834-115">The number of items in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-116">Cette propriété n’est pas un membre défini de <xref:System.Collections.IEnumerator> , qui est fourni pour des raisons pratiques.</span><span class="sxs-lookup"><span data-stu-id="2a834-116">This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LocalValueEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As LocalValueEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LocalValueEntry Current { System::Windows::LocalValueEntry get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.LocalValueEntry" Usage="System.Windows.LocalValueEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a834-117">Obtient l’élément actuel dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-117">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="2a834-118"><see cref="T:System.Windows.LocalValueEntry" /> en cours dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-118">The current <see cref="T:System.Windows.LocalValueEntry" /> in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-119">Cette version généralement accessible de la propriété s’appuie sur un instantané de la collection qui est effectuée lors de la création.</span><span class="sxs-lookup"><span data-stu-id="2a834-119">This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms749010(v=vs.90)"><span data-ttu-id="2a834-120">Comment : restaurer la valeur par défaut d’une propriété de dépendance</span><span class="sxs-lookup"><span data-stu-id="2a834-120">How to: Restore the Default Value of a Dependency Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="localValueEnumerator.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2a834-121"><see cref="T:System.Windows.LocalValueEnumerator" /> à comparer avec l'objet <see cref="T:System.Windows.LocalValueEnumerator" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="2a834-121">The <see cref="T:System.Windows.LocalValueEnumerator" /> to compare with the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span></span></param>
        <summary><span data-ttu-id="2a834-122">Détermine si l'attribut <see cref="T:System.Windows.LocalValueEnumerator" /> fourni équivaut à cet attribut <see cref="T:System.Windows.LocalValueEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="2a834-122">Determines whether the provided <see cref="T:System.Windows.LocalValueEnumerator" /> is equivalent to this <see cref="T:System.Windows.LocalValueEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="2a834-123"><see langword="true" /> si le <see cref="T:System.Windows.LocalValueEnumerator" /> spécifié est égal au <see cref="T:System.Windows.LocalValueEnumerator" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a834-123"><see langword="true" /> if the specified <see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the current <see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-124">Cette implémentation prend en charge l’égalité de référence uniquement.</span><span class="sxs-lookup"><span data-stu-id="2a834-124">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="localValueEnumerator.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a834-125">Retourne un code de hachage pour le <see cref="T:System.Windows.LocalValueEnumerator" /> actif.</span><span class="sxs-lookup"><span data-stu-id="2a834-125">Returns a hash code for the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="2a834-126">Code de hachage entier 32 bits.</span><span class="sxs-lookup"><span data-stu-id="2a834-126">A 32-bit integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="localValueEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a834-127">Avance l’énumérateur à l’élément suivant de la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-127">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="2a834-128"><see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-128"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.LocalValueEnumerator * System.Windows.LocalValueEnumerator -&gt; bool" Usage="obj1 = obj2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="2a834-129">Premier objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="2a834-129">The first object to compare.</span></span></param>
        <param name="obj2"><span data-ttu-id="2a834-130">Deuxième objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="2a834-130">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="2a834-131">Compare si deux objets <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiés sont les mêmes.</span><span class="sxs-lookup"><span data-stu-id="2a834-131">Compares whether two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects are the same.</span></span></summary>
        <returns><span data-ttu-id="2a834-132"><see langword="true" /> si <see cref="T:System.Windows.LocalValueEnumerator" /><paramref name="obj1" /> est égal à <see cref="T:System.Windows.LocalValueEnumerator" /><paramref name="obj2" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a834-132"><see langword="true" /> if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-133">Cette implémentation prend en charge l’égalité de référence uniquement.</span><span class="sxs-lookup"><span data-stu-id="2a834-133">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.LocalValueEnumerator * System.Windows.LocalValueEnumerator -&gt; bool" Usage="System.Windows.LocalValueEnumerator.op_Inequality (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="2a834-134">Premier objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="2a834-134">The first object to compare.</span></span></param>
        <param name="obj2"><span data-ttu-id="2a834-135">Deuxième objet à comparer.</span><span class="sxs-lookup"><span data-stu-id="2a834-135">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="2a834-136">Compare deux objets <see cref="T:System.Windows.LocalValueEnumerator" /> spécifiés pour déterminer s'ils ne sont pas les mêmes.</span><span class="sxs-lookup"><span data-stu-id="2a834-136">Compares two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects to determine whether they are not the same.</span></span></summary>
        <returns><span data-ttu-id="2a834-137"><see langword="true" /> si les instances ne sont pas égales ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a834-137"><see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-138">Cette implémentation prend en charge l’égalité de référence uniquement.</span><span class="sxs-lookup"><span data-stu-id="2a834-138">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="localValueEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a834-139">Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-139">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a834-140">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IEnumerator.Current" />.</span><span class="sxs-lookup"><span data-stu-id="2a834-140">For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</span></span></summary>
        <value><span data-ttu-id="2a834-141">Élément actuel dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2a834-141">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a834-142">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="2a834-142">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2a834-143">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.LocalValueEnumerator> est castée en interface <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="2a834-143">It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.LocalValueEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>