<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0522150d9c8bcdfd327e98c386e59efd9c8e18b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0522150d9c8bcdfd327e98c386e59efd9c8e18b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Represents a displacement in 2-D space.</source>
          <target state="translated">Représente un déplacement dans l’espace 2D.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> represents a fixed position, but a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> represents a direction and a magnitude (for example, velocity or acceleration).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> représente une position fixe, mais un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> représente une direction et une grandeur (par exemple, vitesse ou l’accélération).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>Thus, the endpoints of a line segment are points but their difference is a vector; that is, the direction and length of that line segment.</source>
          <target state="translated">Par conséquent, les points de terminaison d’un segment de ligne sont des points, mais leur différence est un vecteur ; Autrement dit, la direction et la longueur de ce segment de ligne.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>In XAML, the delimiter between the <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> values of a <ph id="ph3">&lt;xref:System.Windows.Vector&gt;</ph> can be either a comma or a space.</source>
          <target state="translated">En XAML, le séparateur entre les <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> valeurs d’un <ph id="ph3">&lt;xref:System.Windows.Vector&gt;</ph> peut être une virgule ou un espace.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>Some cultures might use the comma character as the decimal delimiter instead of the period character.</source>
          <target state="translated">Certaines cultures peuvent utiliser le caractère virgule comme séparateur décimal au lieu du caractère de période.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</source>
          <target state="translated">Traitement XAML pour la culture dite indifférente par défaut en-US dans la plupart des implémentations de processeur XAML et attend le point comme séparateur décimal.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>You should avoid using the comma character as the decimal delimiter if specifying a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> in XAML, because that will clash with the string type conversion of a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> attribute value into the <ph id="ph3">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> components.</source>
          <target state="translated">Évitez d’utiliser le caractère virgule comme séparateur décimal si vous spécifiez un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> en XAML, car cela qui entrera en conflit avec la conversion de type chaîne d’un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> attribut la valeur dans la <ph id="ph3">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> composants.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>XAML Attribute Usage</source>
          <target state="translated">Utilisation d'attributs XAML</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>XAML Values</source>
          <target state="translated">Valeurs XAML</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>x<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>The vector's X component.</source>
          <target state="translated">Le composant X du vecteur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> property.</source>
          <target state="translated">Pour plus d'informations, consultez la propriété <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source><bpt id="p1">*</bpt>y<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>y<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>The vector's Y component.</source>
          <target state="translated">Composant d’Y du vecteur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> property.</source>
          <target state="translated">Pour plus d'informations, consultez la propriété <ph id="ph1">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>The following example shows how to add two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">L’exemple suivant montre comment ajouter deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph>-offset of the new <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Offset <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> du nouveau <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph>-offset of the new <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Offset <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> du nouveau <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
          <source>The following example shows how to create two vectors and add them together.</source>
          <target state="translated">L’exemple suivant montre comment créer deux vecteurs et les ajouter.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Adds a vector to a point or to another vector.</source>
          <target state="translated">Ajoute un vecteur à un point ou à un autre vecteur.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The amount to translate the specified point.</source>
          <target state="translated">Valeur de conversion du point spécifié.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The point to translate.</source>
          <target state="translated">Point à translater.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>Translates the specified point by the specified vector and returns the resulting point.</source>
          <target state="translated">Convertit le point spécifié par le vecteur spécifié et retourne le point résultant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The result of translating <ph id="ph1">&lt;paramref name="point" /&gt;</ph> by <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          <target state="translated">Résultat de la conversion de <ph id="ph1">&lt;paramref name="point" /&gt;</ph> par <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
          <source>The following example shows how to use this method to add a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure to a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour ajouter un <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to add.</source>
          <target state="translated">Premier vecteur à additionner.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to add.</source>
          <target state="translated">Deuxième vecteur à additionner.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>Adds two vectors and returns the result as a <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          <target state="translated">Ajoute deux vecteurs et retourne le résultat sous forme de structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The sum of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Somme de <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to add two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour ajouter deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to evaluate.</source>
          <target state="translated">Premier vecteur à évaluer.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to evaluate.</source>
          <target state="translated">Deuxième vecteur à évaluer.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>Retrieves the angle, expressed in degrees, between the two specified vectors.</source>
          <target state="translated">Récupère l'angle, exprimé en degrés, entre les deux vecteurs spécifiés.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The angle, in degrees, between <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Angle, en degrés, entre <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to get the angle between two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour obtenir l’angle entre deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to evaluate.</source>
          <target state="translated">Premier vecteur à évaluer.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to evaluate.</source>
          <target state="translated">Deuxième vecteur à évaluer.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the cross product of two vectors.</source>
          <target state="translated">Calcule le produit croisé de deux vecteurs.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The cross product of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Produit croisé de <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The following formula is used to calculate the cross product:</source>
          <target state="translated">La formule suivante est utilisée pour calculer le produit croisé :</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source><bpt id="p1">&lt;c&gt;</bpt>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to calculate the cross product of two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour calculer le produit croisé de deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to evaluate.</source>
          <target state="translated">Premier vecteur à évaluer.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to evaluate.</source>
          <target state="translated">Deuxième vecteur à évaluer.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the determinant of two vectors.</source>
          <target state="translated">Calcule le déterminant de deux vecteurs.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The determinant of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Déterminant de <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to calculate the determinant of two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</source>
          <target state="translated">L’exemple suivant montre comment calculer le déterminant de deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The vector structure to divide.</source>
          <target state="translated">Structure vectorielle à diviser.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The amount by which <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept> is divided.</source>
          <target state="translated">Valeur par laquelle <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept> est divisé.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>Divides the specified vector by the specified scalar and returns the result as a <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Divise le vecteur spécifié par la scalaire indiquée et retourne le résultat sous forme de <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          <target state="translated">Résultat de la division de <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> par <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this method to divide a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a scalar.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour diviser un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> par un scalaire.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Compares two vectors for equality.</source>
          <target state="translated">Compare l'égalité de deux vecteurs.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">D’un vecteur <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> décrit les propriétés à l’aide de <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Vector">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">Étant donné que la valeur d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <ph id="ph2">&lt;xref:System.Double&gt;</ph> des structures qui sont logiquement égales peuvent échouer.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>The vector to compare.</source>
          <target state="translated">Vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is a <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure and, if it is, whether it has the same <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values as this vector.</source>
          <target state="translated">Détermine si le <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> spécifié est une structure <ph id="ph2">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> et, si c'est le cas, s'il a les mêmes valeurs <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> que ce vecteur.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> and has the same <ph id="ph4">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values as this vector; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="o" /&gt;</ph> est un <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> et a les mêmes valeurs <ph id="ph4">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph5">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> que ce vecteur ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">D’un vecteur <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> décrit les propriétés à l’aide de <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">Étant donné que la valeur d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> des structures qui sont logiquement égales peuvent échouer.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Object)">
          <source>The following example shows how to use this method to check whether a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> and an <ph id="ph2">&lt;xref:System.Object&gt;</ph> are equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour vérifier si un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> et <ph id="ph2">&lt;xref:System.Object&gt;</ph> sont égales.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>The vector to compare with this vector.</source>
          <target state="translated">Vecteur à comparer à ce vecteur.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>Compares two vectors for equality.</source>
          <target state="translated">Compare l'égalité de deux vecteurs.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has the same <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values as this vector; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> a les mêmes valeurs <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> que ce vecteur ; sinon, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">D’un vecteur <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> décrit les propriétés à l’aide de <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">Étant donné que la valeur d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> des structures qui sont logiquement égales peuvent échouer.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector)">
          <source>The following example shows how to use this method to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour vérifier si deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures sont égales.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to compare.</source>
          <target state="translated">Premier vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to compare.</source>
          <target state="translated">Deuxième vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>Compares the two specified vectors for equality.</source>
          <target state="translated">Compare l'égalité de deux vecteurs spécifiés.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if t he <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> components of <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> are equal; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les composants <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> sont égaux ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">D’un vecteur <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> décrit les propriétés à l’aide de <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">Étant donné que la valeur d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <ph id="ph2">&lt;xref:System.Double&gt;</ph> des structures qui sont logiquement égales peuvent échouer.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour vérifier si deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures sont égales.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.GetHashCode">
          <source>Returns the hash code for this vector.</source>
          <target state="translated">Retourne le code de hachage pour ce vecteur.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.GetHashCode">
          <source>The hash code for this instance.</source>
          <target state="translated">Code de hachage de cette instance.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.GetHashCode">
          <source>The following example shows how to get the hash code of a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment obtenir le code de hachage d’un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.Length">
          <source>Gets the length of this vector.</source>
          <target state="translated">Obtient la longueur de ce vecteur.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Length">
          <source>The length of this vector.</source>
          <target state="translated">Longueur de ce vecteur.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Length">
          <source>The length of a vector is sometimes referred to as the magnitude.</source>
          <target state="translated">La longueur d’un vecteur est parfois appelée la grandeur.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Length">
          <source>The following example shows how use this property to get the length of a vector.</source>
          <target state="translated">L’exemple suivant montre comment cette propriété permet d’obtenir la longueur d’un vecteur.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.LengthSquared">
          <source>Gets the square of the length of this vector.</source>
          <target state="translated">Obtient le carré de la longueur de ce vecteur.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.LengthSquared">
          <source>The square of the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Length" /&gt;</ph> of this vector.</source>
          <target state="translated">Carré du <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Length" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.LengthSquared">
          <source>The length of a vector is sometimes referred to as its magnitude.</source>
          <target state="translated">La longueur d’un vecteur est parfois appelée sa grandeur.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.LengthSquared">
          <source>The following example shows how to use this property to get the square of the length of a vector.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette propriété pour obtenir le carré de la longueur d’un vecteur.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Multiplies the specified vector by the specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> and returns the result as a <ph id="ph4">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> or <ph id="ph5">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Multiplie le vecteur spécifié par le <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> spécifié et retourne le résultat sous forme de <ph id="ph4">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> ou <ph id="ph5">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The scalar to multiply.</source>
          <target state="translated">Scalaire à multiplier.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The vector to multiply.</source>
          <target state="translated">Vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>Multiplies the specified scalar by the specified vector and returns the resulting <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Multiplie la scalaire spécifiée par le vecteur indiqué et retourne le <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> résultant.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="scalar" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          <target state="translated">Résultat de la multiplication de <ph id="ph1">&lt;paramref name="scalar" /&gt;</ph> par <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
          <source>The following example shows how to use this method to multiply a scalar by a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour multiplier un scalaire par un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The vector to multiply.</source>
          <target state="translated">Vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The scalar to multiply.</source>
          <target state="translated">Scalaire à multiplier.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>Multiplies the specified vector by the specified scalar and returns the resulting <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Multiplie le vecteur spécifié par la scalaire indiquée et retourne le <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> résultant.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> and <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          <target state="translated">Résultat de la multiplication de <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> par <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this method to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a scalar.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour multiplier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> par un scalaire.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The vector structure to transform.</source>
          <target state="translated">Structure vectorielle à transformer.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The transformation to apply to <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Transformation à appliquer à <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>Transforms the coordinate space of the specified vector using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>.</source>
          <target state="translated">Transforme l'espace de coordonnées du vecteur spécifié à l'aide du <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The result of transforming <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>.</source>
          <target state="translated">Résultat de la transformation de <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> par <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The following example shows how to use this method to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour multiplier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> par un <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to multiply.</source>
          <target state="translated">Premier vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector structure to multiply.</source>
          <target state="translated">Deuxième structure vectorielle à multiplier.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the dot product of the two specified vectors and returns the result as a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Calcule le produit scalaire des deux vecteurs spécifiés et retourne le résultat sous forme de <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> containing the scalar dot product of <ph id="ph2">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="vector2" /&gt;</ph>, which is calculated using the following formula:</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le produit scalaire de <ph id="ph2">&lt;paramref name="vector1" /&gt;</ph> et de <ph id="ph3">&lt;paramref name="vector2" /&gt;</ph>, qui est calculé à l'aide de la formule suivante :</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source><bpt id="p1">&lt;c&gt;</bpt>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> by a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour multiplier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> par un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Negate">
          <source>Negates this vector.</source>
          <target state="translated">Nie ce vecteur.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Negate">
          <source>The vector has the same magnitude as before, but its direction is now opposite.</source>
          <target state="translated">Le vecteur conserve la même grandeur, mais avec une direction opposée.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Negate">
          <source>The following example shows how to use this method to negate a vector.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour nier un vecteur.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Normalize">
          <source>Normalizes this vector.</source>
          <target state="translated">Normalise ce vecteur.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>A normalized vector maintains its direction but its <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph> becomes 1.</source>
          <target state="translated">Un vecteur normalisé conserve sa direction, mais son <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph> devient 1.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>The resulting vector is often called a unit vector.</source>
          <target state="translated">Vecteur résultant est souvent appelé vecteur unitaire.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>A vector is normalized by dividing the vector by its own <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph>.</source>
          <target state="translated">Un vecteur est normalisé en divisant le vecteur par son propre <ph id="ph1">&lt;xref:System.Windows.Vector.Length%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Normalize">
          <source>The following example shows how to use this method to normalize a vector.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour normaliser un vecteur.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Adds a vector to a point or to another vector.</source>
          <target state="translated">Ajoute un vecteur à un point ou à un autre vecteur.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The vector used to translate <bpt id="p1">&lt;c&gt;</bpt>point<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Vecteur utilisé pour convertir <bpt id="p1">&lt;c&gt;</bpt>point<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The point to translate.</source>
          <target state="translated">Point à translater.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>Translates a point by the specified vector and returns the resulting point.</source>
          <target state="translated">Convertit un point par le vecteur spécifié et retourne le point résultant.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The result of translating <ph id="ph1">&lt;paramref name="point" /&gt;</ph> by <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          <target state="translated">Résultat de la conversion de <ph id="ph1">&lt;paramref name="point" /&gt;</ph> par <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
          <source>The following example shows how to use this operator (+) to translate a <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure to a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (+) pour convertir un <ph id="ph1">&lt;xref:System.Windows.Point&gt;</ph> structure un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to add.</source>
          <target state="translated">Premier vecteur à additionner.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to add.</source>
          <target state="translated">Deuxième vecteur à additionner.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>Adds two vectors and returns the result as a vector.</source>
          <target state="translated">Ajoute deux vecteurs et retourne le résultat sous forme de vecteur.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The sum of <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Somme de <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (+) to add two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures and return a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (+) pour ajouter deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures et retournent un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The vector to divide.</source>
          <target state="translated">Vecteur à diviser.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The scalar by which <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept> will be divided.</source>
          <target state="translated">Scalaire par laquelle <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept> sera divisé.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>Divides the specified vector by the specified scalar and returns the resulting vector.</source>
          <target state="translated">Divise le vecteur spécifié par la scalaire indiquée et retourne le vecteur résultant.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          <target state="translated">Résultat de la division de <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> par <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this operator (/) to divide a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a scalar.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (/) pour diviser un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure par un scalaire.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to compare.</source>
          <target state="translated">Premier vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to compare.</source>
          <target state="translated">Deuxième vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>Compares two vectors for equality.</source>
          <target state="translated">Compare l'égalité de deux vecteurs.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> components of <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> are equal; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les composants <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> sont égaux ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">D’un vecteur <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> décrit les propriétés à l’aide de <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">Étant donné que la valeur d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> des structures qui sont logiquement égales peuvent échouer.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (==) to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (==) pour vérifier si deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures sont égales.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Converts a vector into a <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>.</source>
          <target state="translated">Convertit un vecteur en <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> ou en <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>The vector to convert.</source>
          <target state="translated">Vecteur à convertir.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> with the <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of this vector.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> avec les valeurs <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>A point with <ph id="ph1">&lt;see cref="P:System.Windows.Point.X" /&gt;</ph>- and <ph id="ph2">&lt;see cref="P:System.Windows.Point.Y" /&gt;</ph>-coordinate values equal to the <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> offset values of <ph id="ph5">&lt;paramref name="vector" /&gt;</ph>.</source>
          <target state="translated">Point avec des valeurs de coordonnées <ph id="ph1">&lt;see cref="P:System.Windows.Point.X" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Windows.Point.Y" /&gt;</ph> égales aux valeurs offset <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de <ph id="ph5">&lt;paramref name="vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
          <source>The following example shows how to convert a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> into a <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment convertir un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> dans un <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>The vector to convert.</source>
          <target state="translated">Vecteur à convertir.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> from the offsets of this vector.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> à partir des offsets de ce vecteur.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> with a <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> equal to the absolute value of this vector's <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> property and a <ph id="ph4">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> equal to the absolute value of this vector's <ph id="ph5">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> property.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> avec un <ph id="ph2">&lt;see cref="P:System.Windows.Size.Width" /&gt;</ph> égal à la valeur absolue de la propriété <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> de ce vecteur et un <ph id="ph4">&lt;see cref="P:System.Windows.Size.Height" /&gt;</ph> égal à la valeur absolue de la propriété <ph id="ph5">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
          <source>The following example shows how to explicitly convert a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> into a <ph id="ph2">&lt;xref:System.Windows.Size&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment convertir explicitement un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> dans un <ph id="ph2">&lt;xref:System.Windows.Size&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to compare.</source>
          <target state="translated">Premier vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to compare.</source>
          <target state="translated">Deuxième vecteur à comparer.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>Compares two vectors for inequality.</source>
          <target state="translated">Compare l'inégalité de deux vecteurs.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> components of <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> are different; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les composants <ph id="ph2">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de <ph id="ph4">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph5">&lt;paramref name="vector2" /&gt;</ph> sont différents ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>A vector's <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> properties are described using <ph id="ph3">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">D’un vecteur <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> décrit les propriétés à l’aide de <ph id="ph3">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structures that are logically equal might fail.</source>
          <target state="translated">Étant donné que la valeur d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> des structures qui sont logiquement égales peuvent échouer.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (!=) to check whether two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures are not equal.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur ( ! =) pour vérifier si deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures ne sont pas égales.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Multiplies the specified <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> and returns the result.</source>
          <target state="translated">Multiplie le <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> spécifié par le <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> ou <ph id="ph4">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> spécifié et retourne le résultat.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The scalar to multiply.</source>
          <target state="translated">Scalaire à multiplier.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The vector to multiply.</source>
          <target state="translated">Vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>Multiplies the specified scalar by the specified vector and returns the resulting vector.</source>
          <target state="translated">Multiplie la scalaire spécifiée par le vecteur indiqué et retourne le vecteur résultant.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="scalar" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</source>
          <target state="translated">Résultat de la multiplication de <ph id="ph1">&lt;paramref name="scalar" /&gt;</ph> par <ph id="ph2">&lt;paramref name="vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
          <source>The following example shows how to use this operator (*) to multiply a scalar by a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (*) pour multiplier un scalaire par un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The vector to multiply.</source>
          <target state="translated">Vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The scalar to multiply.</source>
          <target state="translated">Scalaire à multiplier.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>Multiplies the specified vector by the specified scalar and returns the resulting vector.</source>
          <target state="translated">Multiplie le vecteur spécifié par la scalaire indiquée et retourne le vecteur résultant.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The result of multiplying <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> and <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</source>
          <target state="translated">Résultat de la multiplication de <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> par <ph id="ph2">&lt;paramref name="scalar" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
          <source>The following example shows how to use this operator (*) to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a scalar.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (*) pour multiplier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure par un scalaire.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The vector to transform.</source>
          <target state="translated">Vecteur à transformer.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The transformation to apply to <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Transformation à appliquer à <bpt id="p1">&lt;c&gt;</bpt>vector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>Transforms the coordinate space of the specified vector using the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph>.</source>
          <target state="translated">Transforme l'espace de coordonnées du vecteur spécifié à l'aide du <ph id="ph1">&lt;see cref="T:System.Windows.Media.Matrix" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The result of transforming <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> by <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>.</source>
          <target state="translated">Résultat de la transformation de <ph id="ph1">&lt;paramref name="vector" /&gt;</ph> par <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
          <source>The following example shows how to use this operator (*) to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (*) pour multiplier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure par un <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The first vector to multiply.</source>
          <target state="translated">Premier vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The second vector to multiply.</source>
          <target state="translated">Deuxième vecteur à multiplier.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>Calculates the dot product of the two specified vector structures and returns the result as a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Calcule le produit scalaire des deux structures vectorielles spécifiées et retourne le résultat sous forme de <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> containing the scalar dot product of <ph id="ph2">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="vector2" /&gt;</ph>, which is calculated using the following formula:</source>
          <target state="translated">Retourne un <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le produit scalaire de <ph id="ph2">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph3">&lt;paramref name="vector2" /&gt;</ph> qui est calculé à l'aide de la formule suivante :</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source><bpt id="p1">&lt;c&gt;</bpt>vector1.X * vector2.X + vector1.Y * vector2.Y<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>vector1.X * vector2.X + vector1.Y * vector2.Y<ept id="p1">&lt;/c&gt;</ept></target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (*) to multiply a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure by a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (*) pour multiplier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure par un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector from which <bpt id="p1">&lt;c&gt;</bpt>vector2<ept id="p1">&lt;/c&gt;</ept> is subtracted.</source>
          <target state="translated">Vecteur duquel <bpt id="p1">&lt;c&gt;</bpt>vector2<ept id="p1">&lt;/c&gt;</ept> est soustrait.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector to subtract from <bpt id="p1">&lt;c&gt;</bpt>vector1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Vecteur à soustraire de <bpt id="p1">&lt;c&gt;</bpt>vector1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>Subtracts one specified vector from another.</source>
          <target state="translated">Soustrait un vecteur spécifié d'un autre.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The difference between <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Différence entre <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this operator (-) to subtract a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure from a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur (-) pour soustraire un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> de la structure d’un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>The vector to negate.</source>
          <target state="translated">Vecteur dont le signe doit être inversé.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>Negates the specified vector.</source>
          <target state="translated">Inverse le signe du vecteur spécifié.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>A vector with <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values opposite of the <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of <ph id="ph5">&lt;paramref name="vector" /&gt;</ph>.</source>
          <target state="translated">Vecteur avec des valeurs <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph>, opposées aux valeurs <ph id="ph3">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph4">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de <ph id="ph5">&lt;paramref name="vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
          <source>The following example shows how to use this negation operator to negate a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cet opérateur de négation pour nier un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>The string representation of the vector.</source>
          <target state="translated">Représentation sous forme de chaîne du vecteur.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>Converts a string representation of a vector into the equivalent <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          <target state="translated">Convertit une représentation sous forme de chaîne d'un vecteur en la structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> équivalente.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>The equivalent <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> équivalente.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Parse(System.String)">
          <source>The following example shows how to use this method to convert a string representation of a vector into a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour convertir une représentation sous forme de chaîne d’un vecteur dans un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector from which <bpt id="p1">&lt;c&gt;</bpt>vector2<ept id="p1">&lt;/c&gt;</ept> is subtracted.</source>
          <target state="translated">Vecteur duquel <bpt id="p1">&lt;c&gt;</bpt>vector2<ept id="p1">&lt;/c&gt;</ept> est soustrait.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The vector to subtract from <bpt id="p1">&lt;c&gt;</bpt>vector1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Vecteur à soustraire de <bpt id="p1">&lt;c&gt;</bpt>vector1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>Subtracts the specified vector from another specified vector.</source>
          <target state="translated">Soustrait le vecteur spécifié d'un autre vecteur spécifié.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The difference between <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</source>
          <target state="translated">Différence entre <ph id="ph1">&lt;paramref name="vector1" /&gt;</ph> et <ph id="ph2">&lt;paramref name="vector2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
          <source>The following example shows how to use this method to subtract a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structure from a <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour soustraire un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> de la structure d’un <ph id="ph2">&lt;xref:System.Windows.Vector&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The string specifying the format to use.</source>
          <target state="translated">Chaîne spécifiant le format à utiliser.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default format defined for the type of the <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> pour utiliser le format par défaut défini pour le type de l'implémentation <ph id="ph2">&lt;see cref="T:System.IFormattable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see langword="IFormatProvider" /&gt;</ph> to use to format the value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IFormatProvider" /&gt;</ph> à utiliser pour mettre en forme la valeur.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to obtain the numeric format information from the current locale setting of the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Ce membre prend en charge l’infrastructure <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> et n’est pas destiné à être directement utilisé à partir de votre code.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">Pour obtenir une description de ce membre, consultez <ph id="ph1">&lt;see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string containing the value of the current instance in the specified format.</source>
          <target state="translated">Chaîne contenant la valeur de l'instance actuelle au format spécifié.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="T:System.Windows.Vector">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          <target state="translated">Retourne la représentation sous forme de chaîne de cette structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure.</source>
          <target state="translated">Retourne la représentation sous forme de chaîne de cette structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString">
          <source>A string that represents the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of this <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui représente les valeurs <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de ce <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Vector.ToString">
          <source>The following example shows how to use this method to get a string representation of a <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour obtenir une représentation sous forme de chaîne d’un <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString(System.IFormatProvider)">
          <source>The culture-specific formatting information.</source>
          <target state="translated">Informations de mise en forme propres à la culture.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString(System.IFormatProvider)">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> structure with the specified formatting information.</source>
          <target state="translated">Retourne la représentation sous forme de chaîne de cette structure <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> avec les informations de mise en forme spécifiées.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Vector.ToString(System.IFormatProvider)">
          <source>A string that represents the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> values of this <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui représente les valeurs <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de ce <ph id="ph3">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.X">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> component of this vector.</source>
          <target state="translated">Obtient ou définit le composant <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.X">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> component of this vector.</source>
          <target state="translated">Composant <ph id="ph1">&lt;see cref="P:System.Windows.Vector.X" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.X">
          <source>The default value is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.X">
          <source>The following example shows how to check two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures for equality.</source>
          <target state="translated">L’exemple suivant montre comment vérifier deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures sont égales.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Windows.Vector.Y">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> component of this vector.</source>
          <target state="translated">Obtient ou définit le composant <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Y">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> component of this vector.</source>
          <target state="translated">Composant <ph id="ph1">&lt;see cref="P:System.Windows.Vector.Y" /&gt;</ph> de ce vecteur.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Y">
          <source>The default value is 0.</source>
          <target state="translated">La valeur par défaut est 0.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Vector.Y">
          <source>The following example shows how to check two <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures for equality.</source>
          <target state="translated">L’exemple suivant montre comment vérifier deux <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> structures sont égales.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>