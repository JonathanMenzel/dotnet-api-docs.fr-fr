<Type Name="AttachedPropertyBrowsableForChildrenAttribute" FullName="System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6652212075e681ea125aba0f03a662ff2e7735a" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52736045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttachedPropertyBrowsableForChildrenAttribute : System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttachedPropertyBrowsableForChildrenAttribute extends System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttachedPropertyBrowsableForChildrenAttribute&#xA;Inherits AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachedPropertyBrowsableForChildrenAttribute sealed : System::Windows::AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="F#" Value="type AttachedPropertyBrowsableForChildrenAttribute = class&#xA;    inherit AttachedPropertyBrowsableAttribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.AttachedPropertyBrowsableAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5e14c-101">Indique qu’une propriété jointe possède une portée pouvant être explorée qui s’étend aux éléments enfants dans l’arborescence logique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e14c-101">Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e14c-102">La signification du terme `browsable` tel qu’utilisé dans les descriptions de cet [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] est analogue à la description donnée pour <xref:System.ComponentModel.BrowsableAttribute>, mais l’état navigable d’une propriété jointe est particulièrement utile pour les informations de propriété pour [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], car une propriété jointe est principalement un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept.</span><span class="sxs-lookup"><span data-stu-id="5e14c-102">The meaning of the term `browsable` as used in descriptions for this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is analogous to the descriptions given for <xref:System.ComponentModel.BrowsableAttribute>, but the browsable state for an attached property is particularly relevant to property information for [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], because an attached property is primarily a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept.</span></span>  
  
 <span data-ttu-id="5e14c-103">Lorsque cela [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] est appliqué à l’accesseur get pour une propriété jointe, cela [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] indique qu’une propriété jointe est consultable lorsque le propriétaire de la propriété jointe est un élément parent des autres éléments.</span><span class="sxs-lookup"><span data-stu-id="5e14c-103">When this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied to the get accessor for an attached property, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</span></span>  
  
 <span data-ttu-id="5e14c-104">Lorsqu’il est interprété par un concepteur qu’utilise les informations de descripteur de type, le concepteur doit ajouter cette propriété en tant que propriété consultable pour tous les éléments enfants dans l’arborescence logique, en fonction de l’élément parent avec ce [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] appliqué.</span><span class="sxs-lookup"><span data-stu-id="5e14c-104">When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] applied.</span></span>  
  
 <span data-ttu-id="5e14c-105">En règle générale, l’état navigable correspond à la fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="5e14c-105">Generally, the browsable state parallels functionality.</span></span> <span data-ttu-id="5e14c-106">Par exemple, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> est désigné consultable sur les éléments qui sont des éléments enfants d’un <xref:System.Windows.Controls.Canvas>, car <xref:System.Windows.Controls.Canvas> inclut le code pour vérifier les valeurs de n’importe quel jeu de <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> sur les éléments enfants.</span><span class="sxs-lookup"><span data-stu-id="5e14c-106">For example, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> is designated browsable on elements that are child elements of a <xref:System.Windows.Controls.Canvas>, because <xref:System.Windows.Controls.Canvas> includes code for checking any set values of <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> on child elements.</span></span>  
  
 <span data-ttu-id="5e14c-107">Cela [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] prend en charge deux types de modes de détection d’arborescence pour les positions de l’élément parent : un mode superficiel et un mode profond.</span><span class="sxs-lookup"><span data-stu-id="5e14c-107">This  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</span></span> <span data-ttu-id="5e14c-108">Le mode superficiels, ce qui est le mode par défaut pour une application <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], nécessite que l’élément parent immédiat soit le type de propriétaire de la propriété afin que la propriété jointe soit consultable.</span><span class="sxs-lookup"><span data-stu-id="5e14c-108">The shallow mode, which is the default mode for an applied <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</span></span> <span data-ttu-id="5e14c-109">Le mode profond est déclaré en appliquant l’attribut avec <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> comme `true`.</span><span class="sxs-lookup"><span data-stu-id="5e14c-109">The deep mode is declared by applying the attribute with <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `true`.</span></span> <span data-ttu-id="5e14c-110">Le mode profond est moins restrictif car elle ne nécessite que le type de propriétaire être quelque part dans la direction de l’ancêtre de l’arborescence logique, et par conséquent la propriété jointe est consultable sur tous les éléments enfants, les éléments enfants pas simplement immédiats.</span><span class="sxs-lookup"><span data-stu-id="5e14c-110">The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree, and therefore the attached property is browsable on all child elements, not just immediate child elements.</span></span> <span data-ttu-id="5e14c-111">Le mode profond est appliqué pour les utilisations de la propriété jointe où les éléments intermédiaires dans l’arborescence logique ne doivent pas être déclarés en tant que l’élément parent true.</span><span class="sxs-lookup"><span data-stu-id="5e14c-111">The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</span></span> <span data-ttu-id="5e14c-112">Collections implicites (par exemple, le <xref:System.Windows.Controls.UIElementCollection> qui est implicite dans le <xref:System.Windows.Controls.Panel.Children%2A> d’un <xref:System.Windows.Controls.Panel>) ne sont pas considérés comme des éléments parents à des fins de façon cela [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] déclare le mode de détection d’arborescence.</span><span class="sxs-lookup"><span data-stu-id="5e14c-112">Implicit collections (for example, the <xref:System.Windows.Controls.UIElementCollection> that is implicit in the <xref:System.Windows.Controls.Panel.Children%2A> of a <xref:System.Windows.Controls.Panel>) are not considered to be parent elements for purposes of how this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declares the tree detection mode.</span></span>  
  
 <span data-ttu-id="5e14c-113">Cela [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] ne doit être appliquée sur l’accesseur get de définitions de propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="5e14c-113">This [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] should only be applied on the get accessor of attached property definitions.</span></span> <span data-ttu-id="5e14c-114">N’appliquez pas ce [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] à l’accesseur set.</span><span class="sxs-lookup"><span data-stu-id="5e14c-114">Do not apply this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] to the set accessor.</span></span> <span data-ttu-id="5e14c-115">Bien qu’intuitivement que ce soit l’opération set qui peut être explorée pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sur les éléments enfants, il est la présence et les caractéristiques de l’accesseur get sur l’élément parent qui contrôle le comportement true.</span><span class="sxs-lookup"><span data-stu-id="5e14c-115">Although intuitively it is the set operation that is being made browsable for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</span></span>  
  
 <span data-ttu-id="5e14c-116">Si une propriété jointe est consultable sur un élément enfant n’est pas une garantie absolue que la valeur de propriété jointe est vraiment traitée par l’élément parent d’une certaine façon.</span><span class="sxs-lookup"><span data-stu-id="5e14c-116">Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</span></span> <span data-ttu-id="5e14c-117">En outre, le <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> valeur n’est pas une garantie absolue que l’étendue de traitement ou qu’il ne s’étend pas au-delà de l’élément parent immédiat.</span><span class="sxs-lookup"><span data-stu-id="5e14c-117">Also, the <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</span></span> <span data-ttu-id="5e14c-118">Tout ceci est spécifique à l’implémentation.</span><span class="sxs-lookup"><span data-stu-id="5e14c-118">All this is implementation specific.</span></span> <span data-ttu-id="5e14c-119">Toutefois, cela [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] pour les rapports de l’état navigable est le meilleur mécanisme disponible pour signaler les informations sur l’utilisation et les informations fonctionnelles pour une propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="5e14c-119">However, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</span></span> <span data-ttu-id="5e14c-120">Par conséquent, vous pouvez supposer généralement que l’état navigable d’une propriété jointe est analogue au comportement de la façon dont une valeur de propriété jointe sur un élément enfant est traitée ou interprétée par l’élément parent pertinent dans votre code d’application.</span><span class="sxs-lookup"><span data-stu-id="5e14c-120">Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</span></span>  
  
 <span data-ttu-id="5e14c-121">Pour obtenir des informations générales sur la déclaration des propriétés attachées, consultez [vue d’ensemble des propriétés jointes](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e14c-121">For general information on declaring attached properties, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
<a name="xamlTextUsage_AttachedPropertyBrowsableForChildrenAttribute"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="5e14c-122">Utilisation de texte XAML</span><span class="sxs-lookup"><span data-stu-id="5e14c-122">XAML Text Usage</span></span>  
 <span data-ttu-id="5e14c-123">Membres de ce type ne sont généralement pas utilisés dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e14c-123">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Windows.Markup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttachedPropertyBrowsableForChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttachedPropertyBrowsableForChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e14c-124">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-124">Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e14c-125">La valeur par défaut de <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> est `false`.</span><span class="sxs-lookup"><span data-stu-id="5e14c-125">The default for <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool&#xA;override this.Equals : obj -&gt; bool" Usage="attachedPropertyBrowsableForChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5e14c-126">
            <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> à comparer à l'objet <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-126">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e14c-127">Détermine si le [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> en cours est identique à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-127">Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e14c-128">
            <see langword="true" /> si le <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> spécifié est égal au <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> actuel ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-128">
              <see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e14c-129">Cette implémentation prend en charge l’égalité des valeurs de la valeur définissable possible exposée par ce [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e14c-129">This implementation supports value equality of the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int&#xA;override this.GetHashCode : unit -&gt; int" Usage="attachedPropertyBrowsableForChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e14c-130">Retourne le code de hachage pour ce <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-130">Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e14c-131">Valeur d'entier 32 bits non signé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-131">An unsigned 32-bit integer value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e14c-132">Cette implémentation prend en charge deux valeurs de hachage possibles selon la valeur définissable possible exposée par ce [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e14c-132">This implementation supports two possible hash values based on the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDescendants">
      <MemberSignature Language="C#" Value="public bool IncludeDescendants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDescendants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDescendants As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDescendants { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeDescendants : bool with get, set" Usage="System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e14c-133">Obtient ou définit une valeur qui déclare s’il faut utiliser le mode profond pour la détection d’éléments parents sur la propriété jointe où cet [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] est appliqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-133">Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e14c-134">
            <see langword="true" /> si la propriété jointe est consultable pour tous les éléments enfants dans l’arborescence logique de l’élément parent qui possède la propriété jointe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-134">
              <see langword="true" /> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</span>
          </span>
          <span data-ttu-id="5e14c-135">
            <see langword="false" /> si la propriété jointe est consultable uniquement pour les éléments enfants immédiats d’un élément parent qui possède la propriété jointe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-135">
              <see langword="false" /> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</span>
          </span>
          <span data-ttu-id="5e14c-136">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e14c-136">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e14c-137">La plupart des propriétés attachées définies par [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] qui s’appliquent <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> le faire avec la valeur par défaut de <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> comme `false`.</span><span class="sxs-lookup"><span data-stu-id="5e14c-137">Most of the attached properties defined by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that apply <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> do so with the default of <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `false`.</span></span>  
  
<a name="xamlTextUsage_IncludeDescendants"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="5e14c-138">Utilisation de texte XAML</span><span class="sxs-lookup"><span data-stu-id="5e14c-138">XAML Text Usage</span></span>  
 <span data-ttu-id="5e14c-139">Membres de ce type ne sont généralement pas utilisés dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e14c-139">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>