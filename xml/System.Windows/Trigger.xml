<Type Name="Trigger" FullName="System.Windows.Trigger">
  <TypeSignature Language="C#" Value="public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Trigger extends System.Windows.TriggerBase implements class System.ComponentModel.ISupportInitialize, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Trigger" />
  <TypeSignature Language="VB.NET" Value="Public Class Trigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trigger : System::Windows::TriggerBase, System::ComponentModel::ISupportInitialize, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="305f2-101">Représente un déclencheur qui applique des valeurs de propriété ou effectue des actions de manière conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="305f2-101">Represents a trigger that applies property values or performs actions conditionally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="305f2-102"> définit les propriétés qui correspondent aux actions de l’utilisateur final, tels que les <xref:System.Windows.UIElement.IsMouseOver%2A> propriété a la valeur `true` lorsque l’utilisateur place le curseur sur un <xref:System.Windows.UIElement> ou correspondant <xref:System.Windows.ContentElement.IsMouseOver%2A> propriété d’un <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="305f2-102"> defines properties that correspond to end-user actions, such as the <xref:System.Windows.UIElement.IsMouseOver%2A> property that is set to `true` when the user hovers the cursor over a <xref:System.Windows.UIElement> or the corresponding <xref:System.Windows.ContentElement.IsMouseOver%2A> property of a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="305f2-103">Qui représente les actions de l’utilisateur final dans les valeurs de propriété, ainsi que les <xref:System.Windows.Trigger> permet de l’élément, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styles pour modifier les valeurs de propriété à partir de ces actions de l’utilisateur final, à partir de dans le balisage.</span><span class="sxs-lookup"><span data-stu-id="305f2-103">Representing end-user actions in property values, along with the <xref:System.Windows.Trigger> element, allows [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styles to change property values based on those end-user actions, all from within markup.</span></span>  
  
 <span data-ttu-id="305f2-104">Les propriétés modifiées par les déclencheurs sont automatiquement réinitialisées à leur valeur précédente lorsque la condition de déclenchement n’est plus remplie.</span><span class="sxs-lookup"><span data-stu-id="305f2-104">The properties changed by triggers are automatically reset to their previous value when the triggered condition is no longer satisfied.</span></span> <span data-ttu-id="305f2-105">Les déclencheurs sont optimisés pour les états transitoires qui sont supposé changer et l’état de retour d’origine, tels que <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> sur <xref:System.Windows.Controls.Button> et <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> sur <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="305f2-105">Triggers are optimized for transient states which are expected to change and return to original state, such as <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> on <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> on <xref:System.Windows.Controls.ListBoxItem>.</span></span> <span data-ttu-id="305f2-106">Le <xref:System.Windows.Trigger.Property%2A> d’intérêt doit être une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="305f2-106">The <xref:System.Windows.Trigger.Property%2A> of interest must be a dependency property.</span></span>  
  
 <span data-ttu-id="305f2-107">Notez que vous devez spécifier à la fois le <xref:System.Windows.Trigger.Property%2A> et <xref:System.Windows.Trigger.Value%2A> propriétés sur un <xref:System.Windows.Trigger> pour le déclencheur soit explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-107">Note that you must specify both the <xref:System.Windows.Trigger.Property%2A> and <xref:System.Windows.Trigger.Value%2A> properties on a <xref:System.Windows.Trigger> for the trigger to be meaningful.</span></span> <span data-ttu-id="305f2-108">Si un ou les deux propriétés ne sont pas définies, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="305f2-108">If one or both of the properties are not set, an exception is thrown.</span></span>  
  
 <span data-ttu-id="305f2-109">Le <xref:System.Windows.Trigger.Setters%2A> propriété d’un <xref:System.Windows.Trigger> objet composé uniquement de <xref:System.Windows.Setter> objets.</span><span class="sxs-lookup"><span data-stu-id="305f2-109">The <xref:System.Windows.Trigger.Setters%2A> property of a <xref:System.Windows.Trigger> object can only consist of <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="305f2-110">Ajout d’un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.Trigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour la <xref:System.Windows.Trigger> objet.</span><span class="sxs-lookup"><span data-stu-id="305f2-110">Adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object.</span></span> <span data-ttu-id="305f2-111"><xref:System.Windows.EventSetter> objets ne sont pas pris en charge ; uniquement <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> prend en charge <xref:System.Windows.EventSetter> objets.</span><span class="sxs-lookup"><span data-stu-id="305f2-111"><xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supports <xref:System.Windows.EventSetter> objects.</span></span>  
  
 <span data-ttu-id="305f2-112">Il existe des autres types de déclencheurs.</span><span class="sxs-lookup"><span data-stu-id="305f2-112">There are other types of triggers.</span></span> <span data-ttu-id="305f2-113"><xref:System.Windows.MultiTrigger> vous permet d’appliquer les modifications en fonction de l’état de plusieurs propriétés.</span><span class="sxs-lookup"><span data-stu-id="305f2-113"><xref:System.Windows.MultiTrigger> allows you to apply changes based on the state of multiple properties.</span></span> <span data-ttu-id="305f2-114"><xref:System.Windows.EventTrigger> vous permet d’appliquer des modifications lorsqu’un événement se produit.</span><span class="sxs-lookup"><span data-stu-id="305f2-114"><xref:System.Windows.EventTrigger> allows you to apply changes when an event occurs.</span></span> <span data-ttu-id="305f2-115"><xref:System.Windows.DataTrigger> et <xref:System.Windows.MultiDataTrigger> liés aux données des propriétés.</span><span class="sxs-lookup"><span data-stu-id="305f2-115"><xref:System.Windows.DataTrigger> and <xref:System.Windows.MultiDataTrigger> are for data-bound properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305f2-116">L’exemple suivant illustre un jeu nommé <xref:System.Windows.Style> disponibles pour <xref:System.Windows.Controls.Button> contrôles.</span><span class="sxs-lookup"><span data-stu-id="305f2-116">The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls.</span></span> <span data-ttu-id="305f2-117">Le <xref:System.Windows.Style> définit un <xref:System.Windows.Trigger> élément modifie le <xref:System.Windows.Controls.Control.Foreground%2A> propriété d’un bouton lorsque le <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="305f2-117">The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Trigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Trigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="305f2-118">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Trigger" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-118">Initializes a new instance of the <see cref="T:System.Windows.Trigger" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305f2-119">Obtient ou définit la propriété qui retourne la valeur comparée avec la propriété <see cref="P:System.Windows.Trigger.Value" /> du déclencheur.</span><span class="sxs-lookup"><span data-stu-id="305f2-119">Gets or sets the property that returns the value that is compared with the <see cref="P:System.Windows.Trigger.Value" /> property of the trigger.</span></span> <span data-ttu-id="305f2-120">La comparaison est un contrôle de l'égalité de la référence.</span><span class="sxs-lookup"><span data-stu-id="305f2-120">The comparison is a reference equality check.</span></span></summary>
        <value><span data-ttu-id="305f2-121">Un <see cref="T:System.Windows.DependencyProperty" /> qui retourne la valeur de propriété de l'élément.</span><span class="sxs-lookup"><span data-stu-id="305f2-121">A <see cref="T:System.Windows.DependencyProperty" /> that returns the property value of the element.</span></span> <span data-ttu-id="305f2-122">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-122">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-123">La valeur retournée par cette propriété est comparée à la valeur spécifiée par la <xref:System.Windows.Trigger.Value%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="305f2-123">The value returned by this property is compared with the value specified by the <xref:System.Windows.Trigger.Value%2A> property.</span></span> <span data-ttu-id="305f2-124">La comparaison est effectuée est un contrôle de l’égalité de référence.</span><span class="sxs-lookup"><span data-stu-id="305f2-124">The comparison that is performed is a reference equality check.</span></span> <span data-ttu-id="305f2-125">Si les deux valeurs correspondent, puis associé <xref:System.Windows.Setter>applique les valeurs de propriété spécifié.</span><span class="sxs-lookup"><span data-stu-id="305f2-125">If the two values match, then the associated <xref:System.Windows.Setter>s apply the specified property values.</span></span>  
  
 <span data-ttu-id="305f2-126">Utilisez le `ClassName.PropertyName` syntaxe qualifier la propriété que vous spécifiez si le style ou le modèle qui contient ce déclencheur n’a pas la `TargetType` jeu de propriétés.</span><span class="sxs-lookup"><span data-stu-id="305f2-126">Use the `ClassName.PropertyName` syntax to qualify the property you are specifying if the style or template that contains this trigger does not have the `TargetType` property set.</span></span>  
  
 <span data-ttu-id="305f2-127">Notez que vous devez spécifier à la fois le <xref:System.Windows.Trigger.Property%2A> et <xref:System.Windows.Trigger.Value%2A> propriétés sur un <xref:System.Windows.Trigger> pour le déclencheur soit explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-127">Note that you must specify both the <xref:System.Windows.Trigger.Property%2A> and <xref:System.Windows.Trigger.Value%2A> properties on a <xref:System.Windows.Trigger> for the trigger to be meaningful.</span></span> <span data-ttu-id="305f2-128">Si un ou les deux propriétés ne sont pas définies, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="305f2-128">If one or both of the properties are not set, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305f2-129">L’exemple suivant contient deux déclencheurs.</span><span class="sxs-lookup"><span data-stu-id="305f2-129">The following example contains two triggers.</span></span> <span data-ttu-id="305f2-130">Les modifications du premier la <xref:System.Windows.Controls.Control.Background%2A> propriété d’un <xref:System.Windows.Controls.Button> lors de la <xref:System.Windows.UIElement.IsMouseOver%2A> propriété est **true**.</span><span class="sxs-lookup"><span data-stu-id="305f2-130">The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**.</span></span> <span data-ttu-id="305f2-131">Le deuxième modifie la <xref:System.Windows.Controls.Control.Foreground%2A> propriété d’un bouton lorsque le <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> propriété est **true**.</span><span class="sxs-lookup"><span data-stu-id="305f2-131">The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.</span></span> <span data-ttu-id="305f2-132">Le <xref:System.Windows.Style.TargetType%2A> de la <xref:System.Windows.Style> a la valeur <xref:System.Windows.Controls.Button> et par conséquent, il est inutile de qualifier le `Property` propriétés portant le nom de classe.</span><span class="sxs-lookup"><span data-stu-id="305f2-132">The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="305f2-133">Un <see cref="T:System.Windows.Style" /> ne peut pas contenir un <see cref="T:System.Windows.Trigger" /> qui fait référence à la propriété <see cref="T:System.Windows.Style" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-133">A <see cref="T:System.Windows.Style" /> cannot contain a <see cref="T:System.Windows.Trigger" /> that refers to the <see cref="T:System.Windows.Style" /> property.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="305f2-134">Après que l'utilisation d'une <see cref="T:System.Windows.Trigger" /> ait été lancée, cette condition ne peut pas être modifiée.</span><span class="sxs-lookup"><span data-stu-id="305f2-134">After a <see cref="T:System.Windows.Trigger" /> is in use, it cannot be modified.</span></span></exception>
        <altmember cref="P:System.Windows.Trigger.Value" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject"><span data-ttu-id="305f2-135">Objet où le convertisseur de type définit la valeur.</span><span class="sxs-lookup"><span data-stu-id="305f2-135">The object where the type converter sets the value.</span></span></param>
        <param name="eventArgs"><span data-ttu-id="305f2-136">Données pertinentes pour le traitement du convertisseur de type.</span><span class="sxs-lookup"><span data-stu-id="305f2-136">Data that is relevant for type converter processing.</span></span></param>
        <summary><span data-ttu-id="305f2-137">Gère des cas où un convertisseur de type fournit une valeur pour une propriété d'un objet <see cref="T:System.Windows.Trigger" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-137">Handles cases where a type converter provides a value for a property of a <see cref="T:System.Windows.Trigger" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-138">C’est la méthode référencée par une application <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> attribut au niveau de la classe, ce qui signifie que cette méthode traite toutes les tentatives de définir des valeurs de <xref:System.Windows.Trigger> avec un convertisseur de type.</span><span class="sxs-lookup"><span data-stu-id="305f2-138">This is the method referenced by an applied <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> attribute at the class level, which means that this method processes all attempts to set values of <xref:System.Windows.Trigger> with a type converter.</span></span> <span data-ttu-id="305f2-139">Vous n’en général, appelez pas cette méthode directement.</span><span class="sxs-lookup"><span data-stu-id="305f2-139">You do not typically call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305f2-140">Obtient une collection d'objets <see cref="T:System.Windows.Setter" />, qui décrivent les valeurs de propriété à appliquer lorsque la condition spécifiée a été rencontrée.</span><span class="sxs-lookup"><span data-stu-id="305f2-140">Gets a collection of <see cref="T:System.Windows.Setter" /> objects, which describe the property values to apply when the specified condition has been met.</span></span></summary>
        <value><span data-ttu-id="305f2-141">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="305f2-142">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="305f2-142">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a><span data-ttu-id="305f2-143">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="305f2-143">XAML Values</span></span>  
 <span data-ttu-id="305f2-144">*ZeroOrMoreSetters*</span><span class="sxs-lookup"><span data-stu-id="305f2-144">*ZeroOrMoreSetters*</span></span>  
 <span data-ttu-id="305f2-145">Zéro ou plusieurs <xref:System.Windows.Setter> objets.</span><span class="sxs-lookup"><span data-stu-id="305f2-145">Zero or more <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="305f2-146">Cela ne prend pas en charge <xref:System.Windows.EventSetter> objet.</span><span class="sxs-lookup"><span data-stu-id="305f2-146">This does not support <xref:System.Windows.EventSetter> object.</span></span>  
  
 <span data-ttu-id="305f2-147">A <xref:System.Windows.Trigger> vous permet d’utiliser <xref:System.Windows.Setter>pour appliquer la propriété valeurs lorsque l’élément rencontre une condition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="305f2-147">A <xref:System.Windows.Trigger> allows you to use <xref:System.Windows.Setter>s to apply property values when the element meets a specified condition.</span></span> <span data-ttu-id="305f2-148">Par exemple, vous souhaiterez modifier la couleur d’arrière-plan d’un élément lorsqu’il est activé.</span><span class="sxs-lookup"><span data-stu-id="305f2-148">For example, you may want to change the background color of an element when it is in focus.</span></span>  
  
 <span data-ttu-id="305f2-149">Si la même propriété est définie plusieurs fois, la dernière valeur de propriété sera appliquée.</span><span class="sxs-lookup"><span data-stu-id="305f2-149">If the same property is set more than once, the last property value will be applied.</span></span>  
  
 <span data-ttu-id="305f2-150">Le <xref:System.Windows.Trigger.Setters%2A> propriété d’un <xref:System.Windows.Trigger> objet composé uniquement de <xref:System.Windows.Setter> objets.</span><span class="sxs-lookup"><span data-stu-id="305f2-150">The <xref:System.Windows.Trigger.Setters%2A> property of a <xref:System.Windows.Trigger> object can only consist of <xref:System.Windows.Setter> objects.</span></span> <span data-ttu-id="305f2-151">Ajout d’un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.Trigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour la <xref:System.Windows.Trigger> objet.</span><span class="sxs-lookup"><span data-stu-id="305f2-151">Adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object.</span></span> <span data-ttu-id="305f2-152"><xref:System.Windows.EventSetter> objets ne sont pas pris en charge ; uniquement <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> prend en charge <xref:System.Windows.EventSetter> objets.</span><span class="sxs-lookup"><span data-stu-id="305f2-152"><xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> supports <xref:System.Windows.EventSetter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305f2-153">Comme indiqué ci-dessus, l’ajout un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.Trigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour la <xref:System.Windows.Trigger> objet.</span><span class="sxs-lookup"><span data-stu-id="305f2-153">As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object.</span></span> <span data-ttu-id="305f2-154">Dans l’exemple suivant, `<Trigger.Setters>` est implicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-154">In the following example, `<Trigger.Setters>` is implicit.</span></span>  
  
 [!code-xaml[PhotoStoreDemoStyled#TriggerSettersRef](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#triggersettersref)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305f2-155">Obtient ou définit le nom de l'objet avec la propriété qui entraîne l'application des méthodes setter associées.</span><span class="sxs-lookup"><span data-stu-id="305f2-155">Gets or sets the name of the object with the property that causes the associated setters to be applied.</span></span></summary>
        <value><span data-ttu-id="305f2-156">La valeur par défaut de la propriété est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-156">The default property is <see langword="null" />.</span></span> <span data-ttu-id="305f2-157">Si la valeur de cette propriété est <see langword="null" />, la propriété <see cref="P:System.Windows.Trigger.Property" /> est alors évaluée par rapport à l'élément sur lequel est appliqué ce style ou ce modèle (le parent mis en forme avec des styles ou le parent basé sur des modèles).</span><span class="sxs-lookup"><span data-stu-id="305f2-157">If this property is <see langword="null" />, then the <see cref="P:System.Windows.Trigger.Property" /> property is evaluated with respect to the element this style or template is being applied to (the styled parent or the templated parent).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-158">Vous pouvez définir cette propriété le nom de n’importe quel élément dans la portée de l’emplacement où la collection de déclencheurs (la collection que ce <xref:System.Windows.Trigger> fait partie) est appliquée.</span><span class="sxs-lookup"><span data-stu-id="305f2-158">You can set this property to the name of any element within the scope of where the trigger collection (the collection that this <xref:System.Windows.Trigger> is part of) is applied.</span></span> <span data-ttu-id="305f2-159">Il s’agit généralement d’un élément nommé qui est dans le modèle qui contient ce <xref:System.Windows.Trigger>.</span><span class="sxs-lookup"><span data-stu-id="305f2-159">This is typically a named element that is within the template that contains this <xref:System.Windows.Trigger>.</span></span>  
  
 <span data-ttu-id="305f2-160">Vous pouvez nommer un objet à l’aide de la [Directive x : Name](~/docs/framework/xaml-services/x-name-directive.md) syntaxe.</span><span class="sxs-lookup"><span data-stu-id="305f2-160">You can name an object using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305f2-161">Un scénario lorsque vous utilisez le <xref:System.Windows.Trigger.SourceName%2A> propriété est lors de la propriété qui vous intéresse n’est pas une propriété du parent basé sur un modèle, comme dans l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="305f2-161">One scenario when you would use the <xref:System.Windows.Trigger.SourceName%2A> property is when the property of interest is not a property of the templated parent, as in the following example:</span></span>  
  
 [!code-xaml[ControlTemplateExamples#TriggerSourceName](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/menu.xaml#triggersourcename)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="305f2-162">Après que l'utilisation d'une <see cref="T:System.Windows.Trigger" /> ait été lancée, cette condition ne peut pas être modifiée.</span><span class="sxs-lookup"><span data-stu-id="305f2-162">After a <see cref="T:System.Windows.Trigger" /> is in use, it cannot be modified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="305f2-163">Signale à l'objet que l'initialisation démarre.</span><span class="sxs-lookup"><span data-stu-id="305f2-163">Signals the object that initialization is starting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-164">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="305f2-165">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Setter> est castée en interface <xref:System.ComponentModel.ISupportInitialize>.</span><span class="sxs-lookup"><span data-stu-id="305f2-165">It can be used only when the <xref:System.Windows.Setter> instance is cast to an <xref:System.ComponentModel.ISupportInitialize> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="305f2-166">Signale à l'objet que l'initialisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="305f2-166">Signals the object that initialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-167">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-167">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="305f2-168">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Setter> est castée en interface <xref:System.ComponentModel.ISupportInitialize>.</span><span class="sxs-lookup"><span data-stu-id="305f2-168">It can be used only when the <xref:System.Windows.Setter> instance is cast to an <xref:System.ComponentModel.ISupportInitialize> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="305f2-169">Objet enfant à ajouter.</span><span class="sxs-lookup"><span data-stu-id="305f2-169">The child object to add.</span></span></param>
        <summary><span data-ttu-id="305f2-170">Ajoute un objet enfant.</span><span class="sxs-lookup"><span data-stu-id="305f2-170">Adds a child object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-171">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-171">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="305f2-172">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Trigger> est castée en interface <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="305f2-172">It can be used only when the <xref:System.Windows.Trigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="305f2-173">Texte à ajouter à l’objet.</span><span class="sxs-lookup"><span data-stu-id="305f2-173">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="305f2-174">Ajoute le contenu textuel d’un nœud à l’objet.</span><span class="sxs-lookup"><span data-stu-id="305f2-174">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-175">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-175">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="305f2-176">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Trigger> est castée en interface <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="305f2-176">It can be used only when the <xref:System.Windows.Trigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Property")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("SourceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305f2-177">Obtient ou définit la valeur à comparer avec la valeur de propriété de l'élément.</span><span class="sxs-lookup"><span data-stu-id="305f2-177">Gets or sets the value to be compared with the property value of the element.</span></span> <span data-ttu-id="305f2-178">La comparaison est un contrôle de l'égalité de la référence.</span><span class="sxs-lookup"><span data-stu-id="305f2-178">The comparison is a reference equality check.</span></span></summary>
        <value><span data-ttu-id="305f2-179">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="305f2-179">The default value is <see langword="null" />.</span></span> <span data-ttu-id="305f2-180">Consultez également la section Exceptions.</span><span class="sxs-lookup"><span data-stu-id="305f2-180">See also the Exceptions section.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305f2-181">Cette valeur est comparée à la valeur de propriété retournée par le <xref:System.Windows.Trigger.Property%2A> propriété de la <xref:System.Windows.Trigger>.</span><span class="sxs-lookup"><span data-stu-id="305f2-181">This value is compared with the property value returned by the <xref:System.Windows.Trigger.Property%2A> property of the <xref:System.Windows.Trigger>.</span></span> <span data-ttu-id="305f2-182">La comparaison est effectuée est un contrôle de qualité de référence.</span><span class="sxs-lookup"><span data-stu-id="305f2-182">The comparison that is performed is a reference quality check.</span></span> <span data-ttu-id="305f2-183">Si les deux valeurs sont identiques, associé <xref:System.Windows.Setter>applique les valeurs de propriété spécifié.</span><span class="sxs-lookup"><span data-stu-id="305f2-183">If the two values are equal, then the associated <xref:System.Windows.Setter>s apply the specified property values.</span></span>  
  
 <span data-ttu-id="305f2-184">Notez que vous devez spécifier à la fois le <xref:System.Windows.Trigger.Property%2A> et <xref:System.Windows.Trigger.Value%2A> propriétés sur un <xref:System.Windows.Trigger> pour le déclencheur soit explicite.</span><span class="sxs-lookup"><span data-stu-id="305f2-184">Note that you must specify both the <xref:System.Windows.Trigger.Property%2A> and <xref:System.Windows.Trigger.Value%2A> properties on a <xref:System.Windows.Trigger> for the trigger to be meaningful.</span></span> <span data-ttu-id="305f2-185">Par conséquent, si un ou les deux propriétés ne sont pas spécifiés, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="305f2-185">Therefore, if one or both of the properties are not specified, then an exception is thrown.</span></span>  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="305f2-186">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="305f2-186">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
   
  
## Examples  
 <span data-ttu-id="305f2-187">L’exemple suivant modifie le <xref:System.Windows.Controls.Control.Foreground%2A> propriété d’un bouton lorsque le <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> propriété **true**.</span><span class="sxs-lookup"><span data-stu-id="305f2-187">The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.</span></span>  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="305f2-188">Les expressions telles que les liaisons ne sont pas prises en charge.</span><span class="sxs-lookup"><span data-stu-id="305f2-188">Expressions such as bindings are not supported.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="305f2-189">Après que l'utilisation d'une <see cref="T:System.Windows.Trigger" /> ait été lancée, cette condition ne peut pas être modifiée.</span><span class="sxs-lookup"><span data-stu-id="305f2-189">After a <see cref="T:System.Windows.Trigger" /> is in use, it cannot be modified.</span></span></exception>
        <altmember cref="P:System.Windows.Trigger.Property" />
        <altmember cref="P:System.Windows.Trigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>