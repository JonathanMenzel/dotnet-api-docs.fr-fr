<Type Name="DataObject" FullName="System.Windows.DataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15d195519d29a03d6b90fdce3b36eee9e28ce8be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30680553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject sealed : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::IDataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fournit une implémentation de base de l'interface <see cref="T:System.Windows.IDataObject" /> qui définit un mécanisme indépendant du format pour transférer des données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple suivant montre comment utiliser cette classe.  
  
 [!code-csharp[dragdrop_dragdropmisccode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[dragdrop_dragdropmisccode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Objet qui représente les données à stocker dans cet objet de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataObject" /> qui contient les données spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un nouvel objet de données et utilise ce constructeur pour initialiser l’objet de données avec une chaîne.  Dans ce cas, un format de données approprié est déterminé automatiquement en fonction du type des données stockées, et la conversion automatique des données stockées est autorisée par défaut.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple)]  
  
 L’exemple suivant est une version condensée de l’exemple précédent.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="data" /> fait référence à un objet <see cref="T:System.Windows.DataObject" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Objet qui représente les données à stocker dans cet objet de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataObject" /> qui contient les données spécifiées et leur format associé ; le format est spécifié par une chaîne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un nouvel objet de données et utilise ce constructeur pour initialiser l’objet de données avec une chaîne et un format de données spécifié.  Dans ce cas, le format de données est spécifié par une chaîne ; la <xref:System.Windows.DataFormats> classe fournit un ensemble de chaînes de type prédéfini. La conversion automatique des données stockées est autorisée par défaut.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 L’exemple suivant est une version condensée de l’exemple précédent.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(Type ^ format, System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" /> qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Données à stocker dans cet objet de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataObject" /> qui contient les données spécifiées et leur format associé ; le format de données est spécifié par un objet <see cref="T:System.Type" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un nouvel objet de données et utilise ce constructeur pour initialiser l’objet de données avec une chaîne et un format de données spécifié.  Dans ce cas, le format de données est spécifié par un <xref:System.Type> paramètre.  La conversion automatique des données stockées est autorisée par défaut.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type)]  
  
 L’exemple suivant est une version condensée de l’exemple précédent.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Données à stocker dans cet objet de données.</param>
        <param name="autoConvert">
          <see langword="true" /> pour permettre la conversion des données dans un autre format lors de la récupération ; <see langword="false" /> pour interdire la conversion des données dans un autre format lors de la récupération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.DataObject" /> qui contient les données spécifiées et leur format associé ; le format est spécifié par une chaîne. Cette surcharge inclut un indicateur <see langword="Boolean" /> pour indiquer si les données peuvent être converties dans un autre format lors de la récupération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un nouvel objet de données et utilise ce constructeur pour initialiser l’objet de données avec une chaîne et un format de données spécifié.  Dans ce cas, le format de données est spécifié par une chaîne ; la <xref:System.Windows.DataFormats> classe fournit un ensemble de chaînes de type prédéfini.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert)]  
  
 L’exemple suivant est une version condensée de l’exemple précédent.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCopyingHandler">
      <MemberSignature Language="C#" Value="public static void AddCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddCopyingHandler (element As DependencyObject, handler As DataObjectCopyingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddCopyingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectCopyingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Objet de dépendance (<see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) auquel ajouter le gestionnaire d’événements.</param>
        <param name="handler">Délégué qui fait référence à la méthode de gestionnaire à ajouter.</param>
        <summary>Ajoute un gestionnaire d’événements <see cref="E:System.Windows.DataObject.Copying" /> à un objet de dépendance spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.DataObject.Copying> événement se produit lorsqu’une opération de copie a terminé convertir le contenu sélectionné dans les données spécifiées de tous les formats a stocké tous les formats de données dans l’objet de données associé et est prêt à placer l’objet de données dans le Presse-papiers du système ou pour commencer une opération de glissement opération.  
  
 Utilisez cet événement pour inspecter ou modifier un objet de données après qu’une opération de copie est terminée et avant d’effectuer les opérations suivantes. L’opération de copie peut être annulée en appelant <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPastingHandler">
      <MemberSignature Language="C#" Value="public static void AddPastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPastingHandler (element As DependencyObject, handler As DataObjectPastingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPastingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectPastingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Objet de dépendance (<see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) auquel ajouter le gestionnaire d’événements.</param>
        <param name="handler">Délégué qui fait référence à la méthode de gestionnaire à ajouter.</param>
        <summary>Ajoute un gestionnaire d’événements <see cref="E:System.Windows.DataObject.Pasting" /> à un objet de dépendance spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cet événement pour inspecter un objet de données avant que les données sont collées et éventuellement pour choisir un autre plan d’action, tels que :  
  
-   **Annulez le collage** -annuler l’opération de collage entière en appelant le <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> (méthode).  
  
-   **Sélectionnez un autre Format** -modifier le format de collage sélectionné en spécifiant une nouvelle valeur pour le <xref:System.Windows.DataObjectPastingEventArgs.FormatToApply%2A> propriété. Le format qui vient d’être sélectionné doit en pris en charge par l’objet de données à coller.  
  
    > [!NOTE]
    >  Si le format de collage est modifié, assurez-vous que la cible de collage prend en charge le format qui vient d’être spécifié.  
  
-   **Insérez un nouveau Format** - si vous déterminez que l’objet de données de collage ne pas prendre en charge le format désiré, mettre à jour l’objet de données pour inclure une version des données au format souhaité. Convertisseurs de données personnalisés sont souvent utilisés dans le cadre de ce processus.  
  
 La modification du contenu d’un objet de données de collage (<xref:System.Windows.DataObjectPastingEventArgs.DataObject%2A>) ne modifie pas les données stockées dans le Presse-papiers système ; de telles modifications seront applique uniquement à l’objet de données associé à la commande Coller associée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void AddSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSettingDataHandler (element As DependencyObject, handler As DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSettingDataHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectSettingDataEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Objet de dépendance (<see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) auquel ajouter le gestionnaire d’événements.</param>
        <param name="handler">Délégué qui fait référence à la méthode de gestionnaire à ajouter.</param>
        <summary>Ajoute un gestionnaire d’événements <see cref="E:System.Windows.DataObject.SettingData" /> à un objet de dépendance spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.DataObject.SettingData> événement se produit dans le cadre d’une commande copier ou glisser, une fois pour chacun des formats de données à ajouter à l’objet de données associé. En règle générale, cet événement est connecté à un contrôle de contenu, tel que <xref:System.Windows.Controls.TextBox>.  
  
 Un gestionnaire pour cet événement peut être utilisé pour empêcher de façon sélective des formats de données indésirables d’être ajouté à l’objet de données, ce qui évite le traitement de conversion de données pour les formats de données redondantes et améliorer les performances globales d’une opération de copie. Pour ignorer un format de données particulier, appelez le <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> (méthode) et spécifiez le format à ignorer dans le <xref:System.Windows.DataObjectSettingDataEventArgs.Format%2A> propriété. Appel de la <xref:System.Windows.DataObjectEventArgs.CancelCommand%2A> méthode pour cet événement ne pas annuler la copie associée ou faites glisser la commande.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsAudio();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interroge un objet de données sur la présence de données au format <see cref="F:System.Windows.DataFormats.WaveAudio" />.</summary>
        <returns>
          <see langword="true" /> si l'objet de données contient des données au format <see cref="F:System.Windows.DataFormats.WaveAudio" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne `true` uniquement si le format de données spécifié existe en mode natif dans l’objet de données ; cette méthode ne vérifie pas la présence de formats de données convertibles automatiquement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interroge un objet de données sur la présence de données au format <see cref="F:System.Windows.DataFormats.FileDrop" />.</summary>
        <returns>
          <see langword="true" /> si l'objet de données contient des données au format <see cref="F:System.Windows.DataFormats.FileDrop" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne `true` uniquement si le format de données spécifié existe en mode natif dans l’objet de données ; cette méthode ne vérifie pas la présence de formats de données convertibles automatiquement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interroge un objet de données sur la présence de données au format <see cref="F:System.Windows.DataFormats.Bitmap" />.</summary>
        <returns>
          <see langword="true" /> si l'objet de données contient des données au format <see cref="F:System.Windows.DataFormats.Bitmap" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne `true` uniquement si le format de données spécifié existe en mode natif dans l’objet de données ; cette méthode ne vérifie pas la présence de formats de données convertibles automatiquement.  
  
 Une image bitmap représente un graphique de l’ordinateur sous forme de tableau de bits dans la mémoire, et ces bits représentant les attributs de chacun des pixels d’une image.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Interroge un objet de données sur la présence de données au format de données texte valide.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interroge un objet de données sur la présence de données au format <see cref="F:System.Windows.DataFormats.UnicodeText" />.</summary>
        <returns>
          <see langword="true" /> si l'objet de données contient des données au format <see cref="F:System.Windows.DataFormats.UnicodeText" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne `true` uniquement si le format de données spécifié existe en mode natif dans l’objet de données ; cette méthode ne vérifie pas la présence de formats de données convertibles automatiquement.  
  
 Le <xref:System.Windows.DataFormats.UnicodeText> format de données désigne 16 bits caractères Unicode encodés, également appelé UTF-16 et USC-2.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText(System::Windows::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Membre de l'énumération <see cref="T:System.Windows.TextDataFormat" /> qui spécifie le format de données texte à interroger.</param>
        <summary>Interroge un objet de données sur la présence de données au format de données texte.</summary>
        <returns>
          <see langword="true" /> si l'objet de données contient des données au format de données texte ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne `true` uniquement si le format de données spécifié existe en mode natif dans l’objet de données ; cette méthode ne vérifie pas la présence de formats de données convertibles automatiquement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> ne spécifie pas un membre valide de <see cref="T:System.Windows.TextDataFormat" />.</exception>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="Copying">
      <MemberSignature Language="C#" Value="see AddCopyingHandler, and RemoveCopyingHandler" />
      <MemberSignature Language="ILAsm" Value="see AddCopyingHandler, and RemoveCopyingHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DataObject.Copying" />
      <MemberSignature Language="VB.NET" Value="see AddCopyingHandler, and RemoveCopyingHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CopyingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CopyingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.CopyingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CopyingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CopyingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie l’événement attaché <see cref="E:System.Windows.DataObject.Copying" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetAudioStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Renvoie un flux qui contient des données au format de données <see cref="F:System.Windows.DataFormats.WaveAudio" />.</summary>
        <returns>Flux qui contient des données au format <see cref="F:System.Windows.DataFormats.WaveAudio" />, ou <see langword="null" /> si les données ne sont pas disponibles dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un flux uniquement si le texte spécifié format existe en mode natif dans l’objet de données ; Cette méthode ne retourne pas de données convertibles automatiquement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne des données dans un format de données spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Retourne des données dans un format spécifié par une chaîne.</summary>
        <returns>Objet qui contient les données au format spécifié, ou <see langword="null" /> si les données ne sont pas disponibles au format spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant utilise cette méthode pour vérifier si un format de données spécifié est disponible (en mode natif ou par conversion automatique) ; Si le format spécifié est disponible, l’exemple récupère les données à l’aide de la <xref:System.Windows.DataObject.GetData%28System.String%29> (méthode).  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat)]  
  
 L’exemple de code suivant utilise la <xref:System.Windows.DataObject.GetDataPresent%28System.String%2CSystem.Boolean%29> méthode vérifier d’abord si un format de données spécifié est disponible en mode natif (les formats de données convertibles automatiquement sont filtrés) ; si le format spécifié est disponible, l’exemple récupère les données à l’aide de la <xref:System.Windows.DataObject.GetData%28System.String%29>(méthode).  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat_Native](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat_native)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat_Native](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat_native)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" /> qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Retourne un objet de données dans un format spécifié par un objet <see cref="T:System.Type" />.</summary>
        <returns>Objet de données avec des données au format spécifié, ou <see langword="null" /> si les données ne sont pas disponibles au format spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" /> pour essayer de convertir automatiquement les données au format spécifié ; <see langword="false" /> pour aucune conversion de format de données.</param>
        <summary>Retourne un objet de données dans un format spécifié, en convertissant de façon facultative les données en format spécifié.</summary>
        <returns>Objet de données avec des données au format spécifié, ou <see langword="null" /> si les données ne sont pas disponibles au format spécifié.  
  
 Si le paramètre <paramref name="autoConvert" /> est <see langword="true" /> et que les données ne peuvent pas être converties au format spécifié, ou si la conversion automatique est désactivée (en appelant <see cref="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" /> avec le paramètre <paramref name="autoConvert" /> ayant la valeur <see langword="false" />), cette méthode retourne <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez <xref:System.Windows.DataObject.GetDataPresent%2A> pour déterminer si un format est disponible dans cet objet de données avant d’appeler <xref:System.Windows.DataObject.GetData%2A>. Appelez <xref:System.Windows.DataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Détermine si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié par une chaîne.</summary>
        <returns>
          <see langword="true" /> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez <xref:System.Windows.DataObject.GetDataPresent%2A> pour déterminer si un format est disponible dans cet objet de données avant d’appeler <xref:System.Windows.DataObject.GetData%2A>. Appelez <xref:System.Windows.DataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
   
  
## Examples  
 L’exemple suivant utilise cette méthode pour interroger la présence d’un format de données particulier par chaîne de descripteur.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_String](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_string)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_String](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_string)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" /> qui spécifie le format de données à vérifier. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Détermine si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié par un objet <see cref="T:System.Type" />.</summary>
        <returns>
          <see langword="true" /> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez <xref:System.Windows.DataObject.GetDataPresent%2A> pour déterminer si un format est disponible dans cet objet de données avant d’appeler <xref:System.Windows.DataObject.GetData%2A>. Appelez <xref:System.Windows.DataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
   
  
## Examples  
 L’exemple suivant utilise cette méthode pour interroger la présence d’un format de données particulier par type.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_type)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_type)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format de données à vérifier. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="false" /> pour vérifier uniquement le format spécifié ; <see langword="true" /> pour vérifier également si les données stockées dans cet objet de données peut être converti au format spécifié.</param>
        <summary>Détermine si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié. Un indicateur <see langword="Boolean" /> indique s'il faut vérifier si les données peuvent être converties au format spécifié si elles ne sont pas disponibles dans ce format.</summary>
        <returns>
          <see langword="true" /> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez <xref:System.Windows.DataObject.GetDataPresent%2A> pour déterminer si un format est disponible dans cet objet de données avant d’appeler <xref:System.Windows.DataObject.GetData%2A>. Appelez <xref:System.Windows.DataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
   
  
## Examples  
 L’exemple suivant utilise cette méthode pour interroger des données par chaîne de descripteur et spécifie comment traiter des formats de données convertibles automatiquement.  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Autoconvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_autoconvert)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Autoconvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_autoconvert)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un ensemble de chaînes qui contient une liste de fichiers effacés.</summary>
        <returns>Ensemble de chaînes, où chaque chaîne spécifie le nom d'un fichier dans la liste de fichiers effacés, ou <see langword="null" /> si les données ne sont pas disponibles dans ce format.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une liste de formats dans laquelle les données de cet objet de données sont stockées ou vers laquelle elles peuvent être converties.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une liste de formats dans laquelle les données de cet objet de données sont stockées ou vers laquelle elles peuvent être converties.</summary>
        <returns>Tableau de chaînes, dont chaque chaîne spécifie le nom d'un format que cet objet de données prend en charge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <xref:System.Windows.DataFormats>.  
  
   
  
## Examples  
 L’exemple suivant utilise cette méthode pour obtenir un tableau de chaînes qui dénote tous les formats de données disponibles dans un objet de données (natif et convertibles automatiquement).  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> pour récupérer tous les formats dans lesquels les données dans cet objet de données sont stockées ou auxquels elles peuvent être converties ; <see langword="false" /> pour récupérer uniquement les formats auxquels les données dans cet objet de données sont stockées.</param>
        <summary>Retourne une liste de formats dans laquelle les données dans cet objet de données sont stockées. Un indicateur <see langword="Boolean" /> indique s'il faut inclure également des formats auxquels les données peuvent être converties automatiquement.</summary>
        <returns>Tableau de chaînes, dont chaque chaîne spécifie le nom d'un format pris en charge par cet objet de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <xref:System.Windows.DataFormats>.  
  
   
  
## Examples  
 L’exemple suivant utilise cette méthode pour obtenir un tableau de chaînes qui désigne uniquement les formats de données disponibles dans un objet de données (données convertibles automatiquement les formats sont filtrés).  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats_NativeOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats_nativeonly)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats_NativeOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats_nativeonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.BitmapSource GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Imaging::BitmapSource ^ GetImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> qui contient des données au format <see cref="F:System.Windows.DataFormats.Bitmap" />.</summary>
        <returns>Objet <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> qui contient des données au format <see cref="F:System.Windows.DataFormats.Bitmap" />, ou <see langword="null" /> si les données ne sont pas disponibles dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un <xref:System.Windows.Media.Imaging.BitmapSource> de l’objet soit lorsque les données sont disponibles en mode natif ou lorsque les données peuvent être converties automatiquement à la <xref:System.Windows.DataFormats.Bitmap> format de données.  
  
 Une image bitmap représente un graphique de l’ordinateur sous forme de tableau de bits dans la mémoire, et ces bits représentant les attributs de chacun des pixels d’une image.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une chaîne qui contient les données texte dans cet objet de données.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une chaîne qui contient les données <see cref="F:System.Windows.DataFormats.UnicodeText" /> dans cet objet de données.</summary>
        <returns>Chaîne qui contient les données <see cref="F:System.Windows.DataFormats.UnicodeText" />, ou une chaîne vide si aucune donnée <see cref="F:System.Windows.DataFormats.UnicodeText" /> n'est disponible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.DataFormats.UnicodeText> format de données désigne 16 bits caractères Unicode encodés, également appelé UTF-16 et USC-2.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(System::Windows::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Membre de <see cref="T:System.Windows.TextDataFormat" /> qui spécifie le format de données texte spécifique à récupérer.</param>
        <summary>Retourne une chaîne qui contient des données texte du format spécifié dans cet objet de données.</summary>
        <returns>Chaîne qui contient des données texte au format de données spécifié, ou une chaîne vide si aucune donnée texte correspondante n'est disponible.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> ne spécifie pas un membre valide de <see cref="T:System.Windows.TextDataFormat" />.</exception>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="M:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="Pasting">
      <MemberSignature Language="C#" Value="see AddPastingHandler, and RemovePastingHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPastingHandler, and RemovePastingHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DataObject.Pasting" />
      <MemberSignature Language="VB.NET" Value="see AddPastingHandler, and RemovePastingHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PastingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PastingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PastingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.PastingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PastingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PastingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie l’événement attaché <see cref="E:System.Windows.DataObject.Pasting" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCopyingHandler">
      <MemberSignature Language="C#" Value="public static void RemoveCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveCopyingHandler (element As DependencyObject, handler As DataObjectCopyingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveCopyingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectCopyingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Objet de dépendance (<see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) à partir duquel le gestionnaire d'événements peut être supprimé.</param>
        <param name="handler">Délégué qui fait référence à la méthode de gestionnaire à supprimer.</param>
        <summary>Supprime un gestionnaire d'événements <see cref="E:System.Windows.DataObject.Copying" /> d'un objet de dépendance spécifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePastingHandler">
      <MemberSignature Language="C#" Value="public static void RemovePastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePastingHandler (element As DependencyObject, handler As DataObjectPastingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePastingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectPastingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Objet de dépendance (<see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) à partir duquel le gestionnaire d'événements peut être supprimé.</param>
        <param name="handler">Délégué qui fait référence à la méthode de gestionnaire à supprimer.</param>
        <summary>Supprime un gestionnaire d'événements <see cref="E:System.Windows.DataObject.Pasting" /> d'un objet de dépendance spécifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSettingDataHandler (element As DependencyObject, handler As DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSettingDataHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectSettingDataEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Objet de dépendance (<see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" />) à partir duquel le gestionnaire d'événements peut être supprimé.</param>
        <param name="handler">Délégué qui fait référence à la méthode de gestionnaire à supprimer.</param>
        <summary>Supprime un gestionnaire d'événements <see cref="E:System.Windows.DataObject.SettingData" /> d'un objet de dépendance spécifié.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stocke les données audio (format de données <see cref="F:System.Windows.DataFormats.WaveAudio" />) dans cet objet de données.  Les données audio peuvent prendre la forme d'un tableau ou d'un flux d'octets.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Tableau d'octets qui contient les données audio à stocker dans l'objet de données.</param>
        <summary>Stocke les données audio (format de données <see cref="F:System.Windows.DataFormats.WaveAudio" />) dans cet objet de données. Les données audio sont spécifiées en tant que tableau d'octets.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique désactivée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Flux qui contient les données audio à stocker dans l'objet de données.</param>
        <summary>Stocke les données audio (format de données <see cref="F:System.Windows.DataFormats.WaveAudio" />) dans cet objet de données.  Les données audio sont spécifiées en tant que flux de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique désactivée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stocke les données spécifiées dans cet objet de données.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Objet qui représente les données à stocker dans cet objet de données.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, en déterminant automatiquement le format de données du type d'objet source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique activée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">autorisation de transférer des données vers le Presse-papiers du système.  Énumération associée : **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Objet qui représente les données à stocker dans cet objet de données.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, ainsi qu’un ou plusieurs formats de données spécifiés ; le format de données est spécifié par une chaîne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique activée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">autorisation de transférer des données vers le Presse-papiers du système.  Énumération associée : **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Objet <see cref="T:System.Type" /> qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Objet qui représente les données à stocker dans cet objet de données.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, avec un ou plusieurs formats de données spécifiés ; le format de données est spécifié par un objet <see cref="T:System.Type" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique activée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">autorisation de transférer des données vers le Presse-papiers du système.  Énumération associée : **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Objet qui représente les données à stocker dans cet objet de données.</param>
        <param name="autoConvert">
          <see langword="true" /> pour permettre la conversion des données dans un autre format lors de la récupération ; <see langword="false" /> pour interdire la conversion des données dans un autre format lors de la récupération.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, avec un ou plusieurs formats de données spécifiés. Cette surcharge inclut un indicateur <see langword="Boolean" /> pour indiquer si les données peuvent être converties en un autre format lors de la récupération.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ou <paramref name="format" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">autorisation de transférer des données vers le Presse-papiers du système.  Énumération associée : **AllClipboard**.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public void SetFileDropList (System.Collections.Specialized.StringCollection fileDropList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileDropList(class System.Collections.Specialized.StringCollection fileDropList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileDropList (fileDropList As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileDropList(System::Collections::Specialized::StringCollection ^ fileDropList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDropList" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="fileDropList">Ensemble de chaînes qui contient la liste des fichiers effacés à stocker dans l'objet de données.</param>
        <summary>Stocke des données <see cref="F:System.Windows.DataFormats.FileDrop" /> dans cet objet de données.  La liste des fichiers effacés est spécifiée comme un ensemble de chaînes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique activée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileDropList" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileDropList" /> contient des chaînes nulles, ou le chemin d'accès complet au fichier spécifié dans la liste ne peut pas être résolu.</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public void SetImage (System.Windows.Media.Imaging.BitmapSource image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImage(class System.Windows.Media.Imaging.BitmapSource image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImage (image As BitmapSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImage(System::Windows::Media::Imaging::BitmapSource ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Windows.Media.Imaging.BitmapSource" />
      </Parameters>
      <Docs>
        <param name="image">Objet <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> qui contient la donnée image à stocker dans l'objet de données.</param>
        <summary>Stocke des données <see cref="F:System.Windows.DataFormats.Bitmap" /> dans cet objet de données.  La donnée image est spécifiée en tant que <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une image bitmap représente un graphique de l’ordinateur sous forme de tableau de bits dans la mémoire, et ces bits représentant les attributs de chacun des pixels d’une image.  
  
 Cette méthode ajoute des données avec la conversion automatique activée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> est <see langword="null" />.</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stocke des données texte, spécifiées en tant que chaîne, dans cet objet de données.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">Chaîne qui contient les données <see cref="F:System.Windows.DataFormats.UnicodeText" /> à stocker dans l'objet de données.</param>
        <summary>Stocke des données <see cref="F:System.Windows.DataFormats.UnicodeText" />, spécifiées en tant que chaîne, dans cet objet de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce format de données désigne 16 bits caractères Unicode encodés, également appelé UTF-16 et USC-2.  
  
 Cette méthode ajoute des données avec la conversion automatique désactivée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> est <see langword="null" />.</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData, System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData, valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String,System.Windows.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ textData, System::Windows::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">Chaîne qui contient les données texte à stocker dans l'objet de données.</param>
        <param name="format">Membre de <see cref="T:System.Windows.TextDataFormat" /> qui spécifie le format de données texte à stocker.</param>
        <summary>Stocke des données texte dans cet objet de données. Le format des données texte à stocker est spécifié avec un membre de <see cref="T:System.Windows.TextDataFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données avec la conversion automatique désactivée (le même que l’appel <xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29> avec `autoConvert` la valeur `false`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> est <see langword="null" />.</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SettingData">
      <MemberSignature Language="C#" Value="see AddSettingDataHandler, and RemoveSettingDataHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSettingDataHandler, and RemoveSettingDataHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DataObject.SettingData" />
      <MemberSignature Language="VB.NET" Value="see AddSettingDataHandler, and RemoveSettingDataHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SettingDataEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SettingDataEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SettingDataEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.SettingDataEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SettingDataEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SettingDataEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie l’événement attaché <see cref="E:System.Windows.DataObject.SettingData" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">Structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passée par référence, qui définit le format, le périphérique cible, l'aspect et le support qui seront utilisés pour les futures notifications.</param>
        <param name="advf">L'une des valeurs <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> spécifiant un groupe d'indicateurs pour le contrôle de la connexion de notifications.</param>
        <param name="pAdvSink">Pointeur vers l'interface <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> sur le récepteur de notifications qui recevra la notification de modifications.</param>
        <param name="pdwConnection">Cette méthode retourne un pointeur vers un jeton DWORD qui identifie cette connexion. Vous pouvez utiliser ultérieurement ce jeton pour supprimer la connexion de notifications en le passant à <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Si cette valeur est nulle, la connexion n'a pas été établie. Ce paramètre est passé sans être initialisé.</param>
        <summary>Crée une connexion entre un objet de données et un récepteur de notifications. Cette méthode est appelée par un objet qui prend en charge un récepteur de notifications et elle lui permet d'être averti des modifications apportées aux données de l'objet.</summary>
        <returns>Cette méthode prend en charge les valeurs de retour E_INVALIDARG, E_UNEXPECTED et E_OUTOFMEMORY standard, ainsi que les suivantes :</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">Jeton DWORD spécifiant la connexion à supprimer. Utilisez la valeur retournée par <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> quand la connexion a été initialement établie.</param>
        <summary>Détruit une connexion de notifications qui avait été établie précédemment.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">Cette méthode retourne un <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> qui reçoit le pointeur d'interface vers le nouvel objet énumérateur. Si l’implémentation définit <c>enumAdvise</c> sur <see langword="null" />, il n’existe actuellement aucune connexion aux récepteurs de notifications. Ce paramètre est passé sans être initialisé.</param>
        <summary>Crée un objet qui peut être utilisé pour énumérer les connexions de notifications actuelles.</summary>
        <returns>Cette méthode prend en charge la valeur de retour E_OUTOFMEMORY standard, ainsi que les suivantes :  
  
 <list type="table"><listheader><term> Valeur  
  
 </term><description> Description  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> L’objet énumérateur est instancié avec succès ou il n’existe aucune connexion.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Cet objet ne prend pas en charge les notifications consultatives.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">L'une des valeurs <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> spécifiant la direction des données.</param>
        <summary>Crée un objet pour l'énumération des structures <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> d'un objet de données. Ces structures sont utilisées dans les appels à <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> ou à <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Cette méthode prend en charge les valeurs de retour E_INVALIDARG et E_OUTOFMEMORY standard, ainsi que les suivantes :  
  
 <list type="table"><listheader><term> Valeur  
  
 </term><description> Description  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> L’objet énumérateur a été créé avec succès.  
  
 </description></item><item><term> E_NOTIMPL  
  
 </term><description> La direction spécifiée par le paramètre <paramref name="direction" /> n’est pas prise en charge.  
  
 </description></item><item><term> OLE_S_USEREG  
  
 </term><description> Demande qu’OLE énumère les formats à partir du Registre.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Pointeur vers une structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passée par référence, qui définit le format, le support et le périphérique cible que l'appelant souhaite utiliser pour récupérer des données dans un appel suivant, tel que <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Le membre <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> n'est pas significatif dans ce cas et doit être ignoré.</param>
        <param name="pformatetcOut">Quand cette méthode retourne une valeur, contient un pointeur vers une structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> qui contient les informations les plus générales possibles pour un rendu spécifique, en le rendant canoniquement équivalent à <c>formatetIn</c>. L'appelant doit allouer cette structure et la méthode <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> doit remplir les données. Pour récupérer des données dans un appel suivant tel que <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, l’appelant utilise la valeur fournie de <c>formatOut</c>, à moins que la valeur fournie ne soit <see langword="null" />. Cette valeur est <see langword="null" /> si la méthode retourne <see langword="DATA_S_SAMEFORMATETC" />. Le membre <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> n'est pas significatif dans ce cas et doit être ignoré. Ce paramètre est passé sans être initialisé.</param>
        <summary>Fournit une structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> standard qui équivaut logiquement à une structure plus complexe. Utilisez cette méthode pour déterminer si deux structures <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> différentes retourneraient les mêmes données, rendant ainsi superflu le rendu en double.</summary>
        <returns>Cette méthode prend en charge les valeurs de retour E_INVALIDARG, E_UNEXPECTED et E_OUTOFMEMORY standard, ainsi que les suivantes :  
  
 <list type="table"><listheader><term> Valeur  
  
 </term><description> Description  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> La structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> retournée est différente de celle qui a été passée.  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC  
  
 </term><description> Les structures <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> sont identiques et la valeur <see langword="null" /> est retournée dans le paramètre <paramref name="formatOut" />.  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description> Il existe une valeur non valide pour <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> ; actuellement, seule la valeur -1 est prise en charge.  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description> Il existe une valeur non valide pour le paramètre <paramref name="pFormatetc" />.  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> L’application n’est pas en cours d’exécution.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">Pointeur vers une structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passée par référence, qui définit le format, le support et le périphérique cible à utiliser lors du passage des données. Il est possible de spécifier plusieurs supports à l'aide de l'opérateur booléen OR, en autorisant la méthode à choisir le support le mieux adapté parmi ceux spécifiés.</param>
        <param name="medium">Cette méthode retourne un pointeur vers la structure <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> qui indique le support de stockage contenant les données retournées via son membre <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" />, ainsi que la responsabilité de libérer le support via la valeur de son membre <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Si <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> est <see langword="null" />, le récepteur du support est chargé de le libérer ; sinon, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> pointe vers l'interface <see langword="IUnknown" /> sur l'objet approprié afin que sa méthode <see langword="Release" /> puisse être appelée. Le support doit être alloué et rempli par <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Ce paramètre est passé sans être initialisé.</param>
        <summary>Obtient des données à partir d'un objet de données source. La méthode <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> qui est appelée par un consommateur de données rend les données décrites dans la structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> spécifiée et les transfère par l'intermédiaire de la structure <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> spécifiée. L'appelant est ensuite chargé de libérer la structure <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Pointeur vers une structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passée par référence, qui définit le format, le support et le périphérique cible à utiliser lors du passage des données. Un seul support peut être spécifié dans <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, et seules les valeurs <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> suivantes sont valides : <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> ou <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">
          <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passé par référence, qui définit le support de stockage contenant les données transférées. Le support doit être alloué par l'appelant et rempli par <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. L'appelant doit également libérer le support. L'implémentation de cette méthode doit toujours fournir une valeur <see langword="null" /> pour le membre <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> de la structure <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> vers lequel ce paramètre pointe.</param>
        <summary>Obtient des données à partir d'un objet de données source. Cette méthode, qui est appelée par un consommateur de données, diffère de la méthode <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> en ce sens que l'appelant doit allouer et libérer le support de stockage spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">Pointeur vers une structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passée par référence, qui définit le format, le support et le périphérique cible à utiliser pour la requête.</param>
        <summary>Détermine si l'objet de données est capable de rendre les données décrites dans la structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Les objets qui tentent une opération de collage ou de déplacement peuvent appeler cette méthode avant d'appeler <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> pour obtenir savoir si l'opération a des chances de réussir.</summary>
        <returns>Cette méthode prend en charge les valeurs de retour E_INVALIDARG, E_UNEXPECTED et E_OUTOFMEMORY standard, ainsi que les suivantes :  
  
 <list type="table"><listheader><term> Valeur  
  
 </term><description> Description  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Un appel ultérieur à <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> réussira probablement.  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description> Valeur non valide pour <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> ; actuellement, seule la valeur -1 est prise en charge.  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description> Valeur non valide pour le paramètre <paramref name="pFormatetc" />.  
  
 </description></item><item><term> DV_E_TYMED  
  
 </term><description> Valeur <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> non valide.  
  
 </description></item><item><term> DV_E_DVASPECT  
  
 </term><description> Valeur <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> non valide.  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> L’application n’est pas en cours d’exécution.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">Structure <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passée par référence, qui définit le format utilisé par l'objet de données lors de l'interprétation des données contenues dans le support de stockage.</param>
        <param name="pmedium">Structure <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passée par référence, qui définit le support de stockage dans lequel les données sont passées.</param>
        <param name="fRelease">
          <see langword="true" /> pour spécifier que l'objet de données appelé, qui implémente <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, possède le support de stockage après le retour d'appel. Cela signifie que l'objet de données doit libérer le support après qu'il a été utilisé en appelant la fonction <see langword="ReleaseStgMedium" />. <see langword="false" /> pour spécifier que l'appelant conserve la propriété du support de stockage, et que l'objet de données appelé n'utilise le support de stockage que pendant la durée de l'appel.</param>
        <summary>Transfère des données vers l'objet qui implémente cette méthode. Cette méthode est appelée par un objet qui contient une source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.DataObject> est castée en interface <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>