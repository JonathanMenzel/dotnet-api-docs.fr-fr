<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameScope.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e592cda49827dc25a97d85376a3be8483889b1d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e592cda49827dc25a97d85376a3be8483889b1d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Implements base WPF support for the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> methods that store or retrieve name-object mappings into a particular XAML namescope.</source>
          <target state="translated">Implémente la prise en charge WPF de base pour les méthodes <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> qui stockent ou extraient des mappages d'objet de nom dans une portée de nom XAML particulière.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</source>
          <target state="translated">Ajoute la prise en charge des propriétés jointes pour simplifier l’obtention ou la définition de noms de portée de nom XAML de manière dynamique au niveau de l’élément.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>This class implements built-in XAML namescope support for WPF treatment of XAML.</source>
          <target state="translated">Cette classe implémente la prise en charge de la portée de nom XAML intégrée pour le traitement WPF de XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> aide à la création de portées de nom XAML initiales en fonction de l’analyse XAML, telles que lorsque l’instanciation des styles et modèles.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</source>
          <target state="translated">Il prend également en charge la création de portées de nom XAML par le processus qui se produisent en dehors du chargement de XAML normal des éléments par l’implémentation du processeur XAML WPF.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> est généralement davantage destiné à fournir l’infrastructure que pour les scénarios de code utilisateur courants qui impliquent l’utilisation de la portée de nom XAML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For most scenarios, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> methods exposed on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate methods to call to search for elements by XAML-defined name.</source>
          <target state="translated">La plupart des scénarios, le <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> méthodes exposées sur <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> sont des méthodes les plus appropriées à appeler pour rechercher des éléments par nom défini par XAML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> properties exposed by <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate properties to use to set the initial name as markup attributes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> propriétés exposées par <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> sont des propriétés plus appropriées à utiliser pour définir le nom initial en tant qu’attributs de balisage.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The various methods of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> are used by base elements and other classes that maintain XAML namescopes in order to support <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</source>
          <target state="translated">Les différentes méthodes de <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> sont utilisés par les éléments de base et d’autres classes qui gèrent les portées de nom XAML pour prendre en charge <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>You generally use the API in the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</source>
          <target state="translated">Vous utilisez généralement l’API dans le <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> uniquement si vous remplacez ou augmentez le comportement d’élément de base pour la manière dont ils traitent les portées de nom XAML pour les éléments racine d’une page XAML et dans le cadre des modèles de classe (qui utilisent une portée de nom XAML séparée du reste de la page).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> method.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> fournit des implémentations d’interface de collection telles que vous pouvez accéder aux collections des noms qui sont détenues par la portée de nom XAML, y compris l’ajout à ce dernier via des appels à un <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For more information on XAML namescope concepts, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les concepts de portée de nom XAML, consultez <bpt id="p1">[</bpt>portées de nom XAML WPF<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">Les noms dans une portée de nom XAML doivent utiliser une grammaire particulière qui restreint les chaînes que vous pouvez utiliser pour les entrées de <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>XamlName, grammaire<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds an item to the collection.</source>
          <target state="translated">Ajoute un élément à la collection.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>) that represents the name mapping to add to the XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (la clé est <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, la valeur est <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>) qui représente le mappage de nom à ajouter à la portée de nom XAML.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Adds an item to the collection.</source>
          <target state="translated">Ajoute un élément à la collection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Either or both components of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'un des deux composants de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> ou les deux sont <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The string key, which is the name of the XAML namescope mapping to add.</source>
          <target state="translated">Clé de chaîne, qui est le nom du mappage de la portée de nom XAML à ajouter.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The object value, which is the object reference of the XAML namescope mapping to add.</source>
          <target state="translated">Valeur d'objet, qui est la référence d'objet du mappage de la portée de nom XAML à ajouter.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Adds an item to the collection.</source>
          <target state="translated">Ajoute un élément à la collection.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> so that it is not necessary to involve the <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> type in your usage.</source>
          <target state="translated">Cette méthode inclut <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> afin qu’il ne soit pas nécessaire d’impliquer le <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> type dans votre utilisation.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">Les noms dans une portée de nom XAML doivent utiliser une grammaire particulière qui restreint les chaînes que vous pouvez utiliser pour les entrées de <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>XamlName, grammaire<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Clear">
          <source>Removes all items from the collection.</source>
          <target state="translated">Supprime tous les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The item to find in the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">Élément à rechercher dans la collection, spécifié comme un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (la clé est <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, la valeur est <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Determines whether the collection contains a specified item.</source>
          <target state="translated">Détermine si la collection contient l'élément spécifié.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> identifies an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> spécifié identifie un mappage existant dans ce <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> spécifié n'existe pas dans le <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</source>
          <target state="translated">En général vous intéresse uniquement si un nom est déjà défini dans la portée de nom XAML, et quelle valeur de référence d’objet qu’il est mappé à est immatériel.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>For this scenario, you can call <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> instead.</source>
          <target state="translated">Pour ce scénario, vous pouvez appeler <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> à la place.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>The string key to find.</source>
          <target state="translated">Clé de chaîne à rechercher.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Returns whether a provided name already exists in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">Retourne une valeur qui indique si un nom fourni existe déjà dans ce <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> identifies a name for an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;paramref name="key" /&gt;</ph> spécifié identifie un nom pour un mappage existant dans ce <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> si <ph id="ph2">&lt;paramref name="key" /&gt;</ph> spécifié n'existe pas dans le <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">Les noms dans une portée de nom XAML doivent utiliser une grammaire particulière qui restreint les chaînes que vous pouvez utiliser pour les entrées de <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>XamlName, grammaire<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</source>
          <target state="translated">Tableau unidimensionnel qui représente la destination des éléments copiés à partir de la collection. Le tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>Copies the elements of the collection to an array, starting at a particular array index.</source>
          <target state="translated">Copie les éléments de la collection dans un tableau, en commençant au niveau d’un index de tableau particulier.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Count">
          <source>Returns the number of items in the collection of mapped names in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">Retourne le nombre d'éléments dans la collection de noms mappés dans ce <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Count">
          <source>The number of items in the collection.</source>
          <target state="translated">Nombre d’éléments dans la collection</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Name portion of an existing mapping to retrieve the object portion for.</source>
          <target state="translated">Partie nom d’un mappage existant pour lequel récupérer la partie objet.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Returns the corresponding object in the XAML namescope maintained by this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>, based on a provided name string.</source>
          <target state="translated">Retourne l'objet correspondant dans la portée de nom XAML conservée par ce <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>, selon une chaîne de nom fournie.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The requested object that is mapped with <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Objet demandé qui est mappé avec <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Can return <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph> or empty string, or if no matching object was found.</source>
          <target state="translated">Retourner <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;paramref name="name" /&gt;</ph> a été fourni comme <ph id="ph3">&lt;see langword="null" /&gt;</ph> ou chaîne vide, ou si aucun objet correspondant n'a été trouvé.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Several base elements (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) also expose a <ph id="ph3">`FindName`</ph> method with identical functionality.</source>
          <target state="translated">Plusieurs éléments de base (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) également exposer une <ph id="ph3">`FindName`</ph> méthode avec des fonctionnalités identiques.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</source>
          <target state="translated">Les versions de l’élément de base effectuent une recherche de portée de nom XAML dans l’arborescence logique classique, l’utilisation vers l’élément racine.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</source>
          <target state="translated">Une fois la portée de nom XAML est déterminée, cette portée de nom XAML est interrogée pour le nom demandé.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The object to get the XAML namescope from.</source>
          <target state="translated">Objet duquel obtenir la portée de nom XAML.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>Provides the attached property get accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">Fournit l'accesseur get de propriété jointe pour la propriété jointe <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>A XAML namescope, as an <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> instance.</source>
          <target state="translated">Portée de nom XAML, comme une instance <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The purpose of this method is both to implement the <ph id="ph1">`get`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">L’objectif de cette méthode est à la fois pour implémenter le <ph id="ph1">`get`</ph> accesseur pour l’utilisation de <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> comme une propriété attachée dans l’utilisation XAML et de fournir l’accesseur pour effectuer l’opération équivalente dans le code.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si la collection est en lecture seule.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Retourne toujours <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The string name for the XAML name mapping to get or set.</source>
          <target state="translated">Nom de chaîne pour le mappage de nom XAML à obtenir ou définir.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>Gets or sets the item with the specified key.</source>
          <target state="translated">Obtient ou définit l'élément avec la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The value of the object mapped by the XAML name provided as <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Valeur de l'objet mappé par le nom XAML fourni comme <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> est fourni comme <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph> for a set operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> est fourni comme <ph id="ph2">&lt;see langword="null" /&gt;</ph> pour une opération Set.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Keys">
          <source>Gets a collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Obtient une collection des clés dans le dictionnaire <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Keys">
          <source>A collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Collection des clés dans le dictionnaire <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Windows.NameScope.NameScopeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">Identifie la propriété jointe <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The name to use for mapping the given object.</source>
          <target state="translated">Nom à utiliser pour le mappage de l’objet donné.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The object to be mapped to the provided name.</source>
          <target state="translated">Objet à mapper au nom fourni.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>Registers a new name-object pair into the current XAML namescope.</source>
          <target state="translated">Inscrit une nouvelle paire nom-objet dans la portée de nom XAML actuelle.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> a été fourni avec la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> a été fourni comme chaîne vide</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="name" /&gt;</ph> fourni a été rejeté par l'analyseur, car il contenait des caractères non valides pour un nom XAML</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided would result in a duplicate name registration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> fourni provoquerait une inscription de nom en double.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">Supprime l'objet spécifique de la collection.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The object to remove from the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">Objet à supprimer de la collection, spécifié comme un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (la clé est <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, la valeur est <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">Supprime l'objet spécifique de la collection.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'élément a été supprimé avec succès de la collection ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">Retourne également <ph id="ph1">&lt;see langword="false" /&gt;</ph> si l'élément est introuvable dans la collection.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is a dictionary there is no concept of first occurrence; any given <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> is guaranteed unique.</source>
          <target state="translated">Étant donné que <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> est un dictionnaire est aucun concept de première occurrence ; donné <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> est garanti unique.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>The string key, which is the name of the XAML namescope mapping to remove.</source>
          <target state="translated">Clé de chaîne, qui est le nom du mappage de la portée de nom XAML à supprimer.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Removes a mapping for a specified name from the collection.</source>
          <target state="translated">Supprime de la collection un mappage pour un nom spécifié.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'élément a été supprimé avec succès de la collection ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">Retourne également <ph id="ph1">&lt;see langword="false" /&gt;</ph> si l'élément est introuvable dans la collection.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>, returning <ph id="ph2">`false`</ph> in cases that otherwise would have raised exceptions in <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</source>
          <target state="translated">Cette méthode inclut <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>, qui retourne <ph id="ph2">`false`</ph> dans les cas qui sinon auraient déclenché des exceptions dans <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Object to change XAML namescope for.</source>
          <target state="translated">Objet pour lequel modifier la portée de nom XAML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The new XAML namescope, using an interface cast.</source>
          <target state="translated">Nouvelle portée de nom XAML, utilisant un transtypage d’interface.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Provides the attached property set accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">Fournit l'accesseur set de propriété jointe pour la propriété jointe <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The purpose of this method is both to act as the <ph id="ph1">`set`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">L’objectif de cette méthode est à la fois en tant que le <ph id="ph1">`set`</ph> accesseur pour l’utilisation de <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> comme une propriété attachée dans l’utilisation XAML et de fournir l’accesseur pour effectuer l’opération équivalente dans le code.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein d’une collection.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that iterates through a collection.</source>
          <target state="translated">Énumérateur qui itère au sein d’une collection.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>The key of the value to get.</source>
          <target state="translated">Clé de la valeur à obtenir.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</source>
          <target state="translated">Cette méthode retourne la valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, un objet null.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ce paramètre est passé sans être initialisé.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Obtient la valeur associée à la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> contains a mapping for the name provided as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">true si le <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> contient un mappage pour le nom fourni comme <ph id="ph2">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Otherwise, false.</source>
          <target state="translated">Sinon, false.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>The name of the mapping to remove.</source>
          <target state="translated">Nom du mappage à supprimer.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Removes a name-object mapping from the XAML namescope.</source>
          <target state="translated">Supprime un mappage nom-objet de la portée de nom XAML.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Before calling this method, you can use <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> to determine whether a specific name-object mapping exists.</source>
          <target state="translated">Avant d’appeler cette méthode, vous pouvez utiliser <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> pour déterminer si un mappage nom-objet spécifique existe.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> a été fourni comme chaîne vide.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided had not been registered.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="name" /&gt;</ph> fourni n'avait pas été enregistré.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Values">
          <source>Gets a collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Obtient une collection des valeurs dans le dictionnaire <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Values">
          <source>A collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">Collection des valeurs dans le dictionnaire <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>