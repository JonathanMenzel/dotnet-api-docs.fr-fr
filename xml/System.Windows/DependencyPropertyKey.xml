<Type Name="DependencyPropertyKey" FullName="System.Windows.DependencyPropertyKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3cd6fbb925314b32cf6f09ce204f5374db64928c" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39765178" /></Metadata><TypeSignature Language="C#" Value="public sealed class DependencyPropertyKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyKey sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyKey = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="19a7d-101">Fournit un identificateur de propriété de dépendance pour un accès en écriture limité à une propriété de dépendance en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="19a7d-101">Provides a dependency property identifier for limited write access to a read-only dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19a7d-102"><xref:System.Windows.DependencyPropertyKey> les instances sont obtenues en tant que la valeur de retour d’un appel d’inscription de propriété de dépendance en utilisant les méthodes <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> ou <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="19a7d-102"><xref:System.Windows.DependencyPropertyKey> instances are obtained as the return value of a dependency property registration call using the methods <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> or <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</span></span>  
  
 <span data-ttu-id="19a7d-103">Les types qui s’inscrivent à une propriété de dépendance peuvent utiliser le <xref:System.Windows.DependencyPropertyKey> dans les appels à <xref:System.Windows.DependencyObject.SetValue%2A> et <xref:System.Windows.DependencyObject.ClearValue%2A> qui ajustent la valeur de propriété dans le cadre de la logique de la classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-103">The types that register a dependency property can use the <xref:System.Windows.DependencyPropertyKey> in calls to <xref:System.Windows.DependencyObject.SetValue%2A> and <xref:System.Windows.DependencyObject.ClearValue%2A> that adjust the property's value as part of class logic.</span></span> <span data-ttu-id="19a7d-104">Si autorisé par le niveau d’accès de la clé, les classes connexes peuvent également utiliser la clé et la propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="19a7d-104">If permitted by the access level of the key, related classes can use the key and the dependency property also.</span></span> <span data-ttu-id="19a7d-105">Par exemple, vous pouvez déclarer une clé interne et les autres types dans le même assembly peuvent également définir cette propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="19a7d-105">For instance, you can declare the key as internal, and other types within the same assembly can also set that dependency property.</span></span>  
  
 <span data-ttu-id="19a7d-106">Le <xref:System.Windows.DependencyPropertyKey> retourné par la dépendance en lecture seule inscription de la propriété ne doit pas être rendue publique, car la propriété devient définissable, alors que vous avez le point de son inscription comme une propriété de dépendance en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="19a7d-106">The <xref:System.Windows.DependencyPropertyKey> returned by read-only dependency property registration should not be made public, because exposing the key makes the property settable, thus defeating the point of registering it as a read-only dependency property.</span></span> <span data-ttu-id="19a7d-107">En outre, l’exposition de la clé provoque une discordance entre la dépendance disponible des comportements de propriété et sa [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] des implémentations de wrapper de propriété, qui est la conception de la classe incorrect.</span><span class="sxs-lookup"><span data-stu-id="19a7d-107">Also, exposing the key causes a mismatch between the available dependency property behaviors and its [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property wrapper implementations, which is bad class design.</span></span>  
  
 <span data-ttu-id="19a7d-108">Au lieu d’exposer la clé elle-même, exposez le <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> valeur de la <xref:System.Windows.DependencyPropertyKey> comme un `public static readonly` <xref:System.Windows.DependencyProperty> sur votre classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-108">Instead of exposing the key itself, you should instead expose the <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> value of the <xref:System.Windows.DependencyPropertyKey> as a `public static readonly`<xref:System.Windows.DependencyProperty> on your class.</span></span> <span data-ttu-id="19a7d-109">Ainsi, la propriété à retourner un identificateur de propriété de dépendance valide pour certaines opérations de système de propriétés telles que l’énumération localement les valeurs définies.</span><span class="sxs-lookup"><span data-stu-id="19a7d-109">This enables the property to return a valid dependency property identifier for certain property system operations such as enumerating locally set values.</span></span> <span data-ttu-id="19a7d-110">Toutefois, l’identificateur ainsi obtenu n’a pas de toutes les fonctionnalités d’un <xref:System.Windows.DependencyProperty> pour de nombreuses opérations de système de propriété.</span><span class="sxs-lookup"><span data-stu-id="19a7d-110">However, the identifier thus obtained does not have the full capabilities of a <xref:System.Windows.DependencyProperty> for many property system operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19a7d-111">L’exemple suivant inscrit une propriété de dépendance en lecture seule et utilise également la clé pour deux raisons dans d’autres membres de classe : implémentation du « wrapper » get et comme identificateur pour une opération de détermination protégée qui définit la valeur basée sur des calculs d’autres valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="19a7d-111">The following example registers a read-only dependency property, and also uses the key for two purposes in other class members: implementing the get "wrapper", and as the identifier for a protected determination operation that sets the value based on calculations of other property values.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyKey.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.DependencyPropertyKey.DependencyProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19a7d-112">Obtient l'identificateur de propriété de dépendance associé à cet identificateur de propriété de dépendance en lecture seule spécialisé.</span><span class="sxs-lookup"><span data-stu-id="19a7d-112">Gets the dependency property identifier associated with this specialized read-only dependency property identifier.</span></span></summary>
        <value><span data-ttu-id="19a7d-113">Identificateur de propriété de dépendance pertinent.</span><span class="sxs-lookup"><span data-stu-id="19a7d-113">The relevant dependency property identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19a7d-114">Le <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> valeur permet d’identificateur d’une propriété en lecture seule participer à des opérations de système de propriétés à l’aide de certaines des interfaces que celles utilisées pour les propriétés de dépendance en lecture-écriture.</span><span class="sxs-lookup"><span data-stu-id="19a7d-114">The <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> value enables a read-only property's identifier to participate in common property system operations using some of the same interfaces as used for read-write dependency properties.</span></span>  
  
 <span data-ttu-id="19a7d-115">Pour implémenter l’accesseur get de propriété pour une propriété de dépendance en lecture seule, vous devez créer et exposer un <xref:System.Windows.DependencyProperty> identificateur dans votre classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-115">In order to implement the get property accessor for a read-only dependency property, you should create and expose a <xref:System.Windows.DependencyProperty> identifier on your class.</span></span> <span data-ttu-id="19a7d-116">Cela a deux objectifs :</span><span class="sxs-lookup"><span data-stu-id="19a7d-116">This serves two purposes:</span></span>  
  
-   <span data-ttu-id="19a7d-117">Les besoins de votre propre classe le <xref:System.Windows.DependencyProperty> identificateur afin d’implémenter l’accesseur get pour le wrapper de propriété.</span><span class="sxs-lookup"><span data-stu-id="19a7d-117">Your own class needs the <xref:System.Windows.DependencyProperty> identifier in order to implement the get accessor for the property wrapper.</span></span> <span data-ttu-id="19a7d-118">Vous utilisez le <xref:System.Windows.DependencyProperty> en tant que paramètre pour le <xref:System.Windows.DependencyObject.GetValue%2A> appel qui implémente l’accesseur get.</span><span class="sxs-lookup"><span data-stu-id="19a7d-118">You use the <xref:System.Windows.DependencyProperty> as a parameter for the <xref:System.Windows.DependencyObject.GetValue%2A> call that implements the get accessor.</span></span>  
  
-   <span data-ttu-id="19a7d-119"><xref:System.Windows.DependencyProperty> identificateurs d’exposent votre propriété de dépendance pour le système de propriétés telles que les autres méthodes qui dépendent des métadonnées puissent y accéder dans un formulaire standard.</span><span class="sxs-lookup"><span data-stu-id="19a7d-119"><xref:System.Windows.DependencyProperty> identifiers expose your dependency property to the property system such that other methods that rely on metadata can access it in a standard form.</span></span> <span data-ttu-id="19a7d-120">Par exemple, si vous avez appelé <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> sur certains <xref:System.Windows.DependencyObject> et obtenu une énumération des propriétés localement définies (valeurs et identificateurs), l’identificateur retourné pour une propriété de dépendance en lecture seule serait votre <xref:System.Windows.DependencyProperty> valeur plutôt que de la clé.</span><span class="sxs-lookup"><span data-stu-id="19a7d-120">For instance, if you called <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> on some <xref:System.Windows.DependencyObject> and obtained an enumeration of locally set properties (values and identifiers) the identifier returned for a read-only dependency property would be your <xref:System.Windows.DependencyProperty> value rather than the key.</span></span> <span data-ttu-id="19a7d-121">Ne pas exposer un <xref:System.Windows.DependencyProperty> identificateur n’augmente pas la sécurité de votre propriété de dépendance en lecture seule en rien, elle permet simplement d’opérations qui impliquent nullement à la fois pour les classes dérivées suivantes et les instances de classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-121">Not exposing a <xref:System.Windows.DependencyProperty> identifier does not increase the security of your read-only dependency property in any way, it just makes operations that involve your property more awkward both for subsequent derived classes and class instances.</span></span>  
  
 <span data-ttu-id="19a7d-122">Pour exposer la <xref:System.Windows.DependencyProperty> identificateur dans votre classe, vous appelez <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> directement sur votre clé.</span><span class="sxs-lookup"><span data-stu-id="19a7d-122">To expose the  <xref:System.Windows.DependencyProperty> identifier on your class, you call <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> directly on your key.</span></span> <span data-ttu-id="19a7d-123">Cette valeur permet de créer un `public static readonly` <xref:System.Windows.DependencyProperty> identificateur sur la classe qui correspond le <xref:System.Windows.DependencyPropertyKey>.</span><span class="sxs-lookup"><span data-stu-id="19a7d-123">Use this value to create a `public static readonly`<xref:System.Windows.DependencyProperty> identifier on the class, which parallels the <xref:System.Windows.DependencyPropertyKey>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19a7d-124">L’exemple suivant appelle <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> pour exposer le <xref:System.Windows.DependencyProperty> identificateur (`AquariumGraphicProperty`) pour le `AquariumGraphic` propriété de dépendance en lecture seule sur une classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-124">The following example calls <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> to expose the <xref:System.Windows.DependencyProperty> identifier (`AquariumGraphicProperty`) for the `AquariumGraphic` read-only dependency property on a class.</span></span> <span data-ttu-id="19a7d-125">L’exemple montre également le <xref:System.Windows.DependencyPropertyKey> création (comme membre interne) et l’accesseur get de `AquariumGraphic`.</span><span class="sxs-lookup"><span data-stu-id="19a7d-125">The example also shows the <xref:System.Windows.DependencyPropertyKey> creation (as an internal member) and the get accessor for `AquariumGraphic`.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="OverrideMetadata">
      <MemberSignature Language="C#" Value="public void OverrideMetadata (Type forType, System.Windows.PropertyMetadata typeMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OverrideMetadata(class System.Type forType, class System.Windows.PropertyMetadata typeMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OverrideMetadata (forType As Type, typeMetadata As PropertyMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OverrideMetadata(Type ^ forType, System::Windows::PropertyMetadata ^ typeMetadata);" />
      <MemberSignature Language="F#" Value="member this.OverrideMetadata : Type * System.Windows.PropertyMetadata -&gt; unit" Usage="dependencyPropertyKey.OverrideMetadata (forType, typeMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forType" Type="System.Type" />
        <Parameter Name="typeMetadata" Type="System.Windows.PropertyMetadata" />
      </Parameters>
      <Docs>
        <param name="forType"><span data-ttu-id="19a7d-126">Type sur lequel cette propriété de dépendance est basée et dont les métadonnées doivent être substituées.</span><span class="sxs-lookup"><span data-stu-id="19a7d-126">The type on which this dependency property exists and metadata should be overridden.</span></span></param>
        <param name="typeMetadata"><span data-ttu-id="19a7d-127">Métadonnées fournies pour ce type.</span><span class="sxs-lookup"><span data-stu-id="19a7d-127">Metadata supplied for this type.</span></span></param>
        <summary><span data-ttu-id="19a7d-128">Substitue les métadonnées d'une propriété de dépendance en lecture seule représentée par cet identificateur de propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="19a7d-128">Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19a7d-129">Substitution des métadonnées sur une propriété de dépendance en lecture seule est effectuée pour des raisons similaires en tant que la substitution des métadonnées sur une propriété de dépendance en lecture-écriture et est limitée aux accès au niveau de la clé, car les comportements spécifiés dans les métadonnées peuvent modifier le comportement de jeu (le valeur par défaut, par exemple).</span><span class="sxs-lookup"><span data-stu-id="19a7d-129">Overriding metadata on a read-only dependency property is done for similar reasons as overriding metadata on a read-write dependency property, and is restricted to access at the key level because behaviors specified in the metadata can change the set behavior (the default value, for instance).</span></span>  
  
 <span data-ttu-id="19a7d-130">Comme avec les propriétés de dépendance en lecture-écriture, la substitution de métadonnées sur une propriété de dépendance en lecture seule ne doit être effectuée avant que celle-ci soit mise en cours d’utilisation par le système de propriétés (cela équivaut à la fois que les instances spécifiques d’objets qui inscrivent la propriété sont instanciées).</span><span class="sxs-lookup"><span data-stu-id="19a7d-130">As with read-write dependency properties, overriding metadata on a read-only dependency property should only be done prior to that property being placed in use by the property system (this equates to the time that specific instances of objects that register the property are instantiated).</span></span> <span data-ttu-id="19a7d-131">Les appels à <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> doit uniquement être effectuée dans les constructeurs statiques du type qui fournit lui-même comme le `forType` paramètre de cette méthode, ou initialisation équivalente pour cette classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-131">Calls to <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> should only be performed within the static constructors of the type that provides itself as the `forType` parameter of this method, or equivalent initialization for that class.</span></span>  
  
 <span data-ttu-id="19a7d-132">Cette méthode transfère efficacement à la <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> méthode, en passant le <xref:System.Windows.DependencyPropertyKey> instance en tant que le paramètre de clé.</span><span class="sxs-lookup"><span data-stu-id="19a7d-132">This method effectively forwards to the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method, passing the <xref:System.Windows.DependencyPropertyKey> instance as the key parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19a7d-133">L’exemple suivant substitue les métadonnées pour une propriété de dépendance en lecture seule existante qui hérite d’une classe.</span><span class="sxs-lookup"><span data-stu-id="19a7d-133">The following example overrides metadata for an existing read-only dependency property that a class inherits.</span></span> <span data-ttu-id="19a7d-134">Dans ce cas, l’objectif de scénario a été pour ajouter un rappel de valeur forcée les métadonnées de propriété de base n’ont pas.</span><span class="sxs-lookup"><span data-stu-id="19a7d-134">In this case, the scenario goal was to add a coerce value callback that the base property metadata did not have.</span></span> <span data-ttu-id="19a7d-135">Vous pouvez également substituer les métadonnées pour toute autre raison justifiant la substitution des métadonnées (modification de valeur par défaut, ajout <xref:System.Windows.FrameworkPropertyMetadataOptions> valeurs, etc..)</span><span class="sxs-lookup"><span data-stu-id="19a7d-135">You could also override metadata for any of the other reasons that overriding metadata is typically appropriate (changing default value, adding <xref:System.Windows.FrameworkPropertyMetadataOptions> values, etc.)</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODPOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodpoverride)]
 [!code-vb[WPFAquariumSln#RODPOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodpoverride)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="19a7d-136">A tenté de substituer des métadonnées sur une propriété de dépendance en lecture-écriture (cette opération ne peut pas être exécutée à l'aide de cette signature).</span><span class="sxs-lookup"><span data-stu-id="19a7d-136">Attempted metadata override on a read-write dependency property (cannot be done using this signature).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19a7d-137">Les métadonnées ont déjà été établies pour la propriété telle que définie par le type fourni.</span><span class="sxs-lookup"><span data-stu-id="19a7d-137">Metadata was already established for the property as it exists on the provided type.</span></span></exception>
        <altmember cref="T:System.Windows.DependencyProperty" />
        <altmember cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)" />
      </Docs>
    </Member>
  </Members>
</Type>