<Type Name="MultiDataTrigger" FullName="System.Windows.MultiDataTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1752e8362578f8b9f4f38289cb636f12c283b090" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48743201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MultiDataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiDataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiDataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiDataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiDataTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiDataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un déclencheur qui applique des valeurs de propriété ou exécute des actions lorsque les données liées remplissent un ensemble de conditions.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.MultiDataTrigger> objet est similaire à un <xref:System.Windows.MultiTrigger>, sauf que les conditions d’un <xref:System.Windows.MultiDataTrigger> sont basées sur les valeurs de propriété de données liées au lieu de celles d’un <xref:System.Windows.UIElement>. Dans un <xref:System.Windows.MultiDataTrigger>, une condition est remplie lorsque la valeur de propriété de l’élément de données correspond à spécifié <xref:System.Windows.Condition.Value%2A>. Vous pouvez ensuite utiliser les méthodes setter ou <xref:System.Windows.TriggerBase.EnterActions%2A> et <xref:System.Windows.TriggerBase.ExitActions%2A> propriétés à appliquer les modifications ou d’actions de démarrage lorsque toutes les conditions sont remplies.  
  
 Le <xref:System.Windows.MultiDataTrigger.Setters%2A> propriété d’un <xref:System.Windows.MultiDataTrigger> objet peut contenir uniquement des <xref:System.Windows.Setter> objets. Ajout d’un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.MultiDataTrigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour le <xref:System.Windows.MultiDataTrigger> objet. <xref:System.Windows.EventSetter> objets ne sont pas pris en charge ; uniquement <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> prend en charge <xref:System.Windows.EventSetter> objets.  
  
 Pour plus d’informations sur le moment d’utiliser des déclencheurs et quand utiliser d’autres techniques, consultez [vue d’ensemble de la création de modèles de données](~/docs/framework/wpf/data/data-templating-overview.md).  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriété de la <xref:System.Windows.Controls.ListBox> est lié à `Places`, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de `Place` objets. `Place` objets ont des propriétés `Name` et `State`. La définition de `Place` et `Places` ne sont pas affichés.  
  
 Chaque <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> affiche un `Place` objet. Le <xref:System.Windows.Style> dans l’exemple est appliqué à chacune <xref:System.Windows.Controls.ListBoxItem>. Le <xref:System.Windows.Condition> les éléments de la <xref:System.Windows.MultiDataTrigger> spécifient que si le `Name` et `State` de la `Place` données article sont `Portland` et `OR` respectivement, puis l’arrière-plan correspondant <xref:System.Windows.Controls.ListBoxItem> est définie à `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiDataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiDataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.MultiDataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiDataTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'objets <see cref="T:System.Windows.Condition" />. Les modifications apportées aux valeurs de propriété sont appliquées lorsque toutes les conditions dans la collection sont remplies.</summary>
        <value>Collection d'objets <see cref="T:System.Windows.Condition" />. La valeur par défaut est une collection vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.MultiDataTrigger> objet est similaire à un <xref:System.Windows.MultiTrigger>, sauf que les conditions d’un <xref:System.Windows.MultiDataTrigger> sont basées sur les valeurs de propriété de données liées au lieu de celles d’un <xref:System.Windows.UIElement>. Dans un <xref:System.Windows.MultiDataTrigger>, une condition est remplie lorsque la valeur de propriété de l’élément de données correspond à spécifié <xref:System.Windows.Condition.Value%2A>. Cette valeur est d’abord convertie vers le type de la valeur de la liaison, si possible, et ensuite les deux valeurs sont comparées à l’aide de la `Object.Equals` (méthode). Le <xref:System.Windows.MultiTrigger> applique les accesseurs Set associés ou les actions lorsque toutes les conditions sont remplies (binaire `AND` opération).  
  
 Pour un <xref:System.Windows.MultiDataTrigger>, chaque condition dans la collection doit définir les deux le <xref:System.Windows.Condition.Binding%2A> et <xref:System.Windows.Condition.Value%2A> propriétés. Pour plus d'informations, consultez <xref:System.Windows.Condition.Binding%2A>.  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<object>  
  <object.Conditions>  
    zeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *zeroOrMoreConditions*  
 Zéro ou plusieurs <xref:System.Windows.Condition> objets.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriété de la <xref:System.Windows.Controls.ListBox> est lié à `Places`, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de `Place` objets. `Place` objets ont des propriétés `Name` et `State`. La définition de `Place` et `Places` ne sont pas affichés.  
  
 Chaque <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> affiche un `Place` objet. Le <xref:System.Windows.Style> dans l’exemple est appliqué à chacune <xref:System.Windows.Controls.ListBoxItem>. Le <xref:System.Windows.Condition> les éléments de la <xref:System.Windows.MultiDataTrigger> spécifient que si le `Name` et `State` de la `Place` données article sont `Portland` et `OR` respectivement, puis l’arrière-plan correspondant <xref:System.Windows.Controls.ListBoxItem> est définie à `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiDataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection des objets <see cref="T:System.Windows.Setter" /> qui décrivent les valeurs de propriété à appliquer lorsque toutes les conditions du <see cref="T:System.Windows.MultiDataTrigger" /> sont remplies.</summary>
        <value>Collection d'objets <see cref="T:System.Windows.Setter" />. La valeur par défaut est une collection vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger> vous permet de démarrer des actions en utilisant le <xref:System.Windows.TriggerBase.EnterActions%2A> ou <xref:System.Windows.TriggerBase.ExitActions%2A> propriétés, ou pour définir les valeurs de propriété à l’aide de <xref:System.Windows.Setter> objets lorsque les données liées remplissent un ensemble de conditions.  
  
 S’il existe deux <xref:System.Windows.Setter> objets dans les collections d’accesseurs Set identiques ou différents définissent la même propriété, le <xref:System.Windows.Setter> qui est déclaré en dernier est utilisé.  
  
 Ajout d’un <xref:System.Windows.Setter> enfant à un <xref:System.Windows.MultiDataTrigger> objet ajoute implicitement à la <xref:System.Windows.SetterBaseCollection> pour le <xref:System.Windows.MultiDataTrigger> objet. <xref:System.Windows.EventSetter> objets ne sont pas pris en charge ; uniquement <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> prend en charge <xref:System.Windows.EventSetter> objets.  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Utilisation des éléments de propriété XAML  
  
```  
<object>  
    zeroOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *zeroOrMoreSetters*  
 Zéro ou plusieurs <xref:System.Windows.Setter> objets.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriété de la <xref:System.Windows.Controls.ListBox> est lié à `Places`, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de `Place` objets. `Place` objets ont des propriétés `Name` et `State`. La définition de `Place` et `Places` ne sont pas affichés.  
  
 Chaque <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> affiche un `Place` objet. Le <xref:System.Windows.Style> dans l’exemple est appliqué à chacune <xref:System.Windows.Controls.ListBoxItem>. Le <xref:System.Windows.Condition> les éléments de la <xref:System.Windows.MultiDataTrigger> spécifient que si le `Name` et `State` de la `Place` données article sont `Portland` et `OR` respectivement, puis l’arrière-plan correspondant <xref:System.Windows.Controls.ListBoxItem> est définie à `Cyan`.  
  
 Notez que `<MultiDataTrigger.Setters>` est implicite.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet enfant à ajouter.</param>
        <summary>Ajoute un objet enfant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.MultiDataTrigger> est castée en interface <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à ajouter à l’objet.</param>
        <summary>Ajoute le contenu textuel d’un nœud à l’objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.MultiDataTrigger> est castée en interface <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>