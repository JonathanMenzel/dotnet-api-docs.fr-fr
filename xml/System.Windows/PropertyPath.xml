<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17e9bf401b9c5bfe4e7875bd032548d71865619b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39808627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implémente une structure de données pour décrire une propriété comme un chemin sous une autre propriété ou sous un type propriétaire. Les chemins de propriété sont utilisés dans la liaison de données à des objets, ainsi que dans les plans conceptuels et les chronologies des animations.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe contient une chaîne <xref:System.Windows.PropertyPath.Path%2A>et la liste de propriétés de dépendance qui sont le <xref:System.Windows.PropertyPath.PathParameters%2A> dans la chaîne <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath> prend en charge deux modes de comportement :  
  
 **Mode source** décrit un chemin d’accès à une propriété qui est utilisée en tant que source pour une autre opération. Ce mode est utilisé par le <xref:System.Windows.Data.Binding> classe pour prendre en charge la liaison de données.  
  
 **Mode de cible** décrit un chemin d’accès à une propriété qui sera définie comme une propriété cible. Ce mode est utilisé par l’animation pour prendre en charge les méthodes setter de table de montage séquentiel et la chronologie.  
  
 Par exemple, `Background.Opacity` est un chemin d’accès en deux étapes. Ce chemin d’accès implique : recherchez tout d’abord le `Background` propriété d’un objet, obtenir l’objet de valeur qui le `Background` propriété a la valeur, puis obtenir la valeur de la `Opacity` propriété sur cet objet.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Utilisation d'attributs XAML  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>Valeurs XAML  
 *propertyPath*  
 Chaîne qui est évaluée pour être soit un chemin d’accès de propriété simple ou complexe. La syntaxe de paramètre un <xref:System.Windows.PropertyPath> dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] est flexible mais complexe et est décrite dans la rubrique distincte [syntaxe XAML de PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyPath" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Chemin de propriété qui décrit un chemin d'accès à une propriété [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] ou une propriété de dépendance unique.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyPath" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur a deux manières différentes selon qu’il est utilisé pour un chemin d’accès de propriété en mode source pour une liaison, ou pour un chemin d’accès de la propriété mode de cible pour une cible de la table de montage séquentiel.  
  
 Si vous utilisez <xref:System.Windows.PropertyPath> en mode source pour une liaison, `parameter` est une chaîne représentant un nom de propriété, ou peut être une chaîne qui décrit un chemin d’accès « pas à pas » à la propriété dans le [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modèle objet de l’objet qui est utilisé comme source pour une liaison. Pour un chemin d’accès de la propriété de liaison, le caractère qui identifie une étape « » est un point (.). Références d’indexeur (y compris plusieurs indexeurs et la différentiation de type) sont également pris en charge. Pour plus d’informations sur la syntaxe de la chaîne utilisée par le <xref:System.Windows.Data.Binding> d’objets, consultez <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Propriété utilisée comme source de liaison ne sont pas nécessairement une propriété de dépendance. Si la liaison met à jour bidirectionnelle, la propriété référencée doit être en lecture-écriture. Notez également que la cible de liaison ne doit être une propriété de dépendance. Pour plus d’informations, consultez [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Si vous utilisez <xref:System.Windows.PropertyPath> en mode de cible pour un chemin pour une cible de la table de montage séquentiel, `parameter` est généralement fourni en tant que type <xref:System.Windows.DependencyProperty>. Vous pouvez également spécifier une chaîne qui est le <xref:System.Windows.DependencyProperty.Name%2A>. Une de ces évaluer au même résultat, car il est stocké en interne sous forme de chaîne. Fourni <xref:System.Windows.DependencyProperty> est convertie en une chaîne via <xref:System.Windows.Markup.DependencyPropertyConverter>. Le <xref:System.Windows.Markup.DependencyPropertyConverter> prend en charge un format d’affectation de noms qualifié pour les propriétés de dépendance, afin de pouvoir spécifier un *typeName*.* propertyName* qualifié de chaîne de nom de propriété de dépendance à la <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructeur dans le code. Le chemin d’accès complet à l’identificateur de propriété de dépendance est un concept différent un tracé complexe. Un chemin d’accès complexe <xref:System.Windows.PropertyPath> au lieu de cela doit être créé avec le <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Chaîne qui spécifie <see cref="P:System.Windows.PropertyPath.Path" />, sous forme de jeton.</param>
        <param name="pathParameters">Tableau d'objets qui définit <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.PropertyPath" /> avec la chaîne du jeton de chemin d'accès et les paramètres fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette signature est utilisée en général uniquement pour le mode de cible <xref:System.Windows.PropertyPath> utilisations des tracés complexes.  
  
 Ce constructeur prend en charge `params` pour le `pathParameters` argument du constructeur. Par conséquent, vous pouvez spécifier le contenu de `pathParameters` comme une série d’arguments de constructeur séparés par des virgules qui remplissent le tableau, plutôt que pour les dimensions du tableau, puis le remplit avec les `pathParameters` éléments. Chaque élément que vous spécifiez doit être un des types suivants : <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Pour plus d’informations sur les spécifications des paramètres, consultez <xref:System.Windows.PropertyPath.Path%2A> et <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui décrit le chemin d'accès.</summary>
        <value>Chaîne qui décrit le chemin d'accès.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne contenue dans cette propriété a trois significations complètement différentes selon qu’un <xref:System.Windows.PropertyPath> est utilisé pour un chemin d’accès de propriété en mode source pour une liaison, pour un chemin d’accès de la propriété mode de cible pour une cible de la table de montage séquentiel ou pour un type complexe chemin d’accès pour une cible de la table de montage séquentiel.  
  
 Si vous utilisez <xref:System.Windows.PropertyPath> en mode source pour une liaison, <xref:System.Windows.PropertyPath.Path%2A> est une chaîne représentant un nom de propriété, ou peut être une chaîne qui décrit un chemin d’accès « pas à pas » à la propriété dans le [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modèle objet de l’objet qui est utilisé comme source pour une liaison. Pour un chemin d’accès de la propriété de liaison, le caractère qui identifie une étape « » est un point (.). Références d’indexeur (y compris plusieurs indexeurs et la différentiation de type) sont également pris en charge. Pour plus d’informations sur la syntaxe de la chaîne utilisée par le <xref:System.Windows.Data.Binding> d’objets, consultez <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Propriété utilisée comme source de liaison ne sont pas nécessairement une propriété de dépendance. Si la liaison met à jour bidirectionnelle, la source de propriété doit être en lecture-écriture. Notez également que la cible de liaison ne doit être une propriété de dépendance. Pour plus d’informations, consultez [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Si vous utilisez <xref:System.Windows.PropertyPath> en mode de cible pour un chemin pour une cible de la table de montage séquentiel, <xref:System.Windows.PropertyPath> est une chaîne qui est un *typeName*.* propertyName* chaîne de nom de propriété de dépendance qualifié.  
  
 Si vous utilisez <xref:System.Windows.PropertyPath> pour un tracé complexe pour une cible de la table de montage séquentiel, <xref:System.Windows.PropertyPath.Path%2A> est un format de chaîne sous forme de jeton qui décrit les relations des objets donnés le <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
-   Chaque élément du tableau est spécifié dans ce format par l’index de tableau pour l’élément entre parenthèses. Par exemple, pour spécifier le premier élément du tableau, le jeton de chaîne est `(0)`.  
  
-   Relations entre les éléments (« étapes » dans le chemin d’accès) sont spécifiées par un point (.). Transférer la propriété du point est la première étape dans le chemin d’accès, la propriété après est la deuxième étape et ainsi de suite (vous pouvez spécifier plus de deux étapes). La dernière étape de la chaîne représente toujours la propriété animée.  
  
-   Éléments au sein des propriétés de collection sont accessibles avec la syntaxe de l’indexeur, avec l’index entre crochets ([et]). L’indexeur est ajouté au jeton représentant la propriété. Par exemple, ce qui suit est un chemin d’accès en deux étapes, la combinaison de jeton dans la première étape indiquant le deuxième élément à partir de la collection de cette propriété : `(0)[1].(1)` . Vous ne pouvez pas utiliser un indexeur sur la dernière propriété de la chaîne ; Vous ne pouvez pas animer la position de la collection réelle, vous devez animer une propriété sur cet objet.  
  
 La chaîne de chemin d’accès pour un <xref:System.Windows.PropertyPath> est généralement définie par les constructeurs : le <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature pour les liaisons ou les cibles de la table de montage séquentiel étape unique, le <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature pour les cibles de la table de montage séquentiel à plusieurs étapes.  
  
 **XAML :** lorsque vous utilisez un <xref:System.Windows.PropertyPath> pour décrire une référence de propriété dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], comme une valeur d’attribut, la chaîne que vous spécifiez est d’abord gérée par un convertisseur de type (<xref:System.Windows.PropertyPathConverter>). Ce convertisseur de type traite la chaîne, puis en fonction de sa syntaxe pour appeler l’une de le <xref:System.Windows.PropertyPath> signatures de constructeur. Cette indirection via le convertisseur de type gestion d’une valeur d’attribut est généralement votre utilisation <xref:System.Windows.PropertyPath> dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], au lieu de déclarer un <xref:System.Windows.PropertyPath> de l’objet élément et appliquer des valeurs spécifiques aux attributs comme <xref:System.Windows.PropertyPath.Path%2A> et <xref:System.Windows.PropertyPath.PathParameters%2A>. Pour plus d’informations, consultez [syntaxe XAML de PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Membres de la <xref:System.Windows.PropertyPath> type ne sont pas généralement définies dans un direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntaxe. Consultez la section Notes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la liste de paramètres à utiliser lorsque le chemin d'accès fait référence à des paramètres indexés.</summary>
        <value>Liste de paramètres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés d’un <xref:System.Windows.PropertyPath> sont généralement établies par les constructeurs. Pour le paramètre <xref:System.Windows.PropertyPath.PathParameters%2A>, le <xref:System.Windows.PropertyPath.%23ctor%2A> constructeur est particulièrement utile, car le `pathParameters` désigné en tant qu’argument du constructeur `params`, ce qui signifie que vous n’avez pas besoin de créer ou de dimension d’un tableau pour la construction. Vous spécifiez simplement chaque membre du tableau comme paramètre supplémentaire.  
  
 Si la propriété finale est la cible est un <xref:System.Windows.Freezable> tapez, que la valeur sera clonée. Pour plus d’informations, consultez [vue d’ensemble des Storyboards](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 L’évaluation de la chaîne de propriété est effectuée par les mécanismes d’animation de storyboard. À la <xref:System.Windows.PropertyPath> niveau, aucune validation n’est effectuée pour vous assurer que les étapes du chemin d’accès se connectent du tout. Par exemple, vous pouvez construire un chemin d’accès de propriété qui a <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> en tant que la première étape, et <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> en tant que la deuxième étape. Mais un chemin d’accès de propriété échoue s’il est appliqué en tant que cible, car le type de pinceau qui remplit <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> n’a pas un <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> propriété. Chemins d’accès de propriété non valide échouent en silence. Pour plus d’informations, consultez [Vue d’ensemble des plans conceptuels](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **XAML :** lorsque vous utilisez un <xref:System.Windows.PropertyPath> pour décrire une référence de propriété dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], comme une valeur d’attribut, la chaîne que vous spécifiez est d’abord gérée par un convertisseur de type (<xref:System.Windows.PropertyPathConverter>). Ce convertisseur de type traite la chaîne, puis en fonction de sa syntaxe pour appeler l’une de le <xref:System.Windows.PropertyPath> signatures de constructeur. Cette indirection via le convertisseur de type gestion d’une valeur d’attribut est généralement votre utilisation <xref:System.Windows.PropertyPath> dans [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], au lieu de déclarer un <xref:System.Windows.PropertyPath> de l’objet élément et appliquer des valeurs spécifiques aux attributs comme <xref:System.Windows.PropertyPath.Path%2A> et <xref:System.Windows.PropertyPath.PathParameters%2A>. Pour plus d’informations, consultez [syntaxe XAML de PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Membres de la <xref:System.Windows.PropertyPath> type ne sont pas généralement définies dans un direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntaxe. Consultez la section Notes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>