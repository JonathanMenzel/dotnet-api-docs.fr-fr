<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyPath.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58557652b4b165aa49213450463eba1ffb0a2f7de.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8557652b4b165aa49213450463eba1ffb0a2f7de</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Implements a data structure for describing a property as a path below another property, or below an owning type.</source>
          <target state="translated">Implémente une structure de données pour décrire une propriété comme un chemin sous une autre propriété ou sous un type propriétaire.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Property paths are used in data binding to objects, and in storyboards and timelines for animations.</source>
          <target state="translated">Les chemins de propriété sont utilisés dans la liaison de données à des objets, ainsi que dans les plans conceptuels et les chronologies des animations.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This class contains a string <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>, and list of dependency properties that are the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph> into the string <ph id="ph3">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>.</source>
          <target state="translated">Cette classe contient une chaîne <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>et la liste des propriétés de dépendance qui sont le <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph> dans la chaîne <ph id="ph3">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> supports two modes of behavior:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> prend en charge deux modes de comportement :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">**</bpt>Source mode<ept id="p1">**</ept> describes a path to a property that is used as a source for some other operation.</source>
          <target state="translated"><bpt id="p1">**</bpt>Le mode source<ept id="p1">**</ept> décrit un chemin d’accès à une propriété qui est utilisée en tant que source pour une autre opération.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This mode is used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class to support data binding.</source>
          <target state="translated">Ce mode est utilisé par la <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> classe pour prendre en charge la liaison de données.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">**</bpt>Target mode<ept id="p1">**</ept> describes a path to a property that will be set as a target property.</source>
          <target state="translated"><bpt id="p1">**</bpt>Mode cible<ept id="p1">**</ept> décrit un chemin d’accès à une propriété qui sera définie comme une propriété cible.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This mode is used by animation in support of storyboard and timeline setters.</source>
          <target state="translated">Ce mode est utilisé par l’animation pour prendre en charge les méthodes setter de table de montage séquentiel et la chronologie.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>For instance, <ph id="ph1">`Background.Opacity`</ph> is a two-step path.</source>
          <target state="translated">Par exemple, <ph id="ph1">`Background.Opacity`</ph> est un chemin d’accès en deux étapes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This path implies: first, find the <ph id="ph1">`Background`</ph> property of an object, get the value object that the <ph id="ph2">`Background`</ph> property is set to, and then get the value of the <ph id="ph3">`Opacity`</ph> property on that object.</source>
          <target state="translated">Ce chemin d’accès implique : rechercher tout d’abord, le <ph id="ph1">`Background`</ph> propriété d’un objet, pour obtenir l’objet de valeur qui le <ph id="ph2">`Background`</ph> propriété a la valeur, puis obtenir la valeur de la <ph id="ph3">`Opacity`</ph> propriété sur cet objet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>XAML Attribute Usage</source>
          <target state="translated">Utilisation d'attributs XAML</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>XAML Values</source>
          <target state="translated">Valeurs XAML</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">*</bpt>propertyPath<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>propertyPath<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>A string that is evaluated to be either a simple or complex property path.</source>
          <target state="translated">Chaîne qui est évaluée pour être soit un chemin d’accès de propriété simple ou complexe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>The syntax for setting a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is versatile but complex, and is described in the separate topic <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">La syntaxe permettant de définir un <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> dans <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> est flexible mais complexe et est décrite dans la rubrique distincte <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A property path that either describes a path to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> property, or a single dependency property.</source>
          <target state="translated">Chemin de propriété qui décrit un chemin d'accès à une propriété <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> ou une propriété de dépendance unique.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</source>
          <target state="translated">Ce constructeur a deux manières différentes selon qu’il est utilisé pour un chemin d’accès de propriété en mode source pour une liaison, ou pour un chemin d’accès de propriété en mode cible pour une cible de la table de montage séquentiel.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in source mode for a binding, <ph id="ph2">`parameter`</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> en mode source pour une liaison, <ph id="ph2">`parameter`</ph> est une chaîne représentant un nom de propriété, ou peut être une chaîne qui décrit un chemin d’accès « pas à pas » à la propriété dans le <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> de l’objet qui est utilisé comme source de modèle d’objet pour une liaison.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">Pour un chemin d’accès de la propriété de liaison, le caractère qui identifie une étape « » est un point (.).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">Les références d’indexeur (y compris plusieurs indexeurs et la différentiation de type) sont également pris en charge.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For more details on the syntax of the string as specifically used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur la syntaxe de la chaîne utilisée par le <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> d’objets, consultez <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">Une propriété utilisée comme source de liaison ne sont pas nécessairement une propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If the binding updates two-way, the property referenced must be read-write.</source>
          <target state="translated">Si la liaison de mise à jour bidirectionnelle, la propriété référencée doit être en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">Notez également que la cible de liaison ne doit pas être une propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>vue d’ensemble de la liaison de données<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in target mode for a single-step path for a storyboard target, <ph id="ph2">`parameter`</ph> is generally provided as type <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> en mode cible pour un chemin pour une cible de la table de montage séquentiel, <ph id="ph2">`parameter`</ph> est généralement fourni comme type <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>You can also specify a string that is the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;</ph>.</source>
          <target state="translated">Vous pouvez également spécifier une chaîne qui est le <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Either of these evaluate to the same result, because it is stored internally as a string.</source>
          <target state="translated">Une de ces prendre le même résultat, car il est stocké en interne sous forme de chaîne.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A provided <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> is converted to a string through <ph id="ph2">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> est converti en une chaîne via <ph id="ph2">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> supports a qualified naming format for dependency properties, so you can specify a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string to the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor in code.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> prend en charge un format d’affectation de noms qualifié pour les propriétés de dépendance, vous pouvez spécifier un <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> qualifiée de chaîne de nom de propriété de dépendance pour le <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructeur dans le code.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>The qualified path to the dependency property identifier is a different concept than a complex path.</source>
          <target state="translated">Le chemin d’accès complet à l’identificateur de propriété de dépendance est un concept autre qu’un chemin d’accès complexe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A complex-path <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> should instead be created with the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Un chemin d’accès complexe <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> au lieu de cela doit être créé avec le <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>A string that specifies the <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.Path" /&gt;</ph>, in a tokenized format.</source>
          <target state="translated">Chaîne qui spécifie <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.Path" /&gt;</ph>, sous forme de jeton.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>An array of objects that sets the <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.PathParameters" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets qui définit <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.PathParameters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class, with the provided pathing token string and parameters.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> avec la chaîne du jeton de chemin d'accès et les paramètres fournis.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>This signature is generally only used for target-mode <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> usages with complex paths.</source>
          <target state="translated">Cette signature est généralement utilisée uniquement pour le mode cible <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> utilisations des chemins d’accès complexes.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>This constructor supports <ph id="ph1">`params`</ph> for the <ph id="ph2">`pathParameters`</ph> constructor argument.</source>
          <target state="translated">Ce constructeur prend en charge <ph id="ph1">`params`</ph> pour la <ph id="ph2">`pathParameters`</ph> argument du constructeur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Therefore you can specify the contents of <ph id="ph1">`pathParameters`</ph> as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the <ph id="ph2">`pathParameters`</ph> items.</source>
          <target state="translated">Par conséquent, vous pouvez spécifier le contenu de <ph id="ph1">`pathParameters`</ph> comme une série d’arguments de constructeur séparés par des virgules qui remplissent le tableau, plutôt que pour les dimensions du tableau, puis le remplit avec les <ph id="ph2">`pathParameters`</ph> éléments.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Each item you specify must be one of the following types: <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Chaque élément que vous spécifiez doit être un des types suivants : <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>For more information on the requirements of the parameters, see <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur les spécifications des paramètres, consultez <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.PropertyPath.Path">
          <source>Gets or sets the string that describes the path.</source>
          <target state="translated">Obtient ou définit la chaîne qui décrit le chemin d'accès.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The string that describes the path.</source>
          <target state="translated">Chaîne qui décrit le chemin d'accès.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The string contained in this property has three completely different meanings depending on whether a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</source>
          <target state="translated">La chaîne contenue dans cette propriété a trois significations complètement différentes selon qu’un <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> est utilisé pour un chemin d’accès de propriété en mode source pour une liaison, pour un chemin d’accès de propriété en mode cible pour une cible de la table de montage séquentiel ou pour un type complexe chemin d’accès pour une cible de l’animation.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in source mode for a binding, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> en mode source pour une liaison, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> est une chaîne représentant un nom de propriété, ou peut être une chaîne qui décrit un chemin d’accès « pas à pas » à la propriété dans le <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> de l’objet qui est utilisé comme source de modèle d’objet pour une liaison.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">Pour un chemin d’accès de la propriété de liaison, le caractère qui identifie une étape « » est un point (.).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">Les références d’indexeur (y compris plusieurs indexeurs et la différentiation de type) sont également pris en charge.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For more details on the syntax of the string as specifically used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations sur la syntaxe de la chaîne utilisée par le <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> d’objets, consultez <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">Une propriété utilisée comme source de liaison ne sont pas nécessairement une propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If the binding updates two-way, the property source must be read-write.</source>
          <target state="translated">Si la liaison de mise à jour bidirectionnelle, la source de la propriété doit être en lecture-écriture.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">Notez également que la cible de liaison ne doit pas être une propriété de dépendance.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>vue d’ensemble de la liaison de données<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in target mode for a single-step path for a storyboard target, <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> is a string that is a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> en mode cible pour un chemin pour une cible de la table de montage séquentiel, <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> est une chaîne qui est une <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> chaîne de nom de propriété de dépendance qualifié.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> for a complex path for a storyboard target, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> is a tokenized string format that describes the relationships of the various objects given in the <ph id="ph3">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> pour un chemin d’accès complexe avec une cible de la table de montage séquentiel, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> est un format de chaîne sous forme de jeton qui décrit les relations des objets donnés le <ph id="ph3">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</source>
          <target state="translated">Chaque élément du tableau est spécifié dans ce format par l’index de tableau pour l’élément entre parenthèses.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For example, to specify the first item in the array, the string token is <ph id="ph1">`(0)`</ph>.</source>
          <target state="translated">Par exemple, pour spécifier le premier élément du tableau, le jeton de chaîne est <ph id="ph1">`(0)`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Relationships between items ("steps" in the path) are specified by a dot (.).</source>
          <target state="translated">Relations entre les éléments (« étapes » dans le chemin d’accès) sont spécifiées par un point (.).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</source>
          <target state="translated">La propriété vers l’avant du point est la première étape dans le chemin d’accès, la propriété après est la deuxième étape et ainsi de suite (vous pouvez spécifier plus de deux étapes).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The last step in the chain always represents the property being animated.</source>
          <target state="translated">La dernière étape de la chaîne représente toujours la propriété animée.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</source>
          <target state="translated">Éléments dans les propriétés de la collection sont accessibles avec une syntaxe d’indexeur, avec l’index entre crochets ([et]).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The indexer is additive to the token representing the property.</source>
          <target state="translated">L’indexeur est ajouté au jeton représentant la propriété.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: <ph id="ph1">`(0)[1].(1)`</ph> .</source>
          <target state="translated">Par exemple, ce qui suit est un chemin d’accès en deux étapes, la combinaison de jeton de la première étape indiquant le deuxième élément à partir de la collection de cette propriété : <ph id="ph1">`(0)[1].(1)`</ph> .</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</source>
          <target state="translated">Vous ne pouvez pas utiliser un indexeur sur la dernière propriété de la chaîne ; Impossible d’animer la position de la collection réelle, vous devez animer une propriété sur cet objet.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The path string for a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> is typically established through the constructors: the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.Object%29&gt;</ph> signature for bindings or single-step storyboard targets, the <ph id="ph3">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> signature for multi-step storyboard targets.</source>
          <target state="translated">La chaîne de chemin d’accès pour un <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> est généralement définie par les constructeurs : le <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.Object%29&gt;</ph> signature pour les liaisons ou les cibles de l’animation de la seule étape, le <ph id="ph3">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> signature pour les cibles de la table de montage séquentiel à plusieurs étapes.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> to describe a property reference in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML :<ept id="p1">**</ept> lorsque vous utilisez un <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> pour décrire une référence de propriété dans <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, comme une valeur d’attribut, la chaîne que vous spécifiez est d’abord gérée par un convertisseur de type (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>This type converter then processes the string and based on its syntax will call one of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> constructor signatures.</source>
          <target state="translated">Ce convertisseur de type, puis traite la chaîne et en fonction de sa syntaxe pour appeler l’une de le <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> signatures de constructeur.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>This indirection through the type converter handling an attribute value is generally how you use <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> object element and then applying specific values to attributes such as <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Cette indirection via le convertisseur de type gestion d’une valeur d’attribut est généralement utilisation <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> dans <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, au lieu de déclarer un <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> élément, puis en appliquant des valeurs spécifiques aux attributs tels que l’objet <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> et <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type are not typically set in a direct <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Membres de la <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type ne sont pas généralement définie dans directe <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntaxe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>See Remarks.</source>
          <target state="translated">Consultez la section Notes.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Gets the list of parameters to use when the path refers to indexed parameters.</source>
          <target state="translated">Obtient la liste de paramètres à utiliser lorsque le chemin d'accès fait référence à des paramètres indexés.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The parameter list.</source>
          <target state="translated">Liste de paramètres.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The properties for a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> are typically established through the constructors.</source>
          <target state="translated">Les propriétés d’un <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> sont généralement établies par les constructeurs.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For setting <ph id="ph1">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;</ph> constructor is particularly convenient because the <ph id="ph3">`pathParameters`</ph> constructor argument is designated as <ph id="ph4">`params`</ph>, meaning that you do not need to create or dimension an array for construction.</source>
          <target state="translated">Pour le paramètre <ph id="ph1">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>, le <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;</ph> constructeur est particulièrement utile, car le <ph id="ph3">`pathParameters`</ph> argument du constructeur est désignée comme <ph id="ph4">`params`</ph>, ce qui signifie que vous n’avez pas besoin créer ou d’un tableau pour la construction de la dimension.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>You simply specify each member of the array as an additional parameter.</source>
          <target state="translated">Vous spécifiez simplement chaque membre du tableau comme paramètre supplémentaire.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>If the final property that is the target is a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> type, that value will be cloned.</source>
          <target state="translated">Si la propriété finale qui est la cible est un <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> de type, que la valeur sera clonée.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For details, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</source>
          <target state="translated">L’évaluation de la chaîne de propriété est effectuée par les mécanismes d’animation de plan conceptuel.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>At the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> level, no validation is performed to make sure that the steps of the path connect at all.</source>
          <target state="translated">À la <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> niveau, aucune validation n’est effectuée pour vous assurer que les étapes du chemin d’accès se connectent du tout.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For instance, you can construct a property path that has <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> as the first step, and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType&gt;</ph> as the second step.</source>
          <target state="translated">Par exemple, vous pouvez construire un chemin d’accès de propriété qui a <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> en tant que la première étape, et <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType&gt;</ph> en tant que la deuxième étape.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>But such a property path would fail if actually applied as a target, because the Brush type that fills <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> does not have a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Mais un chemin d’accès de propriété échoue s’il est appliqué en tant que cible, car le type de pinceau qui remplit <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> n’a pas un <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Invalid property paths fail silently.</source>
          <target state="translated">Chemins d’accès de propriété non valide échouent en silence.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Vue d’ensemble des plans conceptuels<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> to describe a property reference in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML :<ept id="p1">**</ept> lorsque vous utilisez un <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> pour décrire une référence de propriété dans <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, comme une valeur d’attribut, la chaîne que vous spécifiez est d’abord gérée par un convertisseur de type (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>This type converter then processes the string and based on its syntax will call one of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> constructor signatures.</source>
          <target state="translated">Ce convertisseur de type, puis traite la chaîne et en fonction de sa syntaxe pour appeler l’une de le <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> signatures de constructeur.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>This indirection through the type converter handling an attribute value is generally how you use <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> object element and then applying specific values to attributes such as <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Cette indirection via le convertisseur de type gestion d’une valeur d’attribut est généralement utilisation <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> dans <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, au lieu de déclarer un <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> élément, puis en appliquant des valeurs spécifiques aux attributs tels que l’objet <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> et <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>XAML Text Usage</source>
          <target state="translated">Utilisation de texte XAML</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type are not typically set in a direct <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Membres de la <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type ne sont pas généralement définie dans directe <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntaxe.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>See Remarks.</source>
          <target state="translated">Consultez la section Notes.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>