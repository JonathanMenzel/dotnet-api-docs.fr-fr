<Type Name="EventRoute" FullName="System.Windows.EventRoute">
  <TypeSignature Language="C#" Value="public sealed class EventRoute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRoute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventRoute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRoute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRoute sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75bc3-101">Représente le conteneur de l'itinéraire qu'un événement routé doit suivre.</span><span class="sxs-lookup"><span data-stu-id="75bc3-101">Represents the container for the route to be followed by a routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75bc3-102">Cette classe correspond à un élément valide <xref:System.Windows.RoutedEvent>et contient une liste ordonnée de cibles objet et le gestionnaire qui font référence à l’itinéraire d’événement pour cet événement.</span><span class="sxs-lookup"><span data-stu-id="75bc3-102">This class corresponds to a valid <xref:System.Windows.RoutedEvent>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</span></span> <span data-ttu-id="75bc3-103"><xref:System.Windows.EventRoute> prend en charge l’ajout de nouvelles entrées à la liste et ainsi à appeler les gestionnaires dans la liste.</span><span class="sxs-lookup"><span data-stu-id="75bc3-103"><xref:System.Windows.EventRoute> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</span></span>  
  
 <span data-ttu-id="75bc3-104">Plus d’opérations d’ajout de gestionnaires pour [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] événements ne nécessitent pas d’utiliser cette classe (par exemple, utilisez <xref:System.Windows.EventManager> méthodes pour ajouter la gestion de classe, ou interrogez les gestionnaires existants d’un événement).</span><span class="sxs-lookup"><span data-stu-id="75bc3-104">Most normal operations for adding handlers for [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events do not require working with this class (for instance, use <xref:System.Windows.EventManager> methods to add class handling, or query for existing handlers of an event).</span></span> <span data-ttu-id="75bc3-105">Cette classe est utilisée principalement lorsque les éléments ont une connaissance particulière des éléments enfants ou des éléments parents qui le rendent pratique ajouter des éléments à ou supprimer des éléments à partir de l’itinéraire d’événement calculé par défaut.</span><span class="sxs-lookup"><span data-stu-id="75bc3-105">This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRoute (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRoute(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="75bc3-106">Identificateur d'événement non NULL à associer à cet itinéraire d'événement.</span><span class="sxs-lookup"><span data-stu-id="75bc3-106">The non-NULL event identifier to be associated with this event route.</span></span></param>
        <summary><span data-ttu-id="75bc3-107">Initialise une instance de la classe <see cref="T:System.Windows.EventRoute" />.</span><span class="sxs-lookup"><span data-stu-id="75bc3-107">Initializes an instance of the <see cref="T:System.Windows.EventRoute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object target, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(object target, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (target As Object, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ target, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="75bc3-108">Spécifie l'objet cible dont le gestionnaire doit être ajouté à l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="75bc3-108">Specifies the target object of which the handler is to be added to the route.</span></span></param>
        <param name="handler"><span data-ttu-id="75bc3-109">Spécifie le gestionnaire à ajouter à l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="75bc3-109">Specifies the handler to be added to the route.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="75bc3-110">Indique si l'écouteur détecte des événements qui ont déjà été gérés.</span><span class="sxs-lookup"><span data-stu-id="75bc3-110">Indicates whether or not the listener detects events that have already been handled.</span></span></param>
        <summary><span data-ttu-id="75bc3-111">Ajoute le gestionnaire spécifié de la cible spécifiée à l'itinéraire.</span><span class="sxs-lookup"><span data-stu-id="75bc3-111">Adds the specified handler for the specified target to the route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75bc3-112">Il n’est pas une erreur d’ajouter un gestionnaire pour une instance cible particulière à deux reprises.</span><span class="sxs-lookup"><span data-stu-id="75bc3-112">It is not an error to add a handler for a particular target instance twice.</span></span> <span data-ttu-id="75bc3-113">Dans ce cas, le gestionnaire sera appelé deux fois.</span><span class="sxs-lookup"><span data-stu-id="75bc3-113">In such a case, the handler will be called twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchNode">
      <MemberSignature Language="C#" Value="public object PeekBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75bc3-114">Retourne l'élément supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-114">Returns the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="75bc3-115">Élément supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-115">The top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchSource">
      <MemberSignature Language="C#" Value="public object PeekBranchSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchSource" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75bc3-116">Retourne la source de l'élément supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-116">Returns the source for the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="75bc3-117">Source de l'élément supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-117">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBranchNode">
      <MemberSignature Language="C#" Value="public object PopBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PopBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PopBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PopBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PopBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75bc3-118">Retourne le nœud supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-118">Returns the top-most node on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="75bc3-119">Nœud supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-119">The top-most node on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushBranchNode">
      <MemberSignature Language="C#" Value="public void PushBranchNode (object node, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushBranchNode(object node, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushBranchNode (node As Object, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushBranchNode(System::Object ^ node, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="75bc3-120">Élément supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-120">The top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <param name="source"><span data-ttu-id="75bc3-121">Source de l'élément supérieur sur la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-121">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <summary><span data-ttu-id="75bc3-122">Ajoute le nœud supérieur à la pile d'itinéraires d'événements à laquelle deux arborescences logiques divergent.</span><span class="sxs-lookup"><span data-stu-id="75bc3-122">Adds the top-most node to the event route stack at which two logical trees diverge.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>