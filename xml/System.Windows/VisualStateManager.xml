<Type Name="VisualStateManager" FullName="System.Windows.VisualStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="383e291c4cf1fb0fe8e2201dec79c44332c74853" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455978" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualStateManager : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateManager extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateManager&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateManager : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateManager = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7c189-101">Manages states and the logic for transitioning between states for controls.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c189-101">Manages states and the logic for transitioning between states for controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c189-102">Le <xref:System.Windows.VisualStateManager> vous permet de spécifier des États pour un contrôle, l’apparence d’un contrôle lorsqu’il est dans un certain état, et lorsqu’un contrôle change d’état.</span><span class="sxs-lookup"><span data-stu-id="7c189-102">The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</span></span> <span data-ttu-id="7c189-103">Par exemple, un <xref:System.Windows.Controls.Button> peut avoir une apparence légèrement différente que l’utilisateur appuie ou il n’est pas enfoncé.</span><span class="sxs-lookup"><span data-stu-id="7c189-103">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="7c189-104">Deux états définis par le <xref:System.Windows.Controls.Button> définit correspondent aux lorsqu’elle est activée (`"Pressed"`) et quand il n’est pas (`"Normal"`).</span><span class="sxs-lookup"><span data-stu-id="7c189-104">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span> <span data-ttu-id="7c189-105">L’apparence d’un contrôle lorsqu’il est dans un état est défini par un <xref:System.Windows.VisualState>.</span><span class="sxs-lookup"><span data-stu-id="7c189-105">The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>.</span></span> <span data-ttu-id="7c189-106">A <xref:System.Windows.VisualState> contient une collection de <xref:System.Windows.Media.Animation.Storyboard> objets qui spécifient comment l’apparence du contrôle change lorsque le contrôle est dans cet état.</span><span class="sxs-lookup"><span data-stu-id="7c189-106">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state.</span></span> <span data-ttu-id="7c189-107">Ajouter des états visuels à un contrôle en définissant la `VisualStateManager.VisualStateGroups` jointe de propriété du contrôle.</span><span class="sxs-lookup"><span data-stu-id="7c189-107">You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="7c189-108">Chaque <xref:System.Windows.VisualStateGroup> contient une collection de <xref:System.Windows.VisualState> les objets qui s’excluent mutuellement.</span><span class="sxs-lookup"><span data-stu-id="7c189-108">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive.</span></span> <span data-ttu-id="7c189-109">Autrement dit, le contrôle est toujours exactement un état de chaque <xref:System.Windows.VisualStateGroup>.</span><span class="sxs-lookup"><span data-stu-id="7c189-109">That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="7c189-110">Le <xref:System.Windows.VisualStateManager> vous permet également de spécifier quand un contrôle passe à un état spécifique.</span><span class="sxs-lookup"><span data-stu-id="7c189-110">The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state.</span></span> <span data-ttu-id="7c189-111">La méthode que vous devez appeler pour modifier des États dépend de votre scénario.</span><span class="sxs-lookup"><span data-stu-id="7c189-111">The method that you should call to change states depends on your scenario.</span></span> <span data-ttu-id="7c189-112">Si vous créez un contrôle qui utilise le <xref:System.Windows.VisualStateManager> dans son <xref:System.Windows.Controls.ControlTemplate>, appelez le <xref:System.Windows.VisualStateManager.GoToState%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7c189-112">If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span> <span data-ttu-id="7c189-113">Pour plus d’informations sur la façon de créer des contrôles qui utilisent la <xref:System.Windows.VisualStateManager>, consultez [création d’un contrôle qui a une apparence personnalisable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span><span class="sxs-lookup"><span data-stu-id="7c189-113">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span> <span data-ttu-id="7c189-114">Si vous utilisez la <xref:System.Windows.VisualStateManager> en dehors d’un <xref:System.Windows.Controls.ControlTemplate> (par exemple, si vous utilisez un <xref:System.Windows.VisualStateManager> dans un <xref:System.Windows.Controls.UserControl> ou dans un élément unique), appeler le <xref:System.Windows.VisualStateManager.GoToElementState%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7c189-114">If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method.</span></span> <span data-ttu-id="7c189-115">Dans les deux cas, le <xref:System.Windows.VisualStateManager> exécute la logique nécessaire pour démarrer et arrêter les animations qui sont associées à l’état impliqué convenablement.</span><span class="sxs-lookup"><span data-stu-id="7c189-115">In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</span></span> <span data-ttu-id="7c189-116">Par exemple, supposons qu’un contrôle définit les États, `State1` et `State2`, chacun d’eux a un storyboard associé.</span><span class="sxs-lookup"><span data-stu-id="7c189-116">For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it.</span></span> <span data-ttu-id="7c189-117">Si le contrôle se trouve dans `State1` et que vous passez `State2` à <xref:System.Windows.VisualStateManager.GoToState%2A> ou <xref:System.Windows.VisualStateManager.GoToElementState%2A>, le <xref:System.Windows.VisualStateManager> démarre l’animation dans `State2` et arrête le plan conceptuel dans `State1`.</span><span class="sxs-lookup"><span data-stu-id="7c189-117">If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.</span></span>  
  
 <span data-ttu-id="7c189-118">Les contrôles qui sont inclus avec [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] utiliser le <xref:System.Windows.VisualStateManager> pour modifier les états visuels.</span><span class="sxs-lookup"><span data-stu-id="7c189-118">Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states.</span></span> <span data-ttu-id="7c189-119">Lorsque vous créez un <xref:System.Windows.Controls.ControlTemplate> pour un contrôle qui est inclus avec [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], vous pouvez ajouter <xref:System.Windows.VisualState> objets du contrôle <xref:System.Windows.Controls.ControlTemplate> pour spécifier l’apparence du contrôle dans un certain état.</span><span class="sxs-lookup"><span data-stu-id="7c189-119">When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state.</span></span> <span data-ttu-id="7c189-120">Pour rechercher les noms des états visuels pour les contrôles qui sont inclus avec [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], consultez [contrôle Styles et modèles](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="7c189-120">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="7c189-121">Gère la logique du contrôle transition entre les États, donc il vous suffit de définir la <xref:System.Windows.VisualState> objets dans la nouvelle <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="7c189-121">The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="7c189-122">Pour plus d’informations sur la création de modèles de contrôle pour les contrôles existants, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="7c189-122">For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 <span data-ttu-id="7c189-123">Si vous souhaitez implémenter votre propre logique pour la transition entre les États, vous devez hériter <xref:System.Windows.VisualStateManager>, remplacer le <xref:System.Windows.VisualStateManager.GoToStateCore%2A> (méthode) et définissez la <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> jointe de propriété du contrôle qui utilise la logique personnalisée.</span><span class="sxs-lookup"><span data-stu-id="7c189-123">If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> attached property on the control that uses the custom logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c189-124">L’exemple suivant crée un <xref:System.Windows.Shapes.Rectangle> et ajoute un <xref:System.Windows.VisualStateGroup> nommé `CommonStates` à la `VisualStateManager.VisualStatesGroups` propriété jointe.</span><span class="sxs-lookup"><span data-stu-id="7c189-124">The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property.</span></span> <span data-ttu-id="7c189-125">L’exemple définit le `MouseOver` et `Normal` <xref:System.Windows.VisualState> des objets dans le `CommonStates` <xref:System.Windows.VisualStateGroup>.</span><span class="sxs-lookup"><span data-stu-id="7c189-125">The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="7c189-126">Lorsque l’utilisateur déplace le pointeur de la souris sur le <xref:System.Windows.Shapes.Rectangle>, celui-ci passe du rouge au vert en une demi-seconde.</span><span class="sxs-lookup"><span data-stu-id="7c189-126">When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second.</span></span> <span data-ttu-id="7c189-127">Lorsque l’utilisateur déplace le curseur du rectangle, le <xref:System.Windows.Controls.Grid> redevient immédiatement rouge.</span><span class="sxs-lookup"><span data-stu-id="7c189-127">When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red.</span></span> <span data-ttu-id="7c189-128">Notez que la `Normal` état ne définit pas un <xref:System.Windows.Media.Animation.Storyboard>.</span><span class="sxs-lookup"><span data-stu-id="7c189-128">Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="7c189-129">A <xref:System.Windows.Media.Animation.Storyboard> n’est pas nécessaire, car lorsque le <xref:System.Windows.Shapes.Rectangle> effectue la transition du `MouseOver` l’état le `Normal` état, le <xref:System.Windows.Media.Animation.Storyboard> pour `MouseOver` est arrêté et le <xref:System.Windows.Media.SolidColorBrush.Color%2A> propriété pour la <xref:System.Windows.Media.SolidColorBrush> retourne rouge.</span><span class="sxs-lookup"><span data-stu-id="7c189-129">A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  
  
 <span data-ttu-id="7c189-130">L’exemple suivant montre le Gestionnaire d’événements qui est défini dans l’exemple précédent et appelle la <xref:System.Windows.VisualStateManager.GoToElementState%2A> méthode pour effectuer la transition entre les États.</span><span class="sxs-lookup"><span data-stu-id="7c189-130">The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states.</span></span> <span data-ttu-id="7c189-131">Si le rectangle dans l’exemple précédent faisait partie d’un <xref:System.Windows.Controls.ControlTemplate>, l’exemple aurait appeler le <xref:System.Windows.VisualStateManager.GoToState%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7c189-131">If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span>  
  
 [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]
 [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c189-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManager">
      <MemberSignature Language="C#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="ILAsm" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      <MemberSignature Language="VB.NET" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="F#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" Usage="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomVisualStateManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomVisualStateManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomVisualStateManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomVisualStateManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c189-133">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-133">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.VisualStateManager GetCustomVisualStateManager(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomVisualStateManager (obj As FrameworkElement) As VisualStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::VisualStateManager ^ GetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCustomVisualStateManager : System.Windows.FrameworkElement -&gt; System.Windows.VisualStateManager" Usage="System.Windows.VisualStateManager.GetCustomVisualStateManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualStateManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7c189-134">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-134">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-135">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-135">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c189-136">The visual state manager that transitions between the states of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-136">The visual state manager that transitions between the states of a control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualStateGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetVisualStateGroups(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVisualStateGroups (obj As FrameworkElement) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetVisualStateGroups(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetVisualStateGroups : System.Windows.FrameworkElement -&gt; System.Collections.IList" Usage="System.Windows.VisualStateManager.GetVisualStateGroups obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7c189-137">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-137">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-138">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-138">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c189-139">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-139">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToElementState">
      <MemberSignature Language="C#" Value="public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToElementState(class System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToElementState (stateGroupsRoot As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToElementState(System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToElementState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToElementState (stateGroupsRoot, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateGroupsRoot">
          <span data-ttu-id="7c189-140">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-140">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="7c189-141">The state to transition to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-141">The state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="7c189-142">
            <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-142">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-143">Transitions the element between two states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-143">Transitions the element between two states.</span>
          </span>
          <span data-ttu-id="7c189-144">Use this method to transition states that are defined by an application, rather than defined by a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-144">Use this method to transition states that are defined by an application, rather than defined by a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c189-145">
            <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-145">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c189-146">Appelez le <xref:System.Windows.VisualStateManager.GoToElementState%2A> méthode pour modifier les États sur un élément en dehors d’un <xref:System.Windows.Controls.ControlTemplate> (par exemple, si vous utilisez un <xref:System.Windows.VisualStateManager> dans un <xref:System.Windows.DataTemplate> ou <xref:System.Windows.Window>).</span><span class="sxs-lookup"><span data-stu-id="7c189-146">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>).</span></span> <span data-ttu-id="7c189-147">Appelez le <xref:System.Windows.VisualStateManager.GoToState%2A> méthode si vous changez les États dans un contrôle qui utilise le <xref:System.Windows.VisualStateManager> dans son <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="7c189-147">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c189-148">L’exemple suivant crée une application qui invite l’utilisateur à deviner un nombre compris entre 1 et 100.</span><span class="sxs-lookup"><span data-stu-id="7c189-148">The following example creates an application that prompts the user to guess a number between 1 and 100.</span></span>  <span data-ttu-id="7c189-149">Lorsque l’utilisateur entre un nombre, l’application indique si l’estimation est correcte, trop faible ou trop élevée.</span><span class="sxs-lookup"><span data-stu-id="7c189-149">When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</span></span>  <span data-ttu-id="7c189-150">Les éléments suivants [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] crée l’interface utilisateur pour l’application et définit 4 états : `TooLow`, `TooHigh`, `Correct`, et `Guessing`.</span><span class="sxs-lookup"><span data-stu-id="7c189-150">The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`.</span></span> <span data-ttu-id="7c189-151">Lorsque l’application démarre, il se trouve dans le `Guessing` état.</span><span class="sxs-lookup"><span data-stu-id="7c189-151">When the application begins, it is in the `Guessing` state.</span></span> <span data-ttu-id="7c189-152">.</span><span class="sxs-lookup"><span data-stu-id="7c189-152">.</span></span>  
  
 [!code-xaml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  
  
 <span data-ttu-id="7c189-153">Le code suivant illustre la logique de l’application.</span><span class="sxs-lookup"><span data-stu-id="7c189-153">The following code shows the logic of the application.</span></span>  <span data-ttu-id="7c189-154">Lorsque l’utilisateur entre un nombre et clique sur le bouton, l’application appelle <xref:System.Windows.VisualStateManager.GoToElementState%2A> à passer à `TooHigh`, `TooLow`, ou `Correct` pour fournir des commentaires à l’utilisateur sur l’estimation.</span><span class="sxs-lookup"><span data-stu-id="7c189-154">When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.</span></span>  <span data-ttu-id="7c189-155">Pour tester cet exemple, appelez le `GenerateNumber` méthode lorsque l’application démarre.</span><span class="sxs-lookup"><span data-stu-id="7c189-155">To try this example, call the `GenerateNumber` method when the application begins.</span></span>  
  
 [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]
 [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c189-156">
            <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-156">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7c189-157">-or-  <paramref name="stateName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-157">-or-  <paramref name="stateName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GoToState">
      <MemberSignature Language="C#" Value="public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToState(class System.Windows.FrameworkElement control, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToState (control As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToState(System::Windows::FrameworkElement ^ control, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToState (control, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="7c189-158">The control to transition between states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-158">The control to transition between states.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="7c189-159">The state to transition to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-159">The state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="7c189-160">
            <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-160">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-161">Transitions the control between two states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-161">Transitions the control between two states.</span>
          </span>
          <span data-ttu-id="7c189-162">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-162">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c189-163">
            <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-163">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c189-164">Appelez le <xref:System.Windows.VisualStateManager.GoToState%2A> méthode si vous changez les États dans un contrôle qui utilise le <xref:System.Windows.VisualStateManager> dans son <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="7c189-164">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="7c189-165">Appelez le <xref:System.Windows.VisualStateManager.GoToElementState%2A> méthode pour modifier les États sur un élément en dehors d’un <xref:System.Windows.Controls.ControlTemplate> (par exemple, si vous utilisez un <xref:System.Windows.VisualStateManager> dans un <xref:System.Windows.Controls.UserControl> ou dans un élément unique).</span><span class="sxs-lookup"><span data-stu-id="7c189-165">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c189-166">L’exemple suivant illustre un contrôle qui utilise le <xref:System.Windows.VisualStateManager.GoToState%2A> méthode pour effectuer la transition entre les États.</span><span class="sxs-lookup"><span data-stu-id="7c189-166">The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states.</span></span> <span data-ttu-id="7c189-167">Pour l’exemple complet, consultez [création d’un contrôle qu’a une apparence personnalisable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span><span class="sxs-lookup"><span data-stu-id="7c189-167">For the entire example, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]
 [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c189-168">
            <paramref name="control" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-168">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7c189-169">-or-  <paramref name="stateName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-169">-or-  <paramref name="stateName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GoToStateCore">
      <MemberSignature Language="C#" Value="protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GoToStateCore(class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot, string stateName, class System.Windows.VisualStateGroup group, class System.Windows.VisualState state, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GoToStateCore (control As FrameworkElement, stateGroupsRoot As FrameworkElement, stateName As String, group As VisualStateGroup, state As VisualState, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GoToStateCore(System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, System::Windows::VisualStateGroup ^ group, System::Windows::VisualState ^ state, bool useTransitions);" />
      <MemberSignature Language="F#" Value="abstract member GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool&#xA;override this.GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool" Usage="visualStateManager.GoToStateCore (control, stateGroupsRoot, stateName, group, state, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="state" Type="System.Windows.VisualState" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="7c189-170">The control to transition between states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-170">The control to transition between states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="7c189-171">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-171">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="7c189-172">The name of the state to transition to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-172">The name of the state to transition to.</span>
          </span>
        </param>
        <param name="group">
          <span data-ttu-id="7c189-173">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-173">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7c189-174">The representation of the state to transition to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-174">The representation of the state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="7c189-175">
            <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-175">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-176">Transitions a control between states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-176">Transitions a control between states.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c189-177">
            <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-177">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c189-178">Le <xref:System.Windows.VisualStateManager.GoToStateCore%2A> méthode exécute la logique nécessaire pour démarrer et arrêter les animations qui sont associées à une transition convenablement.</span><span class="sxs-lookup"><span data-stu-id="7c189-178">The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</span></span> <span data-ttu-id="7c189-179">Lorsqu’un contrôle appelle <xref:System.Windows.VisualStateManager.GoToState%2A> pour modifier son état, le <xref:System.Windows.VisualStateManager> effectue les opérations suivantes :</span><span class="sxs-lookup"><span data-stu-id="7c189-179">When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:</span></span>  
  
-   <span data-ttu-id="7c189-180">Premier, si le <xref:System.Windows.VisualState> que le contrôle est en cours de transition a un <xref:System.Windows.Media.Animation.Storyboard>, l’animation commence.</span><span class="sxs-lookup"><span data-stu-id="7c189-180">First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins.</span></span> <span data-ttu-id="7c189-181">Ensuite, si le <xref:System.Windows.VisualState> que le contrôle provient a un <xref:System.Windows.Media.Animation.Storyboard>, les extrémités de la table de montage séquentiel.</span><span class="sxs-lookup"><span data-stu-id="7c189-181">Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.</span></span>  
  
-   <span data-ttu-id="7c189-182">Si le contrôle est déjà dans le `stateName` état, <xref:System.Windows.VisualStateManager.GoToState%2A> n’effectue aucune action et retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="7c189-182">If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.</span></span>  
  
-   <span data-ttu-id="7c189-183">Si `stateName` n’existe pas dans le <xref:System.Windows.Controls.ControlTemplate> de `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> n’effectue aucune action et retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="7c189-183">If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.</span></span>  
  
 <span data-ttu-id="7c189-184">Vous pouvez implémenter votre propre <xref:System.Windows.VisualStateManager> pour fournir une logique différente pour la transition entre les États.</span><span class="sxs-lookup"><span data-stu-id="7c189-184">You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states.</span></span> <span data-ttu-id="7c189-185">Par exemple, vous pouvez modifier la logique décrite précédemment, ou vous pouvez fournir la logique pour la transition entre les types d’animations personnalisés.</span><span class="sxs-lookup"><span data-stu-id="7c189-185">For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</span></span>  <span data-ttu-id="7c189-186">Pour implémenter un <xref:System.Windows.VisualStateManager>, créez une classe qui hérite de <xref:System.Windows.VisualStateManager> et remplacez le <xref:System.Windows.VisualStateManager.GoToStateCore%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7c189-186">To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="7c189-187">Pour utiliser la classe personnalisée, définissez le <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> propriété à un objet de votre type personnalisé.</span><span class="sxs-lookup"><span data-stu-id="7c189-187">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanged">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanged(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanged (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanged(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanged : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanged (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup">
          <span data-ttu-id="7c189-188">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-188">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          </span>
        </param>
        <param name="oldState">
          <span data-ttu-id="7c189-189">The state that the control is transitioning from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-189">The state that the control is transitioning from.</span>
          </span>
        </param>
        <param name="newState">
          <span data-ttu-id="7c189-190">The state that the control is transitioning to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-190">The state that the control is transitioning to.</span>
          </span>
        </param>
        <param name="control">
          <span data-ttu-id="7c189-191">The control that is transitioning states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-191">The control that is transitioning states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="7c189-192">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-192">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-193">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-193">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c189-194">Lorsque le <xref:System.Windows.VisualStateGroup> est définie sur le <xref:System.Windows.Controls.ControlTemplate> d’un contrôle, la `control` paramètre est défini sur le contrôle auquel appartient <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="7c189-194">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="7c189-195">Lorsque le <xref:System.Windows.VisualStateGroup> est définie sur une <xref:System.Windows.FrameworkElement>, `control` est `null` et vous devez utiliser le `stateGroupsRoot` paramètre.</span><span class="sxs-lookup"><span data-stu-id="7c189-195">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c189-196">
            <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-196">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7c189-197">-or-  <paramref name="newState" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-197">-or-  <paramref name="newState" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="7c189-198">
            <para>Lors de la substitution <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-198">
              <para>When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanging">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanging(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanging (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanging(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanging : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanging (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup">
          <span data-ttu-id="7c189-199">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-199">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          </span>
        </param>
        <param name="oldState">
          <span data-ttu-id="7c189-200">The state that the control is transitioning from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-200">The state that the control is transitioning from.</span>
          </span>
        </param>
        <param name="newState">
          <span data-ttu-id="7c189-201">The state that the control is transitioning to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-201">The state that the control is transitioning to.</span>
          </span>
        </param>
        <param name="control">
          <span data-ttu-id="7c189-202">The control that is transitioning states.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-202">The control that is transitioning states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="7c189-203">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-203">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-204">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-204">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c189-205">Lorsque le <xref:System.Windows.VisualStateGroup> est définie sur le <xref:System.Windows.Controls.ControlTemplate> d’un contrôle, la `control` paramètre est défini sur le contrôle auquel appartient <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="7c189-205">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="7c189-206">Lorsque le <xref:System.Windows.VisualStateGroup> est définie sur une <xref:System.Windows.FrameworkElement>, `control` est `null` et vous devez utiliser le `stateGroupsRoot` paramètre.</span><span class="sxs-lookup"><span data-stu-id="7c189-206">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c189-207">
            <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-207">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7c189-208">-or-  <paramref name="newState" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-208">-or-  <paramref name="newState" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="7c189-209">
            <para>Lors de la substitution <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-209">
              <para>When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomVisualStateManager(class System.Windows.FrameworkElement obj, class System.Windows.VisualStateManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCustomVisualStateManager (obj As FrameworkElement, value As VisualStateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj, System::Windows::VisualStateManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCustomVisualStateManager : System.Windows.FrameworkElement * System.Windows.VisualStateManager -&gt; unit" Usage="System.Windows.VisualStateManager.SetCustomVisualStateManager (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
        <Parameter Name="value" Type="System.Windows.VisualStateManager" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7c189-210">The object to set the property on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-210">The object to set the property on.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7c189-211">The visual state manager that transitions between the states of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-211">The visual state manager that transitions between the states of a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c189-212">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-212">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroupsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualStateGroupsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualStateGroupsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualStateGroupsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualStateGroupsProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c189-213">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c189-213">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>