<Type Name="IDataObject" FullName="System.Windows.IDataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="158a4276f6109167ac95604ef998ca5d6520a69c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit un mécanisme indépendant du format destiné au transfert de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.IDataObject> interface est utilisée par la <xref:System.Windows.Clipboard> classe pour les données des opérations de transfert telles que de glisser-déplacer.  
  
 En cas d’implémentation par une classe, le <xref:System.Windows.IDataObject> méthodes activer un objet de données proposent des données dans plusieurs formats.  Offre plusieurs formats de données a tendance pour rendre les données utilisables par une plus grande variété d’applications que si seul un seul format de données ont été pris en charge.  
  
 Le <xref:System.Windows.DataObject> classe fournit une implémentation de base de la <xref:System.Windows.IDataObject> interface.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère un objet de données dans un format de données spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données à récupérer. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Récupère un objet de données dans un format de données spécifié par une chaîne.</summary>
        <returns>Objet de données avec des données au format spécifié ou **null** si les données ne sont pas disponibles au format spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Objet <see cref="T:System.Type" /> qui spécifie le format des données à récupérer. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Récupère un objet de données dans un format de données spécifié par un objet <see cref="T:System.Type" />.</summary>
        <returns>Objet de données avec des données au format spécifié ou **null** si les données ne sont pas disponibles au format spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format des données à récupérer. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="true" /> pour essayer de convertir automatiquement les données au format spécifié ; <see langword="false" /> pour aucune conversion de format de données.  
  
 Si ce paramètre est <see langword="false" />, la méthode retourne les données dans le format spécifié si elles sont disponibles ou la valeur <see langword="null" /> si aucune donnée n'est disponible dans le format spécifié.</param>
        <summary>Récupère un objet de données dans un format spécifié, en convertissant de façon facultative les données au format spécifié.</summary>
        <returns>Objet de données avec des données au format spécifié ou **null** si les données ne sont pas disponibles au format spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vérifie si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez **GetDataPresent disponibilité** pour déterminer si un format spécifié est disponible dans cet objet de données avant d’appeler <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Appelez <xref:System.Windows.IDataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format à vérifier. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Vérifie si les données sont disponibles dans un format spécifié ou peuvent être converties au format spécifié ; le format de données est spécifié par une chaîne.</summary>
        <returns>
          <see langword="true" /> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Appelez **GetDataPresent disponibilité** pour déterminer si un format spécifié est disponible dans cet objet de données avant d’appeler <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Appelez <xref:System.Windows.IDataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" /> qui spécifie le format à vérifier. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <summary>Vérifie si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié. Le format de données est spécifié par un objet <see cref="T:System.Type" />.</summary>
        <returns>
          <see langword="true" /> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Appelez **GetDataPresent disponibilité** pour déterminer si un format spécifié est disponible dans cet objet de données avant d’appeler <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Appelez <xref:System.Windows.IDataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui spécifie le format à vérifier. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="autoConvert">
          <see langword="false" /> pour vérifier uniquement le format spécifié ; <see langword="true" /> pour vérifier également si les données stockées dans cet objet de données peuvent être converties au format spécifié.</param>
        <summary>Vérifie si les données sont disponibles dans un format spécifié ou peuvent être converties en un format spécifié. Un indicateur <see langword="Boolean" /> indique s'il faut vérifier si les données peuvent être converties au format spécifié lorsqu'elles ne sont pas disponibles dans ce format.</summary>
        <returns>
          <see langword="true" /> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Appelez **GetDataPresent disponibilité** pour déterminer si un format spécifié est disponible dans cet objet de données avant d’appeler <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Appelez <xref:System.Windows.IDataObject.GetFormats%2A> pour obtenir une liste de tous les formats disponibles dans cet objet de données.  
  
 Cette méthode retourne **true** lorsque :  
  
-   Le *autoConvert* paramètre est **true** et les données sont au format spécifié, ou elle peut être convertie au format spécifié.  
  
-   Le *autoConvert* paramètre est **false** et les données sont au format spécifié.  
  
 Cette méthode retourne **false** lorsque :  
  
-   Le *autoConvert* paramètre est **true** et les données ne sont pas disponibles dans le format spécifié et ne peut pas être converties au format spécifié.  
  
-   Le *autoConvert* paramètre est **false**, et les données ne sont pas disponibles dans le format spécifié.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une liste de formats dans lesquels sont stockées les données de cet objet de données ou vers lesquels elles peuvent être converties.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une liste de tous les formats dans lesquels sont stockées les données de cet objet de données ou vers lesquels elles peuvent être converties.</summary>
        <returns>Tableau de chaînes, dont chaque chaîne spécifie le nom d'un format pris en charge par cet objet de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> pour récupérer tous les formats dans lesquels les données de cet objet de données sont stockées ou vers lesquels elles peuvent être converties ; <see langword="false" /> pour récupérer uniquement les formats dans lesquels les données de cet objet de données sont stockées (à l'exception des formats dans lesquels les données ne sont pas stockées, mais vers lesquels elles peuvent être converties automatiquement).</param>
        <summary>Retourne une liste de tous les formats dans lesquels les données de cet objet de données sont stockées. Un indicateur <see langword="Boolean" /> indique s'il faut inclure également les formats auxquels les données peuvent être converties automatiquement.</summary>
        <returns>Tableau de chaînes, dont chaque chaîne spécifie le nom d'un format pris en charge par cet objet de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stocke les données spécifiées dans cet objet de données.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Données à stocker dans cet objet de données.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, en convertissant automatiquement le format de données du type d'objet source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui indique le format sous lequel stocker les données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Données à stocker dans cet objet de données.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, avec un ou plusieurs formats de données spécifiés. Le format de données est spécifié par une chaîne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" /> qui indique le format dans lequel stocker les données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Données à stocker dans cet objet de données.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, avec un ou plusieurs formats de données spécifiés. Le format de données est spécifié par une classe <see cref="T:System.Type" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne qui indique le format sous lequel stocker les données. Pour obtenir un ensemble de formats de données prédéfinis, consultez la classe <see cref="T:System.Windows.DataFormats" />.</param>
        <param name="data">Données à stocker dans cet objet de données.</param>
        <param name="autoConvert">
          <see langword="true" /> pour permettre la conversion des données dans un autre format lors de la récupération ; <see langword="false" /> pour interdire la conversion des données dans un autre format lors de la récupération.</param>
        <summary>Stocke les données spécifiées dans cet objet de données, avec un ou plusieurs formats de données spécifiés. Cette surcharge inclut un indicateur <see langword="Boolean" /> pour indiquer si les données peuvent être converties dans un autre format lors de la récupération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une implémentation de cette méthode, consultez <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>