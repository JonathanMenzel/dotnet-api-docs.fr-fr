<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LocalValueEntry.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5189544c51f979079c8ed20d684947ab6bf3fbc14.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">189544c51f979079c8ed20d684947ab6bf3fbc14</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.LocalValueEntry">
          <source>Represents a property identifier and the property value for a locally set dependency property.</source>
          <target state="translated">Représente un identificateur de propriété et la valeur de propriété d’une propriété de dépendance définie localement.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>Instances of this class are returned when getting the value of the <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</source>
          <target state="translated">Les instances de cette classe sont retournées lors de l’obtention de la valeur de la <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>All <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> properties are read-only.</source>
          <target state="translated">Tous les <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> propriétés sont en lecture seule.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>This class has no public constructor.</source>
          <target state="translated">Cette classe ne possède aucun constructeur public.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>In order to obtain instances of this class you must call <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph>, and then get the value of <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> from the returned <ph id="ph3">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</source>
          <target state="translated">Pour obtenir des instances de cette classe, vous devez appeler <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph>, puis obtenir la valeur de <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> de retourné <ph id="ph3">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>The following example iterates locally set values of a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> and queries <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> properties.</source>
          <target state="translated">L’exemple suivant itère des valeurs de jeu de localement un <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> et requêtes <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> à comparer avec l'objet <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> instances are equal.</source>
          <target state="translated">Détermine si deux instances <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> sont égales.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>This <ph id="ph1">&lt;see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /&gt;</ph> implementation compares the values of the <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph>, and potentially compares the values of <ph id="ph3">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>.</source>
          <target state="translated">Cette implémentation <ph id="ph1">&lt;see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /&gt;</ph> compare les valeurs de <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> et éventuellement de <ph id="ph3">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> component of a <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> is a value type, so will always be a bitwise comparison.</source>
          <target state="translated">Le composant <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> est un type valeur. Il s'agit donc toujours d'une comparaison de bits.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>For the <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">Pour le composant <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally.</source>
          <target state="translated">Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur == est utilisé en interne sur les deux valeurs.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>By default, this would be a reference equality of the values and thus the equality of the entire <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> would become a reference equality.</source>
          <target state="translated">Par défaut, il s'agirait d'une égalité de référence des valeurs. Par conséquent, l'égalité de la totalité de <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> deviendrait une égalité de référence.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</source>
          <target state="translated">Retourne le code de hachage pour ce <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.GetHashCode">
          <source>A signed 32-bit integer value.</source>
          <target state="translated">Valeur d’entier 32 bits signé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The first instance to compare.</source>
          <target state="translated">Première instance à comparer.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The second instance to compare.</source>
          <target state="translated">Deuxième instance à comparer.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>Compares the specified <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> instances to determine whether they are the same.</source>
          <target state="translated">Compare les instances <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> spécifiées pour déterminer si elles sont identiques.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj1" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> is equal to the <ph id="ph4">&lt;paramref name="obj2" /&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph><ph id="ph2">&lt;paramref name="obj1" /&gt;</ph> est égal à <ph id="ph5">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph><ph id="ph4">&lt;paramref name="obj2" /&gt;</ph> ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>This <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.op_Equality%2A&gt;</ph> implementation compares the values of the <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph>, and potentially compares the values of <ph id="ph3">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>.</source>
          <target state="translated">Cette implémentation <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.op_Equality%2A&gt;</ph> compare les valeurs de <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> et éventuellement de <ph id="ph3">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> component of a <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> is always a value type, so this comparison will always be a bitwise value comparison.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> composant d’un <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> est toujours un type valeur, cette comparaison est donc toujours une comparaison de valeurs au niveau du bit.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">Pour le composant <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">`==`</ph> operator on the two values internally.</source>
          <target state="translated">Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur <ph id="ph1">`==`</ph> est utilisé en interne sur les deux valeurs.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>By default, this is a reference equality of the values.</source>
          <target state="translated">Par défaut, il s'agit d'une égalité de référence des valeurs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The first instance to compare.</source>
          <target state="translated">Première instance à comparer.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The second instance to compare.</source>
          <target state="translated">Deuxième instance à comparer.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>Compares the specified <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> instances to determine whether they are different.</source>
          <target state="translated">Compare les instances <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> spécifiées pour déterminer si elles sont différentes.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>This implementation compares the values of the <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> components of a <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</source>
          <target state="translated">Cette implémentation compare les valeurs de <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> et les composants <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> component of a <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> is always a value type, so this comparison will always be a bitwise comparison.</source>
          <target state="translated">Le composant <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> est toujours un type valeur. Cette comparaison est donc toujours une comparaison de bits.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For the <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">Pour le composant <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>, cette implémentation emploie une comparaison de bits s'il s'agit d'un type valeur.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">&lt;see langword="==" /&gt;</ph> operator on the two values internally.</source>
          <target state="translated">Pour les propriétés localement définies qui ont des types référence, le comportement est différé aux mécanismes de détermination de l'égalité de ce type, car l'opérateur <ph id="ph1">&lt;see langword="==" /&gt;</ph> est utilisé en interne sur les deux valeurs.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>By default, this is a reference equality of the values.</source>
          <target state="translated">Par défaut, il s'agit d'une égalité de référence des valeurs.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEntry.Property">
          <source>Gets the identifier for the locally set dependency property that is represented by this entry.</source>
          <target state="translated">Obtient l’identificateur de la propriété de dépendance définie localement qui est représentée par cette entrée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Property">
          <source>The identifier for the locally set dependency property.</source>
          <target state="translated">Identificateur de la propriété de dépendance définie localement.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Property">
          <source>Use this property to query the identifier of the locally set dependency property and to obtain its metadata.</source>
          <target state="translated">Utilisez cette propriété pour interroger l’identificateur de définie localement propriété de dépendance et d’obtenir ses métadonnées.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Property">
          <source>This obtained metadata may include the initial default value of the property and whether the property supports property value inheritance.</source>
          <target state="translated">Les métadonnées obtenues peuvent inclure la valeur par défaut initiale de la propriété et si la propriété prend en charge l’héritage de valeur de propriété.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEntry.Value">
          <source>Gets the value of the locally set dependency property.</source>
          <target state="translated">Obtient la valeur de la propriété de dépendance définie localement.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Value">
          <source>The value of the locally set dependency property as an object.</source>
          <target state="translated">Valeur de la propriété de dépendance définie localement en tant qu’objet.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Value">
          <source>To determine a more specific type for this value, check the <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> for the current <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> and get its <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer un type plus spécifique pour cette valeur, vérifiez le <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> pour actuel <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> et obtenir sa <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>