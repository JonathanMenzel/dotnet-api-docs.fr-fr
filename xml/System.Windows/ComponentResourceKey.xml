<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7eba673decf40d6484ebeeddf1da1f192ac10981" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39964614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit ou référence des clés de ressources selon les noms de classes dans les assemblys externes, ainsi qu'un identificateur supplémentaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Cette classe implémente un type d’objet qui est utile pour créer des clés qui sont basées sur des types dans les assemblys ainsi qu’un identificateur. Étant donné que vous définissez ou que vous faites référence au type, il est inutile demander un spécifique <xref:System.Windows.ResourceDictionary>, et plus d’un ensemble de ressources peut exister dans l’assembly, chacun différencié par le type de leurs <xref:System.Windows.ComponentResourceKey>.  
  
 Il existe deux façons de définir un <xref:System.Windows.ComponentResourceKey>.  
  
 Si vous souhaitez une clé facilement accessible, vous pouvez définir une propriété statique sur votre code de classe de contrôle qui retourne un <xref:System.Windows.ComponentResourceKey>, construit avec un <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> qui existe dans l’assembly de ressource externe et un <xref:System.Windows.ComponentResourceKey.ResourceId%2A>. La clé peut être utilisée pour définir d’autres styles par défaut pour les contrôles dans un assembly, en échangeant l’assembly de ressource externe d’origine pour un personnalisé. Vous pouvez également définir une partie de la ressource nommée dans un plus grand style de contrôle ou un modèle pour exposer un point d’entrée de personnalisation. Cela est particulièrement utile si vous définissez un dictionnaire de ressources de thème pour votre contrôle.  
  
 Vous pouvez également utiliser le [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) dans la syntaxe détaillée directement pour créer une instance éloignée de la clé. Cela est utile si vous souhaitez déclarer des ressources privées à partir d’autres assemblys qui sont moins détectables à personnaliser.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur par défaut est généralement pas utilisé, car un <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> valeur et <xref:System.Windows.ComponentResourceKey.ResourceId%2A> valeur sont requis pour l’initialisation correcte. Le constructeur par défaut existe principalement pour prendre en charge [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) utilisation XAML sous forme de paramètre nommé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">Type qui définit la clé de ressource.</param>
        <param name="resourceId">Identificateur unique permettant de différencier cette <see cref="T:System.Windows.ComponentResourceKey" /> d’autres clés associées au type <c>typeInTargetAssembly</c>.</param>
        <summary>Initialise une nouvelle instance d'un <see cref="T:System.Windows.ComponentResourceKey" />, en spécifiant le <see cref="T:System.Type" /> qui définit la clé et un objet à utiliser en tant qu'identificateur de ressource supplémentaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur existe pour deux scénarios, avec le premier scénario les plus importantes sont :  
  
-   Prend en charge la création d’un <xref:System.Windows.ComponentResourceKey> qui est ensuite exposé comme un champ statique public sur une classe de contrôle personnalisé. Cela simplifie l’accès à ses propres ressources définies dans le modèle par le biais d’un contrôle `{x:Static}` utilisations pour les valeurs de propriété de modèle.  
  
-   Prend en charge [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) utilisation XAML sous forme de paramètre positionnel, ce qui est une technique disponible pour les tiers qui font référence à une ressource de composant.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.ComponentResourceKey> qui est ensuite exposé comme une clé statique d’une classe de contrôle pour fournir un point d’entrée de personnalisation style.  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet d'assembly qui indique dans quel dictionnaire de l'assembly rechercher la valeur associée à cette clé.</summary>
        <value>Assembly récupéré, comme une classe de réflexion.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objet à comparer avec le <see cref="T:System.Windows.ComponentResourceKey" /> actuel.</param>
        <summary>Détermine si l'objet fourni est identique au <see cref="T:System.Windows.ComponentResourceKey" /> actuel.</summary>
        <returns>
          <see langword="true" /> si les objets sont égaux ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deux clés sont égales si elles ont les mêmes valeurs pour toutes leurs propriétés définissables immédiatement (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un code de hachage pour ce <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Valeur d’entier 32 bits signé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un identificateur unique permettant de différencier cette clé d'autres clés associées à ce type.</summary>
        <value>Identificateur unique. Il s'agit en général d'une chaîne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 En règle générale, la chaîne utilisée pour un <xref:System.Windows.ComponentResourceKey.ResourceId%2A> valeur est conforme à la [XamlName, grammaire](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.ComponentResourceKey.ResourceId%2A> pour différencier cette clé d’autres clés associées à ce type.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère la présentation sous forme de chaîne d'un <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Représentation sous forme de chaîne.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Récupère ou définit le <see cref="T:System.Type" /> qui définit la clé de ressource.</summary>
        <value>Type qui définit la clé de ressource.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Le <xref:System.Windows.ComponentResourceKey> élément est utilisé par les composants personnalisés pour définir des clés pour les ressources qui sont accessibles à partir des assemblys externes, en fonction du ciblage d’un assembly qui contient le type. Composants personnalisés définissent souvent des nouveaux types qui doivent être dans l’assembly où se trouve la ressource. Généralement ces types n’ont aucune autre implémentation, les types existent afin de satisfaire les exigences de la recherche d’un <xref:System.Windows.ComponentResourceKey>.  
  
## Examples  
 L’exemple suivant montre comment définir un <xref:System.Windows.ComponentResourceKey> notamment <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> et <xref:System.Windows.ComponentResourceKey.ResourceId%2A> à l’aide de la [Extension de balisage ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md). Cette ressource peut ensuite être placée dans un assembly externe et accessible par une utilisation de la clé qui demande la ressource à l’aide d’une manière analogue <xref:System.Windows.ComponentResourceKey> dans la demande.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>