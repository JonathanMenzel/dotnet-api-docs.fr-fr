<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc1a383fe21e6b9b549e0ccda7aa8c21c6f92d9f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37493661" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">L'objet sur lequel existe la propriété. Lorsque le rappel est appelé, le système de propriétés passe cette valeur.</param>
    <param name="baseValue">La nouvelle valeur de la propriété, avant toute tentative de contrainte.</param>
    <summary>Fournit un modèle pour une méthode appelée toutes les fois qu'une valeur de propriété de dépendance est réévaluée, ou que la contrainte est demandée spécifiquement.</summary>
    <returns>La valeur forcée (avec type approprié).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les rappels basés sur <xref:System.Windows.CoerceValueCallback> peut être affectée à une propriété de dépendance à travers plusieurs techniques différentes. Chacune de ces techniques requiert que vous créez tout d’abord un nouvel objet de métadonnées de propriété (<xref:System.Windows.PropertyMetadata>, ou une classe dérivée telle que <xref:System.Windows.FrameworkPropertyMetadata>). Créer l’objet de métadonnées à l’aide d’une signature de constructeur qui accepte le `coerceValueCallback` paramètre et affecter ce paramètre à votre gestionnaire de rappel. Ou construire les métadonnées par n’importe quel signature et le jeu le <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> propriété avant de remettre les métadonnées en cours d’utilisation.  
  
 Lorsque vous avez ces métadonnées, vous pouvez :  
  
-   Définir une nouvelle propriété de dépendance sur une nouvelle classe, à l’aide d’une signature de <xref:System.Windows.DependencyProperty.Register%2A>, en donnant les métadonnées en tant que le `typeMetadata` valeur.  
  
-   Substituer les métadonnées (appelez <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) pour une propriété de dépendance existante, lorsque vous dérivez de la classe qui possède la propriété de dépendance.  
  
-   Ajouter une propriété de dépendance existante vers une nouvelle <xref:System.Windows.DependencyObject> classe, à l’aide des nouvelles métadonnées, en appelant <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.  
  
 Les implémentations de ce rappel doivent vérifier la valeur `baseValue` et déterminer selon la valeur ou le type s’il s’agit d’une valeur qui doit être forcée plus loin.  
  
 Le <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> pour une dépendance de la propriété est appelée chaque fois que le système de propriétés ou tout autre appelant appelle <xref:System.Windows.DependencyObject.CoerceValue%2A> sur un <xref:System.Windows.DependencyObject> instance, en spécifiant l’identificateur de cette propriété en tant que le `dp`.  
  
 Modifications apportées à la valeur de propriété peuvent provenir tout participant possible dans le système de propriétés. Cela inclut les styles, l’invalidation générique, les déclencheurs, l’héritage de valeur de propriété et paramètre de valeur locale.  
  
 Vous devez généralement éviter de spécifier plusieurs <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> pour toute propriété de dépendance donnée (substitution ou ajout avec les nouvelles métadonnées pour une propriété de dépendance qui avait déjà un <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>). Seul l’un des rappels sera en mesure d’agir. Le rappel agissant sera celle qui a été appliqué à la classe la plus dérivée de l’héritage par rapport à la <xref:System.Windows.DependencyObject> appelant. Autres rappels attribué aux métadonnées pour la propriété de dépendance telle qu’elle existait supérieur dans la hiérarchie de propriétaire sont remplacés en cas de substitution de métadonnées.  
  
   
  
## Examples  
 L’exemple suivant inclut une implémentation de ce rappel pour forcer la valeur d’une propriété de dépendance basée sur les autres entrées, comme une autre valeur de propriété stockée. Dans ce cas, le rappel vérifie si le `ShirtType` propriété correspond à un type de chemise qui a des boutons ; cas dans ce il établit une couleur par défaut initiale pour le `ButtonColor`, si le type de chemise a pas de boutons, il force la `ButtonColor` valeur à une valeur de départ, ce qui entraîne le [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (non illustré) à supprimer ce déroulement des choix effectifs.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>