<Type Name="DependencyObjectType" FullName="System.Windows.DependencyObjectType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82fb7814e22f512058a33e227f6da12781e34e22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30675833" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DependencyObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObjectType" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObjectType" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implémente un cache de type sous-jacent pour tous les types dérivés <see cref="T:System.Windows.DependencyObject" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyObjectType> représente un système sous-jacent spécifique ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> d’un <xref:System.Windows.DependencyObject>. <xref:System.Windows.DependencyObjectType> est essentiellement un wrapper pour le ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> afin qu’elle permet d’étendre certaines de ses fonctions.  
  
 Cette classe ne possède aucun constructeur public. Les instances de cette classe ne peuvent être obtenus via les propriétés sur d’autres objets (tels que <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType>), ou via la méthode statique <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ BaseType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Windows.DependencyObjectType" /> de la classe de base immédiate du <see cref="T:System.Windows.DependencyObjectType" /> actuel.</summary>
        <value>Type de la classe de base.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSystemType">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObjectType FromSystemType (Type systemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObjectType FromSystemType(class System.Type systemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSystemType (systemType As Type) As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObjectType ^ FromSystemType(Type ^ systemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="systemType">Type [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] de système à convertir.</param>
        <summary>Retourne un <see cref="T:System.Windows.DependencyObjectType" /> qui représente un type ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) de système donné.</summary>
        <returns>
          <see cref="T:System.Windows.DependencyObjectType" /> qui représente le type ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) de système.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque <xref:System.Windows.DependencyObject> conserve un <xref:System.Windows.DependencyObject.DependencyObjectType%2A> propriété qui retourne un <xref:System.Windows.DependencyObjectType>, mais cela nécessite d’avoir un particulier <xref:System.Windows.DependencyObject> instance. Vous pouvez utiliser cette méthode utilitaire statique si vous n’avez pas encore un <xref:System.Windows.DependencyObject> de l’instance et nécessitent un <xref:System.Windows.DependencyObjectType>.  
  
   
  
## Examples  
 L’exemple suivant appelle <xref:System.Windows.DependencyObjectType.FromSystemType%2A> , en créant un <xref:System.Windows.DependencyObjectType> en fonction du type de la <xref:System.Windows.Window> classe.  
  
 [!code-csharp[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#dotfromsystemtype)]
 [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#dotfromsystemtype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le code de hachage pour ce <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <returns>Code de hachage d'un entier signé 32 bits.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation est liée à la valeur de la <xref:System.Windows.DependencyObjectType.Id%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un identificateur unique de base zéro pour les opérations de recherche dans des tableaux en temps constant.</summary>
        <value>Identificateur interne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’utilisez pas pour les fonctions de hachage générales. Il n’existe aucune garantie sur cette valeur. Elle peut varier entre les exécutions de l’application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInstanceOfType(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Objet à comparer au <see cref="T:System.Windows.DependencyObjectType" /> actif.</param>
        <summary>Détermine si l'objet spécifié est une instance du <see cref="T:System.Windows.DependencyObjectType" /> actuel.</summary>
        <returns>
          <see langword="true" /> si la classe représentée par le <see cref="T:System.Windows.DependencyObjectType" /> actuel est dans la hiérarchie d'héritage du <see cref="T:System.Windows.DependencyObject" /> passé comme <paramref name="d" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les objets de même type de retour `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubclassOf(class System.Windows.DependencyObjectType dependencyObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(System::Windows::DependencyObjectType ^ dependencyObjectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObjectType" Type="System.Windows.DependencyObjectType" />
      </Parameters>
      <Docs>
        <param name="dependencyObjectType">
          <see cref="T:System.Windows.DependencyObjectType" /> à comparer.</param>
        <summary>Détermine si le <see cref="T:System.Windows.DependencyObjectType" /> actuel dérive du <see cref="T:System.Windows.DependencyObjectType" /> spécifié.</summary>
        <returns>
          <see langword="true" /> si le paramètre <paramref name="dependencyObjectType" /> et le <see cref="T:System.Windows.DependencyObjectType" /> actuel représentent des types de classes et si la classe représentée par le <see cref="T:System.Windows.DependencyObjectType" /> actuel dérive de la classe représentée par <paramref name="dependencyObjectType" />. Sinon, <see langword="false" />. Cette méthode retourne également <see langword="false" /> si <paramref name="dependencyObjectType" /> et le <see cref="T:System.Windows.DependencyObjectType" /> actuel représentent la même classe.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du type de système [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] représenté.</summary>
        <value>Nom du type de système [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] représenté.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de <xref:System.Windows.DependencyObjectType.Name%2A> est la même chaîne que le nom du nom de type de la <xref:System.Type>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="SystemType">
      <MemberSignature Language="C#" Value="public Type SystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.SystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de système [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] représenté par <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <value>Type de système [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] représenté par <see cref="T:System.Windows.DependencyObjectType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>