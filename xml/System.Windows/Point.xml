<Type Name="Point" FullName="System.Windows.Point">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="192eff04159aa735f04450689a364a548789d804" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39941929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6fe75-101">Représente une paire de coordonnées x et y dans l'espace à deux dimensions.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fe75-101">Represents an x- and y-coordinate pair in two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-102">Dans XAML, le séparateur entre les <xref:System.Windows.Point.X%2A> et <xref:System.Windows.Point.Y%2A> valeurs d’un <xref:System.Windows.Point> peut être une virgule ou un espace.</span><span class="sxs-lookup"><span data-stu-id="6fe75-102">In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="6fe75-103">Certaines cultures peuvent utiliser le caractère virgule comme séparateur décimal au lieu de la virgule.</span><span class="sxs-lookup"><span data-stu-id="6fe75-103">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="6fe75-104">XAML de traitement pour la culture dite indifférente est en-US dans la plupart des implémentations de processeur XAML par défaut et attend le point comme séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="6fe75-104">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="6fe75-105">Évitez d’utiliser le caractère virgule comme séparateur décimal si vous spécifiez un <xref:System.Windows.Point> dans XAML, car cela qui entrera en conflit avec la conversion de type chaîne d’un <xref:System.Windows.Point> attribut la valeur dans le <xref:System.Windows.Point.X%2A> et <xref:System.Windows.Point.Y%2A> composants.</span><span class="sxs-lookup"><span data-stu-id="6fe75-105">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Point> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Point> attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6fe75-106">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="6fe75-106">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6fe75-107">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="6fe75-107">XAML Values</span></span>  
 <span data-ttu-id="6fe75-108">*x*</span><span class="sxs-lookup"><span data-stu-id="6fe75-108">*x*</span></span>  
 <span data-ttu-id="6fe75-109">Coordonnée x de ce <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="6fe75-109">The x-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
 <span data-ttu-id="6fe75-110">*y*</span><span class="sxs-lookup"><span data-stu-id="6fe75-110">*y*</span></span>  
 <span data-ttu-id="6fe75-111">Coordonnée y de ce <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="6fe75-111">The y-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-112">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="6fe75-112">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="6fe75-113">Il illustre également comment affecter des valeurs à un <xref:System.Windows.Point> structure lors de la structure est déclarée et une fois que la structure a été déclarée.</span><span class="sxs-lookup"><span data-stu-id="6fe75-113">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="6fe75-114">Coordonnée x de la nouvelle structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-114">The x-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="6fe75-115">Coordonnée y de la nouvelle structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-115">The y-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-116">Crée une structure <see cref="T:System.Windows.Point" /> qui contient les coordonnées spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-116">Creates a new <see cref="T:System.Windows.Point" /> structure that contains the specified coordinates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-117">Structure <see cref="T:System.Windows.Point" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-117">The <see cref="T:System.Windows.Point" /> structure to add.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="6fe75-118">Structure <see cref="T:System.Windows.Vector" /> à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-118">The <see cref="T:System.Windows.Vector" /> structure to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-119">Ajoute <see cref="T:System.Windows.Vector" /> à un <see cref="T:System.Windows.Point" /> et retourne le résultat sous forme de structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-119">Adds a <see cref="T:System.Windows.Vector" /> to a <see cref="T:System.Windows.Point" /> and returns the result as a <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-120">Retourne la somme de <paramref name="point" /> et <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-120">Returns the sum of <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-121">Ajout d’un <xref:System.Windows.Point> structure un <xref:System.Windows.Point> structure est interdite.</span><span class="sxs-lookup"><span data-stu-id="6fe75-121">Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-122">Cet exemple ajoute un <xref:System.Windows.Point> à un <xref:System.Windows.Vector> et retourne le résultat comme un <xref:System.Windows.Vector> structure.</span><span class="sxs-lookup"><span data-stu-id="6fe75-122">This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-123">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-123">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="6fe75-124">
            <see cref="T:System.Object" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-124">The <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-125">Détermine si l'<see cref="T:System.Object" /> spécifié est un <see cref="T:System.Windows.Point" /> et s'il contient les mêmes coordonnées que ce <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-125">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Point" /> and whether it contains the same coordinates as this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-126">
            <see langword="true" /> si <paramref name="o" /> est un <see cref="T:System.Windows.Point" /> et qu'il reprend les mêmes valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> que <see cref="T:System.Windows.Point" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-126">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-127"><xref:System.Windows.Point> les coordonnées sont décrites à l’aide de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="6fe75-127"><xref:System.Windows.Point> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="6fe75-128">Étant donné que la valeur d’un <xref:System.Double> peut manquer de précision lors de l’opération, une comparaison entre deux <xref:System.Windows.Point> valeurs qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="6fe75-128">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-129">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures sont égales à l’aide de la non statique <xref:System.Windows.Point.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fe75-129">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6fe75-130">Point à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-130">The point to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-131">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-131">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-132">
            <see langword="true" /> si les deux structures <see cref="T:System.Windows.Point" /> contiennent les mêmes valeurs de <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-132">
              <see langword="true" /> if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-133"><xref:System.Windows.Point> les coordonnées sont exprimées à l’aide de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="6fe75-133"><xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values.</span></span> <span data-ttu-id="6fe75-134">Étant donné que la valeur d’un <xref:System.Double> peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux <xref:System.Windows.Point> valeurs qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="6fe75-134">Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6fe75-135">Premier point à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-135">The first point to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6fe75-136">Deuxième point à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-136">The second point to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-137">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-137">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-138">
            <see langword="true" /> si <paramref name="point1" /> et <paramref name="point2" /> contiennent les mêmes valeurs respectives <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-138">
              <see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-139">Coordonnées du point sont décrites à l’aide de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="6fe75-139">Point coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="6fe75-140">Étant donné que la valeur d’un <xref:System.Double> peut manquer de précision lors de l’opération, une comparaison entre deux <xref:System.Windows.Point> valeurs qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="6fe75-140">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-141">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures sont égales à l’aide de la méthode statique <xref:System.Windows.Point.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fe75-141">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-142">Retourne le code de hachage pour ce <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-142">Returns the hash code for this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-143">Code de hachage pour cette structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-143">The hash code for this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-144">L’exemple suivant montre comment obtenir le code de hachage d’un <xref:System.Windows.Point> structure.</span><span class="sxs-lookup"><span data-stu-id="6fe75-144">The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-145">Point à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-145">The point to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="6fe75-146">Matrice de transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-146">The transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-147">Transforme la structure <see cref="T:System.Windows.Point" /> spécifiée par la structure <see cref="T:System.Windows.Media.Matrix" /> indiquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-147">Transforms the specified <see cref="T:System.Windows.Point" /> structure by the specified <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-148">Point transformé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-148">The transformed point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-149">L’exemple suivant montre comment multiplier un <xref:System.Windows.Point> structure par une <xref:System.Windows.Media.Matrix> structure à l’aide de la <xref:System.Windows.Point.Multiply%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fe75-149">The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the <xref:System.Windows.Point.Multiply%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="6fe75-150">Décalage de</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-150">The amount to offset the point's</span>
          </span>
          <span data-ttu-id="6fe75-151">coordonnée <see cref="P:System.Windows.Point.X" /> du point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-151">
              <see cref="P:System.Windows.Point.X" /> coordinate.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="6fe75-152">Décalage de</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-152">The amount to offset the</span>
          </span>
          <span data-ttu-id="6fe75-153">coordonnée <see cref="P:System.Windows.Point.Y" /> du point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-153">point's <see cref="P:System.Windows.Point.Y" /> coordinate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-154">Décale les coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> d'un point des valeurs spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-154">Offsets a point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates by the specified amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-155">Cette opération est équivalente à l’ajout d’un <xref:System.Windows.Point> à un <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="6fe75-155">This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.</span></span>  
  
 <span data-ttu-id="6fe75-156">Notez que l’appel le <xref:System.Windows.Point.Offset%2A> méthode a un effet uniquement si vous pouvez modifier le <xref:System.Windows.Point.X%2A> et <xref:System.Windows.Point.Y%2A> propriétés directement.</span><span class="sxs-lookup"><span data-stu-id="6fe75-156">Note that calling the <xref:System.Windows.Point.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly.</span></span> <span data-ttu-id="6fe75-157">Étant donné que <xref:System.Windows.Point> est un type valeur, si vous référencez un <xref:System.Windows.Point> objet en utilisant une propriété ou un indexeur, vous obtenez une copie de l’objet, pas une référence à l’objet.</span><span class="sxs-lookup"><span data-stu-id="6fe75-157">Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="6fe75-158">Si vous tentez de modifier <xref:System.Windows.Point.X%2A> ou <xref:System.Windows.Point.Y%2A> sur une référence de propriété ou un indexeur, une erreur du compilateur se produit.</span><span class="sxs-lookup"><span data-stu-id="6fe75-158">If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="6fe75-159">De même, l’appel <xref:System.Windows.Point.Offset%2A> sur la propriété ou l’indexeur ne changera pas l’objet sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6fe75-159">Similarly, calling <xref:System.Windows.Point.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="6fe75-160">Si vous souhaitez modifier la valeur d’un <xref:System.Windows.Point> qui est référencée comme une propriété ou un indexeur, créez une nouvelle <xref:System.Windows.Point>, modifiez ses champs et affectez le <xref:System.Windows.Point> à la propriété ou l’indexeur.</span><span class="sxs-lookup"><span data-stu-id="6fe75-160">If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-161">L’exemple suivant montre comment décaler le <xref:System.Windows.Point.X%2A> et <xref:System.Windows.Point.Y%2A> valeurs d’un <xref:System.Windows.Point> structure.</span><span class="sxs-lookup"><span data-stu-id="6fe75-161">The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-162">Point à translater.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-162">The point to translate.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="6fe75-163">Valeur de translation de <c>point</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-163">The amount by which to translate <c>point</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-164">Translate le <see cref="T:System.Windows.Point" /> spécifié de <see cref="T:System.Windows.Vector" /> et renvoie le résultat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-164">Translates the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Vector" /> and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-165">Résultat de la translation du point spécifié du vecteur indiqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-165">The result of translating the specified point by the specified vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-166">L’exemple suivant montre comment ajouter un <xref:System.Windows.Point> à un <xref:System.Windows.Vector> à l’aide de surchargé (+) opérateur.</span><span class="sxs-lookup"><span data-stu-id="6fe75-166">The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6fe75-167">Première structure <see cref="T:System.Windows.Point" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-167">The first <see cref="T:System.Windows.Point" /> structure to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6fe75-168">Deuxième structure <see cref="T:System.Windows.Point" /> à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-168">The second <see cref="T:System.Windows.Point" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-169">Compare l'égalité de deux structures <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-169">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-170">
            <see langword="true" /> si les coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> et de <paramref name="point2" /> sont respectivement égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-170">
              <see langword="true" /> if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-171">Coordonnées d’un point sont décrites à l’aide de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="6fe75-171">A point's coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="6fe75-172">Étant donné que la valeur de <xref:System.Double> peuvent perdre en précision lorsque les opérations arithmétiques sont exécutées dessus, une comparaison entre deux <xref:System.Windows.Point> valeurs qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="6fe75-172">Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-173">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures sont égales à l’aide de l’opérateur surchargé (==).</span><span class="sxs-lookup"><span data-stu-id="6fe75-173">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-174">Convertit un <see cref="T:System.Windows.Point" /> en <see cref="T:System.Windows.Size" /> ou en <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-174">Converts a <see cref="T:System.Windows.Point" /> into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-175">Point à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-175">The point to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-176">Crée une structure <see cref="T:System.Windows.Size" /> avec <see cref="P:System.Windows.Size.Width" /> égal à la valeur <see cref="P:System.Windows.Point.X" /> de ce point et <see cref="P:System.Windows.Size.Height" /> égal à sa valeur <see cref="P:System.Windows.Point.Y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-176">Creates a <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-177">Une structure <see cref="T:System.Windows.Size" /> avec <see cref="P:System.Windows.Size.Width" /> égal à la valeur <see cref="P:System.Windows.Point.X" /> de ce point et <see cref="P:System.Windows.Size.Height" /> égal à sa valeur <see cref="P:System.Windows.Point.Y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-177">A <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-178">Étant donné qu’un <xref:System.Windows.Size> structure ne peut pas être négative, les valeurs absolues du point <xref:System.Windows.Point.X%2A> et <xref:System.Windows.Point.Y%2A> propriétés sont utilisées.</span><span class="sxs-lookup"><span data-stu-id="6fe75-178">Because a <xref:System.Windows.Size> structure cannot be negative, the absolute values of the point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-179">L’exemple suivant montre comment convertir explicitement un <xref:System.Windows.Point> dans un <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="6fe75-179">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-180">Point à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-180">The point to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-181">Crée une structure <see cref="T:System.Windows.Vector" /> avec une valeur <see cref="P:System.Windows.Vector.X" /> égale à la valeur <see cref="P:System.Windows.Point.X" /> du point et <see cref="P:System.Windows.Vector.Y" /> égal à <see cref="P:System.Windows.Point.Y" /> du point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-181">Creates a <see cref="T:System.Windows.Vector" /> structure with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-182">Vecteur avec une valeur <see cref="P:System.Windows.Vector.X" /> égale à la valeur <see cref="P:System.Windows.Point.X" /> du point et <see cref="P:System.Windows.Vector.Y" /> égal à <see cref="P:System.Windows.Point.Y" /> du point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-182">A vector with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-183">L’exemple suivant montre comment convertir explicitement un <xref:System.Windows.Point> dans un <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="6fe75-183">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6fe75-184">Premier point à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-184">The first point to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6fe75-185">Deuxième point à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-185">The second point to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-186">Compare l'inégalité de deux structures <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-186">Compares two <see cref="T:System.Windows.Point" /> structures for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-187">
            <see langword="true" /> si <paramref name="point1" /> et <paramref name="point2" /> présentent des coordonnées <see cref="P:System.Windows.Point.X" /> ou <see cref="P:System.Windows.Point.Y" /> différentes ; <see langword="false" /> si <paramref name="point1" /> et <paramref name="point2" /> ont les mêmes coordonnées <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-187">
              <see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> coordinates; <see langword="false" /> if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fe75-188">D’un point de <xref:System.Windows.Point.X%2A> et <xref:System.Windows.Point.Y%2A> les coordonnées sont décrites à l’aide de <xref:System.Double> valeurs.</span><span class="sxs-lookup"><span data-stu-id="6fe75-188">A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="6fe75-189">Étant donné que <xref:System.Double> valeurs peuvent perdre en précision lorsqu’elles sont exploitées, une comparaison entre deux <xref:System.Windows.Point> valeurs qui sont logiquement égales peuvent échouer.</span><span class="sxs-lookup"><span data-stu-id="6fe75-189">Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fe75-190">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures ne sont pas égales, en utilisant surchargées ( ! =) opérateur.</span><span class="sxs-lookup"><span data-stu-id="6fe75-190">The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-191">Point à transformer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-191">The point to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="6fe75-192">Matrice de transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-192">The transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-193">Transforme le <see cref="T:System.Windows.Point" /> spécifié par un objet <see cref="T:System.Windows.Media.Matrix" /> donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-193">Transforms the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-194">Résultat de la transformation du point spécifié par la matrice indiquée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-194">The result of transforming the specified point using the specified matrix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-195">L’exemple suivant montre comment multiplier un <xref:System.Windows.Point> par un <xref:System.Windows.Media.Matrix> à l’aide de l’opérateur surchargé (\*).</span><span class="sxs-lookup"><span data-stu-id="6fe75-195">The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (\*) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-196">Soustrait l'attribut <see cref="T:System.Windows.Vector" /> ou <see cref="T:System.Windows.Point" /> du <see cref="T:System.Windows.Point" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-196">Subtracts the specified <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6fe75-197">Point duquel <c>point2</c> est soustrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-197">The point from which <c>point2</c> is subtracted.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6fe75-198">Point à soustraire de <c>point1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-198">The point to subtract from <c>point1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-199">Soustrait le <see cref="T:System.Windows.Point" /> spécifié d'un autre <see cref="T:System.Windows.Point" /> indiqué et retourne la différence sous forme de <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-199">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-200">Différence entre <paramref name="point1" /> et <paramref name="point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-200">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-201">L’exemple suivant indique comment soustraire un <xref:System.Windows.Point> à partir d’un autre <xref:System.Windows.Point> et retourner un <xref:System.Windows.Vector> à l’aide de l’opérateur surchargé (-).</span><span class="sxs-lookup"><span data-stu-id="6fe75-201">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-202">Point duquel <c>vector</c> est soustrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-202">The point from which <c>vector</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="6fe75-203">Vecteur à soustraire de <c>point1</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-203">The vector to subtract from <c>point1</c></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-204">Soustrait l'objet <see cref="T:System.Windows.Vector" /> spécifié du <see cref="T:System.Windows.Point" /> indiqué et retourne le <see cref="T:System.Windows.Point" /> résultant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-204">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-205">Différence entre <paramref name="point" /> et <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-205">The difference between <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-206">L’exemple suivant indique comment soustraire un <xref:System.Windows.Vector> à partir d’un <xref:System.Windows.Point> à l’aide de l’opérateur surchargé (-).</span><span class="sxs-lookup"><span data-stu-id="6fe75-206">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6fe75-207">Représentation sous forme de chaîne d'un point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-207">A string representation of a point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-208">Construit un <see cref="T:System.Windows.Point" /> à partir du <see cref="T:System.String" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-208">Constructs a <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-209">Structure <see cref="T:System.Windows.Point" /> équivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-209">The equivalent <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-210">L’exemple suivant montre comment utiliser le <xref:System.Windows.Point.Parse%2A> méthode pour convertir un <xref:System.String> la représentation sous forme d’un point dans un <xref:System.Windows.Point> structure.</span><span class="sxs-lookup"><span data-stu-id="6fe75-210">The following example shows how to use the <xref:System.Windows.Point.Parse%2A> method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6fe75-211">
            <paramref name="source" /> ne se compose pas de deux valeurs doubles délimitées par une virgule ou un espace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-211">
              <paramref name="source" /> is not composed of two comma- or space-delimited double values.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6fe75-212">
            <paramref name="source" /> ne contient pas deux nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-212">
              <paramref name="source" /> does not contain two numbers.</span>
          </span>
          <span data-ttu-id="6fe75-213">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-213">-or-</span>
          </span>
          <span data-ttu-id="6fe75-214">
            <paramref name="source" /> contient trop de séparateurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-214">
              <paramref name="source" /> contains too many delimiters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-215">Soustrait l'attribut <see cref="T:System.Windows.Point" /> ou <see cref="T:System.Windows.Vector" /> du <see cref="T:System.Windows.Point" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-215">Subtracts the specified <see cref="T:System.Windows.Point" /> or <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6fe75-216">Point duquel <c>point2</c> est soustrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-216">The point from which <c>point2</c> is subtracted.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6fe75-217">Point à soustraire de <c>point1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-217">The point to subtract from <c>point1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-218">Soustrait le <see cref="T:System.Windows.Point" /> spécifié d'un autre <see cref="T:System.Windows.Point" /> indiqué et retourne la différence sous forme de <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-218">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-219">Différence entre <paramref name="point1" /> et <paramref name="point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-219">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-220">L’exemple suivant indique comment soustraire un <xref:System.Windows.Point> à partir d’un autre <xref:System.Windows.Point> à l’aide de la méthode statique <xref:System.Windows.Point.Subtract%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fe75-220">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="6fe75-221">Point duquel <c>vector</c> est soustrait.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-221">The point from which <c>vector</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="6fe75-222">
            <c>vector</c> à soustraire de <c>point</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-222">The <c>vector</c> to subtract from <c>point</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-223">Soustrait l'objet <see cref="T:System.Windows.Vector" /> spécifié du <see cref="T:System.Windows.Point" /> indiqué et retourne le <see cref="T:System.Windows.Point" /> résultant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-223">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-224">Différence entre <paramref name="point" /> et <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-224">The difference between <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-225">L’exemple suivant indique comment soustraire un <xref:System.Windows.Vector> à partir d’un <xref:System.Windows.Point> à l’aide de la méthode statique <xref:System.Windows.Point.Subtract%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="6fe75-225">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="6fe75-226">Chaîne spécifiant le format à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-226">The string specifying the format to use.</span>
          </span>
          <span data-ttu-id="6fe75-227">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-227">-or-</span>
          </span>
          <span data-ttu-id="6fe75-228">
            <see langword="null" /> pour utiliser le format par défaut défini pour le type de l'implémentation <see cref="T:System.IFormattable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-228">
              <see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="6fe75-229">
            <see langword="IFormatProvider" /> à utiliser pour mettre en forme la valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-229">The <see langword="IFormatProvider" /> to use to format the value.</span>
          </span>
          <span data-ttu-id="6fe75-230">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-230">-or-</span>
          </span>
          <span data-ttu-id="6fe75-231">
            <see langword="null" /> pour obtenir les informations de mise en forme des nombres à partir des paramètres régionaux définis dans le système d'exploitation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-231">
              <see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-232">Ce membre prend en charge l’infrastructure [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] et n’est pas destiné à être directement utilisé à partir de votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-232">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="6fe75-233">Pour obtenir une description de ce membre, consultez <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-233">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-234">Chaîne contenant la valeur de l'instance actuelle au format spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-234">A string containing the value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-235">Crée une représentation <see cref="T:System.String" /> de cette structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-235">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-236">Crée une représentation <see cref="T:System.String" /> de <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-236">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-237">
            <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de cette structure de <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-237">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-238">L’exemple suivant montre comment utiliser le <xref:System.Windows.Point.ToString%2A> méthode pour obtenir un <xref:System.String> représentation sous forme d’un <xref:System.Windows.Point> structure.</span><span class="sxs-lookup"><span data-stu-id="6fe75-238">The following example shows how to use the <xref:System.Windows.Point.ToString%2A> method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="6fe75-239">Informations de mise en forme spécifiques à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-239">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fe75-240">Crée une représentation <see cref="T:System.String" /> de <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-240">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fe75-241">
            <see cref="T:System.String" /> contenant les valeurs <see cref="P:System.Windows.Point.X" /> et <see cref="P:System.Windows.Point.Y" /> de cette structure de <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-241">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-242">Obtient ou définit la coordonnée <see cref="P:System.Windows.Point.X" />-de cette structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-242">Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fe75-243">Valeur de la coordonnée <see cref="P:System.Windows.Point.X" />-de cette structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-243">The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
          <span data-ttu-id="6fe75-244">La valeur par défaut est <c>0</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-244">The default value is <c>0</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-245">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="6fe75-245">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="6fe75-246">Il illustre également comment affecter des valeurs à un <xref:System.Windows.Point> structure lors de la structure est déclarée et une fois que la structure a été déclarée.</span><span class="sxs-lookup"><span data-stu-id="6fe75-246">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fe75-247">Obtient ou définit la valeur de coordonnée <see cref="P:System.Windows.Point.Y" /> de ce <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-247">Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fe75-248">Valeur de la coordonnée <see cref="P:System.Windows.Point.Y" />-de cette structure <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-248">The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
          <span data-ttu-id="6fe75-249">La valeur par défaut est <c>0</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fe75-249">The default value is <c>0</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fe75-250">L’exemple suivant montre comment vérifier si deux <xref:System.Windows.Point> structures ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="6fe75-250">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="6fe75-251">Il illustre également comment affecter des valeurs à un <xref:System.Windows.Point> structure lors de la structure est déclarée et une fois que la structure a été déclarée.</span><span class="sxs-lookup"><span data-stu-id="6fe75-251">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>