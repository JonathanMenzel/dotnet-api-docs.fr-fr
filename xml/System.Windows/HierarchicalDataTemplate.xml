<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="667fe03184862a5b4c23082d8ac8d3aa264c8933" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39808257" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente <see cref="T:System.Windows.DataTemplate" /> qui prend en charge <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, tel que <see cref="T:System.Windows.Controls.TreeViewItem" /> ou <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dans l’exemple suivant, `ListLeagueList` est une liste d’objets `League`. Chaque objet `League` a un `Name` et une collection d’objets `Division`. Chaque `Division` a un `Name` et une collection d’objets `Team` et chaque objet `Team` a un `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 L’exemple montre qu’avec l’utilisation de <xref:System.Windows.HierarchicalDataTemplate>, vous pouvez facilement afficher des données de liste qui contient d’autres listes. Voici une capture d’écran de l’exemple.  
  
 ![Capture d’écran de l’exemple HierarchicalDataTemplate](~/add/media/databinding-hierarchicaldatatemplate.png "capture d’écran de l’exemple HierarchicalDataTemplate")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.HierarchicalDataTemplate" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.HierarchicalDataTemplate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Type auquel ce modèle est destiné.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.HierarchicalDataTemplate" /> avec le type spécifié auquel le modèle est destiné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `dataType` paramètre est soit un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] objet ou une chaîne représentant un [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] élément. Pour plus d’informations, consultez [Vue d’ensemble de la liaison de ressources](~/docs/framework/wpf/data/binding-sources-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre de conteneurs d'éléments de remplacement pour les éléments enfants.</summary>
        <value>Nombre de conteneurs d'éléments de remplacement pour le niveau suivant d'éléments.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> et <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> propriétés vous permettent de spécifier l’apparence pour deux ou plusieurs conteneurs d’élément de remplacement. Par exemple, vous pouvez spécifier des couleurs d’arrière-plan en alternance pour tous les trois éléments dans un <xref:System.Windows.Controls.ItemsControl>.  Le <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> est assignée à chaque conteneur d’éléments dans le <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> commence à 0, incrémente jusqu'à ce qu’il soit <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> moins 1, puis redémarre à 0. Par exemple, si <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> est 3 et il existe sept éléments dans le <xref:System.Windows.Controls.ItemsControl>, le tableau suivant répertorie les <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> pour chaque élément.  
  
|Position d’élément dans le <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Lorsque vous définissez la <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> propriété, vous indiquez que les éléments enfants doivent obtenir un <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> dans cette plage, pas l’élément qui a ce <xref:System.Windows.HierarchicalDataTemplate> appliqué. Par exemple, si un <xref:System.Windows.Controls.HeaderedItemsControl> appelé `aHeaderedItemsControl` utilise un <xref:System.Windows.HierarchicalDataTemplate> avec la <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> définie, les conteneurs d’éléments des éléments enfants de `aHeaderedItemsControl` aura un <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>, pas le conteneur d’élément pour `aHeaderedItemsControl`.  
  
 Il existe plusieurs méthodes que vous pouvez utiliser pour spécifier différentes apparences pour les conteneurs d’éléments en alternance. Une méthode consiste à lier les propriétés du conteneur d’éléments à la <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. Vous pouvez ensuite utiliser un <xref:System.Windows.Controls.AlternationConverter> pour spécifier la valeur doit être appliquée au conteneur d’élément qui a une certaine <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> valeur. Vous pouvez également utiliser des déclencheurs pour modifier la valeur de propriété d’un conteneur d’éléments selon la valeur de son <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Controls.TreeView> qui est lié aux données qui est trois niveaux de profondeur, et chaque élément est affiché dans un <xref:System.Windows.Controls.TextBlock>.  Le <xref:System.Windows.Controls.TextBlock> objets dans le premier niveau ont les mêmes valeurs de propriété, le <xref:System.Windows.Controls.TextBlock> objets dans le deuxième niveau utilisent des valeurs en alternance pour le <xref:System.Windows.Controls.TextBlock.FontStyle%2A> propriété et le <xref:System.Windows.Controls.TextBlock> objets dans le troisième niveau utilisent des valeurs en alternance pour le <xref:System.Windows.Controls.TextBlock.Background%2A> propriété.  
  
 Étant donné que le <xref:System.Windows.HierarchicalDataTemplate> pour le premier niveau, `Level1Data`, a la <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> propriété définie sur 2, le <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.TreeViewItem> objets dans le deuxième niveau alterne entre 0 et 1. Dans le <xref:System.Windows.HierarchicalDataTemplate> pour le deuxième niveau, `Level2Data`, le <xref:System.Windows.Controls.TextBlock.FontStyle%2A> de la <xref:System.Windows.Controls.TextBlock> est lié à la <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> et un <xref:System.Windows.Controls.AlternationConverter> est fournie pour convertir le <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> à un remplacement <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.  Une relation existe entre `Level2Data` et `Level3Data`: le <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> est défini sur 3 sur `Level2Data`et le <xref:System.Windows.Controls.TextBlock> dans `Level3Ddata` a son <xref:System.Windows.Controls.TextBlock.Background%2A> propriété liée à la <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Data.BindingGroup" /> qui est copié dans chaque élément enfant.</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingGroup" /> copié dans chaque élément enfant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous définissez la <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> chaque conteneur d’élément de propriété, obtient un <xref:System.Windows.Data.BindingGroup> qui a le même <xref:System.Windows.Controls.ValidationRule> objets en tant que le <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, mais les propriétés qui décrivent les données dans les liaisons, tel que <xref:System.Windows.Data.BindingGroup.Items%2A> et <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, sont des données pour chaque élément dans le <xref:System.Windows.Controls.ItemsControl>.  Vous devez accéder à du conteneur d’élément <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> pour effectuer des opérations telles que valident des données et recherchez les erreurs sur un élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Style" /> appliqué au conteneur d'élément pour chaque élément enfant.</summary>
        <value>
          <see cref="T:System.Windows.Style" /> appliqué au conteneur d'élément pour chaque élément enfant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez cette propriété ou le <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> propriété à définir un style pour l’apparence des éléments qui contiennent les éléments de données. Par exemple, pour <xref:System.Windows.Controls.TreeView>, les conteneurs générés sont <xref:System.Windows.Controls.TreeViewItem> contrôle ; pour <xref:System.Windows.Controls.Menu>, ils sont <xref:System.Windows.Controls.MenuItem> contrôles.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Controls.TreeView> qui utilise un style pour les éléments dans son premier niveau et un autre style pour les éléments dans son deuxième niveau.  Le style pour le premier niveau est défini le <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> propriété de la <xref:System.Windows.Controls.TreeView>.  Le style pour le deuxième niveau est défini le <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriété de la <xref:System.Windows.HierarchicalDataTemplate>.  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 L’exemple suivant crée les données qui sont utilisées dans l’exemple précédent.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la logique de sélection de style personnalisé pour un style qui peut être appliqué à chaque conteneur d'élément.</summary>
        <value>
          <see cref="T:System.Windows.Controls.StyleSelector" /> qui choisit le style à utiliser en tant que <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez le <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriété à définir un style pour l’apparence des éléments qui contiennent les éléments de données. Par exemple, pour <xref:System.Windows.Controls.TreeView>, les conteneurs générés sont <xref:System.Windows.Controls.TreeViewItem> contrôle ; pour <xref:System.Windows.Controls.Menu>, ils sont <xref:System.Windows.Controls.MenuItem> contrôles. Si vous avez plusieurs styles définis et que vous devez fournir la logique permettant de choisir à appliquer, puis vous utilisez le <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> propriété au lieu du <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriété. Notez que cette propriété est ignorée si le <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriété est définie.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Controls.TreeView> qui utilise le <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> d’un <xref:System.Windows.HierarchicalDataTemplate> choisir entre deux styles pour les éléments dans le deuxième niveau de la <xref:System.Windows.Controls.TreeView>.  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 L’exemple suivant montre le <xref:System.Windows.Controls.StyleSelector> qui est utilisé dans l’exemple précédent.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 L’exemple suivant crée les données qui sont utilisées dans l’exemple précédent.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la liaison pour ce modèle de données, ce qui indique où rechercher la collection qui représente le niveau suivant dans la hiérarchie de données.</summary>
        <value>La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela s’applique à la <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriété sur un élément généré <xref:System.Windows.Controls.HeaderedItemsControl> (comme un <xref:System.Windows.Controls.MenuItem> ou un <xref:System.Windows.Controls.TreeViewItem>) pour indiquer où trouver la collection qui représente le niveau suivant dans la hiérarchie de données.  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Pour [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] plus d’informations, consultez le <xref:System.Windows.Data.Binding> type.  
  
   
  
## Examples  
 Dans l’exemple suivant, `ListLeagueList` est une liste d’objets `League`. Chaque objet `League` a un `Name` et une collection d’objets `Division`. Chaque `Division` a un `Name` et une collection d’objets `Team` et chaque objet `Team` a un `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 L’exemple montre qu’avec l’utilisation de <xref:System.Windows.HierarchicalDataTemplate>, vous pouvez facilement afficher des données de liste qui contient d’autres listes. Voici une capture d’écran de l’exemple.  
  
 ![Capture d’écran de l’exemple HierarchicalDataTemplate](~/add/media/databinding-hierarchicaldatatemplate.png "capture d’écran de l’exemple HierarchicalDataTemplate")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne composite qui spécifie comment mettre en forme les éléments du niveau suivant dans la hiérarchie de données s'ils sont affichés en tant que chaînes.</summary>
        <value>Chaîne composite qui spécifie comment mettre en forme les éléments du niveau suivant dans la hiérarchie de données s'ils sont affichés en tant que chaînes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.DataTemplate" /> à appliquer à la propriété <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> sur un <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> généré (tel que <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />) pour indiquer comment afficher des éléments à partir du niveau suivant dans la hiérarchie de données.</summary>
        <value>
          <see cref="T:System.Windows.DataTemplate" /> à appliquer à la propriété <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> sur un <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> généré (tel que <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />) pour indiquer comment afficher des éléments à partir du niveau suivant dans la hiérarchie de données.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Controls.DataTemplateSelector" /> à appliquer à la propriété <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> sur un <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> généré (tel que <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />) pour indiquer comment sélectionner un modèle et afficher des éléments à partir du niveau suivant dans la hiérarchie de données.</summary>
        <value>Objet <see cref="T:System.Windows.Controls.DataTemplateSelector" /> à appliquer à la propriété <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> sur un <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> généré (tel que <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />) pour indiquer comment sélectionner un modèle et afficher des éléments à partir du niveau suivant dans la hiérarchie de données.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>