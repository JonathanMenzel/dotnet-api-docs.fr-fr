<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="751780ca652293efb20831add6e93dccadf3f14b" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48603386" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contient les objets <see cref="T:System.Windows.VisualState" /> mutuellement exclusifs et les objets <see cref="T:System.Windows.VisualTransition" /> utilisés pour passer d'un état à l'autre.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque <xref:System.Windows.VisualStateGroup> contient une collection de <xref:System.Windows.VisualState> objets. Un <xref:System.Windows.VisualState> contient une collection de <xref:System.Windows.Media.Animation.Storyboard> objets qui spécifient comment l’apparence du contrôle change lorsque le contrôle est dans un état particulier. Par exemple, un <xref:System.Windows.Controls.Button> peut avoir une apparence légèrement différente que l’utilisateur appuie ou il n’est pas enfoncée. Deux états définis par le <xref:System.Windows.Controls.Button> définit correspondent aux lorsqu’elle est activée (`"Pressed"`) et quand il n’est pas (`"Normal"`).  
  
 Vous ajoutez <xref:System.Windows.VisualState> à un contrôle en définissant le `VisualStateManager.VisualStateGroups` propriété jointe sur le contrôle. Vous placez les États qui s’excluent mutuellement dans le même <xref:System.Windows.VisualStateGroup>. Par exemple, le <xref:System.Windows.Controls.CheckBox> a deux <xref:System.Windows.VisualStateGroup> objets. Un contient les États, `Normal`, `MouseOver`, `Pressed`, et `Disabled`. L’autre contient les États, `Checked`, `UnChecked`, et `Indeterminate`. Le <xref:System.Windows.Controls.CheckBox> état peut être `MouseOver` et `UnChecked` en même temps, mais il ne peut pas être dans le `MouseOver` et `Pressed` États en même temps.  
  
 Bien que vous puissiez ajouter <xref:System.Windows.VisualState> objets à n’importe quel élément, ils sont un moyen particulièrement utile pour permettre aux autres de redéfinir le comportement visuel d’un <xref:System.Windows.Controls.Control>. Si vous créez un contrôle personnalisé qui utilise un <xref:System.Windows.Controls.ControlTemplate>, vous pouvez spécifier les États que le contrôle peut être dans en ajoutant un <xref:System.Windows.TemplateVisualStateAttribute> sur sa définition de classe. Toute personne qui crée un <xref:System.Windows.Controls.ControlTemplate> pour votre contrôle peut ajouter <xref:System.Windows.VisualState> objets au modèle. Le <xref:System.Windows.TemplateVisualStateAttribute> permet aux outils concepteurs, tels qu’Expression Blend, pour exposer les États du contrôle. Les États avec le même <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> appartiennent au même <xref:System.Windows.VisualStateGroup>.  
  
 Pour plus d’informations sur l’utilisation <xref:System.Windows.VisualStateGroup> des objets dans un <xref:System.Windows.Controls.ControlTemplate>, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Pour plus d’informations sur la création de contrôles qui utilisent la <xref:System.Windows.VisualStateManager>, consultez [création d’un contrôle qui a une apparence personnalisable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 Le <xref:System.Windows.VisualStateGroup.Transitions%2A> contient de la propriété <xref:System.Windows.VisualTransition> les objets qui sont appliqués lors de la transition du contrôle entre les États sont définis dans le <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 L’exemple suivant crée un simple <xref:System.Windows.Controls.ControlTemplate> pour un <xref:System.Windows.Controls.Button> qui contient un <xref:System.Windows.Controls.Grid>. Il contient également un <xref:System.Windows.VisualStateGroup> nommé `CommonStates`, qui définit le `MouseOver` et `Normal` États. Le <xref:System.Windows.VisualStateGroup> a également un <xref:System.Windows.VisualTransition> qui spécifie qu’il faut une demi-seconde le <xref:System.Windows.Controls.Grid> passe du vert au rouge lorsque l’utilisateur déplace le pointeur de la souris sur le <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.VisualStateGroup" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Windows.VisualState" /> actuellement appliqué au contrôle.</summary>
        <value><see cref="T:System.Windows.VisualState" /> qui est actuellement appliqué au contrôle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit après le passage d'un contrôle à un autre état.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement se produit après le passage du contrôle vers un nouvel état et le <xref:System.Windows.VisualStateGroup.CurrentStateChanging> événement se produit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un contrôle commence à passer à un état différent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’événement se produit lorsque le contrôle commence à états de transition. Si un <xref:System.Windows.VisualTransition> est appliqué à la modification d’état, cet événement se produit lorsque la transition commence. Si un <xref:System.Windows.VisualTransition> n’est pas appliqué, cet événement se produit une fois que le contrôle passe à l’état nouveau, mais avant que le <xref:System.Windows.VisualStateGroup.CurrentStateChanged> événement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Windows.VisualStateGroup" />.</summary>
        <value>Nom du <see cref="T:System.Windows.VisualStateGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les auteurs de contrôle spécifient les États dans le contrôle peut être en ajoutant un <xref:System.Windows.TemplateVisualStateAttribute> sur sa définition de classe. Les États avec le même <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> appartiennent au même <xref:System.Windows.VisualStateGroup>. Définir le <xref:System.Windows.VisualStateGroup.Name%2A> de la <xref:System.Windows.VisualStateGroup> à la valeur de la <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> propriété.  
  
   
  
## Examples  
 L’exemple suivant crée deux <xref:System.Windows.VisualStateGroup> objets sont nommés `CommonStates` et `FocusStates`. Le contrôle sera dans exactement un état de chaque <xref:System.Windows.VisualStateGroup> à tout moment. Pour l’exemple complet, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d'objets <see cref="T:System.Windows.VisualState" /> mutuellement exclusifs.</summary>
        <value>Collection d'objets <see cref="T:System.Windows.VisualState" /> mutuellement exclusifs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un simple <xref:System.Windows.Controls.ControlTemplate> pour un <xref:System.Windows.Controls.Button> qui contient un <xref:System.Windows.Controls.Grid>. Il contient également un <xref:System.Windows.VisualStateGroup> nommé `CommonStates`, qui définit le `MouseOver` et `Normal` États. Le <xref:System.Windows.VisualStateGroup> a également un <xref:System.Windows.VisualTransition> qui spécifie qu’il faut une demi-seconde le <xref:System.Windows.Controls.Grid> passe du vert au rouge lorsque l’utilisateur déplace le pointeur de la souris sur le <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection d'objets <see cref="T:System.Windows.VisualTransition" />.</summary>
        <value>Collection d'objets <see cref="T:System.Windows.VisualTransition" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.VisualTransition> dans des objets <xref:System.Windows.VisualStateGroup.Transitions%2A> sont appliquées lors de la transition du contrôle entre les états définis dans le <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 L’exemple suivant crée un simple <xref:System.Windows.Controls.ControlTemplate> pour un <xref:System.Windows.Controls.Button> qui contient un <xref:System.Windows.Controls.Grid>. Il contient également un <xref:System.Windows.VisualStateGroup> nommé `CommonStates`, qui définit le `MouseOver` et `Normal` États. Le <xref:System.Windows.VisualStateGroup> a également un <xref:System.Windows.VisualTransition> qui spécifie qu’il faut une demi-seconde le <xref:System.Windows.Controls.Grid> passe du vert au rouge lorsque l’utilisateur déplace le pointeur de la souris sur le <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>