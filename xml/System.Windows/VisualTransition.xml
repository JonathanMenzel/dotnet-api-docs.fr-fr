<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bdd308f1f4c1b97892601d050dd8c3a54440fef" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48612720" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente le comportement visuel qui se produit lorsqu'un contrôle passe d'un état à un autre.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez spécifier le comportement visuel d’un contrôle lors des transitions entre États en ajoutant <xref:System.Windows.VisualTransition> objets. Lorsque vous créez un <xref:System.Windows.VisualTransition>, vous spécifiez un ou plusieurs des opérations suivantes :  
  
-   Le temps nécessaire pour une transition entre des États en définissant le <xref:System.Windows.VisualTransition.GeneratedDuration%2A> propriété.  
  
-   Des modifications supplémentaires dans l’apparence du contrôle qui se produisent au moment de la transition en définissant le <xref:System.Windows.VisualTransition.Storyboard%2A> propriété.  
  
-   Lorsque le <xref:System.Windows.VisualTransition> est appliqué en définissant le <xref:System.Windows.VisualTransition.To%2A> et <xref:System.Windows.VisualTransition.From%2A> propriétés.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.VisualTransition> qui spécifie que lorsque l’utilisateur déplace la souris du contrôle, la bordure du contrôle change bleu au jaune et enfin au noir en 1,5 secondes. Pour l’exemple complet, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.VisualTransition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du <see cref="T:System.Windows.VisualState" /> à partir duquel effectuer la transition.</summary>
        <value>Nom du <see cref="T:System.Windows.VisualState" /> à partir duquel effectuer la transition.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.VisualTransition.From%2A> propriété est facultative. Un <xref:System.Windows.VisualTransition> peut être limité à appliquer à uniquement certains États, ou elle peut être appliquée chaque fois que les transitions de contrôle entre États. Restreindre le moment où un <xref:System.Windows.VisualTransition> est appliqué en définissant le <xref:System.Windows.VisualTransition.To%2A> et <xref:System.Windows.VisualTransition.From%2A> propriétés. Le tableau suivant décrit les niveaux de restriction, du plus restrictif au moins restrictif.  
  
|Type de restriction|Valeur de From|Valeur de To|  
|-------------------------|-------------------|-----------------|  
|D’un état spécifié à un autre état spécifié|Le nom d’un <xref:System.Windows.VisualState>|Le nom d’un <xref:System.Windows.VisualState>|  
|De n’importe quel état à un état spécifié|Non définie|Le nom d’un <xref:System.Windows.VisualState>|  
|D’un état spécifié à n’importe quel état|Le nom d’un <xref:System.Windows.VisualState>|Non définie|  
|De n’importe quel état à n’importe quel autre état|Non définie|Non définie|  
  
 Vous pouvez avoir plusieurs <xref:System.Windows.VisualTransition> des objets dans un <xref:System.Windows.VisualStateGroup> qui font référence au même état, mais ils seront utilisés dans l’ordre qui spécifie le tableau précédent.  
  
 Vous pouvez modifier ce comportement en créant une nouvelle classe qui hérite de <xref:System.Windows.VisualStateManager> et en remplaçant le <xref:System.Windows.VisualStateManager.GoToStateCore%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant crée deux <xref:System.Windows.VisualTransition> objets. Lorsque le contrôle passe à partir de la `Pressed` l’état le `MouseOver` état, le <xref:System.Windows.VisualTransition> qui a les deux <xref:System.Windows.VisualTransition.From%2A> et <xref:System.Windows.VisualTransition.To%2A> jeu est utilisé. Quand le contrôle passe d’un état autre que `Pressed` à l’état `MouseOver`, l’autre état est utilisé.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée nécessaire pour passer d'un état à un autre.</summary>
        <value>Durée nécessaire pour passer d'un état à un autre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez spécifier la durée pendant laquelle une transition prend en définissant le <xref:System.Windows.VisualTransition.GeneratedDuration%2A> propriété. Lorsque vous définissez le <xref:System.Windows.VisualTransition.GeneratedDuration%2A> propriété, vous spécifiez le temps nécessaire pour que la transition se produise.  
  
   
  
## Examples  
 L’exemple suivant spécifie que le contrôle prend une demi-seconde pour passer à la `MouseOver` état. Pour l’exemple complet, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une formule mathématique personnalisée utilisée pour effectuer la transition entre des états.</summary>
        <value>Formule mathématique personnalisée utilisée pour effectuer la transition entre des états.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez définir le <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> propriété pour spécifier la façon dont une transition se produit. Par exemple, vous pouvez spécifier une fonction d’accélération pour accélérer ou ralentir la transition. Pour plus d’informations, consultez [fonctions d’accélération](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.VisualTransition> qui provoque un <xref:System.Windows.Shapes.Rectangle> pour déplacer verticalement lorsque l’utilisateur appuie sur le bouton de la souris sur le <xref:System.Windows.Controls.Canvas>. L’exemple définit le <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> propriété à un <xref:System.Windows.Media.Animation.BounceEase> objet pour provoquer le <xref:System.Windows.Shapes.Rectangle> semble rebondir lorsqu’il atteint sa destination. Le <xref:System.Windows.VisualTransition> qui est utilisé lorsque l’utilisateur relâche le bouton a un autre <xref:System.Windows.Media.Animation.BounceEase> objet pour provoquer la <xref:System.Windows.Shapes.Rectangle> de rebondir avant qu’il retourne à sa position d’origine.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 L’exemple suivant montre le Gestionnaire d’événements pour le <xref:System.Windows.UIElement3D.MouseDown> et <xref:System.Windows.UIElement.MouseUp> événements. L’exemple appelle la <xref:System.Windows.VisualStateManager.GoToElementState%2A> méthode pour modifier la <xref:System.Windows.VisualState> de la zone de dessin.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Media.Animation.Storyboard" /> qui se produit quand la transition intervient.</summary>
        <value>Le <see cref="T:System.Windows.Media.Animation.Storyboard" /> qui se produit lorsque la transition intervient.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un <xref:System.Windows.VisualTransition> contient un <xref:System.Windows.Media.Animation.Storyboard>, le <xref:System.Windows.Media.Animation.Storyboard> exécute à tout moment le <xref:System.Windows.VisualTransition> est appliqué. Par exemple, si vous souhaitez que la bordure d’un <xref:System.Windows.Controls.Button> pour modifier les couleurs lorsque l’utilisateur déplace la souris, vous pouvez créer un <xref:System.Windows.VisualTransition> qui a un <xref:System.Windows.Media.Animation.Storyboard> qui modifie l’arrière-plan du bouton.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.VisualTransition> qui spécifie que lorsque l’utilisateur déplace la souris du contrôle, la bordure du contrôle change bleu au jaune et enfin au noir en 1,5 secondes. Pour l’exemple complet, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du <see cref="T:System.Windows.VisualState" /> vers lequel effectuer la transition.</summary>
        <value>Nom de la <see cref="T:System.Windows.VisualState" /> à laquelle passer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.VisualTransition.To%2A> propriété est facultative. Un <xref:System.Windows.VisualTransition> peut être limité à appliquer à uniquement certains États, ou elle peut être appliquée chaque fois que les transitions de contrôle entre États. Restreindre le moment où un <xref:System.Windows.VisualTransition> est appliqué en définissant le <xref:System.Windows.VisualTransition.To%2A> et <xref:System.Windows.VisualTransition.From%2A> propriétés. Le tableau suivant décrit les niveaux de restriction, du plus restrictif au moins restrictif.  
  
|Type de restriction|Valeur de From|Valeur de To|  
|-------------------------|-------------------|-----------------|  
|D’un état spécifié à un autre état spécifié|Le nom d’un <xref:System.Windows.VisualState>|Le nom d’un <xref:System.Windows.VisualState>|  
|De n’importe quel état à un état spécifié|Non définie|Le nom d’un <xref:System.Windows.VisualState>|  
|D’un état spécifié à n’importe quel état|Le nom d’un <xref:System.Windows.VisualState>|Non définie|  
|De n’importe quel état à n’importe quel autre état|Non définie|Non définie|  
  
 Vous pouvez avoir plusieurs <xref:System.Windows.VisualTransition> des objets dans un <xref:System.Windows.VisualStateGroup> qui font référence au même état, mais ils seront utilisés dans l’ordre qui spécifie le tableau précédent.  
  
 Vous pouvez modifier ce comportement en créant une nouvelle classe qui hérite de <xref:System.Windows.VisualStateManager> et en remplaçant le <xref:System.Windows.VisualStateManager.GoToStateCore%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant crée deux <xref:System.Windows.VisualTransition> objets. Lorsque le contrôle passe à partir de la `Pressed` l’état le `MouseOver` état, le <xref:System.Windows.VisualTransition> qui a les deux <xref:System.Windows.VisualTransition.From%2A> et <xref:System.Windows.VisualTransition.To%2A> jeu est utilisé. Quand le contrôle passe d’un état autre que `Pressed` à l’état `MouseOver`, l’autre état est utilisé.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>